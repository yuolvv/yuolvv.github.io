<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[初识docker swarm]]></title>
    <url>%2F%2Fposts%2F202111281.html</url>
    <content type="text"><![CDATA[最近在了解到docker swarm，它是docker官方推出的分布式容器编排的解决方案，利用中午休息的时间，简单的尝试了一下，创建一个集群，默认当前节点是主节点，然后让另一个节点加入，简简单单的小实验，让我有了深入了解它的兴趣。 什么是docker swarmdocker swarm是一个容器编排工具。一次启动多个容器，并且需要做健康检查，在其中某些容器挂掉的时候，另一些容器能够立马补充进来，通常在分布式系统中使用的较多一些，它可以将多个docker容器作为单个服务进行管理。 它可以做什么适用的场景和k8s有什么区别基本命令12345678910111213141516#初始化集群docker swarm init#删除一个集群docker swarm leave#加入集群docker swarm join#显示集群下的节点docker node ls#创建一个网络连接docker network create#显示网络下链接docker network ls#创建服务docker service create#显示服务列表#docker service ls]]></content>
      <categories>
        <category>Note</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[突然明白的事]]></title>
    <url>%2F%2Fposts%2F202111211.html</url>
    <content type="text"><![CDATA[双十一过去了，每周六加班也意味着要结束了，这期间也没感觉到咋累，可能一个人无所挂念，无所事事，一心放在工作上，只是有时候心情不好的时候，会有累的感觉。 小帅来北京出差已有十来天了，上周末我们一起聚了一下，游玩故宫，老杨带着他女朋友，小帅带着他同事，我和老刘一块，六人成行。早晨急急忙忙的，把他们都给先坑去了，结果我们是最后才到的。 过去只是在午门外面转悠过，没有到里面去，觉得里面挺震撼的，宫殿拔地而起，白色的阶梯很有层次感，中轴线两侧左右对称，很美。和小帅的同事、老杨女朋友都是第一次见面，但是却并没有觉得很尴尬，两个人都是比较放得开的。 逛到皇宫后面，知道了什么叫做深宫，建筑明显拥挤了不少，阳光也少了很多，很是憋得慌。高高的墙，像笼子一样将人圈在里面。 我其实原本还想再逛一会儿的，但是有几位早上没吃饭肚子饿了，就去吃饭了，这也是游玩我不喜欢和很多人一起的原因，不能够随心所欲的想如何如何。六个人，人均一百，消费到不算高，估计大家也没咋吃饱^_^，五个大老爷们，再来几盘肉也能干完了，想想最后懒得再点了，在这没必要逞强多扔钱在这。本来很久之前就想请几个朋友一块吃吃饭的，趁此机会把帐结了，总觉这次事办的不太漂亮。 吃完饭我们就和小帅分开了。今天任务之一是去天安门广场拍个照，起因是表姐发给我的一张照片，小小的我站在广场上，背景是天安门城楼，我不知道那时候几岁，依稀记得我去过，时至今日，我再次有幸来到北京生活工作，我希望能够再在那个位置照一张像，继续我下一阶段的生活。上午太过匆忙没有去，下午老杨、老刘想给我圆这样一个梦，我们又往天安门方向走，找到了大致的位置，再次定格这瞬间，我想下一次，大概是我要离开北京的时候了。 老杨新买的耳机有点小毛病，我们接下来又去了苹果店，看新产品，顺带解决耳机的问题。直到现在也没有自己的电脑，来北京都没有带电脑过来，就来仔细看了新的mac pro，其实我的同事就有第一批买新mac pro的，但是不好意思去把玩别人的新东西，只是看了几眼还没有摸过。这次摸了个够。价格让我与它有了距离。 天黑了，一天也逛累了，老杨女朋友请我们吃冰淇淋，有十块喝四块两种，我问了下老杨点的是哪个，我也不敢点太贵的，统一即可，得知是十块的，我也就点了个十块的，最后做好之后，我发现她女朋友点的是四块的，我们仨点的都是十块的，我看了好多眼，顿时就不好意思起来，迟迟不想下口吃，也真觉得老杨真是好福气，找到这么好的女孩，懂事。 她性格很好，自来熟，虽然只有她一个女生，我们在一起玩也不算尴尬。她偶尔一句老叫交的我很是不好意思，不知道当时啥表情，我突然明白了，这不就是我想找的类型？带我这个衰仔变得阳光起来。 时：2021.11.14日 这周和老刘去爬长城了，路途不是很顺利，长城距离北京城区这边太远了，我们攻略也做的不足，导致等市郊铁路的时间花费了几个小时，它每天只有那么固定时刻几趟，其他的就跟地铁差不多，刷一卡通就行。 感觉开发的很好，建筑也很宏伟，随山体绵延而上，不到一个小时，我们就爬上了北八楼，这里就是最高的，也叫做好汉坡，听一个在这工作的大叔说，这些很多都修复过，古时候是没有水泥的，顿时觉得都是假的^_^，可仔细一想，大概真的也不会像现在看到的这般雄伟。 看到有很多带着老人和小孩一起过来玩的，可真让我羡慕，啥时候我也能这样啊，带爸妈一起旅游，期待。 魔鬼九月，我不知道那段时间是怎么过来的，只知道那是我最难的时候。其实现在看来所接触的那些东西，并没有什么难的。像小时候从加减法到乘除法，那些所谓的困难、难以理解的东西，终会随着时间慢慢明白，噢，原来如此，当然，这也是要付出一些精力的。 熬了过来，我觉得自己成长了，这是好的事，我渐渐接受了自己。我仍堪忧未来，成长受限缓慢，期待明天更好。]]></content>
      <categories>
        <category>Life</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[好累啊]]></title>
    <url>%2F%2Fposts%2F202111051.html</url>
    <content type="text"><![CDATA[好累啊，今天，觉得一天没有干啥，就是很累。 听说要对接一个新的店铺，确实是昨天晚上就已经知道了，但是并没有什么动作，巧才才正式了一点。 加入到了，还是第一次对接了一个新朋友，虽然也待到了，但有哪些方式也不太清楚，但我的另一个人的好，外面的名字也很好，我们两个人来做气，我们是同届的，但我干活，就像我像个实习生。 他能想到很多方面，很细心，具体到对接一个新店铺我们有哪些事，如何把订单拉，推出点，后，库存，在哪，具体点在哪，合理的很清楚，我就傻了傻子的在旁边佩和着^_^，我需要学习的地方。 最近我也遇到了语言一个等级的问题（半天），却花了很多时间的寻找问题，最后大佬出马，找到了。返回一个无效的，在中能看到接口返回的，不明白为什么我没有通过结果获得的返回值。 处理过程如下： 1.代码12:53上线，13点发现问题，漏掉并重重。 2.发现问题又测了几单，发现问题没有现，和同事同步放题，小眯到15:00 3 . 问题在数据中，开始继续寻找线上，找到原因。 4. 将订单信息下线，试线下线，恢复错误，重新找回。 5. 删除添加代码消息， 6. 回头看上线代码，发现异常，查错7。大介入，线下问题复现，所以很可能遇到问题。 过头来想很多的无功，一直在重复那个那个那个人错误，却不能认为到底是部分出的问题，没有相应的低调试工具，导致问题效率极低，从一个考虑到xdebug，着工作效率。 bom，这就是这个错误产生的原因。]]></content>
      <categories>
        <category>Life</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[犯错就是在成长么]]></title>
    <url>%2F%2Fposts%2F202110311.html</url>
    <content type="text"><![CDATA[一周又过去了，时间过的挺快的，这都已经10月底了，本来计划着这周去故宫逛一逛的，但是北京疫情形势严峻，就作罢了，那就聊聊工作上的事吧。 周一，learder又找我了，说我写的两个SQL已经在慢查里面排头两名了，自己去一分析，还真是，”limit 40000,50“速度很慢，应该是扫描了全表，我的场景是想使用两个索引当作条件，但是mysql的优化器选择的索引，在我看来并不是最优的那一个，导致了运行速度很慢，后来了解到联合索引，这正符合我所使用的场景，加上了之后，速度确实提升了很多。但这也只是针对结果集比较小的时候，当数量上万的时候，sql仍然会慢，总结有如下几个问题点： 1.在建表的时候未使用自增索引，导致在查查全表的时候，不能用自增id减少结果集。 2.在该需求中采用了不合适的技术方案，其实这一操作，有更好的方式去实现，并不应该在扫表发现问题后再去做这一件事。 后面临时的解决方式是，增加了联合索引，在现阶段还是能用一下的，等结构优化后，再使用新方式。 上周还干了一件大事，用一条sql把holo给打挂了,我们的数据库会有一部分同步到hologres，这时候，我们就可以很轻松的到metabase去查看这部分数据，兼容pgsql，减少因查数据给从库带来压力，而且查询的速度极快，这让我有点肆无忌惮了，各种比较垃圾的sql，从不考虑它的性能，直接用上，展示一部分 12345678910111213141516171819witha as (select orderitemid,itemid,skuid,itemname,concat(colorname,sizename) as skuname from order_item_version where bbtbrandname=&#x27;happy nocnoc&#x27;),b as (select orderid,ordertype,stepstatus,createtime from bbt_order where stepstatus=1 and ordertype=25 and createtime&gt;&#x27;2021-10-01 00:00:46&#x27;),c as (select id as orderitemid,orderid from order_item where createtime&gt;&#x27;2021-10-01 00:00:46&#x27;),d as (select itemid,skuid,barcode from supplier_sku_extra_barcode)select barcode,min(a.itemname) as itemname,min(a.skuname),count(barcode) as num from a,b,c,d where a.orderitemid=c.orderitemid and b.orderid=c.orderid and a.itemid=d.itemid and a.skuid=d.skuid group by d.barcode order by num desc; 1234567891011with a as (select json_array_elements(jdp_response::json#&gt;&#x27;&#123;item_get_response,item,skus,sku&#125;&#x27;)#&gt;&gt;&#x27;&#123;outer_id&#125;&#x27; as barcode from third_item_tmall where tmallitemid=&#x27;641857610892&#x27;),b as (select barcode from supplier_sku_extra_barcode)select * from a where barcode not in (select * from b) 当运维大佬发现holo挂的时候，找了很久没有找到问题所在，后来直接去找sql，然后我这两条就直接晾在了大群里，供大家观赏，就很尬。回归到技术本身，第一条sql，实际上有些临时表是不需要的，会多消耗些不必要的资源，因为是holo就没有管。 最low的是下面那条sql，我猜导致holo挂掉的也是它，因为kill它之后，cpu就回复正常了，我not in结果集了，结果集有多大，200万条数据，典型的没吃过亏啊，记得之前有同事踩过not in的坑，但是那时我还不知道holo是什么，回归到sql语句上，not in那么大一个结果集，这也是极其愚蠢的。 我把它当成了累不死的牛，可是按讲说，它那么久没查出来结果，不应该终止这次查询吗？而且我也只运行了几次，这次风波却持续了1小时18分，据他们说holo如果这次查询失败，后面会自动再去查询，这我是不信的，上网查找相关的知识，没发现，我能理解的是，这条sql就一直hang在那，一直在运行，直到查询到结果为止。 对陌生事物保持敬畏。 再来聊聊生活吧，今天交了4个月暖气费，1600元，可真贵啊，按照地区暖气收费标准，这也是及其不合理的，无形之中，多了一笔较大的开销，可是还有一个月房租压在房东那，也不能做些什么。 连续带了两周的饭，生活才慢慢有了样子，起得早不一定会很累，做做饭，还是挺有趣的。 离开家，离开学校，人生孤独是常态。为了家，为了生活，为了追求自己想要的，我拼尽全力，光鲜亮丽也好，一身灰也罢，会犯错，会认识自己，会幻想破灭，会成长。 接下来，还得继续努力工作，还要加油。还得从生活中再多了解一下自己，接纳自己，继续成长。]]></content>
      <categories>
        <category>Life</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[慢查SQL与一个BUG]]></title>
    <url>%2F%2Fposts%2F202110221.html</url>
    <content type="text"><![CDATA[慢查SQL具体遇到的场景是这样：order表有a,b,c,d,e这五个字段，我想找到所有b=0，并且c&gt;1634957358数据，b和c是索引，b在数据库中是无序的，表中数据一共有19万条，基于以上，我写出了如下sql 1select * from order where b=0 and c&gt;1634957358; 需要查找的数据量，如下。 1234567select count(*) from order where b=0;+----------+| count(*) |+----------+| 48440 |+----------+1 row in set (0.13 sec) 1234567select count(*) from order where c&gt;1624078160;+----------+| count(*) |+----------+| 161147 |+----------+1 row in set (0.06 sec) 分析sql语句 123456789101112131415desc select * from order where b=0 and c&gt;1624078160 \G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: order partitions: NULL type: refpossible_keys: b,c key: b key_len: 8 ref: const rows: 60267 filtered: 100.00 Extra: Using where1 row in set, 1 warning (0.00 sec) 其实最开始的时候c并没有索引，后来发现存在慢sql的情况，才给c字段加上，但是发现sql在执行的时候仍然没有使用。 有一篇文章分析SQL语句执行过程挺好的一条SQL语句在MySQL中执行过程全解析，我的理解就是一条SQL语句执行的过程中只能命中一个索引，优化器会依靠对应的算法去选择，但是没有考虑到数据量的问题。 奇怪的bug123if($v[&#x27;content&#x27;][&#x27;bill_type&#x27;] ?? &#x27;&#x27; == &#x27;replace_bill&#x27;) &#123; unset($aftersale[&#x27;messages&#x27;][$k]);&#125; 因为这个bug，我花费了半天去找问题，花一天去写解决这个bug的代码，之前一直以为都是第三方的bug，后来一个同事发现是这部分的代码就非常的尴尬，我到现在也没发现问题究竟在哪。]]></content>
      <categories>
        <category>Other</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[平凡一天的得与失]]></title>
    <url>%2F%2Fposts%2F202110201.html</url>
    <content type="text"><![CDATA[生活1.早上7:30闹钟响了没有及时起床。 2.早上十点有大促没有迟到。 3.带的饭忘了带勺子，去楼下烤冷面要了一个。 工作1.天猫消息服务突然不能用，查问题未发现对接有何异常，无法解决，已向天猫提交工单，未得到有效结果。根据已有监控，人工重放异常订单。后根据接口拿到售后单数据，判断是否异常，以此去重放，消除了这部分人工精力成本，今天已解决。 2.提供运营数据需求所需要的数据，由另一位同事转给我，简单问了下需求，但当时并未说的很明白，导致数据提供的有些偏差，后面需要求他们解释为什么需要这些数据，以及数据范围，并提供文字说明。 3.预售活动第一批订单已开始售卖，对应的库存还没想好怎么去做控制。由于大部分都是预售形式售卖，已在metabase中添加每日预售订单数量，预售定金，假设所有支付尾款总销售额，能够及时的看到数据统计。 4.售后订单分为售后和售中，售中是可AG自动退款的，但是售后是不可以的，我及时监控到了这类case，和相关负责人进行了反馈，可能他们也不太了解我所说的，我也没有即时输出自己的判断，在昨天这个策略就没有加上，其实这个策略是安全的，每天也有近一二十单，如果通过使用AG自动退款，就能减少一些人力了，今天已通知店长成功加上此策略。 感悟本次天猫消息的丢失，暴漏了售后流程中还存在着许多问题，流程过为单一，太过依靠天猫的订阅消息，导致其服务出现问题时，人工成本会很高，索性监控做的较完备，能够及时的看到漏掉的单子去解决掉。但同时也发现监控出现疏漏的地方，例如天猫退款单已关闭，但是在自有系统中未关闭，这部分没有监控起来，后续会补上这些。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不好的一天]]></title>
    <url>%2F%2Fposts%2F202110181.html</url>
    <content type="text"><![CDATA[新的一周又开始了，倒霉的我得要瘸着去上班，周六还是好好的，晚上睡了一觉，不知道做了啥，脚趾头跟骨折了肿了似的，就这么瘸了。 第一次上班自己带了饭，突然不和小伙伴们一起去干饭，有点怪怪的，公司的微波炉挺好用的，起初还害怕不会用，中高温热了3分钟，还有一点点部分没有热透，下次要开到4分钟。自己带饭吃起来是真香，也多亏了老刘，但是我下班回来的又很晚，非常烦。 靠着自己，也终于在这个月，把助学贷款都还完了，延期了两个月，掏了100块利息，也算是自己存下来的吧。这种感觉挺好的。 熬过了那段最艰难的阶段，突然发现以前那些不能理解的，到真正经历过，才知道。未来加油。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL的with使用]]></title>
    <url>%2F%2Fposts%2F202110161.html</url>
    <content type="text"><![CDATA[sql在此之前的联表查询，都是写在一条语句中，两个表的阅读还可以，但是上升到四五个表的时候，阅读性就会差很多，此时with语句就非常好用了。 使用的场景是在metabase中做数据展示、数据监控。 先分别在每一张表中，查到所需要的数据集，然后再去联表查。 12345678910111213141516171819202122with a as (select concat(&#x27;&#x27;, tid) tid, concat(&#x27;&#x27;, oid) oid, get_json_object(jdp_response, &#x27;$.refund_get_response.refund.sid&#x27;) as expressno, refundid from third_refund_item_tmall where refundid!=0 and get_json_object(jdp_response, &#x27;$.refund_get_response.refund.good_status&#x27;)!=&#x27;BUYER_NOT_RECEIVED&#x27; order by modified desc),b as (select id as refundid,returnid from refund where sellid=&#x27;tmall&#x27;),c as (select id as returnid, orderid, expressno from bbt_return where sellid=&#x27;tmall&#x27; and stat=0)select * from a, b, c where a.refundid=b.refundid and b.returnid=c.returnid and a.expressno!=c.expressno and c.expressno=&#x27;&#x27;;]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活的本质]]></title>
    <url>%2F%2Fposts%2F202110091.html</url>
    <content type="text"><![CDATA[1.成功只是一时的，失败却是主旋律，但是如何面对失败，却把人分成了不同的样子，有的人会被失败击垮，有的人能够不断的爬起来继续向前，我想真正的成熟，应该并不是追求完美，而是直面自己的缺憾，这才是生活的本质。 2.罗曼罗兰说过的，这个世上只有一种真正的英雄主义，那就是，认清生活的真相，并且仍然热爱它。 3.莫泊桑说过，生活可能不像你想象的那么好，但是，也不会你想象中的那么糟，人的脆弱和坚强，都超乎了自己的想象，有时候，可能脆弱的一句话就泪流满面，有时候，你发现自己咬着牙已经走了很长的路。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[上海之行]]></title>
    <url>%2F%2Fposts%2F202110051.html</url>
    <content type="text"><![CDATA[1.我活在过去，不知道停留在了哪里。2.我忘不了那个厕所，是有多不舍，心不甘。3.我摸不清人心，不要让我觉得还有希望。4.人生的路很长，好好挣钱，照顾家人，让他们过得更好。5.我曾努力过，我不接受不平等的对待。6.我不是舔狗。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vps安全设置]]></title>
    <url>%2F%2Fposts%2F202109281.html</url>
    <content type="text"><![CDATA[前不久入手的国外vps被入侵了，发生次数超过三次，发现是因为配置的公钥匙被更改，导致我登陆不上去，并且代码配置的公钥、私钥都被删除，cpu跑满，大概被拉去挖矿了，不知是何种方式入侵的。为了以后减少被入侵的风险，我做了如下配置 修改ssh登陆接口12345vim /etc/ssh/sshd_config#更改端口，自定义Port: 12312#重启sshd/etc/init.d/ssh restart 禁止root用户远程登陆12345vim /etc/ssh/sshd_config#禁止root用户登陆，将yes改为noPermitRootLogin no#重启sshd/etc/init.d/ssh restart 添加自定义用户12#根据提示操作即可adduser book 指定用户切换root无需密码123456789#添加wheel用户组addgroup wheelvim /etc/pam.d/su#取消注释auth sufficient pam_wheel.so trust#指定username无需密码切换rootusermod -g wheel book#未知操作echo &quot;SU_WHEEL_ONLY yes&quot;&gt;&gt;/etc/login.defs]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么活着这么难]]></title>
    <url>%2F%2Fposts%2F202109121.html</url>
    <content type="text"><![CDATA[过去几周，是一个噩梦。 闲来无事，打开了日历，中秋节临近，秋分临近，春分前后出家门，那是还是学生，对未来迷茫、憧憬，投简历、找工作，租房，回学校毕业答辩，喝酒，现在，每天与代码打着交道，这确是我曾向往的，遇到的困难也是真实的，索性一路运气好，有贵人相助，自己也挺了下来。 可自从转到了新的业务部门，一下子又回到了原来，mb状态持续之久，难以想象。每天就像是行死走肉，事情做不完，做不好，挨骂，失落，敏感，心态崩了，每天赶着最后一趟地铁，回家又不舍睡，直到两三点。别人都说，当你感觉到难的时候，那正是你进步最快的时候，可我却感觉这近一个月，收获不多。 新接触一个复杂的东西，还是没有自己的方法论，没有及时和领导交流自己的理解进度，就忙着去做东西了，结果呢就是，一塌糊涂。每天完全听不懂他们在说什么，也插不上嘴，不清楚导致这些问题的原因，当别人都在忙的热火朝天的时候，我无能为力。 周五，东西做不完，领导陪着做，直到下1点，暗暗打气，周末两天怎么着也要给它做完，两天进度为0，虽然也没闲着，但就是没做完，周日晚12点，领导发微信询问，其实很早就看到了这条消息，但是我无法回复，无法给一个交代，又干到凌晨两三点，终究是没扛住，睡了，第二天，带着无法描述的心情就去上班了，结果可想而知，谈话，以前只是偷偷的掉眼泪，我再绷不住了，我无法原谅自己，但经过这次谈话心里也好受了不少。 又重新开始，每天都发一遍日报、复盘，这也确实是我所欠缺的，像过去一样，开始时热情度高，但随着时间的推移，递减，内容减，文字简，质量减。 原本这周觉得比以往轻松了不少，但是周六晚上，突然爆出自己写的业务代码出现了bug，今天几乎又改了一天，总算是弄的差不多了，订单售后相关业务涉及到的问题比较多，总会遇到一些想不到的问题，随时都要去关注解决。 遇到事情比较多的时候就会手忙脚乱脚乱的，如果遇到线上问题，更是冷静不下来，以后要以平常心来对待这件事，不要那么慌，不要怕，从入口开始，一步步跟着代码走，直到找到问题的所在。 下一步，希望自己能完成下面几个目标 遇到bug不要慌，从入口开始一步步分析问题所在。 做事情之前，先想好怎么做，需要查几个表，思路是什么，还有哪些不明白的。 多和同事交流想法，对一件事情的理解。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kafka的安装与使用]]></title>
    <url>%2F%2Fposts%2F202109111.html</url>
    <content type="text"><![CDATA[这次使用的是docker-compose进行部署，会记录下配置文件，以及部分命令 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556version: &#x27;3&#x27;services: zookeeper: image: zookeeper container_name: zookeeper restart: always volumes: - $PWD/zookeeper:/etc/zookeeper ports: - &quot;2181:2181&quot; kafka1: image: wurstmeister/kafka container_name: kafka1 ports: - &quot;9092:9092&quot; #端口映射 volumes: - $PWD/kafka1:/kafka environment: KAFKA_ADVERTISED_HOST_NAME: ip # 修改:宿主机IP KAFKA_BROKER_ID: 0 #指定kafka的id KAFKA_ADVERTISED_PORT: 9092 #kafka外放端口 KAFKA_MESSAGE_MAX_BYTES: 2000000 KAFKA_ZOOKEEPER_CONNECT: ip:2181 depends_on: - zookeeper kafka2: image: wurstmeister/kafka container_name: kafka2 ports: - &quot;9093:9092&quot; volumes: - $PWD/kafka2:/kafka environment: KAFKA_ADVERTISED_HOST_NAME: ip # 修改:宿主机IP KAFKA_BROKER_ID: 1 #指定kafka的id KAFKA_ADVERTISED_PORT: 9093 #kafka外放端口 KAFKA_MESSAGE_MAX_BYTES: 2000000 KAFKA_ZOOKEEPER_CONNECT: ip:2181 depends_on: - zookeeper kafka3: image: wurstmeister/kafka container_name: kafka3 ports: - &quot;9094:9092&quot; volumes: - $PWD/kafka3:/kafka environment: KAFKA_ADVERTISED_HOST_NAME: ip # 修改:宿主机IP KAFKA_BROKER_ID: 2 #指定kafka的id KAFKA_ADVERTISED_PORT: 9094 #kafka外放端口 KAFKA_MESSAGE_MAX_BYTES: 2000000 KAFKA_ZOOKEEPER_CONNECT: ip:2181 depends_on: - zookeeper 常用命令12345678910111213141516#进入容器docker-compose exec kafka1 bash#进入kafka的bin目录cd /opt/kafka/bin/#创建一个topic，并设置三个分区和两个副本./kafka-topics.sh --create --topic first --zookeeper ip:2181 --partitions 3 --replication-factor 2#查看topic列表./kafka-topics.sh --list --zookeeper ip:2181#查询某个topic详情./kafka-topics.sh --describe --topic first --zookeeper ip:2181#创建生产者发送消息./kafka-console-producer.sh --topic first --broker-list ip:9092#创建消费者接收消息./kafka-console-consumer.sh --topic first --bootstrap-server ip:9092 --from-beginning#删除topic./kafka-topics.sh --delete --topic first --zookeeper ip:2181 参考文档 docker-compose 搭建 kafka 集群 基于docker-compose搭建分布式消息队列Kafka kafka]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于docker搭建梯子]]></title>
    <url>%2F%2Fposts%2F202108211.html</url>
    <content type="text"><![CDATA[介绍该项目依托于docker、docker-compose、x-ui、acme.sh，能够快速搭建出跳跃节点。 使用docker-compose示例docker-compose配置文件说明1234567891011121314151617181920212223version: &#x27;3&#x27;services: acme.sh: image: neilpang/acme.sh restart: always volumes: - &quot;$PWD/out:/acme.sh:z&quot; environment: - CF_Key=&quot;xxxxxxxxxxxxxxxxxxxx&quot; - CF_Email=&quot;xxxxxxxx@gmail.com&quot; command: daemon x-ui: image: srcrs/x-ui restart: always network_mode: &quot;host&quot; volumes: - &quot;$PWD/out:/root/out&quot; command: - /bin/bash - -c - | x-ui start sleep infinity CF_Key位于api-tokens页，Global API Key。 CF_Email是cloudflare登陆的邮箱。 out文件夹用于存储acme生成的证书。 生成域名证书1234567#注册邮箱docker-compose run acme.sh --register-account -m xxxxxx@gmail.com --debug#以下二选一#泛域名证书docker-compose run acme.sh --issue --dns dns_cf -d mytest.com -d *.mytest.com --debug#单独域名证书docker-compose run acme.sh --issue --dns dns_cf -d proxy.mytest.com --debug 使用docker示例运行x-ui1docker run -itd --name x-ui --privileged --restart always -v $PWD/out:/root/out --network host srcrs/x-ui bash -c &quot;x-ui start &amp;&amp; sleep infinity&quot; 运行acme.sh1docker run -itd --name acme.sh --privileged --restart always -v $PWD/out:/root/out neilpang/acme.sh daemon 生成域名证书1234567#注册邮箱docker exec acme.sh --register-account -m xxxxxx@gmail.com --debug#以下二选一#泛域名证书docker exec acme.sh --issue --dns dns_cf -d mytest.com -d *.mytest.com --debug#单独域名证书docker exec acme.sh --issue --dns dns_cf -d proxy.mytest.com --debug 登陆x-ui面板默认使用端口为54321，用户名和密码都为admin。 登陆地址: ip:54321 添加tls节点证书路径添加节点为tls或者tls+cdn模式时，需要在x-ui面板填写对应的证书路径，使用时mytest.com换成对应的代理域名即可。 公钥文件路径 /root/out/mytest.com/mytest.com.cer 密钥文件路径 /root/out/mytest.com/mytest.com.key 使用docker只需要找到对应的镜像，取执行命令效果一样。 需要注意的是，域名要被cloudfale代理，参考文章CloudFlare免费CDN加速使用方法。 致谢 docker docker-compose x-ui acme.sh]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于docker搭建后端环境]]></title>
    <url>%2F%2Fposts%2F202108141.html</url>
    <content type="text"><![CDATA[基于docker搭建一整套后端系统。 安装docker123456apt-get update# 安装dockerapt-get install docker.io# 安装docker-composesudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-composesudo chmod +x /usr/local/bin/docker-compose 构建 apache-php镜像构建docker镜像apache+php，基于ubuntu 123456789docker pull ubuntudocker run -itd --name apache-php ubuntudocker exec -it apache-php bashapt-get updateapt-get install apache2apt-get install phpapt-get install libapache2-mod-phpservice apache2 startservice apache2 status 使用composer管理php依赖1234php -r &quot;copy(&#x27;https://install.phpcomposer.com/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;php composer-setup.phpphp -r &quot;unlink(&#x27;composer-setup.php&#x27;);&quot;sudo mv composer.phar /usr/local/bin/composer 使用pecl管理php依赖1apt-get install autoconf libz-dev php7.4-dev php-pear 安装yaf123456wget -c https://github.com/laruence/yaf/archive/yaf-3.3.3.tar.gztar xzvf yaf-3.3.3.tar.gz &amp;&amp; cd yaf-3.3.3phpize./configuremakepecl install yaf 改版使用Apache服务器会出现一些我解决不了的问题，无法安装yaf扩展，下面使用nginx来实操 安装123456789101112131415161718192021222324252627282930313233343536373839404142434445#运行ubuntu容器镜像docker run -itd -p 10001:80 --name mytest ubuntu:20.04#进入容器的内部docker exec -it mytest bash#更新apt库apt-get update#安装nginxapt-get install nginx#启动nginxservice nginx start#检查nginx是否启动成功service nginx status#安装php-fpmapt-get install php7.4-fpm php7.4-dev#启动php-fpmservice php7.4-fpm start#检查php-fpm的状态service php7.4-fpm status#安装vimapt-get install vim#安装wgetapt-get install wget#安装yafwget http://pecl.php.net/get/yaf-3.2.3.tgztar -zxvf yaf-3.2.3.tgzcd yaf-3.2.3phpize./configure --with-php-config=/usr/bin/php-configmakemake install#在php.ini增加如下extension_dir = &quot;/usr/lib/php/20190902/&quot;extension = yaf.so#安装gitapt-get install git#克隆yaf官方git clone https://github.com/laruence/yaf.git#进入代码生成器目录cd yaf/tools/cg#生成基础项目php yaf_cg -a test -d /var/www/html#在docker外执行创建yaf基础项目docker exec mytest /bin/bash -c &#x27;cd /root/yaf/tools/cg &amp;&amp; php yaf_cg -a test -d /var/www/html/test&#x27;#更改时区apt install -y tzdata 目录说明 docker路径 本地路径 说明 /var/log/nginx logs/nginx nginx日志 /etc/nginx/nginx.conf configs/nginx/nginx.conf nginx配置文件（做了更改） /etc/nginx/conf.d configs/nginx/conf.d nginx配置文件（做了更改） /etc/php/7.4/fpm/php-fpm.conf configs/php-fpm/php-fpm.conf fpm配置文件 /etc/php/7.4/fpm/pool.d configs/php-fpm/pool.d fpm配置文件 /etc/php/7.4/fpm/php.ini configs/php-fpm/php.ini php配置文件 /var/www/html configs/webroot nginx容器 发布镜像123#将容器打包成镜像，容器终止态docker commit -a &quot;srcrs&quot; -m &quot;base nginx yaf&quot; mytest srcrs/nginx-yaf:1.0docker push srcrs/nginx-yaf:1.0 参考文章如何在 Ubuntu 20.04 上安装和使用 Docker Compose docker简单操作&amp;安装Apache和php Yaf入门三之依赖管理工具Composer的使用 安装PECL（包括PHP5以及PHP7）,涵盖常用操作系统]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生又一阶段]]></title>
    <url>%2F%2Fposts%2F202107031.html</url>
    <content type="text"><![CDATA[今天又去公司了，但是一下午又没干个啥、学个啥时间就过去了。我爸在前天也从北京回家去了，北京最近天气热，活也不多，正好休息几天。 晚上，临从公司走前，就和我妈通了一会视频，聊聊家常，聊到了她的工作，老板为了降低成本，他们要每天三点半起床，只是为了省电费；聊到了我的工作，每天还睡那么晚吗？要照顾好自己身体啊；聊到了钱，你一年挣的比我和你爸加起来的还要多；聊到了欠账，要好好干两年把外账摆开，我说好；聊到了做人，在外面不可太高调，我说我导师对我说的是，你不必把自己姿态放的这么低。 回到家，我又想了一下她说的话，我开始很自豪我比父母俩挣的钱都多，但是回过头一想，会觉得有点难受，我没想到这么快在家庭角色的转变，无形之中的压力，在我肩膀。 身份的转变，平淡的青春。早晚的地铁，人潮依旧涌动，庆幸挤了上去，才看到这靓丽的风景，体验到人生百态。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用PHPUinit进行单元测试]]></title>
    <url>%2F%2Fposts%2F202106271.html</url>
    <content type="text"><![CDATA[在过去写代码的过程中，很少会去自己写一些单元测试的case，通常就是用输出、打印的方式人工确认数据是否正确。在工作过程中，遇到的代码多且杂，且容易忘，导致在修改的时候，会很害怕，但是有了测试的case，这一切将会变的非常的容易。 12345678910111213141516171819202122232425// 判断arg1和arg2是否相等$this-&gt;assertEquals(arg1, arg2);// 判断arg1和arg2是否相等$this-&gt;assertSame(arg1, arg2);// 判读x是否为空$this-&gt;assertEmpty(arg);// 测试之间的依赖关系@depends 方法名// 判断arg是否为真$this-&gt;assertTrue(arg);// 数据供给器@dataProvider 方法名public function additionProvider()&#123; return [ [0, 0, 0], [0, 1, 1], [1, 0, 1], [1, 1, 2] ];&#125;// 以迭代器方式提供数据return new CsvFileIterator(&#x27;data.csv&#x27;)// 判断类是否可实例$this-&gt;assertInstanceOf(); 视频教程使用 PHPUnit 进行单元测试]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>单元测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx的使用]]></title>
    <url>%2F%2Fposts%2F202106192.html</url>
    <content type="text"><![CDATA[以前从未系统的了解过nginx，对于以后的配置学习和使用还是必不可少的。 nginx的作用动静分离动静分离反向代理反向代理负载均衡负载均衡Viewer does not support full SVG 1.1 反向代理：和正向代理相区分，正向代理是通过一个代理服务器上网，类似一个由内到外的过程，而反向代理我觉得是由外到内的过程，用户通过访问服务器暴露在外部host:port，能够映射服务器内部的web容器。 负载均衡：当用户访问量达到一定量级时，提升一台物理机的硬件已经不足以应对，则需要用到分而治之的思想了，通过多台服务器合作，处理用户的请求，是一对多的一种关系，通过nginx可以将用户的请求分发到不同的服务器。 动静分离：在一个web项目中，有静态资源（图片、js、css等）和动态资源（需要实时访问服务器获取的资源），nginx可以判断请求的资源类型，分发到不同的服务器，大概是这样吧。 nginx的配置文件默认的nginx配置文件大致如下， 1234567891011121314151617181920212223242526272829303132333435363738#定义nginx运行的用户user nginx;#nginx的进程数worker_processes auto;#错误日志的存储error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log notice;#进程文件pid &#x2F;var&#x2F;run&#x2F;nginx.pid;#工作模式与连接数上限events &#123; #单个进程的最大连接数 worker_connections 1024;&#125;#设置http服务器#只一部分需要配置的内容很多，但是作为初级使用是不需要配置的。http &#123; include &#x2F;etc&#x2F;nginx&#x2F;mime.types; default_type application&#x2F;octet-stream; log_format main &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39; &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39; &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;; access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main; sendfile on; #tcp_nopush on; keepalive_timeout 65; #gzip on; #需要配置最多配置就在这里 include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647server &#123; #监听端口号 listen 80; listen [::]:80; #监听ing域名 server_name localhost; #access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log main; #匹配Url进行方向代理 location &#x2F; &#123; root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html; index index.html index.htm; &#125; #error_page 404 &#x2F;404.html; # redirect server error pages to the static page &#x2F;50x.html # error_page 500 502 503 504 &#x2F;50x.html; location &#x3D; &#x2F;50x.html &#123; root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html; &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \.php$ &#123; # proxy_pass http:&#x2F;&#x2F;127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME &#x2F;scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&#39;s document root # concurs with nginx&#39;s one # #location ~ &#x2F;\.ht &#123; # deny all; #&#125;&#125; 环境说明https://labs.play-with-docker.com/ 一个免费在线的docker环境服务器 反向代理一实现目标：通过访问nginx能够映射到tomcat。 拉取镜像、运行 1234docker pull nginxdocker pull tomcatdocker run -itd --name tomcat-1 -p 8081:8080 tomcatdocker run -itd --name nginx-master -p 80:80 nginx 解决tomcat访问404 tomcat默认的访问路径webapps，但是docker版的这个文件夹是空的，真正的是在webapps.list需要先将webapps删除，再将webapps.list名字更改为webapps。 12rm -rf webappsmv webapps.list webapps 配置nginx 进入到nginx配置文件所在目录 更改server配置项 123location &#x2F; &#123; proxy_pass http:&#x2F;&#x2F;192.168.0.28:8081&#125; 保存。 nginx -t 检查nginx配置文件是否正确nginx -s reload 重启，新的配置将生效。 反向代理二实现目标：通过访问nginx的不同的路径，能够映射到不同的tomcat服务器。 拉取镜像、运行 12345docker pull nginxdocker pull tomcatdocker run -itd --name tomcat-1 -p 8081:8080 tomcatdocker run -itd --name tomcat-2 -p 8082:8080 tomcatdocker run -itd --name nginx-master -p 80:80 nginx 配置服务器显示内容 默认tomcat服务访问的路径是 webapps/ROOT 目录，docker默认webapps为空文件夹，需要自己在里面创建index.html文件，来显示不同的内容。 12345678#进入tomcat-1容器中docker exec -it tomcat-1 bashcd webappsmkdir onecd one#写入8081vim index.html 12345678#进入tomcat-2容器中docker exec -it tomcat-2 bashcd webappsmkdir onecd one#写入8082vim index.html 使用免费的容器反向代理会把url后面的链接带上。 配置nginx 进入到nginx配置文件所在目录 更改server配置项 123456location ~ &#x2F;one &#123; proxy_pass httpL&#x2F;&#x2F;192.168.0.28:8081&#125;location ~ &#x2F;two &#123; proxy_pass httpL&#x2F;&#x2F;192.168.0.28:8082&#125; 保存。 nginx -t 检查nginx配置文件是否正确nginx -s reload 重启，新的配置将生效。 负载均衡上面的反向代理通过访问不同的路径映射到了不同的tomcat服务器，而负载均衡是访问同一个路径，也就是一个请求会根据对应的策略转发到不同的服务器。 实现目标：一个请求能够被转发到不同的服务器上。 拉取镜像、运行 12345docker pull nginxdocker pull tomcatdocker run -itd --name tomcat-1 -p 8081:8080 tomcatdocker run -itd --name tomcat-2 -p 8082:8080 tomcatdocker run -itd --name nginx-master -p 80:80 nginx 配置服务器显示内容 默认tomcat服务访问的路径是 webapps/ROOT 目录，docker默认webapps为空文件夹，需要自己在里面创建index.html文件，来显示不同的内容。 123456#进入tomcat-1容器中docker exec -it tomcat-1 bashcd webapps#写入8081vim index.html 123456#进入tomcat-2容器中docker exec -it tomcat-2 bashcd webapps#写入8082vim index.html 配置nginx 更改server配置项 nginx.conf 1234upstream myserver &#123; server 192.168.0.8:8081 weight&#x3D;1; server 192.168.0.8:8082 weight&#x3D;1;&#125; 当所有的请求weight相等的时候就相当于轮询。 conf.d/default.conf 12345location &#x2F; &#123; root html; index index.html index.htm; proxy_pass http:&#x2F;&#x2F;myserver;&#125; weight是负载均衡策略的一种。会根据权重的不同，改变请求落在一个包的几率。 nginx/1.21.0默认的负载均衡策略是轮询，会根据时间顺序轮流落在每个服务器上。 动静分离]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小学生初入社会两个月]]></title>
    <url>%2F%2Fposts%2F202106191.html</url>
    <content type="text"><![CDATA[2021年3月29入职到今天，已有两个来月，这是我的第一份实习，并且在下个月就要正式入职了，这段时间发生了很多事，看到了很多，学到了很多，我觉得应该把这些想法记录下来。 事情还得从来北京说起。2021年3月15从家里出发，晚上的火车是11点，就提前和表哥说好到时候送我去车站，晚上九点多，他带着表嫂、小宝宝一起来了，我们一起吃了一点饺子，这也是我们家的老传统了。把行李装上车，就此出发。也许是很久没有出远门，还有点不舍，车子在拐弯前，我又朝家又看了一眼，我要走出社会了！ 车上，打开车窗，外面很黑，风很爽。看着小宝宝在闹腾，从出生到现在已经快会走路，时间在走，我们每个人都在变化，想起了小时候表哥欺负我的日子，小时候父亲拉着我去北京的日子，表哥带着我干暑假工，只不过这次是我一个人，一个对未来满怀着期待的人。 近11个小时候的长途跋涉，到达了北京西，北京我又来了。这次的目的地是我爸的居住地，我要在他那落个脚。我爸也在北京也飘了近二十年，看着他从一头的黑发，变成了白发，养活我哥俩，养活家。 北京西站和地铁是挨着的，按着指示牌找到了地铁站的入口，然后按照以往买了卡，发现还需要选择起点和终点，说句实在的那界面还真没手机上好操作，但是我的起点和终点是需要转乘的，我就不会买了，索性先买一趟列车的吧，不行再补票，付款的时候发现是7块钱，好贵啊，我记忆里最早开始地铁是两块钱是随便坐的。后来知道了，支付宝可以直接买票，再后来办了张交通卡，每次刷nfc就可以，方便很多。兜兜转转，到了地铁土桥站下车，但是出站的时候应该在地铁靠近大路的那边下去。我下到了小路的这一边，一番询问找到了公交站牌。用公交卡、支付宝或者微信刷公交是半价，我投了五块钱，巨亏两块五。经过一个半小时的公交，终于找到了我爸住的地方，总算是到了。北京很多地方都拆了，现在住的地方是北京和河北的交界处。那是一个靠在马路边的小房间，进门，感觉到了我爸比我还不讲究^_^，粉色的瓷砖地，都已经黑乎乎一片了，后来还是我用刷碗的铁丝球，一点点刷掉的。 两周的面试，心理经历过失望、忐忑、兴奋、纠结、妥协，最终下定决心。由于通州距离朝阳、昌平这边都比较远，约在上午的面试，就不能睡懒觉了，有的时候五点多就要起来，天都还没亮，要等6点的第一趟班车。可再一看旁边的父亲，早就出门了。 那时候在官网投递的校招，几乎都是笔试都没有过，不过答的也确实不好。到北京来就用了Boss直聘，每天就是在网上投啊投，但是约面试的机会说实话也不多，有的去了笔试没有过就让回来了，有的感觉都是HR在刷业绩，简单聊了几句个人情况，然后说老板在开会，这次的面试结果她已经可以判断和决定了，就把我打发走了，回来后，越想越气愤，写了很长一段话，发给了HR，但是不到一分钟又给撤了回来。连正式的笔试和面试都没有开始，凭什么？既然简历不过关，何必耽误彼此的时间。 后来又经过一些面试，就入职了现在的这家公司。其实经历过这些面试，发现Java在IT行业太卷了，面试要求我自认为有点高，不应该是一个应届生的标准，所以以后也不想入Java的坑了。现在使用的主要语言是PHP，我觉的一个语言的基本使用都是差不多了，可能在一些场景下，一种语言的特性优势就展现出来了，现在貌似还没有遇见过。 实习offer上写的是上午11点上班，我计划要提前一个小时到场，早上八点多从家里出发，到9点40左右到的，那时候公司还很空荡，几乎没有什么人。那时候还不知道我的小伙伴们在哪，第一次去的地方应该是客服组，我看到了桌面上的罗技k380^_^。后来才知道，是客服组的领导给我带过去的，见到了后端的领导，来的很早。在来那天来面试的时候就感觉环境还可以，简简单单，很好。在那等了一会，我的导师就来了，也是那天我的一面面试官，在面试的时候就给了我不少的机会，在后来的工作中更是给了我极大的宽容、教导，引路。 刚开始上班的时候确实很累，又要从一个不熟悉的环境开始了新一段旅程，而我对于新鲜的事物，学起来又非常的慢，开始的几个小任务，做的很慢，也有些需求都理解错了，现在看来是甚至有些可笑，但是对于以后的工作学习中，框架代码的理解也更加的透彻一点。 以前在做Java项目的时候，更多是百度，因为自己做的一些项目都比较简单，业务逻辑大部分时候是不会出现问题的，大部分是一些框架的配置问题，框架的报错大部分都看不懂。但是PHP有很大的不同，不应该这样说，公司的架构已经都搭建好了，现在做的每一件东西都需要在已有的代码上做，业务场景复杂，所以遇到的逻辑上的问题要多一点。 我学会非常重要的一件事就是查看日志，跟着代码走，一步步查看日志。有一次，需要做一个订单相关的任务，但是那天正好下单流程坏了，那一点点找bug，刚开始看bug的时候，心理是非常烦躁的，其实我也搞不清楚是为什么，这带来的结果就是，bug没找到，活也没干，还要受批评。随着慢慢的调整，心也静了下来。幸好在晚上的时候，找到了bug的所在，然后解决了，那感觉很爽。耗了半天，很值。 待续……]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL服务器集群的简单实现]]></title>
    <url>%2F%2Fposts%2F202106051.html</url>
    <content type="text"><![CDATA[起因最近知道了几个关键词主从复制、读写分离、mysql集群。起因是我在做项目的时候，有的场景需要多写一行代码，作用是强制读取主库，起初也知道些许读写分离的思想，但是我好奇的是如何实现的强制读取主库，但是看了代码也没有发现是如何实现的。之后在网上搜索相关的知识，主从复制、读写分离、mysql集群等一股脑的都冒出来了，我开始了如下的实验之旅。 实验环境说明我使用的是一个免费、在线的docker容器play-with-docker，只需要在Docker Hub注册一个账号就可以使用。 mysql镜像版本为mysql:latest，实际上对应的版本为8.0.25。 需要一定的Linux、docker命令基础。 涉及的操作命令示例123456789101112#查看本地镜像docker images#拉取MySQL镜像docker pull xxxxx#运行镜像docker run -itd -name mysql-xxxxx -p xxxx:xxxx -e MYSQL_ROOT_PASSWORD=xxxxx mysql#进入容器中docker exec -it -e LANG=C.UTF-8 xxxxx bash#查看容器的网络地址docker inspect xxxxx#查看容器列表docker ps -a 拉取MySQL镜像默认这种方式拉取的是最新的镜像文件，如果要拉取特定的版本则需要mysql在后面加上版本号，如mysql:5.7。 12#拉取mysql镜像docker pull mysql 主库容器操作运行主库1docker run -itd --name mysql-master -e MYSQL_ROOT_PASSWORD=123456 -p 3307:3306 mysql 配置主库my.cnf首先需要查看一下主库的容器ID 123$ docker ps -aCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES03b4cbdd57a6 mysql &quot;docker-entrypoint.s…&quot; About a minute ago Up About a minute 33060/tcp, 0.0.0.0:3307-&gt;3306/tcp mysql-master CONTAINER ID便是容器ID，进入到容器的内部。 1docker exec -it -e LANG=C.UTF-8 03b4cbdd57a6 bash 此时，便进入到了容器的内部，这是一个非常干净的环境，类似于vi/vim需要手动安装。 12apt-get updateapt-get install vim 然后使用Vim进入编辑器，将以下内容填写到相应的位置并保存。 1vim /etc/mysql/my.cnf 123[mysqld]server-id&#x3D;1log-bin&#x3D;master-bin 修改完MySQL的配置文件，则需要将MySQL重启后才可以生效，但是常规的MySQL的重启的命令不可以，只好将主库容器重启，然后再进入到容器中。 1234#重启容器docker restart 03b4cbdd57a6#再次进入到容器中docker exec -it -e LANG=C.UTF-8 03b4cbdd57a6 bash 数据库内部操作接下来的操作需要进入到MySQL的内部进行操作。 12345678#进入数据库mysql -uroot -p123456#创建用户slave用户create user &#x27;slave&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;#授权grant replication slave,replication client on *.* to &#x27;slave&#x27;@&#x27;%&#x27;;#防止密码简单报错alter user &#x27;slave&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;; 查看配置的结果12#查看容器的运行状态show master status; 正常出现的结果为，需要记住File和Position，此后，退出数据库，退出容器，不要再做任何操作。 12345+-------------------+----------+--------------+------------------+-------------------+| File | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+-------------------+----------+--------------+------------------+-------------------+| master-bin.000001 | 996 | | | |+-------------------+----------+--------------+------------------+-------------------+ 退出容器后，需要查看主库的网络ip，172.17.0.2便是。 1234$ docker inspect 03b4cbdd57a6 | grep IPAddress &quot;SecondaryIPAddresses&quot;: null, &quot;IPAddress&quot;: &quot;172.17.0.2&quot;, &quot;IPAddress&quot;: &quot;172.17.0.2&quot;, 从库容器操作运行从库1docker run -itd --name mysql-slave-1 -e MYSQL_ROOT_PASSWORD=123456 -p 3308:3306 mysql 配置从库my.cnf同样需要查看一下从库的容器ID 1234$ docker ps -aCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES120fb0493866 mysql &quot;docker-entrypoint.s…&quot; 23 seconds ago Up 22 seconds 33060/tcp, 0.0.0.0:3308-&gt;3306/tcp mysql-slave-103b4cbdd57a6 mysql &quot;docker-entrypoint.s…&quot; 38 minutes ago Up 11 minutes 33060/tcp, 0.0.0.0:3307-&gt;3306/tcp mysql-master 进入到从库的内部 1docker exec -it -e LANG=C.UTF-8 120fb0493866 bash 安装vim，编辑从库my.cnf 12345#安装vimapt-get updateapt-get install vim#编辑my.cnfvim /etc/mysql/my.cnf 填写如下内容 12345678[mysqld]server-id&#x3D;2log-bin&#x3D;slave-1-binbinlog_ignore_db&#x3D;information_schemabinlog_ignore_db&#x3D;performation_schemabinlog_ignore_db&#x3D;mysqlbinlog_ignore_db&#x3D;sysbinlog-format&#x3D;MIXED 退出容器，将容器重启。 1234#重启容器docker restart 120fb0493866#再次进入到容器中docker exec -it -e LANG=C.UTF-8 120fb0493866 bash 数据库内部操作进入到数据库中 1mysql -uroot -p123456 配置同步主库 1change master to master_host=&#x27;172.17.0.2&#x27;,master_port=3306,master_user=&#x27;slave&#x27;,master_password=&#x27;123456&#x27;,master_log_file=&#x27;master-bin.000001&#x27;,master_log_pos=996,master_connect_retry=30; 名称 说明 master_host 主库的网络地址 master_port 数据库端口，而不是外部端口 master_user 同步用户中间人 master_password 验证密码 master_log_file 同步的日志文件 master_log_pos 同步的日志文件位置 master_connect_retry 重连次数 查看配置结果1234#开启同步start slave;#查看是否连接正常show slave status \G Slave_IO_Running和Slave_SQL_Running同为Yes就是正常的。 12345678910111213*************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 172.17.0.2 Master_User: slave Master_Port: 3306 Connect_Retry: 30 Master_Log_File: master-bin.000001 Read_Master_Log_Pos: 996 Relay_Log_File: 120fb0493866-relay-bin.000002 Relay_Log_Pos: 325 Relay_Master_Log_File: master-bin.000001 Slave_IO_Running: Yes Slave_SQL_Running: Yes 退出容器。 实验测试结果测试过程准备如下：在主库中创建test库，然后查看从库中是否会同步test库。 123456#进入主库之中docker exec -it -e LANG=C.UTF-8 03b4cbdd57a6 bash#进入数据库内部mysql -uroot -p123456#创建test库create database test; 123456#进入从库之中docker exec -it -e LANG=C.UTF-8 120fb0493866 bash#进入数据库内部mysql -uroot -p123456#查看所有的数据库列表show databases; 查看到从库中确实也有了test库，说明主从复制成功。 12345678910mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || sys || test |+--------------------+ 遇到的问题修改了配置文件未生效每次修改完MySQL的配置文件，应该将数据库重启，因为在docker中我不知道该怎么同步，所以最后用重启docker的形式代替。 字符集问题在进入容器的时候，我手动将字符集设置为UTF-8，是因为在此前我在数据库中插入中文数据的时候显示空白。 密码过于简单报错这也是我最明显能体会到5版本和8版本的区别，当用户的密码设置过于简单的时候，就会报出mysql_native_password错误，解决办法是执行下面这条命令。 1alter user &#x27;slave&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;; 展望未来需要了解，例如为什么要使用读写分离，如何保证数据的一致性，主从复制的延迟有多久，为什么能做到主从复制，使用了什么协议。 参考文章列表Mysql主从复制原理及搭建 authentication plugin ‘caching_sha2_password’ 问题解决 MySQL-基于docker实现Replication集群主从复制及读写分离 docker查看容器的网络ip MySQL8.0中binlog的深入讲解]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[50道SQL练手]]></title>
    <url>%2F%2Fposts%2F202105241.html</url>
    <content type="text"><![CDATA[表结构及数据1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859create table student(sid varchar(10),sname varchar(10),sage datetime,sex nvarchar(10)); insert into student values(&#x27;01&#x27; , &#x27;赵雷&#x27; , &#x27;1990-01-01&#x27; , &#x27;男&#x27;);insert into student values(&#x27;02&#x27; , &#x27;钱电&#x27; , &#x27;1990-12-21&#x27; , &#x27;男&#x27;);insert into student values(&#x27;03&#x27; , &#x27;孙风&#x27; , &#x27;1990-05-20&#x27; , &#x27;男&#x27;);insert into student values(&#x27;04&#x27; , &#x27;李云&#x27; , &#x27;1990-08-06&#x27; , &#x27;男&#x27;);insert into student values(&#x27;05&#x27; , &#x27;周梅&#x27; , &#x27;1991-12-01&#x27; , &#x27;女&#x27;);insert into student values(&#x27;06&#x27; , &#x27;吴兰&#x27; , &#x27;1992-03-01&#x27; , &#x27;女&#x27;);insert into student values(&#x27;07&#x27; , &#x27;郑竹&#x27; , &#x27;1989-07-01&#x27; , &#x27;女&#x27;);insert into student values(&#x27;08&#x27; , &#x27;王菊&#x27; , &#x27;1990-01-20&#x27; , &#x27;女&#x27;);create table course(cid varchar(10),cname varchar(10),tid varchar(10)); insert into course values(&#x27;01&#x27; , &#x27;语文&#x27; , &#x27;02&#x27;);insert into course values(&#x27;02&#x27; , &#x27;数学&#x27; , &#x27;01&#x27;);insert into course values(&#x27;03&#x27; , &#x27;英语&#x27; , &#x27;03&#x27;); create table teacher(tid varchar(10),tname varchar(10)); insert into teacher values(&#x27;01&#x27; , &#x27;张三&#x27;);insert into teacher values(&#x27;02&#x27; , &#x27;李四&#x27;);insert into teacher values(&#x27;03&#x27; , &#x27;王五&#x27;);create table sc(sid varchar(10),cid varchar(10),score decimal(18,1)); insert into sc values(&#x27;01&#x27; , &#x27;01&#x27; , 80);insert into sc values(&#x27;01&#x27; , &#x27;02&#x27; , 90);insert into sc values(&#x27;01&#x27; , &#x27;03&#x27; , 99);insert into sc values(&#x27;02&#x27; , &#x27;01&#x27; , 70);insert into sc values(&#x27;02&#x27; , &#x27;02&#x27; , 60);insert into sc values(&#x27;02&#x27; , &#x27;03&#x27; , 80);insert into sc values(&#x27;03&#x27; , &#x27;01&#x27; , 80);insert into sc values(&#x27;03&#x27; , &#x27;02&#x27; , 80);insert into sc values(&#x27;03&#x27; , &#x27;03&#x27; , 80);insert into sc values(&#x27;04&#x27; , &#x27;01&#x27; , 50);insert into sc values(&#x27;04&#x27; , &#x27;02&#x27; , 30);insert into sc values(&#x27;04&#x27; , &#x27;03&#x27; , 20);insert into sc values(&#x27;05&#x27; , &#x27;01&#x27; , 76);insert into sc values(&#x27;05&#x27; , &#x27;02&#x27; , 87);insert into sc values(&#x27;06&#x27; , &#x27;01&#x27; , 31);insert into sc values(&#x27;06&#x27; , &#x27;03&#x27; , 34);insert into sc values(&#x27;07&#x27; , &#x27;02&#x27; , 89);insert into sc values(&#x27;07&#x27; , &#x27;03&#x27; , 98); 题目：1查询”01”课程比”02”课程成绩高的学生的信息及课程分数。 1234567SELECT s.*, sc1.scoreFROM student s, sc sc1, sc sc2WHERE sc1.cid = &#x27;01&#x27; AND sc2.cid = &#x27;02&#x27; AND sc1.score &gt; sc2.score AND s.sid = sc1.sid AND s.sid = sc2.sid; 题目：2查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩。 1234SELECT sid, avg(score)FROM scGROUP BY sidHAVING avg(score) &gt; 60; 题目：3查询所有同学的学号、姓名、选课数、总成绩。 12345SELECT s.sid, s.sname, count(sc.cid) , sum(sc.score)FROM student s LEFT JOIN sc ON s.sid = sc.sidGROUP BY s.sid; 我使用的是最新版的mysql8.0.25版本，执行上述代码遇到了一个莫名其妙的错误。 1ERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;my.s.sname&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by 执行下面两个sql就能解决，但是退出后还要重新输入。 12set global sql_mode=&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;;set session sql_mode=&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;; 题目：4查询姓“李”的老师的个数。 123SELECT count(tid)FROM teacherWHERE tname LIKE &#x27;李%&#x27;; 题目：5查询没学过“张三”老师课的同学的学号、姓名。 123456789101112SELECT s.sid, s.snameFROM student s LEFT JOIN sc ON sc.sid = s.sid AND sc.cid IN ( SELECT cid FROM course c, teacher t WHERE t.tname = &#x27;张三&#x27; AND t.tid = c.tid )GROUP BY sc.sidHAVING count(sc.cid) = 0; 题目：6查询学过“01”并且也学过编号“02”课程的同学的学号、姓名。 123456789SELECT s.sid, s.snameFROM sc, student sWHERE sc.sid = s.sid AND sc.cid = &#x27;01&#x27; AND s.sid IN ( SELECT sid FROM sc WHERE sc.cid = &#x27;02&#x27; ); 题目：7查询学过“张三”老师所教的所有课的同学的学号、姓名。 12345678910SELECT s.sid, s.sname, c.cid, c.cnameFROM student s, course c, scWHERE sc.sid = s.sid AND sc.cid = c.cidGROUP BY s.sidHAVING count(s.sid) = ( SELECT count(c.cid) FROM teacher t, course c WHERE t.tid = c.tid); 题目：8查询课程编号“01”的成绩比课程编号“02”课程低的所有同学的学号、姓名。 12345678SELECT s.sid, s.snameFROM (student s, sc s1) JOIN sc s2 ON s1.sid = s2.sid AND s1.cid = &#x27;01&#x27; AND s2.cid = &#x27;02&#x27; AND s1.score &lt; s2.scoreWHERE s.sid = s1.sid; 题目：9查询所有课程成绩小于60分的同学的学号、姓名。 12345SELECT s.sid, s.snameFROM student s LEFT JOIN sc ON s.sid = sc.sidGROUP BY s.sidHAVING max(sc.score) &lt; 60; 题目：10查询没有学全所有课的同学的学号、姓名。 12345678SELECT *FROM student s, scWHERE s.sid = sc.sidGROUP BY s.sidHAVING count(sc.cid) != ( SELECT count(cid) FROM course); 题目：11查询至少有一门课与学号为“01”的同学所学相同的同学的学号和姓名。 12345678SELECT s.sid, s.snameFROM student sWHERE s.sid != &#x27;01&#x27; AND EXISTS ( SELECT * FROM sc WHERE s.sid = sc.sid ); 题目：12查询和”01”号的同学学习的课程完全相同的其他同学的学号和姓名 解题思路：首先查找到01同学所学的课程。 12select s.sid, s.sname from student s, sc where s.sid=sc.sid and s.sid!=&#x27;01&#x27; and sc.cid in(select cid from student s, sc where s.sid=sc.sid and s.sid=&#x27;01&#x27;) sf group by sc.cid having count(sf.cid)==count(sc.sid); 题目：13把“SC”表中“张三”老师教的课的成绩都更改为此课程的平均成绩； 123456789UPDATE sc, ( SELECT sc.cid, avg(sc.score) AS score FROM teacher t, course c, sc WHERE c.tid = t.tid AND c.cid = sc.cid AND t.tname = &#x27;张三&#x27; ) sc2SET sc.score = sc2.scoreWHERE sc.cid = sc2.cid; 题目：14查询没学过”张三”老师讲授的任一门课程的学生姓名 解题思路：找到张三老师教的所有课程，筛选出没学过张三老师课程同学的学号，输出他们的姓名 1select sname from student s where sid in (select sid from student sc where sc.cid not in (select cid from course c,teacher t where t.tname=&#x27;张三&#x27; and c.tid=t.tid)); 题目：15查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 1select s.sid, s.sname, avg(sc.score) from student s right join sc on s.sid=sc.sid and sc.score&lt;60 having count(sc.cid)&gt;=2; 题目：16检索”01”课程分数小于60，按分数降序排列的学生信息 1select * from (select * from sc where sc.cid=&#x27;01&#x27; and sc.score&lt;60) sc left join student s on s.sid=sc.sid order by sc.score desc; 题目：17按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩 12select sc.sid, sc.cid, sc.score, dot.avgScore avgScore from sc left join (select sid, avg(score) avgScore from sc group by sid) dot on sc.sid=dot.sid order by dot.avgScore desc; 题目：18查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率 题目：19按各科平均成绩从低到高和及格率的百分数从高到低顺序 题目：20查询学生的总成绩并进行排名 select sum(score) from sc group by sid order by sc.sid desc; ```ß]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker入门]]></title>
    <url>%2F%2Fposts%2F202105202.html</url>
    <content type="text"><![CDATA[镜像镜像仓库仓库tar文件tar文件容器容器DockerfileDockerfilerunruncommitcommitbuildbuildpushpushpullpullloadloadsavesaveViewer does not support full SVG 1.1 docker在线版，每次申请可使用4个小时，本文所有的示例都是在它基础上实现。 名词解释仓库Docker Hub是Docker官方维护的一个仓库，用来存储镜像。 镜像类似于已经打包好的代码，如系统安装所需的iso文件。 容器镜像文件运行在容器中，可以理解为一个虚拟机。 DockerfileDockerfile是Docker的配置文件，通过这个配置文件能够获取到相应的镜像。 tar文件镜像文件保存后便形成了一个tar文件。 基础命令pull1docker pull mysql 从docker仓库中拉取mysql镜像，默认拉取的是最新版本镜像，在镜像后面加上”:latest”同效果，其他版本镜像一次类推。 images1docker images 查看本地有哪些镜像。 run1docker run -d -it -name mysql-test -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 mysql run指令运行本地的镜像，-d代表后台运行 -it代表代表是可交互，-e代表设置容器中的环境变量，-p代表运行的端口，mysql代表将要运行的镜像。–name也可以不指定，也会随机生成一个名字。 ps1234#列出所有在运行的容器名称docker ps#列出所有的容器docker ps -a 使用上述命令可以查看容器是否在运行之中。 exec1docker exec -it 593b87f33c7b bash 进入容器的内部操作，-it代表交互式的，对该容器执行bash命令，593b87f33c7b代表容器号，即CONTAINER ID，镜像通过run命令进行运行状态，会在下面展示完整的ONTAINER ID，也可以通过ps进行查看。 基础的使用，基本上只涉及到上面几个操作。但是对于镜像的制作还需要一些时间去学习。 stop停止一个正在运行的容器。 1docker stop xxxxx rm删除容器，需要注意的是，容器的状态需要是停止状态，运行中的容器不可用这条命令删除。 1docker rm xxxxx 示例mysql12345678#拉取mysql镜像docker pull mysql#运行mysql镜像 密码为123456docker run -d -it --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql#进入运行mysql的容器内部docker exec -it xxxxxx bash#登陆mysqlmysql -uroot -p 上述进入mysql的容器中，当存在对汉字操作的时候可能会出现汉字异常无法出现的情况，此时只需要在进入容器的时候制定字符集即可。 1docker exec -it -e LANG=C.UTF-8 xxxxxx bash nginx123456#拉取nginx镜像docker pull nginx#运行nginx镜像docker run -d --name nginx-test -p 80:80 nginx#进入运行nginx的容器内部docker exec -it xxxxxx bash ubuntu123456#拉取ubuntu镜像docker pull ubuntu#运行ubuntu镜像docker run -itd ubuntu#进入运行ubuntu镜像容器的内部docker exec -it xxxxxx bash]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux操作系统之用户管理]]></title>
    <url>%2F%2Fposts%2F202105201.html</url>
    <content type="text"><![CDATA[Linux是一个多用户多任务的操作系统，在过去只使用过root账号，它是一个特殊的账号，在Linux系统中具有最高的权限。其他的用户都需要通过root账号去管理。 用户组在Linux系统中，每一个用户都会存在于一个用户组中，如果在创建用户的时候没有指定用户组，默认用户组和用户名同名。 创建用户使用useradd命令可以创建一个新的用户，但是这种方式并不能将用户添加到一个已有的用户组中。 1useradd xiaoming 如果要将新用户添加到用户组中，需要使用-d命令。 1useradd -d /home/users xiaoming 设置或更新密码用户登陆需要用户名和密码，上面的操作，仅仅是创建了用户，还不知道用户名和密码，设置密码则需要userpw命令。 1userpw xiaoming 删除用户当用户在系统中不再存在的时候，则应该将该用户删除。 1userdel xiaoming]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[半年的心血没有了]]></title>
    <url>%2F%2Fposts%2F202105191.html</url>
    <content type="text"><![CDATA[晚上又收到了Github官方的邮件了，UnicomTask也没有了，真是命不太好，两个项目都没有了，star和fork消失的无影无踪。 由于最近学校和工作比较忙，对于自己的这几个开源仓库，关注确实要少很多，一些错误啊，新功能的需求啊，都没有去修正、去添加，实在是太忙了，早上8:40左右就从家出发去上班，步行+公交+地铁大概需要一个小时时间，晚上九点下班，一般九点半走，回到家大概十点半，弄点吃的，到11点了。 虽然关注度不高，但是每当我看见star和fork的数量，我的虚荣心还是得到了很大的满足的，最开始的时候，成天的在网上到处宣传，告诉他们使用我的的项目，它有什么功能，如何如何的好，开始的时候宣传很艰难，但是当达到一定的数量之后，就不用自己再花很多精力去做这件事情了。 从去年十月份开始做贴吧项目，到现在五月份，已经有半年的时间。都是抱着学习的目的去做的，在专业人士看来，这可能是非常简单的东西，但是当真正做出来的时候，喜悦之情溢于言表，之后便是想做的更好，能给更多的人带来帮助，能够方便的使用。 18日晚B站项目被封，19日联通项目被封，账号还被莫名奇妙的标记了，不能被外界搜索到，贴吧项目可能就是在账号标记状态中封禁的吧，我没有收到邮件，Pages功能被关闭，博客不能被访问，一切都没有了。完了。 那一刻，我与世界失连了。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Circle CI自动部署Vuepress博客]]></title>
    <url>%2F%2Fposts%2F202105161.html</url>
    <content type="text"><![CDATA[背景CI/CD在我的理解中，它是临时跑代码的机器，能够帮助使用者完成特定的任务。Github Actions就是一个这样的东西，在过去，我一直在使用，但是近期可能违反了使用规则，导致被禁用，过去的平衡被破坏，博客不能发布了，自动签到脚本不能运行了。 为什么选择Circle CI市面上大致分为两种：一种需要在自己服务器搭建，一种不需要在自己服务器搭建。对于前者有比较熟知的Jenkins，缺点就是需要自己有一台服务器；对于后者有Travis CI、Github Actions、Circle CI等。之前一直在使用Actions，体验最好，但是被封禁了，Travis CI之前也使用过，在国内访问速度很慢，最近听说由于Actions抢占了太多市场，未来也将会对开源项目进行收费了，也不考虑了。Circle CI就很友好了，每周会有一定的免费的额度，完全够普通用户使用。 怎么使用和其他的CI/CD一样，Circle CI使用的也是Yaml配置文件，方便阅读理解。我的博客框架依托于Vuepress，下面便是Vuepress类型博客部署的一个例子。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#Circel CI版本version: 2.1#下面可以写很多jobjobs: #job名字 build: #环境 docker: - image: circleci/node:latest steps: # connect to github by ssh - add_ssh_keys: fingerprints: - $FPS - checkout # Download and cache dependencies - restore_cache: keys: - v1-dependencies-&#123;&#123; checksum &quot;package.json&quot; &#125;&#125; # fallback to using the latest cache if no exact match is found - v1-dependencies- - run: npm install - save_cache: paths: - node_modules key: v1-dependencies-&#123;&#123; checksum &quot;package.json&quot; &#125;&#125; #一系列操作 - run: | git config --global user.email &quot;srcrs@foxmail.com&quot; git config --global user.name &quot;srcrs&quot; git checkout gh-pages git reset --hard origin/main npm run build git add . git commit -m &quot;auto build&quot; git push -f --set-upstream origin gh-pages#工作流workflows: #name build_and_deploy: jobs: - build: #触发的规则 filters: branches: only: main 设置有缓存，因此安装依赖几乎不花时间，主要时间花费在npm run build，将Markdown转换成Html。 结果过程也是很曲折，参考文档没有看的很明白，提交的请求在两个分支之间形成了闭环，导致了无限次循环，早上起来发现多了100多次commit，最开始触发分支条件设置在了jobs中，两个分支仍然都被触发。后来在文档中看到这种操作可能会出现未知问题，就换到了workflows。索性最后解决了问题。 参考 使用 circleci 自动部署 vuepress 到 github Circleci docs]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>ci/cd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[加速博客静态资源加载]]></title>
    <url>%2F%2Fposts%2F202105121.html</url>
    <content type="text"><![CDATA[背景js、css、图片等静态资源在每次网络请求占用不少时间，考虑使用cdn进行加速，找到了jsdelivr，它可以自动加速github资源的访问，并且可以免费使用，只需要很简单的操作就可以在vuepress用上。 操作方法下面例子，我只对图片、js、css进行了加速。在config.js中插入如下代码即可。 12345678910111213//加速静态资源configureWebpack: () =&gt; &#123; return &#123; output: &#123; publicPath: &#x27;https://cdn.jsdelivr.net/gh/srcrs/srcrs.github.io@gh-pages/docs/&#x27; &#125;, resolve: &#123; alias: &#123; &#x27;docs&#x27;: path.resolve(__dirname, &#x27;./docs&#x27;), &#125; &#125; &#125;&#125; 解释 https://cdn.jsdelivr.net 代表网站根目录 gh 代表github，应该也可以对其他代码托管网站加速资源访问 srcrs 代表github用户名 srcrs.github.io 代表仓库名 gh-pages 代表仓库中的哪个分支 docs/ 代表具体的目录 结果静态资源加速效果明显，体验更加好了，又能愉快的看博客、写博客了。 后续pwa会导致博客内容更新速度很慢，上传了很久都没有弹出更新按钮，故在删除这一功能。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>cdn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Vue.js项目中添加Echarts]]></title>
    <url>%2F%2Fposts%2F202105041.html</url>
    <content type="text"><![CDATA[背景在毕设项目中需要使用报表展示一些数据，如生成当月的销售额、用户购买量分析、用户来源等等，在网上找到可以使用Echarts来做这件事情，只需要提供相应的数据即可。 Echarts是什么Echarts是一个使用JavaScript实现的开源可视化库，可以生成各种各样的图表，基本涵盖了各行各业的图表需求。最新的版本是Echarts 5，参考Echarts官网文档，可快速的在前端项目中生成可视化图表。 Echarts的使用只介绍在Vue项目中的使用，以及我遇到的一些问题。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线上和测试环境查日志总结]]></title>
    <url>%2F%2Fposts%2F202104251.html</url>
    <content type="text"><![CDATA[在写代码的过程中，发现很多的时间都会耗费在寻找错误，debug太慢，导致效率不高。 简述环境大概分为以下三种 开发环境：开发机就是云服务器，直接在云服务器就可以写代码，省掉了自己在本地部署环境，vscode安装Remote-SSH就行了。在没有push前，代码只能够在自己机器上生效。 测试环境：用来和前端进行联调用的，当本地代码push到远程仓库后，会自动进行部署代码，并在测试环境中生效。 线上环境：代码没有bug，并且和前端联调完毕，便可以申请代码上线。这一步骤一定要慎重，代码是直接交给用户去使用的，要经过严格的测试才好。 中控机作为开发者和线上服务器的桥梁，线上有着众多的服务器，采用nginx作为负载均衡，ui和servie为服务器集群。要代码的时候要注意保持数据的一致性。 连接方式确保已经登陆到开发机 1ssh rd@172.31.10.189 日志目录的格式12345678910111213activitykafkamcenterorderpaymentpostscriptservicestockflowwebserveritemmark... 当线上曝出bug时候，就要来这里找错误，由于有着大量的日志，需要合理的采用脚本搜索需要的日志内容。 进入了一个误区，因为线上是服务器集群，查日志，因为不知道会在哪一个服务器运行，所以需要遍历所有的线上服务器，在中控机看不到具体实实在在的日志路径。 查找技巧 grep 后面跟着的可以是logid、手机号等等值，可以定位到日志内容就行了。 cd /home/work/env/log/uiww 代表日志存在的路径 uiww.log.2021041912 日志文件名 后缀规范为日期到小时级 {ui} 代表要查询的机器为所有 ui 机器，与此对应，里面填 service 便查询的是所有的 service 服务器 1atnodes &#x27;cd /home/work/env/log/uiww &amp;&amp; grep 11092479 uiww.log.2021041912&#x27; &#x27;&#123;ui&#125;&#x27; 可以用 ｜ 分割，增加更多的筛选条件 1atnodes &#x27;cd /home/work/env/log/uiww &amp;&amp; grep 1333651 uiww.log.2021041912 | grep getSellItem&#x27; &#x27;&#123;ui&#125;&#x27; 测试环境使用的是线下数据库和线下代码，线下代码又分为两种，提交的和未提交的。 未提交使用ip访问：http://xx.xx.xxx.xx:8081/1.0/uifa/c2cbrandlist push了代码：http://xxx.xxxxxxxx.cn/1.0/uifa/c2cbrandlist 连接方式1ssh work@172.31.25.21 日志目录的格式1234567posttaguigsuiwwuifac2citem... 这个日志的查找就比较方便了，日志在哪个模块打印出，进行查找即可。 需要用到一些查文件的命令。 查找技巧 tail 查询实时最新的日志代码 1tail post.log.2021042302 -f more 可以翻页文件中的内容，只能向下翻页 1more post.log.2021042302 less 比more更高级，支持向上和向下翻页 1less post.log.2021042302 cat 这个在查日志的时候用的很少，适合查看简短的文本信息 1cat post.log.2021042302]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[主流电商平台抓包分析]]></title>
    <url>%2F%2Fposts%2F202104181.html</url>
    <content type="text"><![CDATA[京东京东首页 请求地址https://api.m.jd.com/client.action?functionId=welcomeHome 请求方式POST 协议h2 请求大小2.84kB 请求耗时415ms 响应大小40.59kB 响应&#123; &quot;oldSwitch&quot;: &quot;1&quot;, &quot;homeBgColor&quot;: &quot;&quot;, &quot;popMessage&quot;: 1, &quot;toBottomBtnImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t16720/255/2479122300/6254/38f4b86d/5af962b4Nfc69fa66.png&quot;, &quot;code&quot;: &quot;0&quot;, &quot;cycFirstTimeStamp&quot;: &quot;1618725704623&quot;, &quot;use_new_brands&quot;: 1, &quot;lottieCartoonList&quot;: [ ], &quot;toTopBtnLine&quot;: 5, &quot;lazy&quot;: 60, &quot;appCenterCartoonSwitch&quot;: 0, &quot;useComponentImg&quot;: 1, &quot;recommendParam&quot;: &quot;&#123;\&quot;isReFloor\&quot;:0,\&quot;recommendMutiTab\&quot;:1,\&quot;bannerPosition\&quot;:0,\&quot;frontExpids\&quot;:\&quot;F_0_0\&quot;&#125;&quot;, &quot;searchBgImg&quot;: &quot;&quot;, &quot;alignedCurrentTime&quot;: 1618725704000, &quot;controlMaterials&quot;: &quot;null&quot;, &quot;topBgImgBig&quot;: &quot;&quot;, &quot;tips&quot;: &#123; &quot;tipsShowTime&quot;: 10, &quot;tipsShowScene&quot;: 0, &quot;tipsShowInterval&quot;: 1, &quot;tipsStyle&quot;: 7, &quot;tipsFunction&quot;: 7, &quot;expoJson&quot;: &quot;&#123;\&quot;activityid\&quot;:\&quot;-100\&quot;,\&quot;functionid\&quot;:7,\&quot;exposid\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;tipsIdleTime&quot;: 10, &quot;tipsShowType&quot;: 1, &quot;expoSrv&quot;: &quot;7_1__&quot; &#125;, &quot;skinSwitch&quot;: 0, &quot;webViewFloorList&quot;: [ ], &quot;personalSourceValue&quot;: &quot;253-1_____401129-100016724434#1$100014232222#2________401127#8#4319___8749&amp;&amp;7764&amp;&amp;7531&amp;&amp;8259&amp;&amp;7763&amp;&amp;8002&amp;&amp;7271&amp;&amp;7096&amp;&amp;7981&amp;&amp;6726&amp;&amp;8407&quot;, &quot;userCategory&quot;: &quot;100_&quot;, &quot;searchBgColor&quot;: &quot;&quot;, &quot;tagAnimations&quot;: 1, &quot;appType&quot;: 0, &quot;popMessageBig&quot;: 0, &quot;cycNum&quot;: 1, &quot;configDisplayVersion&quot;: &quot;9.0.0&quot;, &quot;floorList&quot;: [ &#123; &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;https://m.360buyimg.com/mobilecms/s39x39_jfs/t1/142287/1/15067/829/5fb64376E614775aa/c40a1d472fe3ddef.png!q70.jpg&quot;, &quot;curve&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;topTab&quot;, &quot;floorOrder&quot;: -1, &quot;content&quot;: [ &#123; &quot;cName&quot;: &quot;首页&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;&#125;&quot;, &quot;pcid&quot;: &quot;0&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;电脑办公&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;电脑办公&quot;, &quot;tabText&quot;: &quot;电脑办公&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;377\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;1\&quot;&#125;&quot;, &quot;pcid&quot;: 234, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;377\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;1\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;电脑办公&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;家电&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;家电&quot;, &quot;tabText&quot;: &quot;家电&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;382\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;2\&quot;&#125;&quot;, &quot;pcid&quot;: 238, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;382\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;2\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;家电&quot; &#125;, &#123; &quot;urlType&quot;: 1, &quot;mAnimation&quot;: 4, &quot;cName&quot;: &quot;全城购&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/s46x46_jfs/t1/157695/38/5321/826/60128496E1072e1d4/b97f01817b8740dd.png&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;-100\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;46\&quot;,\&quot;classfynum\&quot;:\&quot;3\&quot;&#125;&quot;, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;-100\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;46\&quot;,\&quot;classfynum\&quot;:\&quot;3\&quot;&#125;&quot;, &quot;innerUrl&quot;: &quot;https://pro.m.jd.com/mall/active/3EgqXKYXsLCQjbZWNR641u6pAQMw/index.html?has_native=1&quot;, &quot;pmid&quot;: &quot;46&quot;, &quot;isDirect&quot;: 0, &quot;showCity&quot;: 2 &#125;, &#123; &quot;tabTitle&quot;: &quot;数码&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;数码&quot;, &quot;tabText&quot;: &quot;数码&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;719\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;4\&quot;&#125;&quot;, &quot;pcid&quot;: 247, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;719\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;4\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;数码&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;生鲜&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;生鲜&quot;, &quot;tabText&quot;: &quot;生鲜&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1650\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;0\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;5\&quot;&#125;&quot;, &quot;pcid&quot;: 1761, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1650\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;0\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;5\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;生鲜&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;家居厨具&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;家居厨具&quot;, &quot;tabText&quot;: &quot;家居厨具&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;380\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;6\&quot;&#125;&quot;, &quot;pcid&quot;: 236, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;380\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;6\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;家居厨具&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;箱包&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;箱包&quot;, &quot;tabText&quot;: &quot;箱包&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1652\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;7\&quot;&#125;&quot;, &quot;pcid&quot;: 1439, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1652\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;7\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;箱包&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;食品&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;食品&quot;, &quot;tabText&quot;: &quot;食品&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;387\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;8\&quot;&#125;&quot;, &quot;pcid&quot;: 243, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;387\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;8\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;食品&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;手机&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;手机&quot;, &quot;tabText&quot;: &quot;手机&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;718\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;9\&quot;&#125;&quot;, &quot;pcid&quot;: 248, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;718\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;9\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;手机&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;母婴童装&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;母婴童装&quot;, &quot;tabText&quot;: &quot;母婴童装&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;372\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;10\&quot;&#125;&quot;, &quot;pcid&quot;: 246, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;372\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;10\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;母婴童装&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;运动&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;运动&quot;, &quot;tabText&quot;: &quot;运动&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;390\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;11\&quot;&#125;&quot;, &quot;pcid&quot;: 244, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;390\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;11\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;运动&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;美妆&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;美妆&quot;, &quot;tabText&quot;: &quot;美妆&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;370\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;12\&quot;&#125;&quot;, &quot;pcid&quot;: 240, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;370\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;12\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;美妆&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;酒水饮料&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;酒水饮料&quot;, &quot;tabText&quot;: &quot;酒水饮料&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;383\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;13\&quot;&#125;&quot;, &quot;pcid&quot;: 239, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;383\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;13\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;酒水饮料&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;男装&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;男装&quot;, &quot;tabText&quot;: &quot;男装&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;386\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;14\&quot;&#125;&quot;, &quot;pcid&quot;: 242, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;386\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;14\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;男装&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;家装&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;家装&quot;, &quot;tabText&quot;: &quot;家装&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;381\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;15\&quot;&#125;&quot;, &quot;pcid&quot;: 237, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;381\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;15\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;家装&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;个护清洁&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;个护清洁&quot;, &quot;tabText&quot;: &quot;个护清洁&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;379\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;16\&quot;&#125;&quot;, &quot;pcid&quot;: 235, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;379\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;16\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;个护清洁&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;女装&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;女装&quot;, &quot;tabText&quot;: &quot;女装&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;378\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;17\&quot;&#125;&quot;, &quot;pcid&quot;: 700, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;378\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;17\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;女装&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;图书&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;图书&quot;, &quot;tabText&quot;: &quot;图书&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1563\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;18\&quot;&#125;&quot;, &quot;pcid&quot;: 1251, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1563\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;18\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;图书&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;内衣配饰&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;内衣配饰&quot;, &quot;tabText&quot;: &quot;内衣配饰&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1793\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;19\&quot;&#125;&quot;, &quot;pcid&quot;: 1550, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1793\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;19\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;内衣配饰&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;礼品鲜花&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;礼品鲜花&quot;, &quot;tabText&quot;: &quot;礼品鲜花&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;3085\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;20\&quot;&#125;&quot;, &quot;pcid&quot;: 3426, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;3085\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;20\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;礼品鲜花&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;男鞋&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;男鞋&quot;, &quot;tabText&quot;: &quot;男鞋&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;385\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;21\&quot;&#125;&quot;, &quot;pcid&quot;: 241, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;385\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;21\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;男鞋&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;医药健康&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;医药健康&quot;, &quot;tabText&quot;: &quot;医药健康&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1574\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;22\&quot;&#125;&quot;, &quot;pcid&quot;: 1386, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1574\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;22\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;医药健康&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;爱车&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;爱车&quot;, &quot;tabText&quot;: &quot;爱车&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;636\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;23\&quot;&#125;&quot;, &quot;pcid&quot;: 245, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;636\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;23\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;爱车&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;宠物&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;宠物&quot;, &quot;tabText&quot;: &quot;宠物&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1656\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;24\&quot;&#125;&quot;, &quot;pcid&quot;: 2230, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1656\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;24\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;宠物&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;玩具乐器&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;玩具乐器&quot;, &quot;tabText&quot;: &quot;玩具乐器&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;612\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;25\&quot;&#125;&quot;, &quot;pcid&quot;: 2044, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;612\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;25\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;玩具乐器&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;腕表珠宝&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;腕表珠宝&quot;, &quot;tabText&quot;: &quot;腕表珠宝&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1654\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;26\&quot;&#125;&quot;, &quot;pcid&quot;: 1610, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;1654\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;26\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;腕表珠宝&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;女鞋&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;女鞋&quot;, &quot;tabText&quot;: &quot;女鞋&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;375\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;27\&quot;&#125;&quot;, &quot;pcid&quot;: 233, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;375\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;27\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;女鞋&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;二手&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;二手&quot;, &quot;tabText&quot;: &quot;二手&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6179\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;28\&quot;&#125;&quot;, &quot;pcid&quot;: 5674, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6179\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;28\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;二手&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;工业品&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;工业品&quot;, &quot;tabText&quot;: &quot;工业品&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6229\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;29\&quot;&#125;&quot;, &quot;pcid&quot;: 5787, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6229\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;29\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;工业品&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;奢侈品&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;奢侈品&quot;, &quot;tabText&quot;: &quot;奢侈品&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6070\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;30\&quot;&#125;&quot;, &quot;pcid&quot;: 5673, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6070\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;30\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;奢侈品&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;生活旅行&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;生活旅行&quot;, &quot;tabText&quot;: &quot;生活旅行&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;5997\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;31\&quot;&#125;&quot;, &quot;pcid&quot;: 5398, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;5997\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;31\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;生活旅行&quot; &#125;, &#123; &quot;tabTitle&quot;: &quot;房产&quot;, &quot;mAnimation&quot;: 0, &quot;cName&quot;: &quot;房产&quot;, &quot;tabText&quot;: &quot;房产&quot;, &quot;pool&quot;: &quot;41&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6036\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;32\&quot;&#125;&quot;, &quot;pcid&quot;: 5593, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7764\&quot;,\&quot;isactivity\&quot;:\&quot;-100\&quot;,\&quot;classfyid\&quot;:\&quot;6036\&quot;,\&quot;styleid\&quot;:\&quot;216\&quot;,\&quot;biinfo\&quot;:\&quot;diviner#621307#103#21b68f1f372dadebf49f2a46e712fe57cb6fbb06\&quot;,\&quot;poolid\&quot;:\&quot;41\&quot;,\&quot;moduleid\&quot;:\&quot;405001\&quot;,\&quot;pmid\&quot;:\&quot;-100\&quot;,\&quot;classfynum\&quot;:\&quot;32\&quot;&#125;&quot;, &quot;unTabText&quot;: &quot;房产&quot; &#125; ], &quot;floorId&quot;: 7764, &quot;head&quot;: 1, &quot;darkModeImg&quot;: &quot;&quot;, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 21, &quot;unSelectedFontSize&quot;: 34, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;asynSwitch&quot;: 1, &quot;closeButton&quot;: 0, &quot;cateIntervalTime&quot;: 300, &quot;fontShape&quot;: 0, &quot;animationCount&quot;: 4, &quot;marginColor&quot;: &quot;#FF00FF&quot;, &quot;innnerInterval&quot;: 1, &quot;cornerDegree&quot;: &quot;12,12,12,12&quot;, &quot;bottomColor&quot;: &quot;#FF00FF&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;newCategory&quot;, &quot;params&quot;: &#123; &quot;sourceType&quot;: &quot;2&quot; &#125;, &quot;srv&quot;: 7764 &#125;, &quot;rightCorner&quot;: &quot;分类&quot;, &quot;showName&quot;: &quot;顶部分类tab&quot;, &quot;selectedFontSize&quot;: 38, &quot;animationPlayCount&quot;: 1, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;https://m.360buyimg.com/mobilecms/s1125x105_jfs/t1/46104/35/11694/66839/5d9053aaE47482410/4aac47b7954d94df.png!q70.jpg&quot;, &quot;playType&quot;: 0, &quot;mAnimation&quot;: 1, &quot;bottomMargin&quot;: 10, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;background&quot;: &#123; &#125;, &quot;marginTop&quot;: 10, &quot;bottomMarginWidth&quot;: 2, &quot;pullIntervalTime&quot;: 10 &#125;, &#123; &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;searchBox&quot;, &quot;floorOrder&quot;: -2, &quot;content&quot;: &#123; &quot;subFloors&quot;: [ &#123; &quot;tpl&quot;: &quot;226&quot;, &quot;data&quot;: [ &#123; &quot;cameraIcon&quot;: &quot;&quot;, &quot;zoomIcon&quot;: &quot;&quot;, &quot;searchBoxFontSize&quot;: &quot;28&quot;, &quot;searchBoxFontColor&quot;: &quot;#B2B2B2&quot;, &quot;showCameraIcon&quot;: 1, &quot;boldFontSwitch&quot;: 0 &#125; ], &quot;realTpl&quot;: &quot;226&quot; &#125; ], &quot;subFloorNum&quot;: 1 &#125;, &quot;floorId&quot;: 8749, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 0, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;borderSwitch&quot;: 0, &quot;fontShape&quot;: 0, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;cornerDegree&quot;: &quot;0,0,0,0&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 8749 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;搜索框&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;&quot;, &quot;playType&quot;: 0, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;marginTop&quot;: 0, &quot;bottomMarginWidth&quot;: 2 &#125;, &#123; &quot;expoSwitch4&quot;: &quot;1&quot;, &quot;expoSwitch2&quot;: &quot;0&quot;, &quot;expoSwitch&quot;: &quot;0&quot;, &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;indicatorColor&quot;: &quot;#FA2C19,#FFFFFF&quot;, &quot;scrollFrameCount&quot;: 8, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;banner&quot;, &quot;floorOrder&quot;: 0, &quot;content&quot;: [ &#123; &quot;clickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cHM6Ly9wcm8ubS5qZC5jb20vbWFsbC9hY3RpdmUvVWV5enFweFdTRHdVNU1oVlY3OUR2NUZhQjZiL2luZGV4Lmh0bWw&amp;log=v72aEAMd00wwmRcv9RtmpOPZnCH4E46Xo4zmfkYVbiJq4xXM7xnVDDXM_dKqCDVFftwqg2aHJyIInEEwpLjY3AHuCj2Tfxv81y7LbIRxfy2r2Wb_oSeSfSJC0j33tmx-hltBWr8pQQ94rfMh5TzU5ROO6mrK84votFv7e7JigjxYYzPlIaI25tvi0sNaQmRrMXkXbB64RTpOZ8TiBfs2_mD0XFGCK3Ai4TDQJOlKd2k7DmKwAh7QgSE3VSrK3cvkOKr74HGKL4CgPMAd9ZIrhuOuPw9vRHd9ITCz9QrX5wb-T5YlKthFQhCyzCoa4r_m5MNaC_Lcol4oyNQUvWFi-7WT1JzPn4KW7T0DAXSct3oJ9RgfgEdv20Ml2XeDpYGwdOkxmUaPUrjx9hzMnVJqTeUa33ALpGT6ovo_pfFekWmg0mapaDz6PJWPdsVbkmH55cR_ck2_5ZYJW3uJMOStRzrg7EtMZhNzFsURLE6BV9DGcMnfjBpUkrZgfIRnaE9VbMWAK0DQ9LgzSO-a0Yv3Zu-MTCA5dkVtTWe1gDP6FFgzJVJmENzOVmpJLFvYOTAnJ3j_Xla8d49NAoDS_QYu5vUXAEYXx7P0mi-VcNSy_85t5h0XGX8Nu7YBVCl_oAgoYexawC-rQPbaqocZ3zYGatz9s82PVqKuwXVasWGEJ_H2uuQ3mvxCxTeaLdAnj6fhbMsWp1H-cmvGUIiUKs35u18x8BX5Z8h57k18KLrIjknVE2A-HR9SJlRxD4M-NEm5FTdtrW7RSY8cataHgy47t_Ny152NoBc3gjye6dHGIsl-4o-0R0qqkI8rx-oosNzfQi_NegcV05ikpiRWFe1taKS5MJVvCFoQDZ23yUhlEKaZ3M6td6WlyUdCeZ0H0c1NalOB-JhK3jk-ANXxDb8R2NB-jvQesZuYBk9fG7bkDyzZccbmWH-ZJClEW5MJmVeBOCZKjkjLyMfI4SXJNdwWtV_L6CSRThfyYqX5RBukbkMA0ybVACMk-RQ6ioMkcFnNEwb5_WUip5_bu5jKLCnI1D_Db-Jdl6hqwHEIOaKGU2ibWaJFD4b9Y1b_SyWXE_m5xhq1do08dAeEhcX022qD9g&amp;v=404&amp;clicktype=1&quot;, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;\&quot;,\&quot;ch\&quot;:\&quot;\&quot;,\&quot;shop\&quot;:\&quot;\&quot;,\&quot;sku\&quot;:\&quot;\&quot;,\&quot;ts\&quot;:\&quot;\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3647500356\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;3897\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;71b16c3b-a1da-4e81-8993-3324b907024e\\\&quot;,\\\&quot;type\\\&quot;:\\\&quot;1\\\&quot;&#125;\&quot;&#125;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/160983/3/18800/193813/6077ea98E972f3fc5/8e4323bef9a43c9e.jpg!cr_1053x420_4_0!q70.jpg.dpg.webp&quot;, &quot;exposalUrl&quot;: &quot;https://im-x.jd.com/dsp/np?log=v72aEAMd00wwmRcv9RtmpOPZnCH4E46Xo4zmfkYVbiJq4xXM7xnVDDXM_dKqCDVFftwqg2aHJyIInEEwpLjY3AHuCj2Tfxv81y7LbIRxfy2r2Wb_oSeSfSJC0j33tmx-hltBWr8pQQ94rfMh5TzU5ROO6mrK84votFv7e7JigjxYYzPlIaI25tvi0sNaQmRrMXkXbB64RTpOZ8TiBfs2_mD0XFGCK3Ai4TDQJOlKd2l9UN_vL3bNsrptFG4DugP1CF8sLjMMD_oPIaeiTtwUgk_7v593Fh1M8WEXv07gagmdJvaBGYvXwLqc3LhwOG6qIBxp59XzbUBhkAIBoZRfp0Fz8-GnitXkpjP0ebjAfz4lpewP8NABk4_JO3UlQXaNywcK7n5vFB6Nd20-qcvpEclP1WQh4J3khLSg230grlxpwmRL7appgsd5RXr66uHdOnrcmyYnEjWXrTT_XI5QYhbDrd5ZAfF57tEahqgL9jFf_YCCNzSnjjk_1sg1DWi3yRsSDNm70AIie6dccAWwCa7DM4ricia-lPYq7CNgjrM5S_9wqzkm8urxYdAFUv2HotpPmyTDkUmXT20YpRJza5A-xMNzDsRjqENuM5LvYtjfbULLjuRlr74APESACV0H0YhDGIpx73TyD82pYzUPQnW7upTyvmedUvmGCQThWxJjDgaMB9oUR_amkWFuH4RaQ8jyYH_rAJviXGbJ2Gyqr874j_ryZM99O2mKQCD_ou3IYjNsXRFojFwk2Rl8u-Sa1IYmLkiN2s5gwj25dVOKsZ_YmDY1o-_rfOvYpGKfdjpHVPWRG_uBQ-e0ARFZ5VB70g1rkFZ6jidHjo-tnt3LtEDnCcPd_oyWwh-qwli7KyH6bh2I9GRihDF7vAgPOoFDO0BFHVJCIb00LFVtDQVqupcgW96ESvrOYuQx_yfym94Kf6di0orsh-DFD4xv-F8XiOzd4BsxONRQ9I9k048ih6UcF1PnMBLBDOc21dFkdy1FnY_1ryFefFCQSzyYwkWBNg8BqH9N_M91hPWBDiRorpAUkNB3e7O8ghjIGH1P50H32DJKl604k1HebAtxfpnd&amp;v=404&amp;seq=1&amp;rt=3&quot;, &quot;title&quot;: &quot;&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 1, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 0, &quot;abt&quot;: &quot;&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/UeyzqpxWSDwU5MhVV79Dv5FaB6b/index.html&quot; &#125;, &quot;srv&quot;: &quot;E_20_0_0___71b16c3b-a1da-4e81-8993-3324b907024e_0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3647500356\&quot;,\&quot;b_ads\&quot;:\&quot;\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;71b16c3b-a1da-4e81-8993-3324b907024e\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;E\&quot;,\&quot;picsourceid\&quot;:\&quot;3647500356\&quot;,\&quot;moduleid\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;0\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cHM6Ly9wcm8ubS5qZC5jb20vbWFsbC9hY3RpdmUvRkh2ajN4N1VZcHBuQzYxa0tFZGpLUUV1MVBuL2luZGV4Lmh0bWw&amp;log=AY-7Eqr_gllLIDc6k8Qc99e9dGpJR0w3HZL8BPa_2PRFD3lnrszowllFUhge14LmEQklTuSUVhjgwAZqQU2AASRcMcSP6pMfDbODJEl158568z6aqNsgd9PNzxUfH551jivDfCkI_FPbyWDrhAby4jD96Z-F7-iVrDNAtWP667RwGzLVDQTJaHCM317plign2awAY2Is0gu_t19c7__KK9XTeZhVOpSwkk-sRILyzZqgwLPcQhUyeLr5seZsf1DvkK56DIdBwDY2vXiegMAHOe-4xeQc5-SfyWXSG-xkXl34BkxK4lljqtXm4L1CMZisUtkIoV3nAVLrd4Wl916C45sk8q2D20p_fKzO7NYA5JNssuIa-WlE4Vht53xAbZ9az1b06lP4Jpj6q1aD3eGcqR4MJYblgu99DXtLmLHBPWmE_wpd1G5ph1c3K06AQkTxWbnnYZ-hUFWFL1gOQyqra0f_tOiWcTJxKX6PuApr7WVMMOnLRkhKo241L2kCCewKYTQTMfWINWgP2bOeypldBm9xTXHz9CYmeH7WVnHz17QxrzZ8DSJDODa42uVnwqiijLOtAQDenlRRc5_qTyR52OZOUNsFK9zkDezL7SS22O6LLQ1z1DNDkwlFHX2nVGqf6Ljuhr0L_aUd1PmdFKvLgKHR0SRaVCLpwMsSwsOf4EyCqNc6lDL9672_NLG9dRTJK2AJFKFTVgaAQhBXP1iWnr3hWky9oXSvchqdiAkGEgno6rpfQbk3iEnIonqWuWxMnR8A98c7DpwN-dFcYRBONpa_cmM6jcNlCeXPWhkUgAlvaj0-OgzGNMzDipSiaMWSvFRWgX-GdPIe_T9VF91Z8QoffDtqzkFfHIua6aa5nn7RiloD5NDVkhbNk51rQOk7nlAcOtoTiAqHlzP6YzUO3cK9gg4JHvipgwhSd2vcQ83CVZq9NsQYu9SPTqQaF6aJ4furWEaMSZy7pGBxEWI6n_K_OodiDfQ1uGtqqzTNuy_ZWpYTUxbN6p9Rlhs9e1gTdYWajwn-UvisLSOqpaU6rkd9N69nbDUIc1U2x0oTImE&amp;v=404&amp;clicktype=1&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;3618\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;shop\&quot;:\&quot;758546\&quot;,\&quot;ts\&quot;:\&quot;1618725704\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3651767316\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;3618\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;418a40f2-bff4-42fb-8e3b-3fadbf32914c\\\&quot;&#125;\&quot;&#125;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/162247/19/18738/108033/6078e5b2Ece7813c9/7e20b3cad50cdb80.jpg!cr_1053x420_4_0!q70.jpg.dpg.webp&quot;, &quot;exposalUrl&quot;: &quot;https://im-x.jd.com/dsp/np?log=AY-7Eqr_gllLIDc6k8Qc99e9dGpJR0w3HZL8BPa_2PRFD3lnrszowllFUhge14LmEQklTuSUVhjgwAZqQU2AASRcMcSP6pMfDbODJEl158568z6aqNsgd9PNzxUfH551jivDfCkI_FPbyWDrhAby4jD96Z-F7-iVrDNAtWP667RwGzLVDQTJaHCM317plign2awAY2Is0gu_t19c7__KK9iyxtOtRViCc0rmSNpbyle_WrMrsl5JSu3jMxm4hMMphL4EFaI7xQ1g4He8gahLkgpJAG5DAOsj79YphQonVs2N6qk4_H5TtrtYqyd3DQVaoO_Zc0yHBPhcnSqA3OPjpMT279gAp2Q5jd1lMsHPA5xCAyDTWqorvX62-8LvfiVxElAkgy1apGoip8NnxhUZ_O7bqW8uM-mBURLAm8ZCYw-W6fSmMeIQrwRElG-OeWrZ7cmWE8oQgE1wU6cDAhR_sfnhJLmlu20UgsM1BtO9KZQUKyKokCVBnrma8mWaF08txrS2Fnebvknb_nft6i7NNeKGLJw7M3sP60fEDhB2XJE9v09XOQyMLir_sn2ObtIarl1Cq_3ctgW0WLHCXAURkr3rhL1YatSllNUOVHicxk8d1R8pzVUcK8wLxjQK9z_FYrVDa89sBIXSgImxOnjnssTPEDUeLQILvv4PcLr49F1xz2YKCbd160P2IpV5Mhy_A6AiPompMQXxfJC5gg8CZgVw_GF9aHbbgKoACRgVXpjPw5PaA0vuI89c7l6h1fdLPNVLGhMj4s64dlQpN6AMkPaLhAvOjDVHY9kgCC1NeI5VMxkqyLiJSq-wX45B7hwTjFyzG6pUw_2j69ZSF-F5mgdMZyE60bJXi62Hup2cUkljcsWrlngZHhJuoVyVeRbbiOzV3FtYQtjWqpD77wQKGzAmG_iIEX1R7BezA2UgnljP2MJMfvPOpCfE6FdvAL9WEker0ArGinuavbeifb21XmL5yPLSq_AiDNj43vBa5zjNTMqScAOhbdOb_bX47LwmMrVp4uj_wJBd4nPjvKBYb67rxiyz4tsZZ_gouePPOM0qHDswcFdmGtpES--iIaQDH98a3E41Qs8zGffB_ZknzA&amp;v=404&amp;seq=1&amp;rt=3&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;title&quot;: &quot;京东展位学生专享价&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 2, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 0, &quot;abt&quot;: &quot;1&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/FHvj3x7UYppnC61kKEdjKQEu1Pn/index.html&quot; &#125;, &quot;srv&quot;: &quot;A_20_1_3651767316___418a40f2-bff4-42fb-8e3b-3fadbf32914c_0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3651767316\&quot;,\&quot;b_ads\&quot;:\&quot;418a40f2-bff4-42fb-8e3b-3fadbf32914c\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-2\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;418a40f2-bff4-42fb-8e3b-3fadbf32914c\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;A\&quot;,\&quot;picsourceid\&quot;:\&quot;3651767316\&quot;,\&quot;moduleid\&quot;:\&quot;2\&quot;,\&quot;skuid\&quot;:\&quot;\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;1\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cHM6Ly9pdGVtLm0uamQuY29tL3Byb2R1Y3QvMTAwMDE4MzYxMTQ2Lmh0bWw&amp;log=-E6HPMs7qzKN6DQuDjvx4wvrN6X4C1F2x-5H_w-mu8dvC6pkQBlvBmqe9jKitwBj4jpgiWfNlkmTskeWQNb31zFRF4p2Gx9vIX7wmnbsw1eJdPb-MYYVf9sUU17L8bpWEVnxTCUZpFq2pZuiea1Wi0CSg0ratKnTlB5LTU7rbcUz307PQ1mp63fmOrCb6n_97OW2ap4lAGSIuTvVcrsJ5OJ42eZnG1Xa2DGTwtczWC66rkSKMIva1l17K6ijpeeoIhRogzmTLnS0SL9gaqKiR-Gw9D-HG2TVru1rRqMsIWA884HOonethawjboh6rrxiva6deDsWjslxI_FPrx-7p83UxRO_Tb4wTCbRX7o99U7zQ_5fmulWIs0e9ngr8ODaonx25PV-qfOGLKP-WMjZ5OFNz5LmySLXOR2gMtQa_OrrI-k5hop6r1mtpEOUvrrx52lipac8GCfjgX_PA-td2Jy7XUKJAGV1T2TZO4GuUuL_RQsESv6IMg_j_yq5dxDRZhZEyFB59gZz-XHFGWzvYUSaTSEQjvdnyKYxw4I483QSDxHQUUifxvT8RCHWVkDF3OmIC5GCC-6Jr67510WgfDcIR-_U83p6GeNtKmjHANzjmAD_Z_08gsps23YK419f4cvJyIDcq4sBXuu1ZTqdL4Z8lGMoYV6a-8UhpYaYe1pQqsW94pwjb8D1WV394vgtugxgjWZjkf-h9jPr1smn0HCbvZfNHocmsZxRhnNwxEhx8ey7UY9_-XTYk9aQe9Lv6-jqIHKIYcMOjb2y5_8KHbFRfU-E89yX8V_EcZ21d67LL1PZuE84-RTDv9k0AIUjNNQ4-NvFQeV_H51zCm1jfDXSCotwge4VwnjQYMsdswVIQXCwstjNEegUrQIbA4_I-v_0tdrgFWW2KVaVDuSWhwQDkd3Z9vBuCgM9wQ2hwEARBRQvoOdXXvFSnj2EnF1-1AQuDl3f0PrpzHwRawC0PCS6P86TRttZQE_YCf00yggy-_u3433guG9PwN7DoX1gK18i5bM_0FrKcff4dwRBGDjUTqEv3CCoJGx3Pf1SMe9cvkZG_fpB__ZJKVeVYfUh_tY8ZXQRy0XvddZGOp7pMa3gfsMhj10zh9ZuBuGGQ4yTyAlgZqbI4Erun2c1mGZc&amp;v=404&amp;clicktype=1&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;3619\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;100018361146\&quot;,\&quot;ts\&quot;:\&quot;1618725704\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3467472553\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;3619\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;72b2f9ee-ce87-40d2-aad0-92d22dc1e814\\\&quot;&#125;\&quot;&#125;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://imgcps.jd.com/img-cubic/creative_server_cie/v1/FocusFullshop/CkNqZnMvdDEvMTUxMTE4LzExLzE5NDI0LzQ4NjcyLzYwMjJhZmFkRTkwNTM3MjgxLzIzZmQ3ODI4ZDc5Y2FiNzkuanBnEgw5OTktY190eV8wXzEwAzj1ino/cr_1125x449_0_166/s1080x662/q70.jpg.webp&quot;, &quot;exposalUrl&quot;: &quot;https://im-x.jd.com/dsp/np?log=-E6HPMs7qzKN6DQuDjvx4wvrN6X4C1F2x-5H_w-mu8dvC6pkQBlvBmqe9jKitwBj4jpgiWfNlkmTskeWQNb31zFRF4p2Gx9vIX7wmnbsw1eJdPb-MYYVf9sUU17L8bpWEVnxTCUZpFq2pZuiea1Wi0CSg0ratKnTlB5LTU7rbcUz307PQ1mp63fmOrCb6n_97OW2ap4lAGSIuTvVcrsJ5KEpkqYp9OSIqgqsCnqgtGJmxP89QOEPgjEBUbKLdIqbts_CyVQVXCEL7XNtBpubpiW9F2_uRnB0pNI2bVioq-wNFpkJrUSZ2Gao0FUkd1fORpbCqQieqTYUUJpwpjzKY46hP7p_jrC3P9hhct4m0jOWbJymyB2di3JOx8i83M-URAI0RwKmkz6WuFpp_naHWU0zrjcThL1x3NeIsQs4rd8BIQw9_GpkcB6ONGp81-CN4TXne0MUtDdbkh8-FdlKM1tKDLlfpEgVPjlkDNPdcbwcmq99N_PaIO2bPR385WQdQbshsJFBZuOWiJrn3ekJ9MEQFwRK_9FGjQVdIDEhfS31CXJPLn2P10P4UGTg_N6UUGxuMBJ27EoqL2FQAOfx5o179zN5O0aPRZ5LM4gE-Xo22alm6jHlaehxQUPDpHZtyEO2kjB-W_YixIDQyKb6kyIMmxQO4olzXhfDefN71wGN1SD4_xd-gDt-BXrzu3MLREhgO0ZHc_3Qy0OSHE_WaGi0TMRue-YLFpE6dyictZSWS82IhARQ0m_3ylEeDSypOmHqXRfvp8pp5cr4j7aEmLEHsPyy4eaocEUZLLP0OY45f7ETSov1QPZtSr9c808fmSLztJmKjxFUpNJ45_DUfesWLojafCMd8rDoHXrkhnQcNzwzCfKzb9GW9_P-82YtLf1umAhtRACV2_4EIDiUNlZM-G3ohrslOWRfg1zjO_tso_txY5rLaNOr1dFhbo1UANWr5gy04p75eVCisu0Bcb3aAqObe4Q8wz1uaSE7hlnx7yvyQ_yhNucMH8GQHJaLBxruUqsTLPTqz6_VKq_b8KqWk4mBpHdMkBKmIlS9P5GjtbtHn7HJCGRQTV3YPzYL2bWe79qEaKZDPLq7NN-TKmnoxeAaQAg5pf2YxUIZDGyDv7EWxDEVoy9kPrBnu5dVKC_5dgwn3_6fo2butJKDsFiy36hvtK_CJAhHWGFdI8o&amp;v=404&amp;seq=1&amp;rt=3&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;title&quot;: &quot;网易云音乐【延迟低至0.04秒】无线蓝牙耳机游戏吃鸡运动跑步通话降噪入耳式耳机苹果安卓手机通用Music Pods&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 3, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 0, &quot;abt&quot;: &quot;0&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://item.m.jd.com/product/100018361146.html&quot; &#125;, &quot;srv&quot;: &quot;A_20_2_3467472553___72b2f9ee-ce87-40d2-aad0-92d22dc1e814_0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3467472553\&quot;,\&quot;b_ads\&quot;:\&quot;72b2f9ee-ce87-40d2-aad0-92d22dc1e814\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-3\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;72b2f9ee-ce87-40d2-aad0-92d22dc1e814\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;A\&quot;,\&quot;picsourceid\&quot;:\&quot;3467472553\&quot;,\&quot;moduleid\&quot;:\&quot;3\&quot;,\&quot;skuid\&quot;:\&quot;\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;2\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;&quot;, &quot;extension_id&quot;: &quot;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://imgcps.jd.com/ling4/10029001756562/5ZCs6KeB5LiW55WM/6Z-z6LSo5L-d6Zqc/p-5d91a4f642dd5b7c7d52cbcc/affd8ecd/cr_1053x420_4_0/s1080x662/q70.jpg.webp&quot;, &quot;exposalUrl&quot;: &quot;&quot;, &quot;title&quot;: &quot;&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 4, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 13580, &quot;abt&quot;: &quot;&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;13580\&quot;,\&quot;b_ads\&quot;:\&quot;\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;1#1#ABTest-10391-D3-92&amp;1019ee938abc438d8f39b1e85f9e9aed#381#13580#61#5d91a4f642dd5b7c7d52cbcc-0\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-4\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;T\&quot;,\&quot;picsourceid\&quot;:\&quot;10029001756562\&quot;,\&quot;moduleid\&quot;:\&quot;4\&quot;,\&quot;skuid\&quot;:\&quot;10029001756562\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;3\&quot;&#125;&quot;, &quot;openApp&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;babelChannel\&quot;:\&quot;12539622\&quot;,\&quot;innerIndex\&quot;:\&quot;1\&quot;,\&quot;des\&quot;:\&quot;jddjxy\&quot;,\&quot;innerLink\&quot;:\&quot;[&#123;\\\&quot;matId\\\&quot;:\\\&quot;10029001756562\\\&quot;&#125;]\&quot;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;themeId\&quot;:\&quot;13580\&quot;,\&quot;themeStyle\&quot;:\&quot;0\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;des&quot;: &quot;jddjxy&quot;, &quot;params&quot;: &#123; &quot;babelChannel&quot;: &quot;12539622&quot;, &quot;needLogin&quot;: &quot;0&quot;, &quot;themeId&quot;: &quot;13580&quot;, &quot;themeStyle&quot;: &quot;0&quot;, &quot;innerLink&quot;: &quot;[&#123;\&quot;matId\&quot;:\&quot;10029001756562\&quot;&#125;]&quot; &#125;, &quot;srv&quot;: &quot;T_20_3_13580_10029001756562_1#1#ABTest-10391-D3-92&amp;1019ee938abc438d8f39b1e85f9e9aed#381#13580#61#5d91a4f642dd5b7c7d52cbcc-0__0&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cHM6Ly9pdGVtLm0uamQuY29tL3Byb2R1Y3QvMzEyMjIyMDI3MTIuaHRtbA&amp;log=Fmh5wirUN9YyHIt9NeScEiFlla4QaK98v7uWh2D52PKizwC5QN4aMnn4tYVS-bTeUtevLh9L1GZzWE3ZW6BUJWfI-uGj2kgA1nwNOQRMZTq1dkfZSSh6IXuUA_OagOShG_LP8s9HC3UIcR6z-lplKorOBi64O3zFSVUxIqvgyZyPmntTrKWcNb7gA-t2aeRDmbuuJnSJeEHigLMctlr3HmtHz-101yJEOvfq3K57NFVQtFvi3Qv8HdIYs09vG5misNEjF3mDd2rD1bgUNmpqXP6aVfWX9-osG1oWMbJkYsy-gNaz0U0bwhyYrpsOFwqJW6zpeAN8eE48FW7gVLiGJ2YkOVQL4cyD4dYA6DvlQC5XzRmLI8fGlf9wY5cCwdo-rZUSb1YAP9KpuKnsX6gKWi7gMIbcmlvVv0ClSLrtXlMk7W6AeOdXoyZ-eUAImzZDE9AOD0sTbTiPLFdMAJJ9CIHM4bNWNQrIL-lSI7gzDG7eEJWXWBRXLCoJLWYUuldlSO5Q8ePQmuWGftp457VedkL75k7FRAk9--D4HOgi8nYPgMkGoc_xYdXz9eLGn29WOCEn31-cVoz51hCTLMWAHqf1Z4S3jL5zARZfAM-0Qbz8Z2YvRQVJY6GgAwukxCLyJceVd_LqkmUY7_vPxY91QZj1chSVOvmKLXEts0YSO5-QUW5IaUP2PPyKI0vvBUFkpWtBWCwvNROjIpNgOkS0vZnAbISwo5oMkFRcNJC7M3jkkd66KGRHw9vrscsSosSysGq1HWBY7QF0T6dnWyA0NxN-Or5s_dopLDVtPOwDp8b-kBpTxaG4Mm71Pv0zV7huRj0cc1WWn84oFtQvhq1shrR_OH8h6At-fURqk60Q56hX475oNMUXiFe3DuKXhKoRz4yrbdWsLnEzH8PiOjhuEcjGQgQCHdVCdEudI_hPHk0AAe8cGtFobZnq-qJUOyErK0G11TOLmq_JmLfh2d0N_-UTuDPpG3IwlowIxB1RDmM1HdN7s8le-U8ukm0lR61QqoOHEBqZUMF-2GynRTzAqCS2pvsXOBvGJzYiAx80qxhNVj-uqmUb0jdivKkhOXa5FtlTcacn4DvxHlS3SwBIHQ&amp;v=404&amp;clicktype=1&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;3620\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;shop\&quot;:\&quot;837608\&quot;,\&quot;ts\&quot;:\&quot;1618725704\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3654705952\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;3620\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;1598d205-8eff-41f7-be3e-a71ab128acbd\\\&quot;&#125;\&quot;&#125;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/166981/31/17938/61989/607511a4E88d61894/fa95c1908852572f.jpg!cr_1053x420_4_0!q70.jpg.dpg.webp&quot;, &quot;exposalUrl&quot;: &quot;https://im-x.jd.com/dsp/np?log=Fmh5wirUN9YyHIt9NeScEiFlla4QaK98v7uWh2D52PKizwC5QN4aMnn4tYVS-bTeUtevLh9L1GZzWE3ZW6BUJWfI-uGj2kgA1nwNOQRMZTq1dkfZSSh6IXuUA_OagOShG_LP8s9HC3UIcR6z-lplKorOBi64O3zFSVUxIqvgyZyPmntTrKWcNb7gA-t2aeRDMBZu6bTKTke9ggomuwR2JM6Tt_WmFW1PPZ0L2IYXXT6kKDO7eFO3W9luNO8i_HYjyWQ6QFJN2nmNlQprm6CyTNA3xMH3q_7OkwQquH68bSEbVsjhknt5WuVW_4sZ0vejEW4EZHOeeAitWAUjeWc9gaeJyZMimP0XaQV8nepiIw3K59QaE2Otrse_RoJkACCiDeyWOd5kFmxzrGk_4UI6i9fncm5hUU5PcBAQbY6i03Q9ZhQMj1ctdaoXhCmR-LcHt4xxkKMSmu3diKwyknP9D_m7CbeMvWGaD_q41d2CUlzXVFHY4ObA5jzct7qKDiYxtkmtQPCoM4rFFxBYDzdZKKHu_RqvG6CSJGze5GI0sa7caMrBB8PMjypD3k_vJKNzwgknGgKdUot5btamrxpq1osO4dkm40hAxgbDFxaml9NhG8ltjTx_wpCzlazh5nzCpOyYlxOwmn5EYAhuGoNv7VJAherirCNBBGlB85buvCqY9GG1zXvuNZ8GfUP2tB3C-0UfL0A3nIAinKP15ljun9CWEWIe5Ylpj-OhP_-vJklPGCTq12U0aPwNXS5vaxvWKFcqq32QY4Z0cVOW66JqW3RE053HJElW2_JBWiOX0kLEbhc-a4fXd4-Qb0lz7tt06cGAEIdQHKRTXwfjVPUFjfUS1_HF_icND-bsdt5EO5MqWsRW8mVw0zqPbJ4_UzQWPXgTP6bEtJtAnK6zlMzeiWEboqr02TZ0iyI0GhdanN1VFjLxHu5m4g4Eo3U1ofA_coFsUgaykAhCAHWZe6-l7d-_pClNJmJrdAn0OiqsCFGO2JgDq5zhTO5seh_GMAUAM-a9pTKZXmDdTonBWGuVG_VDA08fBXUM7UNlt5kIyx9pfM0YNQC8RnPHqd34jqRdoGtxIRFCMrQq8Soqpqtez5tJ1MXw1T_fmdAMwkZaThXd4phA2ETxlJZ2LuT-L5_O&amp;v=404&amp;seq=1&amp;rt=3&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;title&quot;: &quot;展位2---1.jpg(1)(1)(1180801(1)&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 5, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 0, &quot;abt&quot;: &quot;1&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://item.m.jd.com/product/31222202712.html&quot; &#125;, &quot;srv&quot;: &quot;A_20_4_3654705952___1598d205-8eff-41f7-be3e-a71ab128acbd_0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3654705952\&quot;,\&quot;b_ads\&quot;:\&quot;1598d205-8eff-41f7-be3e-a71ab128acbd\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-5\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;1598d205-8eff-41f7-be3e-a71ab128acbd\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;A\&quot;,\&quot;picsourceid\&quot;:\&quot;3654705952\&quot;,\&quot;moduleid\&quot;:\&quot;5\&quot;,\&quot;skuid\&quot;:\&quot;\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;4\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cHM6Ly9wcm8ubS5qZC5jb20vbWFsbC9hY3RpdmUvMmQ4Qzl1czI1YkVNb2FxSnJQYTdzRGhkTloyay9pbmRleC5odG1s&amp;log=ybOS72gQA4LFAPASaDEyBpi5nLZrUwVxi0WNLeXIlU35re3qWRzRY39skGMq7z9FlrhIOnJoftfcDUVs_erDHMHY6qb0YowiFyjQd0Kv6wTHXkCfVI5XFaqykHOlUtAEajOmc3h2fmPYMCwZsZdISkJyvSuG6LXB_p7gMEl9A9nGMMd1y1Asd4EcRqRcuOcwbCXGWMeCJV5EZmooleJ3eLpVWT8ff8Q_EtLeZWPjT4Cs2ztqCKKSbdawwCR-vzQCiPCrz91kGX0hgGelBI0OjjLoPTMMtU5lxehsQzHana8SZwC3TD3JViWfOkSCj8ftrGZ1xvArkVAQRF54stklTOWGfHNhiX90vxIbWhE1wmnZJJdxJBXzQQnzN0DD_oCbU9KhSNxe9MjKwIk5LjZ5Zsff2wNZ3_Bj8ez3Oy41OrObvX8ijtRDuzBAm54OHlKxKSbTROfDtvN0Upll9wH-myNdONdFLdPQBZX1rRl6Sz3zBX1wjP6776ZdfxJUs-rp1bViYnzobb4MvxW6xFH_0uoTWJOcy9Sksm6UAhSWk3t0-17fBFIWOrRJgJuMFOJUJLs5ZwvBCiMJwjZLtrK52d9rRjS3Kptl4-P2uSOjWmCkf0bX5X-7JiolNODDTcYWGLnMcyuJj6QVoMpbafylThOmScQUkVGiPowEufe_wSS4ohCzXzaHO-Jm6Gsg6jwRQvR8QPfcrywyOe5dUk-o-RhsWMPWoAm8Hr7ZRKPQAe9E1bHXN5ttDfqUalmLFQlnGvoH4rm9ntE9k2_jH03FIkuhMLBW5AWsqSaGorgA9BLP2eY5w1bUnkr_XO9RM9kQsFPKUmPK-qKsh6Za50T3_MBEDxPg3bGbThpKzZ0lCkPAusZrnX0nIj4XG8S_kpwOllLvF3PtjFfJ6YKrvFchIC0FO7J07dpVcT1IRocUvCGLPVKu_svOJWySEwiZlLsulNBj4Hg1BX104eD_ai4LhuL0-HQWwuvwwhaMNuGWMv_hufVmfjzxvxunSfDaN8KLl2J6dObsv-IKpPBeA2J0Z7XlX2ueCQsctPNNG1ACVMl6keZ4QUgD2K83CknMbuD6&amp;v=404&amp;clicktype=1&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;3639\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;shop\&quot;:\&quot;1000001228\&quot;,\&quot;ts\&quot;:\&quot;1618725704\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3658944227\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;3639\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;f3f3eae3-ed77-481b-af53-5982cf96df53\\\&quot;&#125;\&quot;&#125;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/165907/22/19485/148977/607a4ff7E61c61c02/9f8f3977881a45bc.jpg!cr_1053x420_4_0!q70.jpg.dpg.webp&quot;, &quot;exposalUrl&quot;: &quot;https://im-x.jd.com/dsp/np?log=ybOS72gQA4LFAPASaDEyBpi5nLZrUwVxi0WNLeXIlU35re3qWRzRY39skGMq7z9FlrhIOnJoftfcDUVs_erDHMHY6qb0YowiFyjQd0Kv6wTHXkCfVI5XFaqykHOlUtAEajOmc3h2fmPYMCwZsZdISkJyvSuG6LXB_p7gMEl9A9nGMMd1y1Asd4EcRqRcuOcwCWHdpl1PtgdsKel5JNrNV2DPEqJpWNa8Eb_CGpR4obXNn9RZThvz8ENZhUh5T97EO23nAxqK0QPx-JOTrz2q7w81ARMY1SDeWwNjynE25x8xYzlOWkRgTXFNIvut-C0EWUOdM-MfaKhU6a2dTnGraWMTwSvqj0ST8hqG3UV1qFPz1UmwNtgiSvvi3LKQZxuSDVhZLjFxZqyXuvwVAUPp-1x0MS6YQtplNksjz-mooay8yyczwGUBbyXXK4nGkJEVT6WES61T5_bHlwKj3NAYMONsRB_GBMqlGiafklyTxn6ch0GubngLDoJwXtlBAcVyNNCOQcYpCVGmOLoHNiqIPjj6AbFSxyTUYIixrWouZ3C5WgPvHoUZPVom0VrW8DM5CKpmje998e4jnClSou-JhxrPCM7TapZXZaCQ6xNlFWCbOSmPsWz2zEw8thCXYtxjjxHFfvYNB8v0CcDZmqGwlGXcujNMCwIt62U6jvSdNBGHKGIcf-wMR1sJjyZ_F5-oDhhccz39oNnyDdLrUtUWoWz4OjaUmUiTyPf0bxvnJL_QAkLFuAHdn4vewRG2_R16Xq97rMMRV9PU3SUyBpVuUIhrHUDwTzjXRH34fs_yBpoC7KhvCpVT7FkvGXpjEr9HmelHJJimQihepkpd5g-D3Xyf7fbmxDEBdknYVZb7yexkoP7lkHfWgDCeE86a_ff9zKRo7lSNLqxG0kWoICXwDqvSa1M3JBx1cb13WArl7HD4-bKlcTtTzC4UNjMCFBPeY82gb95oUv2Z09pQBFkDMgfJa4k3txJ8Tywlw3DRgWT7WildrGISi6ZLWzGTJwIX-fbq23-QJxFYeErdnpynkZ71cJ_-RBuPHCDLNSfNUQS6V_N3rVYeS5hwzKdxvHIufUeIPf3Cf7t6Np7q1z-iMQ&amp;v=404&amp;seq=1&amp;rt=3&amp;is_front_cache=__IS_FRONT_CACHE__&amp;home_status=__HOME_STATUS__&amp;exposure_height=__EXPOSURE_HEIGHT__&amp;browse_duration=__BROWSE_DURATION__&quot;, &quot;title&quot;: &quot;首焦.jpg&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 6, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 0, &quot;abt&quot;: &quot;1&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2d8C9us25bEMoaqJrPa7sDhdNZ2k/index.html&quot; &#125;, &quot;srv&quot;: &quot;A_20_5_3658944227___f3f3eae3-ed77-481b-af53-5982cf96df53_0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3658944227\&quot;,\&quot;b_ads\&quot;:\&quot;f3f3eae3-ed77-481b-af53-5982cf96df53\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-6\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;f3f3eae3-ed77-481b-af53-5982cf96df53\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;A\&quot;,\&quot;picsourceid\&quot;:\&quot;3658944227\&quot;,\&quot;moduleid\&quot;:\&quot;6\&quot;,\&quot;skuid\&quot;:\&quot;\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;5\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;&quot;, &quot;extension_id&quot;: &quot;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/158921/37/19394/126108/607811faE135f148d/3ea81fa8bac79bc1.jpg!cr_1125x449_0_166!q70.jpg.dpg.webp&quot;, &quot;exposalUrl&quot;: &quot;&quot;, &quot;title&quot;: &quot;小米京曝新品日&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 7, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 51175, &quot;abt&quot;: &quot;&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2JQiRqedodJY6WdpkUzhobhNcj8/index.html?babelChannel=Home-FocusPic4&amp;innerAnchor=100018478710_100008603015_100007357987_69386399192_100014743850&amp;focus=4&quot; &#125;, &quot;srv&quot;: &quot;B_20_6_51175_100018478710_1#1#ABTest-10298-E5-80&amp;ABTest-10724-C-84&amp;40cf9d4283304758a3cb17f07787170a#268#51175#58__0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;51175\&quot;,\&quot;b_ads\&quot;:\&quot;\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;1#1#ABTest-10298-E5-80&amp;ABTest-10724-C-84&amp;40cf9d4283304758a3cb17f07787170a#268#51175#58\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-7\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;B\&quot;,\&quot;picsourceid\&quot;:\&quot;100018478710\&quot;,\&quot;moduleid\&quot;:\&quot;7\&quot;,\&quot;skuid\&quot;:\&quot;100018478710\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;6\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;clickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cHM6Ly9wcm8ubS5qZC5jb20vbWFsbC9hY3RpdmUvM2RhYkN0cmZ5U0NnQ0dQa0cySEVyUkxoTm00WC9pbmRleC5odG1s&amp;log=L7i7cwgyVE2CnLzDGCYR1ROBcU1E3N_FSPOpzI9w6DCVY-RhLh2zO1qT4WXG2I2Efs54y1FzCApMhPtr93lFxtGIONM2h-_nmcJzNlfL11umvAOimfap0_xk9BhVPXd5hXz7fGYQF3ihZ69TLrTw16ycBuvO03S_GoeIp5tSDBktuWoy-UisjTtqeCMXvl6IH8uSWUUAXq7lL2R3Ethvx1ddyjsLZ-hIIrlgm3KJC8u8cOxkShV_4q7dVbk6rVLFtjBqUxGQu_O2G40fSIl8M6ejTwbB97pM-DsKM7wUDIr4e0Cbc3DwLgX099Bxige-HKa2Ercb10thexb5ChQCUXNYHcO-hw9_dWKtfCzmA02NAJifudXy8NFRbxIu2OloPWK3INFPaZ2poVb3pDXKDVt-bWWFusDdr6EhgzSM2wdV8cgTF6L-QcIpVGwENk0IBO0Z5QEZjeNXf9oJ0OLTWQ7YjhJcNi0MkPtg0S77apEQdAC1oNkLb-ndn_lO3EbPDsRnDpa70roLWYgA40pjKofTYkUCbBNFmxjOzvIey-YI2QKpUgqbMtkEzWBeCQb3Hh4x-V5hdY1DfA3DFQh2_noR4Ssts6Nc9UTRaJIMU6uYK865V5MZhdcjnMld7BdyTwMsTei3lJE67IsTLjuYpS7XFVUMECLXycF-xJoZywklSOkx9M3tLjDE2285cRegh7kdYLsOad8iBlDO9ZTI8atmtY84GX1la2kTyAenGvgD7W-k7quFoZKL5Mj__v-1DepQvhZdskYY1Y_kIFpLuf3kKS0ZImrsiDsDVI78TyojxUg3KhCu__RSXjb6981MIFVwNImqdiIf1hYn0bB3ITRIp2joOaRKv3wya-7oOqbwN7YzRl4y5aI9yK9siVzHzb4Bnq6nBW6DoL5Ap7S9tzrBGwjugf8CHYuzP90haX-FE24wK0fqpBNb3OnpOHRsIWonLpt7wjE9-L4ZZsW8w_wGaQe4kY83lbbjbNJRLyQF4FeyABerVKfYXmqX8XN70CMS4BvXomGQBVDkkqRb3g&amp;v=404&amp;clicktype=1&quot;, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;\&quot;,\&quot;ch\&quot;:\&quot;\&quot;,\&quot;shop\&quot;:\&quot;\&quot;,\&quot;sku\&quot;:\&quot;\&quot;,\&quot;ts\&quot;:\&quot;\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3650790445\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;3896\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;654925c8-d154-45cb-9db0-9752aecfe675\\\&quot;,\\\&quot;type\\\&quot;:\\\&quot;1\\\&quot;&#125;\&quot;&#125;&quot;, &quot;videoLimit&quot;: 0, &quot;horizontalImag&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/164360/1/18519/109172/6078e51bE1ec00f96/b6217671381b07a2.jpg!cr_1053x420_4_0!q70.jpg.dpg.webp&quot;, &quot;exposalUrl&quot;: &quot;https://im-x.jd.com/dsp/np?log=L7i7cwgyVE2CnLzDGCYR1ROBcU1E3N_FSPOpzI9w6DCVY-RhLh2zO1qT4WXG2I2Efs54y1FzCApMhPtr93lFxtGIONM2h-_nmcJzNlfL11umvAOimfap0_xk9BhVPXd5hXz7fGYQF3ihZ69TLrTw16ycBuvO03S_GoeIp5tSDBktuWoy-UisjTtqeCMXvl6ISpm_ZC-Itt1Grws76OKLUcB4qfKmFtKPTAlEqsVopLqk-vkV08X7My__hALSPNS74nx_F9F1Vf2Iq-yhg-8O_4zGhqn6sl-ygctYnQ4aEVg1qm1OT7YP3dzYiw2VZvk1_kzS_pGDnF3B9h3Ol_oIVlj5F3HQyLusTxNfTS7Ygqfq3Hh0gFeMGavvalkkIDw_aFflh_Hmzv80REPG3aFm5LgHcSN1-IWVK2HcAUDYvGbmeAxw3r7qITEIYjmXgA8XuT5LLUKogYhivPlc0WuprUuF-84Wn32pbEG3QuN77-xQ8p6ErHy40wwzJEX0Mrgp0QuHwc00sgw8_LiTFNCxqrLy3-eehlFQzngsPWlkFvMhfCOq7PbC_sLq-MpiLXyVY-XpeI3FMuOeg0AUnTOyZjDnwCYCXoJ5J3tGDb0AIT0C_ywNyRd86xAW-uCgY8kC-JIAWmMYBjd0eCLjidjHNRYNAUKKnrlqZdO3BDyGb69M2uByDMpiAIw8gxKuxQNbW1XVDCrFy7fGYN5lqib2L_M7F25YHfCfBBcwAxIe1W2G9PhBrUtfFU_wNQCAVobVSqrP3TzRDNDrinI0uppfC3f69jAwEitMs1DCThuS5yuTGM3YAb3x7o8XcwPd2ivXJw2YgwML1Q89Ile1SdTPLzAn36YkM9aYWllJCwnTKXRXoXClpAU5BALnTasImKxQzIYu0IedoBf-061ayxrcTqMal279G4v87Bgh6dUGg8w7vENiDrS9Sx1hqHkZqMIFk5QzJlV1h54WqVRs7EJZTFLv5U6N7XDKSWZuhXbHqGaMSZx4K-8ynTCKeEYCCT_1&amp;v=404&amp;seq=1&amp;rt=3&quot;, &quot;title&quot;: &quot;&quot;, &quot;showLabel&quot;: 0, &quot;sortno&quot;: 8, &quot;wareDisplayType&quot;: 0, &quot;activityId&quot;: 0, &quot;abt&quot;: &quot;&quot;, &quot;transitionImg&quot;: &quot;&quot;, &quot;sourceTag&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3dabCtrfySCgCGPkG2HErRLhNm4X/index.html&quot; &#125;, &quot;srv&quot;: &quot;E_20_7_0___654925c8-d154-45cb-9db0-9752aecfe675_0&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3650790445\&quot;,\&quot;b_ads\&quot;:\&quot;\&quot;,\&quot;resourceid\&quot;:\&quot;1\&quot;,\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-1-8\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-1\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;uidhash\&quot;:\&quot;20\&quot;,\&quot;label\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;654925c8-d154-45cb-9db0-9752aecfe675\&quot;,\&quot;floorid\&quot;:\&quot;0\&quot;,\&quot;activitypoolid\&quot;:\&quot;24502450\&quot;,\&quot;sourcetype\&quot;:\&quot;E\&quot;,\&quot;picsourceid\&quot;:\&quot;3650790445\&quot;,\&quot;moduleid\&quot;:\&quot;8\&quot;,\&quot;skuid\&quot;:\&quot;\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;,\&quot;frame\&quot;:\&quot;7\&quot;&#125;&quot; &#125; &#125; ], &quot;floorId&quot;: 8517, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 0, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;indicatorType&quot;: 1, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;marginColor&quot;: &quot;&quot;, &quot;realTpl&quot;: &quot;224&quot;, &quot;innnerInterval&quot;: 1, &quot;isNewStyle&quot;: 1, &quot;cornerDegree&quot;: &quot;24,24,24,24&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 8517 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;&quot;, &quot;slipTime&quot;: 4000, &quot;textColor&quot;: &quot;&quot;, &quot;heightAb&quot;: 0, &quot;showSubTitle&quot;: 0, &quot;tpl&quot;: &quot;224&quot;, &quot;logoImage&quot;: &quot;&quot;, &quot;playType&quot;: 0, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;isShadow&quot;: 1, &quot;marginTop&quot;: 0, &quot;bottomMarginWidth&quot;: 2 &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/159045/20/14246/7749/60547a11Ee7399d77/4bf8f5ca33b95685.png!q70.jpg&quot;, &quot;iconText&quot;: &quot;日历&quot;, &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;searchIcon&quot;, &quot;floorOrder&quot;: 3, &quot;floorId&quot;: 7531, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 0, &quot;effectTimes&quot;: 1, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7531\&quot;,\&quot;sourceid\&quot;:\&quot;420981\&quot;,\&quot;style\&quot;:\&quot;204\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;3#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;420981\&quot;&#125;&quot;, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;expo&quot;: &quot;7531_3#1#1_0_420981_____420981_204__&quot;, &quot;cornerDegree&quot;: &quot;&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactMyCalendar&quot;, &quot;param&quot;: &#123; &quot;transparentenable&quot;: true, &quot;defaultTabindex&quot;: 0, &quot;comefrom&quot;: &quot;5&quot; &#125;, &quot;modulename&quot;: &quot;JDReactMyCalendar&quot; &#125;, &quot;srv&quot;: &quot;7531_0_CMSSH420981_0_946672_0_1_1_________0_420981#0__&#123;\&quot;floorid\&quot;:\&quot;7531\&quot;,\&quot;sourceid\&quot;:\&quot;420981\&quot;,\&quot;style\&quot;:\&quot;204\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;3#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;420981\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7531\&quot;,\&quot;sourceid\&quot;:\&quot;420981\&quot;,\&quot;style\&quot;:\&quot;204\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;3#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;420981\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;默认&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;&quot;, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;#ffffff&quot;, &quot;marginTop&quot;: 0, &quot;bottomMarginWidth&quot;: 2 &#125;, &#123; &quot;showShadow&quot;: 0, &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;needUpdate&quot;: 1, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;appcenter&quot;, &quot;floorOrder&quot;: 11, &quot;content&quot;: &#123; &quot;pointerStyle&quot;: 0, &quot;data&quot;: [ &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114222/13/9475/14059/5ed9bcb0E8cf9712c/39eb8ba10a470439.png&quot;, &quot;name&quot;: &quot;京东超市&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 404, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 112, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactSuperMarketPro\&quot;,\&quot;param\&quot;:&#123;\&quot;transparentenable\&quot;:true,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;sourceId\&quot;:1&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactSuperMarketPro\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 1, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactSuperMarketPro&quot;, &quot;param&quot;: &#123; &quot;transparentenable&quot;: true, &quot;needLogin&quot;: &quot;0&quot;, &quot;sourceId&quot;: 1 &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactSuperMarketPro&quot; &#125;, &quot;srv&quot;: &quot;1_京东超市_-100_1_-100_-100_112_0___2819&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2819\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-112\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:1,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东超市\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;112\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111275/36/6268/14544/5eb9529bE7956e24e/d888b6ffd289791c.png&quot;, &quot;name&quot;: &quot;京东电器&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 96, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 450, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/8tHNdJLcqwqhkLNA8hqwNRaNu5f/index.html?babelChannel=ttt65&amp;componentId=4f953e59a3af4b63b4d7c24f172db3c3&amp;taskParam=%7B%22actId%22%3A%228tHNdJLcqwqhkLNA8hqwNRaNu5f%22%7D&amp;collectionId=450\&quot;&#125;&quot;, &quot;order&quot;: 2, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/8tHNdJLcqwqhkLNA8hqwNRaNu5f/index.html?babelChannel=ttt65&amp;componentId=4f953e59a3af4b63b4d7c24f172db3c3&amp;taskParam=%7B%22actId%22%3A%228tHNdJLcqwqhkLNA8hqwNRaNu5f%22%7D&amp;collectionId=450&quot; &#125;, &quot;srv&quot;: &quot;2_京东电器_-100_1_-100_-100_450_0___2998&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2998\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-450\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:2,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东电器\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;450\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/128983/34/1228/5131/5eba94d8E21447b3b/5ba03ddd5887d6b9.png&quot;, &quot;name&quot;: &quot;潮流服饰&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 119, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 497, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4VZXv8gmfJtxNA8tNGnTXV8R4yvS/index.html?collectionId=497\&quot;&#125;&quot;, &quot;order&quot;: 3, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4VZXv8gmfJtxNA8tNGnTXV8R4yvS/index.html?collectionId=497&quot; &#125;, &quot;srv&quot;: &quot;3_潮流服饰_-100_1_-100_-100_497_0__67109888#64#_1302&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1302\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-497\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;67109888#64#\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:3,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;潮流服饰\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;497\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoUrl&quot;: &quot;https://homepage-gw.jd.com/datastream/homeExpo?expoLog=lZBMVSg5VxviuSBVLsVwTDTEoZEQ%2FdH3kuAdswjrHBG7F9Ql7smlTLKsvzNrsiPequ5b3w9tt7CER%2FG7A9b0HL5sWObyq0bVFsDsfaSDmGvIyuTqZcFbAMDGCjLrPKP0O5hK%2FD4UupRfH5YxreydIAWMqcuoRxzt23f9pbLxU6tWY7eJDuBMGKQrR585WpXJz%2BmAQs7x2e3b0Oa2duasIA%3D%3D&quot;, &quot;labelText&quot;: [ &quot;大额&quot;, &quot;京豆&quot; ], &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/122216/10/4029/13767/5ed8d040Efc987d12/2c8058b96619a3fe.png&quot;, &quot;frozenDays&quot;: 7, &quot;isSub&quot;: &quot;0&quot;, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://h5.m.jd.com/babelDiy/Zeus/3KSjXqQabiTuD1cJ28QskrpWoBKT/index.html?babelChannel=45&amp;collectionId=519\&quot;&#125;&quot;, &quot;expoDays&quot;: 3, &quot;redControl&quot;: 1, &quot;name&quot;: &quot;免费水果&quot;, &quot;id&quot;: 244, &quot;channelId&quot;: 519, &quot;clkUrl&quot;: &quot;https://homepage-gw.jd.com/datastream/homeExpo?expoLog=lZBMVSg5VxviuSBVLsVwTDTEoZEQ%2FdH3kuAdswjrHBG7F9Ql7smlTLKsvzNrsiPequ5b3w9tt7CER%2FG7A9b0HL5sWObyq0bVFsDsfaSDmGvaijuTyVjM10ZqlS%2BKuwnKe%2F4tJHfVQnOSx7aNdB9a5wJ%2BRPprAj%2BZDTV3do7Nxm7EAZ5oKTHFjjS3rG%2Fn%2BeI0nzoTdTzrU86Rpu8wOZ%2BS6g%3D%3D&quot;, &quot;order&quot;: 4, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://h5.m.jd.com/babelDiy/Zeus/3KSjXqQabiTuD1cJ28QskrpWoBKT/index.html?babelChannel=45&amp;collectionId=519&quot; &#125;, &quot;srv&quot;: &quot;4_免费水果_-100_1_-100_-100_519_0__16##_2070&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2070\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-519\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;16##\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:4,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;免费水果\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;519\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/115054/25/6524/12891/5eb947d9Ee048ec59/bf9cd20b870c91bd.png&quot;, &quot;name&quot;: &quot;京东到家&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 38, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 363, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;channel_name\&quot;:\&quot;from_jdapp\&quot;,\&quot;ishidden\&quot;:true,\&quot;transparentenable\&quot;:false,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactDaoJia\&quot;,\&quot;param\&quot;:&#123;\&quot;latitude\&quot;:\&quot;\&quot;,\&quot;longitude\&quot;:\&quot;\&quot;&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactDaoJia\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 5, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;channel_name&quot;: &quot;from_jdapp&quot;, &quot;ishidden&quot;: true, &quot;transparentenable&quot;: false, &quot;appname&quot;: &quot;JDReactDaoJia&quot;, &quot;param&quot;: &#123; &quot;latitude&quot;: &quot;&quot;, &quot;longitude&quot;: &quot;&quot; &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactDaoJia&quot; &#125;, &quot;srv&quot;: &quot;5_京东到家_-100_1_-100_-100_363_0__8##_1245&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1245\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-363\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;8##\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:5,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东到家\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;363\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/127962/6/1087/12957/5eb948e8E6c431651/e7a6dbe265165c75.png&quot;, &quot;name&quot;: &quot;生活服务&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 8, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 314, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactRechargeModule\&quot;,\&quot;param\&quot;:&#123;\&quot;page\&quot;:\&quot;home\&quot;,\&quot;routeParams\&quot;:&#123;\&quot;newEdition\&quot;:true,\&quot;source\&quot;:\&quot;homepage\&quot;&#125;&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactRechargeModule\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 6, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactRechargeModule&quot;, &quot;param&quot;: &#123; &quot;page&quot;: &quot;home&quot;, &quot;routeParams&quot;: &#123; &quot;newEdition&quot;: true, &quot;source&quot;: &quot;homepage&quot; &#125; &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactRechargeModule&quot; &#125;, &quot;srv&quot;: &quot;6_生活服务_-100_1_-100_-100_314_0___1839&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1839\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-314\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:6,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;生活服务\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;314\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/128852/38/1113/9335/5eb9493eE42c86e93/1246b3117cfefdae.png&quot;, &quot;name&quot;: &quot;领京豆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 9, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 316, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactJDBeansReward\&quot;,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactJDBeansReward\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;param\&quot;:&#123;\&quot;page\&quot;:\&quot;JDReactJDBeansReward\&quot;,\&quot;source\&quot;:\&quot;AppHome\&quot;,\&quot;transparentenable\&quot;:true&#125;&#125;&quot;, &quot;order&quot;: 7, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;appname&quot;: &quot;JDReactJDBeansReward&quot;, &quot;param&quot;: &#123; &quot;page&quot;: &quot;JDReactJDBeansReward&quot;, &quot;source&quot;: &quot;AppHome&quot;, &quot;transparentenable&quot;: true &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactJDBeansReward&quot; &#125;, &quot;srv&quot;: &quot;7_领京豆_-100_1_-100_-100_316_0___1249&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1249\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-316\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:7,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;领京豆\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;316\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;redControl&quot;: 0, &quot;labelText&quot;: [ &quot;1元&quot;, &quot;包邮&quot; ], &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/167378/16/9796/14448/60425ab0Ea2c79af7/379a67d2c6503e5a.png&quot;, &quot;name&quot;: &quot;券后9.9&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 10, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 317, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;tabId\&quot;:\&quot;235\&quot;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;couponcenter\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;sourceFrom\&quot;:\&quot;XiachenIcon\&quot;&#125;&quot;, &quot;order&quot;: 8, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;couponcenter&quot;, &quot;params&quot;: &#123; &quot;tabId&quot;: &quot;235&quot;, &quot;needLogin&quot;: &quot;0&quot;, &quot;sourceFrom&quot;: &quot;XiachenIcon&quot; &#125;, &quot;srv&quot;: &quot;8_券后9.9_-100_1_-100_-100_317_0___2350&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2350\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-317\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:8,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;券后9.9\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;317\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 1, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/127973/12/1096/9629/5eb949bdEc7aab4c2/b696d87417935934.png&quot;, &quot;name&quot;: &quot;借钱&quot;, &quot;frozenDays&quot;: 1, &quot;id&quot;: 393, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 325, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://u.jr.jd.com/growing/reMoney/home/?t=0&amp;from=jdapp\&quot;&#125;&quot;, &quot;order&quot;: 9, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://u.jr.jd.com/growing/reMoney/home/?t=0&amp;from=jdapp&quot; &#125;, &quot;srv&quot;: &quot;9_借钱_-100_1_-100_-100_325_0__131072##_1251&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1251\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-325\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;131072##\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:9,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;借钱\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;325\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114160/13/6345/10983/5eb949eeE5b6e0393/17cf26dbfecd6d29.png&quot;, &quot;name&quot;: &quot;PLUS会员&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 122, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 356, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://plus.m.jd.com/products/list?collectionId=356\&quot;&#125;&quot;, &quot;order&quot;: 10, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://plus.m.jd.com/products/list?collectionId=356&quot; &#125;, &quot;srv&quot;: &quot;10_PLUS会员_-100_1_-100_-100_356_0__67109024#2#_1252&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1252\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-356\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;67109024#2#\&quot;,\&quot;screennum\&quot;:\&quot;1\&quot;,\&quot;locnum\&quot;:10,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;PLUS会员\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;356\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/135083/26/10246/14037/5f6360f9Eb5fd4d40/9149d19a305cd495.png&quot;, &quot;name&quot;: &quot;京东国际&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 43, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 331, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;dolphinId\&quot;:\&quot;11\&quot;,\&quot;des\&quot;:\&quot;dolphin\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;channelId\&quot;:\&quot;331\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3YvKJrc4e4WK7aZ46j3h5UMCvEn4/index.html\&quot;&#125;&quot;, &quot;order&quot;: 11, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;dolphin&quot;, &quot;params&quot;: &#123; &quot;dolphinId&quot;: &quot;11&quot;, &quot;needLogin&quot;: &quot;0&quot;, &quot;channelId&quot;: &quot;331&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3YvKJrc4e4WK7aZ46j3h5UMCvEn4/index.html&quot; &#125;, &quot;srv&quot;: &quot;11_京东国际_-100_2_-100_-100_331_0___1976&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1976\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-331\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:11,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东国际\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;331\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111475/39/6255/8259/5eb94a43E8781d212/7c5e41d2d6ab6910.png&quot;, &quot;name&quot;: &quot;京东拍卖&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 26, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 16, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://zpsy.jd.com/?jdreactkey=JDReactPaimaiIndex&amp;jdreactapp=JDReactPaimaiIndex&amp;rn_transparentenable=true&amp;collectionId=16\&quot;&#125;&quot;, &quot;order&quot;: 12, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://zpsy.jd.com/?jdreactkey=JDReactPaimaiIndex&amp;jdreactapp=JDReactPaimaiIndex&amp;rn_transparentenable=true&amp;collectionId=16&quot; &#125;, &quot;srv&quot;: &quot;12_京东拍卖_-100_2_-100_-100_16_0___1254&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1254\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-16\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:12,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东拍卖\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;16\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/108871/26/17530/12238/5eb94a6eE465b536e/0b0c49b8602586a2.png&quot;, &quot;name&quot;: &quot;唯品会&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 27, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 293, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/2aiozXgZK1PUVZA37WNq62KLtjcC/index.html\&quot;&#125;&quot;, &quot;order&quot;: 13, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2aiozXgZK1PUVZA37WNq62KLtjcC/index.html&quot; &#125;, &quot;srv&quot;: &quot;13_唯品会_-100_2_-100_-100_293_0___1255&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1255\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-293\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:13,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;唯品会\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;293\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/120637/29/1118/5982/5eb94a9cE823ae980/21c8c9b9fa204963.png&quot;, &quot;name&quot;: &quot;沃尔玛&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 29, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 359, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3d34Pm49obpjLEdhhagSZuM5QrwC/index.html\&quot;&#125;&quot;, &quot;order&quot;: 14, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3d34Pm49obpjLEdhhagSZuM5QrwC/index.html&quot; &#125;, &quot;srv&quot;: &quot;14_沃尔玛_-100_2_-100_-100_359_0___1256&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1256\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-359\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:14,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;沃尔玛\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;359\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114034/32/6261/9396/5eb94ac1E5bab28df/7eb3ed373f604bc2.png&quot;, &quot;name&quot;: &quot;京东旅行&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 47, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 13, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4Fr34Vshk1ymvv9CBTysFkF36aYM/index.html?collectionId=13\&quot;&#125;&quot;, &quot;order&quot;: 15, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4Fr34Vshk1ymvv9CBTysFkF36aYM/index.html?collectionId=13&quot; &#125;, &quot;srv&quot;: &quot;15_京东旅行_-100_2_-100_-100_13_0___1257&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1257\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-13\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:15,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东旅行\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;13\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/126750/39/1059/11760/5eb94af2E126986a6/83b174957defa1f7.png&quot;, &quot;name&quot;: &quot;看病购药&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 46, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 324, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://prodev.m.jd.com/mall/active/2PScB9XGoNNPVKmNR7ua35wC5abT/index.html?collectionId=324\&quot;&#125;&quot;, &quot;order&quot;: 16, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://prodev.m.jd.com/mall/active/2PScB9XGoNNPVKmNR7ua35wC5abT/index.html?collectionId=324&quot; &#125;, &quot;srv&quot;: &quot;16_看病购药_-100_2_-100_-100_324_0___1258&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1258\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-324\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:16,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;看病购药\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;324\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/118234/2/13093/13317/5f196c68Eeb6b19e1/854a4b921a1a7238.png&quot;, &quot;name&quot;: &quot;拍拍二手&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 45, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 372, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/LHGZv1DrGkva1jNpUkKFuNFN6oo/index.html\&quot;&#125;&quot;, &quot;order&quot;: 17, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/LHGZv1DrGkva1jNpUkKFuNFN6oo/index.html&quot; &#125;, &quot;srv&quot;: &quot;17_拍拍二手_-100_2_-100_-100_372_0___1259&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1259\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-372\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:17,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;拍拍二手\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;372\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/125459/17/1073/12553/5eb94070E03ce176c/f76f4960e42adeaf.png&quot;, &quot;name&quot;: &quot;京东生鲜&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 243, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 110, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4P9a2T9osR9JvtzHVaYTPvsecRtg/index.html?collectionId=110\&quot;&#125;&quot;, &quot;order&quot;: 18, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4P9a2T9osR9JvtzHVaYTPvsecRtg/index.html?collectionId=110&quot; &#125;, &quot;srv&quot;: &quot;18_京东生鲜_-100_2_-100_-100_110_0___2917&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2917\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-110\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:18,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东生鲜\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;110\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/121679/8/11497/11802/5f4c620cE681bf788/d7b6067a37d98a78.png&quot;, &quot;name&quot;: &quot;爱回收&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 339, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://huishou.m.jd.com?collectionId=339\&quot;&#125;&quot;, &quot;order&quot;: 19, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://huishou.m.jd.com?collectionId=339&quot; &#125;, &quot;srv&quot;: &quot;19_爱回收_-100_2_-100_-100_339_2___979&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;979\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-339\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:19,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;爱回收\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;339\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/115699/10/6509/4051/5eba8081E43f8856f/49d64a370e650003.png&quot;, &quot;name&quot;: &quot;医药馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 531, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/2KMRByvMg6Z2nwDmQ1StFTtKJc81/index.html?collectionId=531\&quot;&#125;&quot;, &quot;order&quot;: 20, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2KMRByvMg6Z2nwDmQ1StFTtKJc81/index.html?collectionId=531&quot; &#125;, &quot;srv&quot;: &quot;20_医药馆_-100_2_-100_-100_531_2___1298&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1298\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-531\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;2\&quot;,\&quot;locnum\&quot;:20,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;医药馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;531\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/126284/33/1492/3688/5ebcea85E55af508c/4e7120e72c540355.png&quot;, &quot;name&quot;: &quot;京东图书&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 92, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3u1Q7ZjCfQKrRb52c623WNf3Cjz5/index.html?collectionId=92\&quot;&#125;&quot;, &quot;order&quot;: 21, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3u1Q7ZjCfQKrRb52c623WNf3Cjz5/index.html?collectionId=92&quot; &#125;, &quot;srv&quot;: &quot;21_京东图书_-100_3_-100_-100_92_2___1336&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1336\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-92\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:21,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东图书\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;92\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/127014/18/1133/2127/5eb96d27Ecc4cdb02/2d357e35caef60fe.png&quot;, &quot;name&quot;: &quot;寻鲜&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 559, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/GZ9qSJuN65f9nW1KUMsLwHqUTNK/index.html\&quot;&#125;&quot;, &quot;order&quot;: 22, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/GZ9qSJuN65f9nW1KUMsLwHqUTNK/index.html&quot; &#125;, &quot;srv&quot;: &quot;22_寻鲜_-100_3_-100_-100_559_2___1282&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1282\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-559\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:22,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;寻鲜\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;559\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/151952/3/9099/10136/5fd06b9bE1b8df175/c32cbd8eca580ced.png&quot;, &quot;name&quot;: &quot;京东秒杀&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 296, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;miaosha\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;secKillKeyTabType\&quot;:\&quot;seckill\&quot;&#125;&quot;, &quot;order&quot;: 23, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;miaosha&quot;, &quot;params&quot;: &#123; &quot;secKillKeyTabType&quot;: &quot;seckill&quot;, &quot;needLogin&quot;: &quot;0&quot; &#125;, &quot;srv&quot;: &quot;23_京东秒杀_-100_3_-100_-100_296_2___2296&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2296\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-296\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:23,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东秒杀\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;296\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/116035/28/6148/8135/5eb94f1fE46f92677/7bf9f6ccad5ef079.png&quot;, &quot;name&quot;: &quot;领现金&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 583, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;sourceValue\&quot;:\&quot;apphome\&quot;,\&quot;des\&quot;:\&quot;cashreward\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 24, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;cashreward&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;sourceValue&quot;: &quot;apphome&quot; &#125;, &quot;srv&quot;: &quot;24_领现金_-100_3_-100_-100_583_2___1265&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1265\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-583\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:24,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;领现金\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;583\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/117861/19/6527/13131/5eba9658E325a79b6/a4cc222ae2933723.png&quot;, &quot;name&quot;: &quot;京东运动&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 30, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/oKAAQpTfmbKWmL338JdgxNDeWK2/index.html?has_native=0&amp;collectionId=30\&quot;&#125;&quot;, &quot;order&quot;: 25, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/oKAAQpTfmbKWmL338JdgxNDeWK2/index.html?has_native=0&amp;collectionId=30&quot; &#125;, &quot;srv&quot;: &quot;25_京东运动_-100_3_-100_-100_30_2___1306&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1306\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-30\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:25,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东运动\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;30\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/128072/40/1115/10887/5eb9536aEbeac01ae/7c294f820d9f7e19.png&quot;, &quot;name&quot;: &quot;种豆得豆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 482, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactSowAndReap\&quot;,\&quot;param\&quot;:&#123;\&quot;transparentenable\&quot;:true&#125;,\&quot;needLogin\&quot;:\&quot;1\&quot;,\&quot;modulename\&quot;:\&quot;JDReactSowAndReap\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 26, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactSowAndReap&quot;, &quot;param&quot;: &#123; &quot;transparentenable&quot;: true &#125;, &quot;needLogin&quot;: &quot;1&quot;, &quot;modulename&quot;: &quot;JDReactSowAndReap&quot; &#125;, &quot;srv&quot;: &quot;26_种豆得豆_-100_3_-100_-100_482_2___1270&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1270\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-482\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:26,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;种豆得豆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;482\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/132401/28/8962/4023/5f4db4c7Eeba3b371/0c55ecfeeb0c28fc.png&quot;, &quot;name&quot;: &quot;玩具乐器馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 595, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4N6RzwtBZdtdcgodvdsK7ZEzkUbZ/index.html\&quot;&#125;&quot;, &quot;order&quot;: 27, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4N6RzwtBZdtdcgodvdsK7ZEzkUbZ/index.html&quot; &#125;, &quot;srv&quot;: &quot;27_玩具乐器馆_-100_3_-100_-100_595_2___1889&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1889\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-595\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:27,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;玩具乐器馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;595\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/118456/12/7422/11059/5ec39c46Ecec60863/f9104c103189944b.png&quot;, &quot;name&quot;: &quot;优惠日历&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 561, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactMyCalendar\&quot;,\&quot;param\&quot;:&#123;\&quot;transparentenable\&quot;:true,\&quot;defaultTabindex\&quot;:0,\&quot;comefrom\&quot;:\&quot;5\&quot;&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactMyCalendar\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 28, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactMyCalendar&quot;, &quot;param&quot;: &#123; &quot;transparentenable&quot;: true, &quot;defaultTabindex&quot;: 0, &quot;comefrom&quot;: &quot;5&quot; &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactMyCalendar&quot; &#125;, &quot;srv&quot;: &quot;28_优惠日历_-100_3_-100_-100_561_2___1398&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1398\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-561\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:28,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;优惠日历\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;561\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/112920/31/6335/10918/5eb93f19E5b5d87a3/df464b6523795c6f.png&quot;, &quot;name&quot;: &quot;个护馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 294, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/NJ1kd1PJWhwvhtim73VPsD1HwY3/index.html?collectionId=294\&quot;&#125;&quot;, &quot;order&quot;: 29, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/NJ1kd1PJWhwvhtim73VPsD1HwY3/index.html?collectionId=294&quot; &#125;, &quot;srv&quot;: &quot;29_个护馆_-100_3_-100_-100_294_2___1233&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1233\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-294\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:29,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;个护馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;294\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/113090/36/6646/5675/5ebba992E6ba54abb/07dde8e01812ab05.png&quot;, &quot;name&quot;: &quot;母婴馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 87, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3BbAVGQPDd6vTyHYjmAutXrKAos6/index.html?collectionId=87\&quot;&#125;&quot;, &quot;order&quot;: 30, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3BbAVGQPDd6vTyHYjmAutXrKAos6/index.html?collectionId=87&quot; &#125;, &quot;srv&quot;: &quot;30_母婴馆_-100_3_-100_-100_87_2___1323&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1323\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-87\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;3\&quot;,\&quot;locnum\&quot;:30,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;母婴馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;87\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/121488/32/1082/3556/5eb93a81E175282e2/0f1467dfdd962136.png&quot;, &quot;name&quot;: &quot;酒饮馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 99, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/zGwAUzL3pVGjptBBGeYfpKjYdtX/index.html?collectionId=99\&quot;&#125;&quot;, &quot;order&quot;: 31, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/zGwAUzL3pVGjptBBGeYfpKjYdtX/index.html?collectionId=99&quot; &#125;, &quot;srv&quot;: &quot;31_酒饮馆_-100_4_-100_-100_99_2___1230&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1230\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-99\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:31,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;酒饮馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;99\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114043/12/6241/9666/5eb94f10E3f09cf5e/5dc180187b1fd42a.png&quot;, &quot;name&quot;: &quot;美妆馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 96, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/2kmaPNrGDNYo1LKwYtRoaSmsgbj6/index.html?collectionId=96\&quot;&#125;&quot;, &quot;order&quot;: 32, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2kmaPNrGDNYo1LKwYtRoaSmsgbj6/index.html?collectionId=96&quot; &#125;, &quot;srv&quot;: &quot;32_美妆馆_-100_4_-100_-100_96_2___1263&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1263\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-96\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:32,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;美妆馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;96\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/130949/21/2317/8923/5ee8756bE8abc306d/ee76bd63577bc9d1.png&quot;, &quot;name&quot;: &quot;东东萌宠&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 572, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactDDPet\&quot;,\&quot;param\&quot;:&#123;\&quot;petChannel\&quot;:\&quot;baibao\&quot;&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactDDPet\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 33, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactDDPet&quot;, &quot;param&quot;: &#123; &quot;petChannel&quot;: &quot;baibao&quot; &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactDDPet&quot; &#125;, &quot;srv&quot;: &quot;33_东东萌宠_-100_4_-100_-100_572_2___1572&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1572\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-572\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:33,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;东东萌宠\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;572\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/62054/6/16438/6347/5ddb9e0cEc2ad2706/499031198e321263.png&quot;, &quot;name&quot;: &quot;锦鲤红包&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 545, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://happy.m.jd.com/babelDiy/zjyw/3ugedFa7yA6NhxLN5gw2L3PF9sQC/index.html?channel=13&amp;collectionId=545\&quot;&#125;&quot;, &quot;order&quot;: 34, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://happy.m.jd.com/babelDiy/zjyw/3ugedFa7yA6NhxLN5gw2L3PF9sQC/index.html?channel=13&amp;collectionId=545&quot; &#125;, &quot;srv&quot;: &quot;34_锦鲤红包_-100_4_-100_-100_545_2___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-545\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:34,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;锦鲤红包\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;545\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/116063/36/6357/11012/5eb95720E3e0fe918/39f0cd4c26bb53ff.png&quot;, &quot;name&quot;: &quot;京东会员&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 334, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactVip\&quot;,\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactVip\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 35, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactVip&quot;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactVip&quot; &#125;, &quot;srv&quot;: &quot;35_京东会员_-100_4_-100_-100_334_2___1271&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1271\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-334\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:35,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东会员\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;334\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/141042/30/8058/10199/5f588721Efb938037/3b06e3b65d23c980.png&quot;, &quot;name&quot;: &quot;京东电竞&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 473, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/bvNYnFjp84WgX5sufkKehdv84zq/index.html?collectionId=473\&quot;&#125;&quot;, &quot;order&quot;: 36, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/bvNYnFjp84WgX5sufkKehdv84zq/index.html?collectionId=473&quot; &#125;, &quot;srv&quot;: &quot;36_京东电竞_-100_4_-100_-100_473_2___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-473\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:36,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东电竞\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;473\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/109753/4/17545/3127/5eba7fa8Ee4aee2cd/431556c509f22786.png&quot;, &quot;name&quot;: &quot;清洁馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 295, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/2Tjm6ay1ZbZ3v7UbriTj6kHy9dn6/index.html\&quot;&#125;&quot;, &quot;order&quot;: 37, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2Tjm6ay1ZbZ3v7UbriTj6kHy9dn6/index.html&quot; &#125;, &quot;srv&quot;: &quot;37_清洁馆_-100_4_-100_-100_295_2___1295&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1295\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-295\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:37,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;清洁馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;295\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/88075/36/3143/12668/5ddb96daE0172a24f/f6033fd61dbcd27c.png&quot;, &quot;name&quot;: &quot;宠汪汪&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 544, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://jdjoy.jd.com/dist/jddog/index.html?collectionId=544\&quot;&#125;&quot;, &quot;order&quot;: 38, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://jdjoy.jd.com/dist/jddog/index.html?collectionId=544&quot; &#125;, &quot;srv&quot;: &quot;38_宠汪汪_-100_4_-100_-100_544_2___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-544\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:38,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;宠汪汪\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;544\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/121965/36/1102/5098/5eb93fe9Ef598cbe2/f702b99b00496848.png&quot;, &quot;name&quot;: &quot;京东汽车&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 102, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/dj6us2JJRLMMBb4iDaSK4wxvBMt/index.html?collectionId=102\&quot;&#125;&quot;, &quot;order&quot;: 39, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/dj6us2JJRLMMBb4iDaSK4wxvBMt/index.html?collectionId=102&quot; &#125;, &quot;srv&quot;: &quot;39_京东汽车_-100_4_-100_-100_102_2___1235&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1235\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-102\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:39,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东汽车\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;102\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/148906/39/17881/9850/5fd06bb6E4d720cca/e1e5830281a1a7a1.png&quot;, &quot;name&quot;: &quot;每日特价&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 471, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;paritySeckill\&quot;&#125;&quot;, &quot;order&quot;: 40, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;paritySeckill&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot; &#125;, &quot;srv&quot;: &quot;40_每日特价_-100_4_-100_-100_471_2___1721&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1721\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-471\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;4\&quot;,\&quot;locnum\&quot;:40,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;每日特价\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;471\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/106335/35/11002/8042/5e200439Ef18a336f/506219c56893a88b.png&quot;, &quot;name&quot;: &quot;摇钱树&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 549, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://uua.jr.jd.com/uc-fe-wxgrowing/moneytree/index/?channelLV=guanzhu&amp;collectionId=549\&quot;&#125;&quot;, &quot;order&quot;: 41, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://uua.jr.jd.com/uc-fe-wxgrowing/moneytree/index/?channelLV=guanzhu&amp;collectionId=549&quot; &#125;, &quot;srv&quot;: &quot;41_摇钱树_-100_5_-100_-100_549_2___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-549\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:41,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;摇钱树\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;549\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/128174/20/1221/8894/5eba7e00E52298e52/4a91b19989381926.png&quot;, &quot;name&quot;: &quot;美食馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 249, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/43tTmWFv8cBQM6YNtJpq1gCFmCfv/index.html?collectionId=249\&quot;&#125;&quot;, &quot;order&quot;: 42, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/43tTmWFv8cBQM6YNtJpq1gCFmCfv/index.html?collectionId=249&quot; &#125;, &quot;srv&quot;: &quot;42_美食馆_-100_5_-100_-100_249_2___1291&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1291\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-249\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:42,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;美食馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;249\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111870/14/6664/8296/5ebb97d6Ef416e80f/16e2ad705b6e70b5.png&quot;, &quot;name&quot;: &quot;拍拍夺宝岛&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 423, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://paipai.m.jd.com/ppdbd/?entryid=p0020001t1icon190115&amp;collectionId=423\&quot;&#125;&quot;, &quot;order&quot;: 43, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://paipai.m.jd.com/ppdbd/?entryid=p0020001t1icon190115&amp;collectionId=423&quot; &#125;, &quot;srv&quot;: &quot;43_拍拍夺宝岛_-100_5_-100_-100_423_2___1318&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1318\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-423\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:43,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;拍拍夺宝岛\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;423\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/147018/26/16535/7094/5fc63faeE544cf3b0/880802d507bd4190.png&quot;, &quot;name&quot;: &quot;排行榜&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 355, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;fromName\&quot;:\&quot;HomeFloor\&quot;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;JDRankHome\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 44, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;JDRankHome&quot;, &quot;params&quot;: &#123; &quot;fromName&quot;: &quot;HomeFloor&quot;, &quot;needLogin&quot;: &quot;0&quot; &#125;, &quot;srv&quot;: &quot;44_排行榜_-100_5_-100_-100_355_2___2225&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2225\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:44,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;排行榜\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;355\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/151535/4/9124/10673/5fd06b3eE647cc4f6/1d2e481b1b06466c.png&quot;, &quot;name&quot;: &quot;品牌闪购&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 523, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;brandSeckill\&quot;&#125;&quot;, &quot;order&quot;: 45, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;brandSeckill&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot; &#125;, &quot;srv&quot;: &quot;45_品牌闪购_-100_5_-100_-100_523_2___1684&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1684\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-523\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:45,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;品牌闪购\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;523\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/124787/32/1123/4331/5eb968b6E50b985ce/0d6c9c04b438454b.png&quot;, &quot;name&quot;: &quot;京东直播&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 309, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;FindLivePlayList\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 46, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;FindLivePlayList&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;position&quot;: &quot;0&quot; &#125;, &quot;srv&quot;: &quot;46_京东直播_-100_5_-100_-100_309_2___1275&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1275\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-309\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:46,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东直播\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;309\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/138018/11/17065/13383/5fc9abd5E59953c91/c8701364554fba3c.png&quot;, &quot;name&quot;: &quot;爆品情报&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 621, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3azqGRfPqGFYBCABv9D9LTcaAUQC/index.html?babelChannel=17\&quot;&#125;&quot;, &quot;order&quot;: 47, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3azqGRfPqGFYBCABv9D9LTcaAUQC/index.html?babelChannel=17&quot; &#125;, &quot;srv&quot;: &quot;47_爆品情报_-100_5_-100_-100_621_2___2281&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2281\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-621\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:47,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;爆品情报\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;621\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111155/13/6412/12614/5eb94dcdE7eb96d0a/b3315c834014ec46.png&quot;, &quot;name&quot;: &quot;男装馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 83, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/32EphPL81Mb6FD4qLCTtYmd31YXr/index.html?collectionId=83\&quot;&#125;&quot;, &quot;order&quot;: 48, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/32EphPL81Mb6FD4qLCTtYmd31YXr/index.html?collectionId=83&quot; &#125;, &quot;srv&quot;: &quot;48_男装馆_-100_5_-100_-100_83_2___1261&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1261\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-83\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:48,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;男装馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;83\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/107796/37/17609/5425/5eb94fa3Eb11f97c2/cb5384249106c301.png&quot;, &quot;name&quot;: &quot;童装馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 436, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3Af6mZNcf5m795T8dtDVfDwWVNhJ/index.html?collectionId=436\&quot;&#125;&quot;, &quot;order&quot;: 49, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3Af6mZNcf5m795T8dtDVfDwWVNhJ/index.html?collectionId=436&quot; &#125;, &quot;srv&quot;: &quot;49_童装馆_-100_5_-100_-100_436_2___1267&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1267\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-436\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:49,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;童装馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;436\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/123335/2/1190/6153/5eba829dE84271eb4/a408db0b853ce805.png&quot;, &quot;name&quot;: &quot;京东养车&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 300, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://car.m.jd.com/h5/newIndex.html?collectionId=300\&quot;&#125;&quot;, &quot;order&quot;: 50, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://car.m.jd.com/h5/newIndex.html?collectionId=300&quot; &#125;, &quot;srv&quot;: &quot;50_京东养车_-100_5_-100_-100_300_2___1301&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1301\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-300\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;5\&quot;,\&quot;locnum\&quot;:50,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东养车\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;300\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t29254/345/1577275325/3131/54d747fb/5ce50939N09f4ae2d.png&quot;, &quot;name&quot;: &quot;京东买车&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 440, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/7buZFEUJouLZZywhvvRWkGNSRMS/index.html?collectionId=440\&quot;&#125;&quot;, &quot;order&quot;: 51, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/7buZFEUJouLZZywhvvRWkGNSRMS/index.html?collectionId=440&quot; &#125;, &quot;srv&quot;: &quot;51_京东买车_-100_6_-100_-100_440_2___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-440\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:51,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东买车\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;440\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111340/2/6854/7382/5ebe4399E8149cfc0/ba85ad2b3496b803.png&quot;, &quot;name&quot;: &quot;鞋靴馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 290, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4RXyb1W4Y986LJW8ToqMK14BdTD/index.html?collectionId=290\&quot;&#125;&quot;, &quot;order&quot;: 52, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4RXyb1W4Y986LJW8ToqMK14BdTD/index.html?collectionId=290&quot; &#125;, &quot;srv&quot;: &quot;52_鞋靴馆_-100_6_-100_-100_290_2___1358&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1358\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-290\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:52,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;鞋靴馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;290\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/143423/2/5990/3636/5f3f8d8fEf4f1144a/af949752e3b34a3d.png&quot;, &quot;name&quot;: &quot;京东小家电&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 593, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3uvPyw1pwHARGgndatCXddLNUxHw/index.html\&quot;&#125;&quot;, &quot;order&quot;: 53, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3uvPyw1pwHARGgndatCXddLNUxHw/index.html&quot; &#125;, &quot;srv&quot;: &quot;53_京东小家电_-100_6_-100_-100_593_2___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-593\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:53,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东小家电\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;593\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/140941/29/2400/14383/5f054288E7f7ed036/90f9a9d487192764.png&quot;, &quot;name&quot;: &quot;问医生&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 107, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://m.healthjd.com/?requestIsvToken=true&amp;utm_source=appbaibaoxiang&amp;collectionId=107\&quot;&#125;&quot;, &quot;order&quot;: 54, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://m.healthjd.com/?requestIsvToken=true&amp;utm_source=appbaibaoxiang&amp;collectionId=107&quot; &#125;, &quot;srv&quot;: &quot;54_问医生_-100_6_-100_-100_107_2___1633&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1633\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-107\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:54,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;问医生\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;107\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/123410/11/1327/12623/5ebbb983E39428e94/dc363b9e9e8b8ba0.png&quot;, &quot;name&quot;: &quot;京东服务&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 480, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3dQpt42Eu2wQVrPQi2yyCPy7FjYY/index.html\&quot;&#125;&quot;, &quot;order&quot;: 55, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3dQpt42Eu2wQVrPQi2yyCPy7FjYY/index.html&quot; &#125;, &quot;srv&quot;: &quot;55_京东服务_-100_6_-100_-100_480_2___1327&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1327\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-480\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:55,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东服务\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;480\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/121582/2/1077/10933/5eb94991Ea3bace60/8888cac38b1b5e13.png&quot;, &quot;name&quot;: &quot;领金贴&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 555, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://active.jd.com/forever/cashback/?channellv=sqcs\&quot;&#125;&quot;, &quot;order&quot;: 56, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://active.jd.com/forever/cashback/?channellv=sqcs&quot; &#125;, &quot;srv&quot;: &quot;56_领金贴_-100_6_-100_-100_555_2___1250&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1250\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-555\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:56,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;领金贴\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;555\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/126887/26/1306/11130/5ebb9738E943ea4d3/9cf86b19f4905b7c.png&quot;, &quot;name&quot;: &quot;窝者家居&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 224, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/FxaS5JGmuJH65DB4HxF7rCRRewb/index.html?collectionId=224\&quot;&#125;&quot;, &quot;order&quot;: 57, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/FxaS5JGmuJH65DB4HxF7rCRRewb/index.html?collectionId=224&quot; &#125;, &quot;srv&quot;: &quot;57_窝者家居_-100_6_-100_-100_224_2___1317&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1317\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-224\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:57,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;窝者家居\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;224\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/126714/11/15702/6640/5f913413Ef2e9c883/d573bc2b0fa608a4.png&quot;, &quot;name&quot;: &quot;京东奢品&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 118, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/3XGEQpJJhqjMjmPaLjrzJPCu68UZ/index.html\&quot;&#125;&quot;, &quot;order&quot;: 58, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3XGEQpJJhqjMjmPaLjrzJPCu68UZ/index.html&quot; &#125;, &quot;srv&quot;: &quot;58_京东奢品_-100_6_-100_-100_118_2___3000&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;3000\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-118\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:58,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东奢品\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;118\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/112144/8/6667/12029/5ebbaff7E497fe199/73ccd5449ef17818.png&quot;, &quot;name&quot;: &quot;寄件服务&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 490, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://logistics-mrd.jd.com/express/index.html?source=appMyChannel#/\&quot;&#125;&quot;, &quot;order&quot;: 59, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://logistics-mrd.jd.com/express/index.html?source=appMyChannel#/&quot; &#125;, &quot;srv&quot;: &quot;59_寄件服务_-100_6_-100_-100_490_2___1326&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1326\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-490\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:59,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;寄件服务\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;490\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/154131/32/13012/11318/5fedaa44Ef8f45c3b/bd0c4be69b247ed3.png&quot;, &quot;name&quot;: &quot;京东众筹&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 12, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/2NdsiNLZydnew1r48svHj6RXLjnd/index.html?babelChannel=ttt1&amp;collectionId=12\&quot;&#125;&quot;, &quot;order&quot;: 60, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2NdsiNLZydnew1r48svHj6RXLjnd/index.html?babelChannel=ttt1&amp;collectionId=12&quot; &#125;, &quot;srv&quot;: &quot;60_京东众筹_-100_6_-100_-100_12_2___2446&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2446\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-12\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;6\&quot;,\&quot;locnum\&quot;:60,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东众筹\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;12\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114524/20/15268/5760/5f3cd17cE7301a486/8f319bdbc8011b67.png&quot;, &quot;name&quot;: &quot;内衣馆&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;1&quot;, &quot;channelId&quot;: 85, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4PgpL1xqPSW1sVXCJ3xopDbB1f69/index.html?collectionId=85\&quot;&#125;&quot;, &quot;order&quot;: 61, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4PgpL1xqPSW1sVXCJ3xopDbB1f69/index.html?collectionId=85&quot; &#125;, &quot;srv&quot;: &quot;61_内衣馆_-100_7_-100_-100_85_2___1840&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1840\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-85\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:61,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;内衣馆\&quot;,\&quot;style\&quot;:\&quot;2\&quot;,\&quot;pdid\&quot;:\&quot;85\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/113155/25/6793/10810/5ebe5bf2E4198cc30/44901dbfa641aee8.png&quot;, &quot;name&quot;: &quot;边玩边赚&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 527, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://h5.m.jd.com/babelDiy/Zeus/3BB1rymVZUo4XmicATEUSDUgHZND/index.html?babelChannel=5&amp;playname=边玩边赚&amp;collectionId=527\&quot;&#125;&quot;, &quot;order&quot;: 62, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://h5.m.jd.com/babelDiy/Zeus/3BB1rymVZUo4XmicATEUSDUgHZND/index.html?babelChannel=5&amp;playname=边玩边赚&amp;collectionId=527&quot; &#125;, &quot;srv&quot;: &quot;62_边玩边赚_-100_7_-100_1#13#300007-12345-custom-hot#12345_527_1___1369&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1369\&quot;,\&quot;biinfo\&quot;:\&quot;1#13#300007-12345-custom-hot#12345\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-527\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:62,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;边玩边赚\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;527\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/107980/32/17431/13745/5ebb9b7cE72843388/271fcbd283405d48.png&quot;, &quot;name&quot;: &quot;新品试用&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 337, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;to\&quot;:\&quot;trial\&quot;,\&quot;des\&quot;:\&quot;newProductHomePage\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 63, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;newProductHomePage&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;to&quot;: &quot;trial&quot; &#125;, &quot;srv&quot;: &quot;63_新品试用_-100_7_-100_1#13#300007-12345-custom-hot#12345_337_1___2103&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;2103\&quot;,\&quot;biinfo\&quot;:\&quot;1#13#300007-12345-custom-hot#12345\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-337\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:63,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;新品试用\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;337\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/137514/3/2584/6869/5eeb3d23E048bbb8c/062345a043f3112c.png&quot;, &quot;name&quot;: &quot;京东工业品&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 587, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/4RYbb8NtVAegmT35SuM2N3KKYLWt/index.html\&quot;&#125;&quot;, &quot;order&quot;: 64, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4RYbb8NtVAegmT35SuM2N3KKYLWt/index.html&quot; &#125;, &quot;srv&quot;: &quot;64_京东工业品_-100_7_-100_-100_587_1___1455&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1455\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-587\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:64,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京东工业品\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;587\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/113187/13/12411/12240/5f0ebdf9Ed08f0887/9f95fcff5012f5ca.png&quot;, &quot;name&quot;: &quot;省钱卡&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 584, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://smc.m.jd.com/monthIndex?channel=iconmore-app&amp;collectionId=584\&quot;&#125;&quot;, &quot;order&quot;: 65, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://smc.m.jd.com/monthIndex?channel=iconmore-app&amp;collectionId=584&quot; &#125;, &quot;srv&quot;: &quot;65_省钱卡_-100_7_-100_-100_584_1___1401&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1401\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-584\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:65,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;省钱卡\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;584\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/153241/31/12880/12468/5fed634cE51c17e78/8962f477a1f1cea0.png&quot;, &quot;name&quot;: &quot;京喜&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 558, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://wqs.jd.com/wxsq_project/jx_youxuan/index.shtml?ptag=138917.1.1&amp;collectionId=558\&quot;&#125;&quot;, &quot;order&quot;: 66, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://wqs.jd.com/wxsq_project/jx_youxuan/index.shtml?ptag=138917.1.1&amp;collectionId=558&quot; &#125;, &quot;srv&quot;: &quot;66_京喜_-100_7_-100_-100_558_1___1246&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1246\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:66,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;京喜\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;558\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114080/7/12950/4940/5f16b12fE9c9a85f2/91bc5067c8088487.png&quot;, &quot;name&quot;: &quot;闲置换钱&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 484, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://paipai.m.jd.com/c2c/mine/personalCenter?entryid=p0020035xzgj06&amp;collectionId=484\&quot;&#125;&quot;, &quot;order&quot;: 67, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://paipai.m.jd.com/c2c/mine/personalCenter?entryid=p0020035xzgj06&amp;collectionId=484&quot; &#125;, &quot;srv&quot;: &quot;67_闲置换钱_-100_7_-100_-100_484_1___1709&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1709\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-484\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:67,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;闲置换钱\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;484\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/121419/27/1228/9591/5ebaa50eEae77010c/5b7b46ef90316290.png&quot;, &quot;name&quot;: &quot;新京曝&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 524, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;m\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://pro.m.jd.com/mall/active/2JQiRqedodJY6WdpkUzhobhNcj8/index.html\&quot;&#125;&quot;, &quot;order&quot;: 68, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2JQiRqedodJY6WdpkUzhobhNcj8/index.html&quot; &#125;, &quot;srv&quot;: &quot;68_新京曝_-100_7_-100_-100_524_1___1311&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1311\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-524\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:68,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;新京曝\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;524\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/84470/31/5478/7582/5d3ab296E6303536b/bd56939a513fdde6.png&quot;, &quot;name&quot;: &quot;信用卡&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: -100, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 504, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;des\&quot;:\&quot;guanzhu\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;url\&quot;:\&quot;https://mcr.jd.com/credit_card/index.html?channelCode=jd-scsygz&amp;collectionId=504\&quot;&#125;&quot;, &quot;order&quot;: 69, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;needLogin&quot;: &quot;0&quot;, &quot;url&quot;: &quot;https://mcr.jd.com/credit_card/index.html?channelCode=jd-scsygz&amp;collectionId=504&quot; &#125;, &quot;srv&quot;: &quot;69_信用卡_-100_7_-100_-100_504_1___&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;7\&quot;,\&quot;locnum\&quot;:69,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;信用卡\&quot;,\&quot;style\&quot;:\&quot;1\&quot;,\&quot;pdid\&quot;:\&quot;504\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;expoDays&quot;: 0, &quot;icon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111599/13/6251/9078/5eb95307Ebe9d19b1/d16546871d8413c0.png&quot;, &quot;name&quot;: &quot;更多频道&quot;, &quot;frozenDays&quot;: 0, &quot;id&quot;: 431, &quot;isSub&quot;: &quot;0&quot;, &quot;channelId&quot;: 328, &quot;openAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactChannelCenter\&quot;,\&quot;param\&quot;:&#123;\&quot;displayVersion\&quot;:\&quot;9.0.0\&quot;&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactChannelCenter\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;order&quot;: 100, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactChannelCenter&quot;, &quot;param&quot;: &#123; &quot;displayVersion&quot;: &quot;9.0.0&quot; &#125;, &quot;needLogin&quot;: &quot;0&quot;, &quot;modulename&quot;: &quot;JDReactChannelCenter&quot; &#125;, &quot;srv&quot;: &quot;100_更多频道_-100_10_-100_-100_328_0___1269&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;sourceid\&quot;:\&quot;1269\&quot;,\&quot;biinfo\&quot;:\&quot;-100\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-3-328\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-3\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;direct\&quot;:\&quot;\&quot;,\&quot;screennum\&quot;:\&quot;10\&quot;,\&quot;locnum\&quot;:100,\&quot;floorid\&quot;:\&quot;8259\&quot;,\&quot;slide\&quot;:\&quot;1\&quot;,\&quot;name\&quot;:\&quot;更多频道\&quot;,\&quot;style\&quot;:\&quot;0\&quot;,\&quot;pdid\&quot;:\&quot;328\&quot;,\&quot;row\&quot;:\&quot;2\&quot;,\&quot;moduleid\&quot;:\&quot;407023\&quot;&#125;&quot; &#125; &#125; ], &quot;involveSkin&quot;: 0, &quot;holdScreenType&quot;: 0, &quot;bgPic&quot;: &quot;&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;iconSizeType&quot;: 0, &quot;tpl&quot;: &quot;222&quot;, &quot;notification&quot;: 0, &quot;lightColorSwitch&quot;: 2, &quot;pointerUnselectedColor&quot;: &quot;&quot;, &quot;pointerSelectedColor&quot;: &quot;&quot;, &quot;darkPointerUnselectedColor&quot;: &quot;&quot;, &quot;darkFontColor&quot;: &quot;#666666&quot;, &quot;realTpl&quot;: &quot;222&quot;, &quot;time&quot;: 1618725704935, &quot;darkPointerSelectedColor&quot;: &quot;&quot;, &quot;ynSpace&quot;: 0, &quot;fontColor&quot;: &quot;#000000&quot; &#125;, &quot;showBi&quot;: 0, &quot;floorId&quot;: 8259, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 0, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;ynWaveEffect&quot;: 1, &quot;scrollType&quot;: 0, &quot;bgColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;isNewStyle&quot;: 2, &quot;cornerDegree&quot;: &quot;&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 8259 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;百宝箱装饰&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;&quot;, &quot;playType&quot;: 0, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;marginTop&quot;: 0, &quot;bottomMarginWidth&quot;: 2, &quot;showLines&quot;: 2 &#125;, &#123; &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 1, &quot;playTimes&quot;: 20, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;hybrid&quot;, &quot;floorOrder&quot;: 23, &quot;content&quot;: &#123; &quot;subFloors&quot;: [ &#123; &quot;tpl&quot;: &quot;06052&quot;, &quot;data&quot;: [ &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/jfs/t24274/50/2104372822/10637/fb740c17/5b73d121N51e9280a.jpg!q70.jpg.dpg.webp&quot;, &quot;rcJumpUrl&quot;: &quot;&quot;, &quot;rcSourceValue&quot;: &quot;7763_0_CMSSH402973_0_6239_0_1_1____296_____6_296#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;296\&quot;,\&quot;biinfo\&quot;:\&quot;2\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;402973\&quot;,\&quot;directid\&quot;:\&quot;16##-16##-\&quot;&#125;_RIGHTCORNER_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795_null_miaosha&quot;, &quot;hasMaskImg&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;maskColor&quot;: &quot;#FA2C19,#FA2C19&quot;, &quot;source&quot;: 9, &quot;content&quot;: &#123; &quot;timeRemain&quot;: 7096, &quot;scheme&quot;: &quot;B&quot;, &quot;indexMiaoSha&quot;: [ &#123; &quot;itemid&quot;: &quot;10025452786369&quot;, &quot;wareId&quot;: &quot;10025452786369&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s300x300_jfs/t1/143786/16/18563/109845/5fd82fd1E16c465e2/bf10a2011fdd4d4a.png!q70.jpg&quot;, &quot;timg&quot;: &quot;jfs/t1/143786/16/18563/109845/5fd82fd1E16c465e2/bf10a2011fdd4d4a.png&quot;, &quot;discount&quot;: 3.7, &quot;jdPrice&quot;: &quot;129&quot;, &quot;miaoShaPrice&quot;: &quot;49&quot;, &quot;isNewGoods&quot;: 0, &quot;skuType&quot;: [ 994, 9999 ], &quot;jump&quot;: &#123; &quot;des&quot;: &quot;seckill&quot;, &quot;params&quot;: &#123; &quot;productId&quot;: &quot;10025452786369_994#9999,100003241789_993#9999,100003465313_992#9999&quot; &#125;, &quot;srv&quot;: &quot;&#123;\&quot;period\&quot;:40,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;skuid\&quot;:\&quot;10025452786369\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;itemid&quot;: &quot;100003241789&quot;, &quot;wareId&quot;: &quot;100003241789&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s300x300_jfs/t1/44255/11/226/784695/5cc1493aE987cb57b/27111688eaab4d38.png!q70.jpg&quot;, &quot;timg&quot;: &quot;jfs/t1/44255/11/226/784695/5cc1493aE987cb57b/27111688eaab4d38.png&quot;, &quot;discount&quot;: 8.6, &quot;jdPrice&quot;: &quot;38&quot;, &quot;miaoShaPrice&quot;: &quot;33&quot;, &quot;isNewGoods&quot;: 0, &quot;skuType&quot;: [ 993, 9999 ], &quot;jump&quot;: &#123; &quot;des&quot;: &quot;seckill&quot;, &quot;params&quot;: &#123; &quot;productId&quot;: &quot;100003241789_993#9999,10025452786369_994#9999,100003465313_992#9999&quot; &#125;, &quot;srv&quot;: &quot;&#123;\&quot;period\&quot;:40,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;skuid\&quot;:\&quot;100003241789\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;itemid&quot;: &quot;100003465313&quot;, &quot;wareId&quot;: &quot;100003465313&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s300x300_jfs/t1/49638/3/1748/977043/5cf7adc9E43cd15f7/4ed63306c07ec500.png!q70.jpg&quot;, &quot;timg&quot;: &quot;jfs/t1/49638/3/1748/977043/5cf7adc9E43cd15f7/4ed63306c07ec500.png&quot;, &quot;discount&quot;: 6.3, &quot;jdPrice&quot;: &quot;58&quot;, &quot;miaoShaPrice&quot;: &quot;36.9&quot;, &quot;isNewGoods&quot;: 0, &quot;skuType&quot;: [ 992, 9999 ], &quot;jump&quot;: &#123; &quot;des&quot;: &quot;seckill&quot;, &quot;params&quot;: &#123; &quot;productId&quot;: &quot;100003465313_992#9999,10025452786369_994#9999,100003241789_993#9999&quot; &#125;, &quot;srv&quot;: &quot;&#123;\&quot;period\&quot;:40,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;skuid\&quot;:\&quot;100003465313\&quot;&#125;&quot; &#125; &#125;, &#123; &quot;itemid&quot;: &quot;11202514856&quot;, &quot;wareId&quot;: &quot;11202514856&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s300x300_jfs/t1/62100/19/9730/695090/5d7863e9Ea9684ffc/c5b02c56810c72d1.png!q70.jpg&quot;, &quot;timg&quot;: &quot;jfs/t1/62100/19/9730/695090/5d7863e9Ea9684ffc/c5b02c56810c72d1.png&quot;, &quot;discount&quot;: 9.8, &quot;jdPrice&quot;: &quot;1298&quot;, &quot;miaoShaPrice&quot;: &quot;1285&quot;, &quot;isNewGoods&quot;: 0, &quot;skuType&quot;: [ 993, 9999 ], &quot;jump&quot;: &#123; &quot;des&quot;: &quot;seckill&quot;, &quot;params&quot;: &#123; &quot;productId&quot;: &quot;11202514856_993#9999,10025452786369_994#9999,100003241789_993#9999&quot; &#125;, &quot;srv&quot;: &quot;&#123;\&quot;period\&quot;:40,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;skuid\&quot;:\&quot;11202514856\&quot;&#125;&quot; &#125; &#125; ], &quot;nextMiaoshaKey&quot;: &quot;202104180000:1600&quot;, &quot;miaoshaAdvance&quot;: 26, &quot;overTime&quot;: true, &quot;message&quot;: &quot;京东秒杀&quot;, &quot;dynamicCount&quot;: 10, &quot;algorithmFrom&quot;: &quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795&quot;, &quot;playCount&quot;: 3, &quot;functionId&quot;: &quot;indexMiaoShaArea&quot;, &quot;operateWordFix&quot;: 0, &quot;wordJump&quot;: &#123; &quot;des&quot;: &quot;miaosha&quot;, &quot;params&quot;: &#123; &quot;secKillKeyTabType&quot;: &quot;seckill&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH402973_0_6239_0_1_1____296_____6_296#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;296\&quot;,\&quot;biinfo\&quot;:\&quot;2\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;402973\&quot;,\&quot;directid\&quot;:\&quot;16##-16##-\&quot;&#125;_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7763,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;moduleid\&quot;:402973&#125;&quot; &#125;, &quot;name&quot;: &quot;14点场&quot;, &quot;seckillEnhanceType&quot;: 2, &quot;nextStartTime&quot;: 1618732800000, &quot;operateWord&quot;: &quot;超级秒杀节&quot;, &quot;sourceValue&quot;: &quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795&quot;, &quot;seckillAnimationTime&quot;: 5 &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;http://m.360buyimg.com/mobilecms/s189x48_jfs/t1/148049/30/2753/4950/5f0bd55eE0ed4090f/3870c5ed30f970ac.png!q70.jpg&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;rcJumpType&quot;: 0, &quot;promotionTagColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;296\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;position\&quot;:\&quot;23#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;402973\&quot;,\&quot;directid\&quot;:\&quot;16##-16##-\&quot;&#125;&quot;, &quot;id&quot;: 402973, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#1#1_6_296__2___402973_06052_16##-16##-_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;miaosha&quot;, &quot;params&quot;: &#123; &quot;secKillKeyTabType&quot;: &quot;seckill&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH402973_0_6239_0_1_1____296_____6_296#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;296\&quot;,\&quot;biinfo\&quot;:\&quot;2\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;402973\&quot;,\&quot;directid\&quot;:\&quot;16##-16##-\&quot;&#125;_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7763,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-1\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;moduleid\&quot;:402973&#125;&quot; &#125;, &quot;sloganIcon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/107627/32/14980/3094/5eaaca00Ee2092aea/f339036c1eaa56d8.png!q70.jpg&quot;, &quot;rightCorner&quot;: &quot;超级秒杀节&quot;, &quot;sloganPlaySwitch&quot;: 1, &quot;showName&quot;: &quot;京东秒杀&quot;, &quot;rcJumpTo&quot;: &quot;miaosha&quot;, &quot;priceColor&quot;: &quot;#F9454E&quot;, &quot;advert&quot;: &#123; &#125;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#222222&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;频道池秒杀&quot;, &quot;fontSize&quot;: 3, &quot;subtitleDarkColor&quot;: &quot;#FF3826&quot;, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;http://m.360buyimg.com/mobilecms/s189x48_jfs/t1/113390/27/3912/6738/5eaac9f5E90f9c600/365d27f76f5be861.png!q70.jpg&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t23902/195/2097907226/35258/4b5b02db/5b73d1d7N985c6cdd.png!q70.jpg&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/130563/29/3330/204784/5efae17dE5a0673e0/f9585d1b91e99dac.png!q70.jpg&quot;, &quot;skuList&quot;: [ &quot;100007689313&quot;, &quot;100009599747&quot; ], &quot;hasMaskImg&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;maskColor&quot;: &quot;&quot;, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;promotionTagColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;309\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-2\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;position\&quot;:\&quot;23#1#2\&quot;,\&quot;moduleid\&quot;:\&quot;396488\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;id&quot;: 396488, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#1#2_6_309_100007689313#3902154#1#$100009599747#3886117#2#_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795___396488_06052_16##--_&quot;, &quot;sloganAreaColor&quot;: &quot;#F64170,#FFA1A1&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;FindLivePlayList&quot;, &quot;params&quot;: &#123; &quot;innerLink&quot;: &quot;[&#123;\&quot;innerAnchor\&quot;:\&quot;3902154\&quot;,\&quot;innerExtId\&quot;:\&quot;100007689313\&quot;&#125;,&#123;\&quot;innerAnchor\&quot;:\&quot;3886117\&quot;,\&quot;innerExtId\&quot;:\&quot;100009599747\&quot;&#125;]&quot;, &quot;position&quot;: &quot;0&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH396488_0_11014_0_1_1___100007689313#3902154#1#$100009599747#3886117#2#_309_____6_309#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;309\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;100007689313#3902154#1#$100009599747#3886117#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-2\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#1#2\&quot;,\&quot;moduleid\&quot;:\&quot;396488\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;309\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;100007689313#3902154#1#$100009599747#3886117#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-2\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06052\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#1#2\&quot;,\&quot;moduleid\&quot;:\&quot;396488\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot; &#125;, &quot;sloganIcon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114078/13/6460/2884/5ebaac03E3cd38024/470ec9d6b9a88dbf.png!q70.jpg&quot;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;京东直播&quot;, &quot;priceColor&quot;: &quot;#FC477A,#F2270C&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FA1989,#FA4B77&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;好礼不断&quot;, &quot;fontSize&quot;: 3, &quot;slogan&quot;: &quot;享专属优惠&quot;, &quot;showNameImg&quot;: &quot;&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/153552/7/7359/57295/5fbf71a0E39bd29bc/4cf6c713866aace3.png!q70.jpg&quot; &#125; ], &quot;realTpl&quot;: &quot;06052&quot; &#125;, &#123; &quot;tpl&quot;: &quot;06057&quot;, &quot;data&quot;: [ &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/128894/33/8824/522047/5f2a7f85Ef4532133/d0d67c037233db2c.png!q70.jpg&quot;, &quot;skuList&quot;: [ &quot;58826592152&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;#FF5E0B&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;skuLabelAreaColor&quot;: &quot;#FF8662,#FA584B&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;471\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-3\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;position\&quot;:\&quot;23#2#1\&quot;,\&quot;moduleid\&quot;:\&quot;396458\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;id&quot;: 396458, &quot;skuLabelType&quot;: 1, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#2#1_6_471_58826592152#1#_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795___396458_06057_16##--_1&quot;, &quot;price1&quot;: &quot;9.8&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;paritySeckill&quot;, &quot;params&quot;: &#123; &quot;innerLink&quot;: &quot;[&#123;\&quot;innerAnchor\&quot;:\&quot;58826592152\&quot;&#125;]&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH396458_0_10164_0_1_1___58826592152#1#_471_____6_471#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;471\&quot;,\&quot;pricelabel\&quot;:1,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;58826592152#1#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-3\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#2#1\&quot;,\&quot;moduleid\&quot;:\&quot;396458\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;471\&quot;,\&quot;pricelabel\&quot;:1,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;58826592152#1#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-3\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#2#1\&quot;,\&quot;moduleid\&quot;:\&quot;396458\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;每日特价&quot;, &quot;priceColor&quot;: &quot;#FFFFFF&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FF7310,#FD4F13&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;#FF7310,#FD4F13&quot;, &quot;subtitle&quot;: &quot;9块9疯抢&quot;, &quot;fontSize&quot;: 3, &quot;subtitleDarkColor&quot;: &quot;#FFA427&quot;, &quot;slogan&quot;: &quot;超低价好货&quot;, &quot;showNameImg&quot;: &quot;&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/59529/36/1275/252124/5cf876a6Ecf5fa724/d1e767f386099250.png!q70.jpg&quot;, &quot;skuList&quot;: [ &quot;39927877585&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;#8544EC&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;355\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-4\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;position\&quot;:\&quot;23#2#2\&quot;,\&quot;moduleid\&quot;:\&quot;405128\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;id&quot;: 405128, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#2#2_6_355_39927877585#1#_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795___405128_06057_16##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;JDRankHome&quot;, &quot;params&quot;: &#123; &quot;innerLink&quot;: &quot;[&#123;\&quot;innerAnchor\&quot;:\&quot;39927877585\&quot;,\&quot;innerExtId\&quot;:\&quot;686_689\&quot;&#125;]&quot;, &quot;fromName&quot;: &quot;HomeFloor&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH405128_0_10336_0_1_1___39927877585#1#_355_____6_355#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;355\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;39927877585#1#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-4\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#2#2\&quot;,\&quot;moduleid\&quot;:\&quot;405128\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;355\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;39927877585#1#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-4\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#2#2\&quot;,\&quot;moduleid\&quot;:\&quot;405128\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;排行榜&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FF0088,#FF2D2D&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;金榜发京豆&quot;, &quot;fontSize&quot;: 3, &quot;slogan&quot;: &quot;金榜发京豆&quot;, &quot;showNameImg&quot;: &quot;&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/136761/19/11064/83626/5f6ed944E02ebebfc/9db4d8d503cc5720.jpg!q70.jpg.dpg.webp&quot;, &quot;skuList&quot;: [ &quot;10020003993425&quot;, &quot;10025869855401&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;33\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-5\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;position\&quot;:\&quot;23#2#3\&quot;,\&quot;moduleid\&quot;:\&quot;396463\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;id&quot;: 396463, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#2#3_6_33_10020003993425#250113258#1#$10025869855401#248303377#2#_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795___396463_06057_16##--_&quot;, &quot;sloganAreaColor&quot;: &quot;#15C1BF,#9BF4CD&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;worthbuy_list&quot;, &quot;params&quot;: &#123; &quot;innerLink&quot;: &quot;[&#123;\&quot;rt\&quot;:\&quot;12\&quot;,\&quot;innerAnchor\&quot;:\&quot;10020003993425\&quot;,\&quot;innerExtId\&quot;:\&quot;250113258\&quot;&#125;,&#123;\&quot;rt\&quot;:\&quot;12\&quot;,\&quot;innerAnchor\&quot;:\&quot;10025869855401\&quot;,\&quot;innerExtId\&quot;:\&quot;248303377\&quot;&#125;]&quot;, &quot;channel&quot;: &quot;home&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH396463_0_5063_0_1_1___10020003993425#250113258#1#$10025869855401#248303377#2#_33_____6_33#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;33\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;10020003993425#250113258#1#$10025869855401#248303377#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-5\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#2#3\&quot;,\&quot;moduleid\&quot;:\&quot;396463\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;33\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;10020003993425#250113258#1#$10025869855401#248303377#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-5\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06057\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#2#3\&quot;,\&quot;moduleid\&quot;:\&quot;396463\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot; &#125;, &quot;sloganIcon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/116374/40/13147/3657/5f1516aaEa30ff6d3/a02a3b3637b3851a.png!q70.jpg&quot;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 1, &quot;showName&quot;: &quot;发现好货&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#20DCA0,#33C3F0&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;美好新生活&quot;, &quot;fontSize&quot;: 3, &quot;subtitleDarkColor&quot;: &quot;#47D1F3&quot;, &quot;slogan&quot;: &quot;潮流好物&quot;, &quot;showNameImg&quot;: &quot;&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/155925/30/14771/233974/60482db3Eb402376c/35fe6166fd0d43e7.jpg!q70.jpg.dpg.webp&quot; &#125; ], &quot;realTpl&quot;: &quot;06057&quot; &#125;, &#123; &quot;tpl&quot;: &quot;06006&quot;, &quot;data&quot;: [ &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/136354/40/14058/118937/5f9aa305E48a03b33/ca33734d046162a1.png!q70.jpg&quot;, &quot;skuList&quot;: [ &quot;10023732222808&quot;, &quot;31906690252&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;#8544EC&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;523\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-6\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;position\&quot;:\&quot;23#3#1\&quot;,\&quot;moduleid\&quot;:\&quot;396487\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;id&quot;: 396487, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#3#1_6_523_10023732222808#1#$31906690252#2#_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795___396487_06006_16##--_&quot;, &quot;sloganAreaColor&quot;: &quot;#8D55F2&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;brandSeckill&quot;, &quot;params&quot;: &#123; &quot;innerLink&quot;: &quot;[&#123;\&quot;innerAnchor\&quot;:\&quot;10023732222808\&quot;,\&quot;innerExtId\&quot;:\&quot;178323\&quot;&#125;,&#123;\&quot;innerAnchor\&quot;:\&quot;31906690252\&quot;,\&quot;innerExtId\&quot;:\&quot;178681\&quot;&#125;]&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH396487_0_11037_0_1_1___10023732222808#1#$31906690252#2#_523_____6_523#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;523\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;10023732222808#1#$31906690252#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-6\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#3#1\&quot;,\&quot;moduleid\&quot;:\&quot;396487\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;523\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;10023732222808#1#$31906690252#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-6\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#3#1\&quot;,\&quot;moduleid\&quot;:\&quot;396487\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot; &#125;, &quot;sloganIcon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/115840/5/3913/3468/5eaac5deEb27b1d24/b994ddfb893837f5.png!q70.jpg&quot;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 1, &quot;showName&quot;: &quot;品牌闪购&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#9552EC,#532FF3&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;享惊喜折扣&quot;, &quot;fontSize&quot;: 3, &quot;slogan&quot;: &quot;Ubra专场&quot;, &quot;showNameImg&quot;: &quot;&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/1492/29/4018/523332/5b9b204fEfefefb5f/5fac06b4b03e7038.png!q70.jpg&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/161105/30/4916/86843/6014c07dEfc6354ae/716eddb7d47af48a.jpg!q70.jpg.dpg.webp&quot;, &quot;skuList&quot;: [ &quot;10026543295400&quot;, &quot;10027312228135&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;#000000,#000000&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;571\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-8\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;position\&quot;:\&quot;23#3#2\&quot;,\&quot;moduleid\&quot;:\&quot;396462\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;id&quot;: 396462, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7763_23#3#2_6_571_10026543295400#1#$10027312228135#2#_1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795___396462_06006_16##--_&quot;, &quot;sloganAreaColor&quot;: &quot;#F64170,#FFA1A1&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;newProductHomePage&quot;, &quot;params&quot;: &#123; &quot;innerLink&quot;: &quot;[&#123;\&quot;innerAnchor\&quot;:\&quot;10026543295400\&quot;&#125;,&#123;\&quot;innerAnchor\&quot;:\&quot;10027312228135\&quot;&#125;]&quot; &#125;, &quot;srv&quot;: &quot;7763_0_CMSSH396462_0_9412_0_1_1___10026543295400#1#$10027312228135#2#_571_____6_571#0__&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;571\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;10026543295400#1#$10027312228135#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-8\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#3#2\&quot;,\&quot;moduleid\&quot;:\&quot;396462\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7763\&quot;,\&quot;sourceid\&quot;:\&quot;571\&quot;,\&quot;biinfo\&quot;:\&quot;1#f8e7ee9acce80d17438c345470c6c13aeace63d0-D0@L0@2037-619350#1092795\&quot;,\&quot;entryinfo\&quot;:\&quot;10026543295400#1#$10027312228135#2#\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;blockid\&quot;:\&quot;home-2-17-8\&quot;,\&quot;resourceid\&quot;:\&quot;home-2-17\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;23#3#2\&quot;,\&quot;moduleid\&quot;:\&quot;396462\&quot;,\&quot;directid\&quot;:\&quot;16##--\&quot;&#125;&quot; &#125;, &quot;sloganIcon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/111259/19/3953/3380/5eaac67cEe129f5e9/1af7e1b25363a345.png!q70.jpg&quot;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 1, &quot;showName&quot;: &quot;新品首发&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#F64170,#FFA1A1&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;京东小魔方&quot;, &quot;fontSize&quot;: 3, &quot;slogan&quot;: &quot;新潮趣玩&quot;, &quot;showNameImg&quot;: &quot;&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/163092/1/9879/129717/60432551E66d17480/7fe298900db6433d.jpg!q70.jpg.dpg.webp&quot; &#125; ], &quot;realTpl&quot;: &quot;06006&quot; &#125; ], &quot;subFloorNum&quot;: 3 &#125;, &quot;floorId&quot;: 7763, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 21, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 1, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;cornerDegree&quot;: &quot;24,24,24,24&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 7763 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;9.0&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;floorDisplayVersion&quot;: &quot;9.0.0&quot;, &quot;showSubTitle&quot;: 1, &quot;logoImage&quot;: &quot;&quot;, &quot;playType&quot;: 1, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;#f8f8f8&quot;, &quot;marginTop&quot;: 10, &quot;bottomMarginWidth&quot;: 4 &#125;, &#123; &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 1, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;hybrid&quot;, &quot;floorOrder&quot;: 26, &quot;content&quot;: &#123; &quot;subFloors&quot;: [ &#123; &quot;tpl&quot;: &quot;06006&quot;, &quot;data&quot;: [ &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/175915/25/4668/38750/60799c41E489867eb/4fa30a64bfde7957.jpg!q70.jpg.dpg.webp&quot;, &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;127\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;position\&quot;:\&quot;26#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;401124\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;id&quot;: 401124, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;8002_26#1#1_6_127_____401124_06006_2048##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactSchoolChannel&quot;, &quot;param&quot;: &#123; &quot;transparentenable&quot;: true &#125;, &quot;modulename&quot;: &quot;JDReactSchoolChannel&quot; &#125;, &quot;srv&quot;: &quot;8002_0_CMSSH401124_0_11133_0_1_1____127_____6_127#0__&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;127\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;401124\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;127\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;401124\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;京东校园&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FF486C,#FF2929&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;秒杀疯抢 洗护爆款9.9元秒&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/162072/36/19086/40327/60799c75E710f378d/07673f6d3ff8aa47.png!q70.jpg&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/155589/38/16136/201469/60505bf9Ebb19c83b/593d615c5fe78b3f.jpg!q70.jpg.dpg.webp&quot;, &quot;skuList&quot;: [ &quot;71064151996&quot;, &quot;100001236620&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;skuLabelAnimation&quot;: 0, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;212\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;position\&quot;:\&quot;26#1#2\&quot;,\&quot;moduleid\&quot;:\&quot;401125\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;id&quot;: 401125, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;8002_26#1#2_6_212_71064151996#1$100001236620#2__1#2a6b1cbbfd3fb8468fe3ed0dc949eb6538707026-105-619198#1977006__401125_06006_2048##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/c8kRVxxPKpf4TznUhPiLmFwe8yE/index.html?innerLink=%5B%7B%22matId%22%3A%2271064151996%22%2C%22groupId%22%3A%220%22%2C%22matType%22%3A%220%22%7D%2C%7B%22matId%22%3A%22100001236620%22%2C%22groupId%22%3A%220%22%2C%22matType%22%3A%220%22%7D%5D&quot; &#125;, &quot;srv&quot;: &quot;8002_0_CMSSH401125_0_1560_0_1_1___71064151996#1$100001236620#2_212_____6_212#0__&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;212\&quot;,\&quot;entryinfo\&quot;:\&quot;71064151996#1$100001236620#2\&quot;,\&quot;picbiinfo\&quot;:\&quot;1#2a6b1cbbfd3fb8468fe3ed0dc949eb6538707026-105-619198#1977006\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#1#2\&quot;,\&quot;moduleid\&quot;:\&quot;401125\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;212\&quot;,\&quot;entryinfo\&quot;:\&quot;71064151996#1$100001236620#2\&quot;,\&quot;picbiinfo\&quot;:\&quot;1#2a6b1cbbfd3fb8468fe3ed0dc949eb6538707026-105-619198#1977006\&quot;,\&quot;style\&quot;:\&quot;06006\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#1#2\&quot;,\&quot;moduleid\&quot;:\&quot;401125\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;同学都在买&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#3AD1BF,#5AA4FF&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;潮流购物风尚 本校排行&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;&quot;, &quot;img2&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/153863/8/12519/57873/5febefb1Ea9bc0a17/9d4bc8332495c71a.jpg!q70.jpg.dpg.webp&quot; &#125; ], &quot;realTpl&quot;: &quot;06006&quot; &#125;, &#123; &quot;tpl&quot;: &quot;06013&quot;, &quot;data&quot;: [ &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/155919/23/16610/225771/6052e890Ebe82238d/32661ee7e4ecee69.jpg!q70.jpg.dpg.webp&quot;, &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;401127\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;position\&quot;:\&quot;26#2#1\&quot;,\&quot;moduleid\&quot;:\&quot;401127\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;id&quot;: 401127, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;8002_26#2#1_8_4319____1#57fb89a8e5128e88d24adda89fc7e3feb49cfb7d-105-621064#1357858_401127_06013_2048##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;4319\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;8\&quot;,\&quot;position\&quot;:\&quot;26#2#1\&quot;,\&quot;moduleid\&quot;:\&quot;401127\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;,\&quot;modbiinfo\&quot;:\&quot;1#57fb89a8e5128e88d24adda89fc7e3feb49cfb7d-105-621064#1357858\&quot;&#125;&quot;, &quot;openApp&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;babelChannel\&quot;:\&quot;1357858\&quot;,\&quot;innerIndex\&quot;:\&quot;1\&quot;,\&quot;des\&quot;:\&quot;jddjxy\&quot;,\&quot;innerLink\&quot;:\&quot;[&#123;\\\&quot;matId\\\&quot;:\\\&quot;71061400040\\\&quot;&#125;]\&quot;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;themeId\&quot;:\&quot;4319\&quot;,\&quot;themeStyle\&quot;:null,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;des&quot;: &quot;jddjxy&quot;, &quot;params&quot;: &#123; &quot;babelChannel&quot;: &quot;1357858&quot;, &quot;needLogin&quot;: &quot;0&quot;, &quot;themeId&quot;: &quot;4319&quot;, &quot;innerLink&quot;: &quot;[&#123;\&quot;matId\&quot;:\&quot;71061400040\&quot;&#125;]&quot; &#125;, &quot;srv&quot;: &quot;8002_0_CMSSH401127_0__0_1_1_________8_4319#1_1#57fb89a8e5128e88d24adda89fc7e3feb49cfb7d-105-621064#1357858_&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;4319\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;8\&quot;,\&quot;position\&quot;:\&quot;26#2#1\&quot;,\&quot;moduleid\&quot;:\&quot;401127\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;,\&quot;modbiinfo\&quot;:\&quot;1#57fb89a8e5128e88d24adda89fc7e3feb49cfb7d-105-621064#1357858\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;游戏贵族&quot;, &quot;labelWords&quot;: &quot;&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#D400FF,#FF310A&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;土豪带我飞&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/165092/25/18974/22683/60799baaE3577fd37/57a87f632ce79813.jpg!q70.jpg.dpg.webp&quot;, &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;282\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;position\&quot;:\&quot;26#2#2\&quot;,\&quot;moduleid\&quot;:\&quot;401128\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;id&quot;: 401128, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;8002_26#2#2_6_282_____401128_06013_2048##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/zoZpnmUPLffnKoTa7hYpcQ8HTz9/index.html?babelChannel=ttt1&quot; &#125;, &quot;srv&quot;: &quot;8002_0_CMSSH401128_0_11131_0_1_1____282_____6_282#0__&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;282\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#2#2\&quot;,\&quot;moduleid\&quot;:\&quot;401128\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;282\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#2#2\&quot;,\&quot;moduleid\&quot;:\&quot;401128\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;宝洁418&quot;, &quot;priceColor&quot;: &quot;#FC477A,#F2270C&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FF0000,#FF00A7&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;超级秒杀节&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s240x240_jfs/t1/170936/28/18268/39730/607585aaE00f2925a/2a0cfb358a9af4c9.jpg!q70.jpg.dpg.webp&quot;, &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;213\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;position\&quot;:\&quot;26#2#3\&quot;,\&quot;moduleid\&quot;:\&quot;401126\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;id&quot;: 401126, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;8002_26#2#3_6_213_____401126_06013_2048##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://prodev.m.jd.com/mall/active/d6CJ2YkkZ4w2PmrJYQmjrYom4Q9/index.html&quot; &#125;, &quot;srv&quot;: &quot;8002_0_CMSSH401126_0_11132_0_1_1____213_____6_213#0__&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;213\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#2#3\&quot;,\&quot;moduleid\&quot;:\&quot;401126\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;213\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#2#3\&quot;,\&quot;moduleid\&quot;:\&quot;401126\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;特价优惠&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FF2A00,#FF00AF&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;1元购面膜&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;&quot; &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/n1/s240x240_jfs/t1/137124/30/16561/65215/5fb6343eE7e0c15c4/c2f5a6f005a7be11.jpg!q70.jpg.dpg.webp&quot;, &quot;skuList&quot;: [ &quot;100016724434&quot;, &quot;100014232222&quot; ], &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;content&quot;: &#123; &#125;, &quot;showNameImgWidth&quot;: &quot;126&quot;, &quot;darkModeImg&quot;: &quot;&quot;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;253\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;position\&quot;:\&quot;26#2#4\&quot;,\&quot;moduleid\&quot;:\&quot;401129\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;&#125;&quot;, &quot;id&quot;: 401129, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;8002_26#2#4_6_253_100016724434#1$100014232222#2__1#98bd2c85d543bf2713cce6b5a6fcd0896b7e36b3-104-710005#30463479#null_1#d8f4df41f61809325b1ed86188a2b41eefb04a84-105-619036-126#1589148_401129_06013_2048##--_&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/V2ncpc1kK8fANfv6mc1dzNunnTr/index.html?innerLink=%5B%7B%22matId%22%3A%22100016724434%22%2C%22groupId%22%3A%2209685979%22%2C%22matType%22%3A%220%22%7D%5D&quot; &#125;, &quot;srv&quot;: &quot;8002_0_CMSSH401129_0_3133_0_1_1__1#d8f4df41f61809325b1ed86188a2b41eefb04a84-105-619036-126#1589148_100016724434#1$100014232222#2__1#98bd2c85d543bf2713cce6b5a6fcd0896b7e36b3-104-710005#30463479#null____6_253#0_1#d8f4df41f61809325b1ed86188a2b41eefb04a84-105-619036-126#1589148_&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;253\&quot;,\&quot;entryinfo\&quot;:\&quot;100016724434#1$100014232222#2\&quot;,\&quot;picbiinfo\&quot;:\&quot;1#98bd2c85d543bf2713cce6b5a6fcd0896b7e36b3-104-710005#30463479#null\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#2#4\&quot;,\&quot;moduleid\&quot;:\&quot;401129\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;,\&quot;modbiinfo\&quot;:\&quot;1#d8f4df41f61809325b1ed86188a2b41eefb04a84-105-619036-126#1589148\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8002\&quot;,\&quot;sourceid\&quot;:\&quot;253\&quot;,\&quot;entryinfo\&quot;:\&quot;100016724434#1$100014232222#2\&quot;,\&quot;picbiinfo\&quot;:\&quot;1#98bd2c85d543bf2713cce6b5a6fcd0896b7e36b3-104-710005#30463479#null\&quot;,\&quot;style\&quot;:\&quot;06013\&quot;,\&quot;sourcetype\&quot;:\&quot;6\&quot;,\&quot;position\&quot;:\&quot;26#2#4\&quot;,\&quot;moduleid\&quot;:\&quot;401129\&quot;,\&quot;directid\&quot;:\&quot;2048##--\&quot;,\&quot;modbiinfo\&quot;:\&quot;1#d8f4df41f61809325b1ed86188a2b41eefb04a84-105-619036-126#1589148\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;数码专区&quot;, &quot;priceColor&quot;: &quot;#FC477A,#F2270C&quot;, &quot;isHide&quot;: 0, &quot;moduleAnimation&quot;: 0, &quot;subtitleColor&quot;: &quot;#FF6700,#FFB100&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 2, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;潮流看这里&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;showNameImg&quot;: &quot;&quot; &#125; ], &quot;realTpl&quot;: &quot;06013&quot; &#125; ], &quot;subFloorNum&quot;: 2 &#125;, &quot;floorId&quot;: 8002, &quot;head&quot;: 1, &quot;darkModeImg&quot;: &quot;&quot;, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 21, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 1, &quot;fontShape&quot;: 0, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;closeReason&quot;: [ &quot;我不是学生&quot;, &quot;不感兴趣&quot;, &quot;涉及隐私&quot; ], &quot;cornerDegree&quot;: &quot;24,24,24,24&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 8002 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;校园专区&quot;, &quot;textColor&quot;: &quot;#39DAC3,#1182FF&quot;, &quot;closeTips&quot;: &quot;校园楼层将不再展示&quot;, &quot;floorDisplayVersion&quot;: &quot;9.0.0&quot;, &quot;showSubTitle&quot;: 1, &quot;closeButtonImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/59001/11/5669/430/5d3587c3E64375fdc/2b52a88fb8222057.png!q70.jpg&quot;, &quot;logoImage&quot;: &quot;https://m.360buyimg.com/mobilecms/s1125x105_jfs/t1/114593/2/7747/16857/5ec64aa1Ee747b455/de35eccd4d095a52.png!q70.jpg&quot;, &quot;closeUrl&quot;: &quot;https://homepage-gw.jd.com/datastream/homeExpo?expoLog=MUBLQ9bTrP1gxfMsBg6FpfGj0bmVEESK4v3zHst80PMKla6Psrn7FvOyqb6q3RyvN%2FE2VZGXDoScb%2BMYNZucwgbWEbqw0VP2%2BvUFgqF3BhR788JwFWBpWjuVtntN1ePWbKF1HrWzIEe%2ByTGdPtkaYCnw01J49WSl9pL0xvQKf0l7ZGTsd5Xm1uV9ZW506J3VOpB0BLF94yB8wLL4i3i7lA%3D%3D&quot;, &quot;playType&quot;: 0, &quot;bottomMargin&quot;: 10, &quot;bottomMarginColor&quot;: &quot;#f8f8f8&quot;, &quot;marginTop&quot;: 0, &quot;bottomMarginWidth&quot;: 4 &#125;, &#123; &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/152518/12/14450/31008/5fff9e97E614eb0aa/8c86e14d86670b63.png!q70.jpg&quot;, &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;closeImg&quot;: &quot;https://m.360buyimg.com/mobilecms/s63x63_jfs/t1/47799/22/10030/553/5d725eedEbb7eee08/1efebf833e09df2e.png!q70.jpg&quot;, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;float&quot;, &quot;floorOrder&quot;: 33, &quot;floorId&quot;: 7271, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 0, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7271\&quot;,\&quot;sourceid\&quot;:\&quot;414807\&quot;,\&quot;style\&quot;:\&quot;23\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;33#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;414807\&quot;,\&quot;status\&quot;:\&quot;-100\&quot;,\&quot;isclose\&quot;:1&#125;&quot;, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;moduleId&quot;: 414807, &quot;expo&quot;: &quot;7271_33#1#1_0_414807_____414807_23__&quot;, &quot;cornerDegree&quot;: &quot;&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://funearth.m.jd.com/babelDiy/Zeus/3BB1rymVZUo4XmicATEUSDUgHZND/index.html?source=20&quot; &#125;, &quot;srv&quot;: &quot;7271_0_CMSSH414807_0_939076_0_1_1_________0_414807#0__&#123;\&quot;floorid\&quot;:\&quot;7271\&quot;,\&quot;sourceid\&quot;:\&quot;414807\&quot;,\&quot;style\&quot;:\&quot;23\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;33#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;414807\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7271\&quot;,\&quot;sourceid\&quot;:\&quot;414807\&quot;,\&quot;style\&quot;:\&quot;23\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;33#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;414807\&quot;,\&quot;status\&quot;:\&quot;-100\&quot;,\&quot;isclose\&quot;:1&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;浮层&quot;, &quot;displayUIStyle&quot;: 2, &quot;hideTime&quot;: 6, &quot;floatIconDisplay&quot;: 100, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;unclickTimes&quot;: 2, &quot;logoImage&quot;: &quot;&quot;, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;floatIconPosition&quot;: 80, &quot;closeSwitch&quot;: 1, &quot;unclickPeriod&quot;: 48, &quot;marginTop&quot;: 0, &quot;bottomMarginWidth&quot;: 2 &#125;, &#123; &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;topRotate&quot;, &quot;floorOrder&quot;: 34, &quot;content&quot;: &#123; &quot;subFloors&quot;: [ &#123; &quot;tpl&quot;: &quot;215&quot;, &quot;data&quot;: [ &#123; &quot;rotate&quot;: -1, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/172958/22/4981/168368/607af798E76ff777a/18500567a2cfd905.gif&quot;, &quot;hasMaskImg&quot;: 0, &quot;maskColor&quot;: &quot;&quot;, &quot;content&quot;: &#123; &#125;, &quot;maintitleColor&quot;: &quot;&quot;, &quot;skuLabelAreaColor&quot;: &quot;&quot;, &quot;showBubble&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7096\&quot;,\&quot;sourceid\&quot;:\&quot;421041\&quot;,\&quot;smartkey\&quot;:&#123;\&quot;resourceid\&quot;:\&quot;home-2-9\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;style\&quot;:\&quot;215\&quot;,\&quot;position\&quot;:\&quot;34#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;421041\&quot;&#125;&quot;, &quot;id&quot;: 421041, &quot;imageType&quot;: 1, &quot;expo&quot;: &quot;7096_34#1#1_0_421041_____421041_215__&quot;, &quot;sloganAreaColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://h5.m.jd.com/babelDiy/Zeus/3N5LH2g1xe2q3cEGDiXeFkLqUrFF/index.html?current_veune=billion&quot; &#125;, &quot;srv&quot;: &quot;7096_0_CMSSH421041_0_946802_0_1_1_________0_421041#0__&#123;\&quot;floorid\&quot;:\&quot;7096\&quot;,\&quot;sourceid\&quot;:\&quot;421041\&quot;,\&quot;picsize\&quot;:1,\&quot;smartkey\&quot;:&#123;\&quot;resourceid\&quot;:\&quot;home-2-9\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;215\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;34#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;421041\&quot;,\&quot;picid\&quot;:\&quot;946802\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;7096\&quot;,\&quot;sourceid\&quot;:\&quot;421041\&quot;,\&quot;picsize\&quot;:1,\&quot;smartkey\&quot;:&#123;\&quot;resourceid\&quot;:\&quot;home-2-9\&quot;,\&quot;controlrate\&quot;:\&quot;-100\&quot;,\&quot;channelid\&quot;:\&quot;home\&quot;&#125;,\&quot;style\&quot;:\&quot;215\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;34#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;421041\&quot;,\&quot;picid\&quot;:\&quot;946802\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;sloganPlaySwitch&quot;: 0, &quot;showName&quot;: &quot;4.18百亿补贴&quot;, &quot;smallImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/172958/22/4981/168368/607af798E76ff777a/18500567a2cfd905.gif&quot;, &quot;priceColor&quot;: &quot;#FC477A,#F2270C&quot;, &quot;positionAndSize&quot;: 1, &quot;isHide&quot;: 0, &quot;subtitleColor&quot;: &quot;#666666&quot;, &quot;mAnimation&quot;: 0, &quot;moduleTitleColor&quot;: &quot;&quot;, &quot;fontBold&quot;: 1, &quot;sloganColor&quot;: &quot;&quot;, &quot;subtitle&quot;: &quot;&quot;, &quot;fontSize&quot;: 1, &quot;slogan&quot;: &quot;&quot;, &quot;img2&quot;: &quot;&quot; &#125; ], &quot;realTpl&quot;: &quot;215&quot; &#125; ], &quot;subFloorNum&quot;: 1 &#125;, &quot;floorId&quot;: 7096, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 21, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;cornerDegree&quot;: &quot;12,12,12,12&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 7096 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;居左&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;&quot;, &quot;bottomMargin&quot;: 2, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;marginTop&quot;: 10, &quot;bottomMarginWidth&quot;: 2 &#125;, &#123; &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;themeFloor&quot;, &quot;floorOrder&quot;: 35, &quot;content&quot;: [ &#123; &quot;tabId&quot;: 11, &quot;title&quot;: &quot;全城购&quot;, &quot;titleColor&quot;: &quot;#1a1a1a&quot;, &quot;unTitleColor&quot;: &quot;#1a1a1a&quot;, &quot;titleImg&quot;: &quot;&quot;, &quot;unTitleImg&quot;: &quot;&quot;, &quot;bgImg&quot;: &quot;&quot;, &quot;themeId&quot;: 29, &quot;showDot&quot;: -1, &quot;dotImg&quot;: &quot;&quot;, &quot;hasBubble&quot;: 1, &quot;bubbleText&quot;: &quot;附近有可配送门店时才会展示&quot;, &quot;bubbleShowTime&quot;: 5, &quot;data&quot;: [ &#123; &quot;type&quot;: &quot;common&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3vFKWVSA532QSFZXCFPRF9nG1VPa/index.html&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;87\&quot;,\&quot;position\&quot;:\&quot;35#1#1\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:0,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 0, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s210x300_jfs/t1/172238/24/3019/65032/60703b5aEbd440fc4/406fc7ff6bf194c3.png!q70.jpg&quot; &#125;, &#123; &quot;type&quot;: &quot;shop&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10625186&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000120081&quot; &#125;, &quot;appId&quot;: &quot;10625186&quot; &#125;, &quot;srv&quot;: &quot;10625186_1000120081_120_56356.0&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;eyJwIjoiNjE5NjIzIiwicGkiOiJiYWJlbCIsInNvdXJjZSI6IjAiLCJ0YWciOiI3ODA3IiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IjIwNCIsInJlcXNpZyI6ImY0M2Q3YzQ5NmNjZjllZTBiMWY4ODZlYTM5YWM3MTljMzZkODM5NCJ9\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;1000120081\&quot;,\&quot;position\&quot;:\&quot;35#1#2\&quot;,\&quot;sourceid\&quot;:\&quot;05129560\&quot;,\&quot;sourcetype\&quot;:6,\&quot;style\&quot;:\&quot;004\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;华致名酒库(大成路店)&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s36x36_jfs/t1/60358/28/8381/107694/5d64a062E3ecdfe41/4a62ec319bbb26de.png!cc_80x80!q70.jpg&quot;, &quot;label&quot;: &quot;领30元券&quot;, &quot;timeLabel&quot;: &quot;2小时&quot;, &quot;distanceLabel&quot;: &quot;56.4km&quot;, &quot;skus&quot;: [ &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10625186&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000120081&quot;, &quot;skuId&quot;: &quot;10026134344013&quot; &#125;, &quot;appId&quot;: &quot;10625186&quot; &#125;, &quot;srv&quot;: &quot;1_10026134344013_318_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/157821/28/19858/115066/607aa998E244de58c/9a9a311f6601ec1a.png!q70.jpg&quot;, &quot;price&quot;: &quot;318&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10625186&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000120081&quot;, &quot;skuId&quot;: &quot;10026134309985&quot; &#125;, &quot;appId&quot;: &quot;10625186&quot; &#125;, &quot;srv&quot;: &quot;2_10026134309985_498_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/164490/17/18163/353795/607668ffEcef16389/2891dca66ce5f266.png!q70.jpg&quot;, &quot;price&quot;: &quot;498&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10625186&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000120081&quot;, &quot;skuId&quot;: &quot;10028615893874&quot; &#125;, &quot;appId&quot;: &quot;10625186&quot; &#125;, &quot;srv&quot;: &quot;3_10028615893874_1650_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/168068/13/15795/491555/60656697E1b1cc2d8/3ee8f3df354d05df.png!q70.jpg&quot;, &quot;price&quot;: &quot;1650&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125; ] &#125;, &#123; &quot;type&quot;: &quot;shop&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10500114&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000035025&quot; &#125;, &quot;appId&quot;: &quot;10500114&quot; &#125;, &quot;srv&quot;: &quot;10500114_1000035025_60_4361.0&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;eyJwIjoiNjE5NjIzIiwicGkiOiJiYWJlbCIsInNvdXJjZSI6IjAiLCJ0YWciOiI3ODA3IiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IjIwNCIsInJlcXNpZyI6ImY0M2Q3YzQ5NmNjZjllZTBiMWY4ODZlYTM5YWM3MTljMzZkODM5NCJ9\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;1000035025\&quot;,\&quot;position\&quot;:\&quot;35#1#3\&quot;,\&quot;sourceid\&quot;:\&quot;05129560\&quot;,\&quot;sourcetype\&quot;:6,\&quot;style\&quot;:\&quot;004\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;星巴克咖啡代购(顺义店)&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s36x36_jfs/t1/114091/35/7617/166250/5ec4e869Ef795fbc3/39e1be346bb3168b.png!cc_80x80!q70.jpg&quot;, &quot;label&quot;: &quot;&quot;, &quot;timeLabel&quot;: &quot;60分钟&quot;, &quot;distanceLabel&quot;: &quot;4.4km&quot;, &quot;skus&quot;: [ &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10500114&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000035025&quot;, &quot;skuId&quot;: &quot;10022922323455&quot; &#125;, &quot;appId&quot;: &quot;10500114&quot; &#125;, &quot;srv&quot;: &quot;1_10022922323455_40_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/124196/30/2320/29317/5ec4d1bfE23ed9d05/828d9336b0fcff62.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;40&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10500114&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000035025&quot;, &quot;skuId&quot;: &quot;10024255385811&quot; &#125;, &quot;appId&quot;: &quot;10500114&quot; &#125;, &quot;srv&quot;: &quot;2_10024255385811_36_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/125060/23/2272/17510/5ec4c739E7c54f191/3c3482c24dd91e6f.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;36&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10500114&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000035025&quot;, &quot;skuId&quot;: &quot;10024255373077&quot; &#125;, &quot;appId&quot;: &quot;10500114&quot; &#125;, &quot;srv&quot;: &quot;3_10024255373077_38_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/119457/32/6173/16553/5ec4c790E410133aa/8c4ce7b320e989d1.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;38&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125; ] &#125;, &#123; &quot;type&quot;: &quot;shop&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10498827&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000034040&quot; &#125;, &quot;appId&quot;: &quot;10498827&quot; &#125;, &quot;srv&quot;: &quot;10498827_1000034040_60_34114.0&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;eyJwIjoiNjE5NjIzIiwicGkiOiJiYWJlbCIsInNvdXJjZSI6IjAiLCJ0YWciOiI3ODA3IiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IjIwNCIsInJlcXNpZyI6ImY0M2Q3YzQ5NmNjZjllZTBiMWY4ODZlYTM5YWM3MTljMzZkODM5NCJ9\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;1000034040\&quot;,\&quot;position\&quot;:\&quot;35#1#4\&quot;,\&quot;sourceid\&quot;:\&quot;05129560\&quot;,\&quot;sourcetype\&quot;:6,\&quot;style\&quot;:\&quot;004\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;农夫山泉直配站-北京&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s36x36_jfs/t29881/294/933449198/61008/55ed37e0/5c01fb40N04470ba2.jpg!cc_80x80!q70.jpg&quot;, &quot;label&quot;: &quot;&quot;, &quot;timeLabel&quot;: &quot;60分钟&quot;, &quot;distanceLabel&quot;: &quot;34.1km&quot;, &quot;skus&quot;: [ &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10498827&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000034040&quot;, &quot;skuId&quot;: &quot;72393854530&quot; &#125;, &quot;appId&quot;: &quot;10498827&quot; &#125;, &quot;srv&quot;: &quot;1_72393854530_53.9_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t2524/29/323043980/65691/2f1e23a5/56454f45N67262b85.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;53.9&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10498827&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000034040&quot;, &quot;skuId&quot;: &quot;10024394506894&quot; &#125;, &quot;appId&quot;: &quot;10498827&quot; &#125;, &quot;srv&quot;: &quot;2_10024394506894_26_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/132048/39/20294/177874/5fda94c8E8fdadb28/50c7287688ee6d88.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;26&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10498827&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000034040&quot;, &quot;skuId&quot;: &quot;72393873127&quot; &#125;, &quot;appId&quot;: &quot;10498827&quot; &#125;, &quot;srv&quot;: &quot;3_72393873127_26_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t5602/34/5972908432/52829/631e7839/596744bdN5bedfd64.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;26&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125; ] &#125;, &#123; &quot;type&quot;: &quot;shop&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10519934&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000043397&quot; &#125;, &quot;appId&quot;: &quot;10519934&quot; &#125;, &quot;srv&quot;: &quot;10519934_1000043397_120_44655.0&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;eyJwIjoiNjE5NjIzIiwicGkiOiJiYWJlbCIsInNvdXJjZSI6IjAiLCJ0YWciOiI3ODA3IiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IjIwNCIsInJlcXNpZyI6ImY0M2Q3YzQ5NmNjZjllZTBiMWY4ODZlYTM5YWM3MTljMzZkODM5NCJ9\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;1000043397\&quot;,\&quot;position\&quot;:\&quot;35#1#5\&quot;,\&quot;sourceid\&quot;:\&quot;05129560\&quot;,\&quot;sourcetype\&quot;:6,\&quot;style\&quot;:\&quot;004\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;芙瑞多蛋糕烘培（北京四店）&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s36x36_jfs/t1/110724/26/4987/413422/5ea142dfE488cde06/1af5da8b89013ddf.jpg!cc_80x80!q70.jpg&quot;, &quot;label&quot;: &quot;领15元券&quot;, &quot;timeLabel&quot;: &quot;2小时&quot;, &quot;distanceLabel&quot;: &quot;44.7km&quot;, &quot;skus&quot;: [ &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10519934&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000043397&quot;, &quot;skuId&quot;: &quot;10024030063014&quot; &#125;, &quot;appId&quot;: &quot;10519934&quot; &#125;, &quot;srv&quot;: &quot;1_10024030063014_218_358&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/155397/3/12357/32288/5feaa12dEc8af2204/417089e3d755aaf3.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;218&quot;, &quot;markingPrice&quot;: &quot;358&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10519934&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000043397&quot;, &quot;skuId&quot;: &quot;10024012598733&quot; &#125;, &quot;appId&quot;: &quot;10519934&quot; &#125;, &quot;srv&quot;: &quot;2_10024012598733_5888_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/117432/23/9121/91766/5ed746f3Ec4ef537b/248243b13b1a2b68.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;5888&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10519934&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000043397&quot;, &quot;skuId&quot;: &quot;10024012663712&quot; &#125;, &quot;appId&quot;: &quot;10519934&quot; &#125;, &quot;srv&quot;: &quot;3_10024012663712_518_&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/66462/27/9286/341322/5d70662eE9ecc56d2/0dd65acb48077cc1.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;518&quot;, &quot;markingPrice&quot;: &quot;&quot; &#125; ] &#125;, &#123; &quot;type&quot;: &quot;shop&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10509076&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000037472&quot; &#125;, &quot;appId&quot;: &quot;10509076&quot; &#125;, &quot;srv&quot;: &quot;10509076_1000037472_100_3360.0&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;eyJwIjoiNjE5NjIzIiwicGkiOiJiYWJlbCIsInNvdXJjZSI6IjAiLCJ0YWciOiI3ODA3IiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IjIwNCIsInJlcXNpZyI6ImY0M2Q3YzQ5NmNjZjllZTBiMWY4ODZlYTM5YWM3MTljMzZkODM5NCJ9\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;1000037472\&quot;,\&quot;position\&quot;:\&quot;35#1#6\&quot;,\&quot;sourceid\&quot;:\&quot;05129560\&quot;,\&quot;sourcetype\&quot;:6,\&quot;style\&quot;:\&quot;004\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;屈臣氏-BJ顺义隆华奥莱店&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s36x36_jfs/t23812/362/2403295549/6879/850c76b1/5b7e1d31Na86b80d0.jpg!cc_80x80!q70.jpg&quot;, &quot;label&quot;: &quot;领20元券&quot;, &quot;timeLabel&quot;: &quot;100分钟&quot;, &quot;distanceLabel&quot;: &quot;3.4km&quot;, &quot;skus&quot;: [ &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10509076&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000037472&quot;, &quot;skuId&quot;: &quot;10020808447910&quot; &#125;, &quot;appId&quot;: &quot;10509076&quot; &#125;, &quot;srv&quot;: &quot;1_10020808447910_31.2_48&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/88836/27/3400/91683/5ddf8324Ed0fa36ed/f25b0b96e9a4e59d.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;31.2&quot;, &quot;markingPrice&quot;: &quot;48&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10509076&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000037472&quot;, &quot;skuId&quot;: &quot;10020808435282&quot; &#125;, &quot;appId&quot;: &quot;10509076&quot; &#125;, &quot;srv&quot;: &quot;2_10020808435282_31.2_48&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t1/20840/7/6003/66150/5c482fd7Ea4997253/abd9f8990c6b6a9a.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;31.2&quot;, &quot;markingPrice&quot;: &quot;48&quot; &#125;, &#123; &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdmp&quot;, &quot;params&quot;: &#123; &quot;vapptype&quot;: 1, &quot;param&quot;: &#123; &quot;bizType&quot;: 1, &quot;venderId&quot;: &quot;10509076&quot;, &quot;source&quot;: &quot;index_1hour&quot;, &quot;storeId&quot;: &quot;1000037472&quot;, &quot;skuId&quot;: &quot;10020808444073&quot; &#125;, &quot;appId&quot;: &quot;10509076&quot; &#125;, &quot;srv&quot;: &quot;3_10020808444073_20_27&quot; &#125;, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/s110x110_jfs/t178/320/702797914/79496/281b1e02/5396bdc3N1f2620a7.jpg!q70.jpg&quot;, &quot;price&quot;: &quot;20&quot;, &quot;markingPrice&quot;: &quot;27&quot; &#125; ] &#125;, &#123; &quot;type&quot;: &quot;slide&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3vFKWVSA532QSFZXCFPRF9nG1VPa/index.html?innerLink=%5B%7B%22id%22%3A%221000120081%22%2C%22skuId%22%3A%2210026134344013_10026134309985_10028615893874%22%7D%2C%7B%22id%22%3A%221000035025%22%2C%22skuId%22%3A%2210022922323455_10024255385811_10024255373077%22%7D%2C%7B%22id%22%3A%221000034040%22%2C%22skuId%22%3A%2272393854530_10024394506894_72393873127%22%7D%2C%7B%22id%22%3A%221000043397%22%2C%22skuId%22%3A%2210024030063014_10024012598733_10024012663712%22%7D%2C%7B%22id%22%3A%221000037472%22%2C%22skuId%22%3A%2210020808447910_10020808435282_10020808444073%22%7D%5D&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7981,\&quot;position\&quot;:\&quot;35#1#7\&quot;,\&quot;style\&quot;:\&quot;-1\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;更多店铺&quot; &#125; ], &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7981,\&quot;position\&quot;:\&quot;35#1\&quot;,\&quot;tabid\&quot;:11,\&quot;themeid\&quot;:29&#125;&quot; &#125;, &#123; &quot;tabId&quot;: 1, &quot;title&quot;: &quot;我的频道&quot;, &quot;titleColor&quot;: &quot;#1a1a1a&quot;, &quot;unTitleColor&quot;: &quot;#1a1a1a&quot;, &quot;titleImg&quot;: &quot;&quot;, &quot;unTitleImg&quot;: &quot;&quot;, &quot;bgImg&quot;: &quot;http://m.360buyimg.com/mobilecms/jfs/t1/123346/23/7986/55195/5f1d45deEc0217d0e/18db07a509e1a6e1.png!q70.jpg&quot;, &quot;themeId&quot;: 6, &quot;showDot&quot;: -1, &quot;dotImg&quot;: &quot;&quot;, &quot;hasBubble&quot;: 0, &quot;data&quot;: [ &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4PgpL1xqPSW1sVXCJ3xopDbB1f69/index.html?collectionId=85&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;85\&quot;,\&quot;position\&quot;:\&quot;35#2#1\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;内衣馆&quot;, &quot;titleColor&quot;: &quot;#FF498E&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t21058/35/1983509038/24129/ba9d78c5/5b3f3880Ncd0d6580.jpg!q70.jpg.dpg.webp&quot;, &quot;subTitle&quot;: &quot;舒适品质&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#FF3D7D&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2NdsiNLZydnew1r48svHj6RXLjnd/index.html?babelChannel=ttt1&amp;collectionId=12&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;12\&quot;,\&quot;position\&quot;:\&quot;35#2#2\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;京东众筹&quot;, &quot;titleColor&quot;: &quot;#FE9624&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/153279/30/12732/59127/5fedab1fE4a480eee/68362f077bb4da8a.jpg!q70.jpg.dpg.webp&quot;, &quot;subTitle&quot;: &quot;超前新品&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#FF8900&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://logistics-mrd.jd.com/express/index.html?source=appMyChannel#/&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;490\&quot;,\&quot;position\&quot;:\&quot;35#2#3\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;寄件服务&quot;, &quot;titleColor&quot;: &quot;#FE9624&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/43382/40/5761/8920/5cf619bfE34c1f752/526070b96b1791e1.jpg!q70.jpg.dpg.webp&quot;, &quot;subTitle&quot;: &quot;1小时上门&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#FF8900&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3XGEQpJJhqjMjmPaLjrzJPCu68UZ/index.html&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;118\&quot;,\&quot;position\&quot;:\&quot;35#2#4\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;京东奢品&quot;, &quot;titleColor&quot;: &quot;#FF498E&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/79572/4/5077/30255/5d358008E86c64a37/d827e367ae57bd10.jpg!q70.jpg.dpg.webp&quot;, &quot;subTitle&quot;: &quot;奢品聚集地&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#FF3D7D&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/FxaS5JGmuJH65DB4HxF7rCRRewb/index.html?collectionId=224&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;224\&quot;,\&quot;position\&quot;:\&quot;35#2#5\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;窝者家居&quot;, &quot;titleColor&quot;: &quot;#08D8AF&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/128271/28/2122/36283/5ec25802E35bee713/c81e65e02d381ed7.png!q70.jpg&quot;, &quot;subTitle&quot;: &quot;高颜值家居&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#00FFC8&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://active.jd.com/forever/cashback/?channellv=sqcs&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;555\&quot;,\&quot;position\&quot;:\&quot;35#2#6\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;领金贴&quot;, &quot;titleColor&quot;: &quot;#FE9624&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/85241/4/11608/25403/5e38e48eEdbc984fa/7c7415ac5cf0c112.png!q70.jpg&quot;, &quot;subTitle&quot;: &quot;省钱小助手&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#FF8900&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3dQpt42Eu2wQVrPQi2yyCPy7FjYY/index.html&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;480\&quot;,\&quot;position\&quot;:\&quot;35#2#7\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;京东服务&quot;, &quot;titleColor&quot;: &quot;#08D8AF&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/79736/38/758/31631/5cefb932Ec28b3947/fc876a1f27c6968f.jpg!q70.jpg.dpg.webp&quot;, &quot;subTitle&quot;: &quot;京东好服务&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#00FFC8&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://m.healthjd.com/?requestIsvToken=true&amp;utm_source=appbaibaoxiang&amp;collectionId=107&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;107\&quot;,\&quot;position\&quot;:\&quot;35#2#8\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;问医生&quot;, &quot;titleColor&quot;: &quot;&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/67476/21/11571/39011/5d8dde4fEde101c65/ce74bd34fdd0a595.jpg!q70.jpg.dpg.webp&quot;, &quot;subTitle&quot;: &quot;&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3uvPyw1pwHARGgndatCXddLNUxHw/index.html&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;593\&quot;,\&quot;position\&quot;:\&quot;35#2#9\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;京东小家电&quot;, &quot;titleColor&quot;: &quot;#2BDB52&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/116227/8/15477/84927/5f3f8d7cEc92c9e73/3abef5404a95690c.png!q70.jpg&quot;, &quot;subTitle&quot;: &quot;精致小家电&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#28FF00&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;channel&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;guanzhu&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/4RXyb1W4Y986LJW8ToqMK14BdTD/index.html?collectionId=290&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;1\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;290\&quot;,\&quot;position\&quot;:\&quot;35#2#10\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:4,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;鞋靴馆&quot;, &quot;titleColor&quot;: &quot;#FE9624&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/124380/12/2490/60827/5ec6257cE0b7ba760/365c6f158960e323.png!q70.jpg&quot;, &quot;subTitle&quot;: &quot;大牌精选&quot;, &quot;label&quot;: &quot;已关注&quot;, &quot;maskColor&quot;: &quot;#FF8900&quot;, &quot;status&quot;: &quot;1&quot; &#125;, &#123; &quot;type&quot;: &quot;slide&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;jdreactcommon&quot;, &quot;params&quot;: &#123; &quot;ishidden&quot;: true, &quot;appname&quot;: &quot;JDReactChannelCenter&quot;, &quot;modulename&quot;: &quot;JDReactChannelCenter&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7981,\&quot;position\&quot;:\&quot;35#2#11\&quot;,\&quot;style\&quot;:\&quot;-1\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;更多频道&quot; &#125; ], &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7981,\&quot;position\&quot;:\&quot;35#2\&quot;,\&quot;tabid\&quot;:1,\&quot;themeid\&quot;:6&#125;&quot; &#125;, &#123; &quot;tabId&quot;: 14, &quot;title&quot;: &quot;我的宝宝&quot;, &quot;titleColor&quot;: &quot;#1a1a1a&quot;, &quot;unTitleColor&quot;: &quot;#1a1a1a&quot;, &quot;titleImg&quot;: &quot;&quot;, &quot;unTitleImg&quot;: &quot;&quot;, &quot;bgImg&quot;: &quot;&quot;, &quot;themeId&quot;: 32, &quot;showDot&quot;: -1, &quot;dotImg&quot;: &quot;&quot;, &quot;hasBubble&quot;: 0, &quot;data&quot;: [ &#123; &quot;type&quot;: &quot;common&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://prodev.m.jd.com/mall/active/iLLTmkvCT6AMxs3sNFqCMQ3oGDz/index.html?babelChannel=ttt1&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;58\&quot;,\&quot;position\&quot;:\&quot;35#3#1\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:0,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot;, &quot;imgType&quot;: 0, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s210x300_jfs/t1/144457/25/13209/67666/5fa24846E01567719/a7e3050055e24fd9.png!q70.jpg&quot; &#125;, &#123; &quot;type&quot;: &quot;common&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://prodev.m.jd.com/mall/active/3Rnva3U4MtVkRGFzt7izasxnQfkz/index.html?babelChannel=ttt10&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;59\&quot;,\&quot;position\&quot;:\&quot;35#3#2\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:0,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot;, &quot;imgType&quot;: 0, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s210x300_jfs/t1/166241/25/18114/85217/60753e44E626b007e/9daf4bba570db121.png!q70.jpg&quot; &#125;, &#123; &quot;type&quot;: &quot;common&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/3bkGny4uoRneq7n74LD84iR31Fmc/index.html?babelChannel=ttt1&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;60\&quot;,\&quot;position\&quot;:\&quot;35#3#3\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:0,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot;, &quot;imgType&quot;: 0, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s210x300_jfs/t1/144045/28/13182/64686/5fa2487bE4a9bf197/6e8cfe88c10b9e98.png!q70.jpg&quot; &#125;, &#123; &quot;type&quot;: &quot;common&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/34zuxfMXMXCepmiRfNGxqFoy8wv5/index.html?babelChannel=ttt1&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;61\&quot;,\&quot;position\&quot;:\&quot;35#3#4\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:0,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot;, &quot;imgType&quot;: 0, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s210x300_jfs/t1/128563/31/17404/48222/5fa24897E338eba1d/6e616c8d0316d98e.png!q70.jpg&quot; &#125;, &#123; &quot;type&quot;: &quot;common&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://pro.m.jd.com/mall/active/2pvx5FnYe8q3x6cLRVGd92Bt4Ypq/index.html?babelChannel=ttt1&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;biinfo\&quot;:\&quot;\&quot;,\&quot;channeltype\&quot;:\&quot;\&quot;,\&quot;floorid\&quot;:7981,\&quot;matid\&quot;:\&quot;62\&quot;,\&quot;position\&quot;:\&quot;35#3#5\&quot;,\&quot;sourceid\&quot;:\&quot;\&quot;,\&quot;sourcetype\&quot;:0,\&quot;style\&quot;:\&quot;002\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot;, &quot;imgType&quot;: 0, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/s210x300_jfs/t1/132334/9/14800/57751/5fa248abEb6b7be47/af24dbe6e2624819.png!q70.jpg&quot; &#125;, &#123; &quot;type&quot;: &quot;slide&quot;, &quot;jump&quot;: &#123; &quot;des&quot;: &quot;m&quot;, &quot;params&quot;: &#123; &quot;url&quot;: &quot;https://prodev.m.jd.com/mall/active/iLLTmkvCT6AMxs3sNFqCMQ3oGDz/index.html?babelChannel=ttt1&quot; &#125;, &quot;srv&quot;: &quot;&quot; &#125;, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7981,\&quot;position\&quot;:\&quot;35#3#6\&quot;,\&quot;style\&quot;:\&quot;-1\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot;, &quot;imgType&quot;: 1, &quot;title&quot;: &quot;更多权益&quot; &#125; ], &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:7981,\&quot;position\&quot;:\&quot;35#3\&quot;,\&quot;tabid\&quot;:14,\&quot;themeid\&quot;:32&#125;&quot; &#125; ], &quot;floorId&quot;: 7981, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 21, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;cornerDegree&quot;: &quot;24,24,24,24&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &#125;, &quot;srv&quot;: 7981 &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;测试&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;&quot;, &quot;playType&quot;: 0, &quot;bottomMargin&quot;: 4, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;hasShop&quot;: &quot;1&quot;, &quot;marginTop&quot;: 10, &quot;bottomMarginWidth&quot;: 2 &#125;, &#123; &quot;jumpType&quot;: 2, &quot;img&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t4354/119/1137735522/221187/d4ab06e5/58be83ccN8e831a11.png!q70.jpg&quot;, &quot;headType&quot;: 0, &quot;rightCornerImg&quot;: &quot;&quot;, &quot;curve&quot;: 0, &quot;rightCornerColor&quot;: &quot;&quot;, &quot;type&quot;: &quot;recommend&quot;, &quot;jumpTo&quot;: &quot;&quot;, &quot;floorOrder&quot;: 497, &quot;floorId&quot;: 8407, &quot;head&quot;: 0, &quot;verticalInterval&quot;: 1, &quot;marginHorizontal&quot;: 0, &quot;functionId&quot;: &quot;indexRecommend&quot;, &quot;shareContent&quot;: &quot;&quot;, &quot;selectedTextColor&quot;: &quot;&quot;, &quot;param&quot;: &quot;dataFrom=2&quot;, &quot;closeButton&quot;: 0, &quot;fontShape&quot;: 0, &quot;expoJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8407\&quot;,\&quot;sourceid\&quot;:\&quot;409568\&quot;,\&quot;style\&quot;:\&quot;21\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;497#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;409568\&quot;&#125;&quot;, &quot;marginColor&quot;: &quot;&quot;, &quot;innnerInterval&quot;: 1, &quot;expo&quot;: &quot;8407_497#1#1_0_409568_____409568_21__&quot;, &quot;cornerDegree&quot;: &quot;&quot;, &quot;bottomColor&quot;: &quot;&quot;, &quot;jump&quot;: &#123; &quot;params&quot;: &#123; &quot;dataFrom&quot;: &quot;2&quot; &#125;, &quot;srv&quot;: &quot;8407_0_CMSSH409568_0_932988_0_1_1_________0_409568#0__&#123;\&quot;floorid\&quot;:\&quot;8407\&quot;,\&quot;sourceid\&quot;:\&quot;409568\&quot;,\&quot;style\&quot;:\&quot;21\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;497#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;409568\&quot;&#125;&quot;, &quot;srvJson&quot;: &quot;&#123;\&quot;floorid\&quot;:\&quot;8407\&quot;,\&quot;sourceid\&quot;:\&quot;409568\&quot;,\&quot;style\&quot;:\&quot;21\&quot;,\&quot;sourcetype\&quot;:\&quot;0\&quot;,\&quot;position\&quot;:\&quot;497#1#1\&quot;,\&quot;moduleid\&quot;:\&quot;409568\&quot;&#125;&quot; &#125;, &quot;rightCorner&quot;: &quot;&quot;, &quot;showName&quot;: &quot;新ui&quot;, &quot;shareAvatar&quot;: &quot;&quot;, &quot;textColor&quot;: &quot;&quot;, &quot;url&quot;: &quot;&quot;, &quot;floorDisplayVersion&quot;: &quot;9.2.4&quot;, &quot;showSubTitle&quot;: 0, &quot;logoImage&quot;: &quot;&quot;, &quot;shareTitle&quot;: &quot;&quot;, &quot;playType&quot;: 0, &quot;bottomMargin&quot;: 0, &quot;bottomMarginColor&quot;: &quot;&quot;, &quot;isShare&quot;: 1, &quot;shareUrl&quot;: &quot;&quot;, &quot;sourceValue&quot;: &quot;8407_0_CMSSH409568_1618725704_20&quot;, &quot;marginTop&quot;: 10, &quot;bottomMarginWidth&quot;: 2 &#125; ], &quot;topBgImgBigColor&quot;: &quot;&quot;, &quot;topBgImg&quot;: &quot;&quot;, &quot;frontExpids&quot;: &quot;F_0_0&quot;, &quot;recommendAB&quot;: &quot;B&quot;, &quot;anotherSideSwitch&quot;: 0, &quot;showLightIcon&quot;: 0, &quot;homeArea&quot;: &#123; &quot;areaSwitch&quot;: false, &quot;img&quot;: &quot;http://m.360buyimg.com/mobilecms/jfs/t1/51662/2/6074/1082/5d4132bdEd55d9f63/8ea0578ede4d3ee8.png&quot;, &quot;popCount&quot;: 1, &quot;homeAreaCode&quot;: 0, &quot;text&quot;: &quot;地区&quot; &#125;, &quot;appCenterAnimations&quot;: 1, &quot;topIconText&quot;: 1, &quot;loginText&quot;: &quot;登录开启品质生活&quot;, &quot;bannerPosition&quot;: 0, &quot;pullBubble&quot;: 1, &quot;displayVersion&quot;: &quot;9.0.0&quot;, &quot;darkMode&quot;: &#123; &quot;darkModePercent&quot;: 10, &quot;darkModeSwitch&quot;: true, &quot;darkModeTipSwitch&quot;: true &#125;, &quot;naviVer&quot;: &quot;1591188808000&quot;, &quot;toTopBtnImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t16789/324/2566217976/2179/58b27e89/5af962e6N61fbd832.png&quot;, &quot;canBeDefault&quot;: false, &quot;executeTime&quot;: 317&#125; 首页展示的图片普遍是webp和jpg 进入app广告页图片进入app的广告页会展示的图片 请求地址：https://m.360buyimg.com/mobilecms/s1080x2338_jfs/t1/176636/38/4859/254244/607a940dEd8d1a40e/1ac6a9f7097b203f.jpg 请求方式：GET 协议：HTTP/1.1 请求大小：228 B 请求耗时：192 ms 响应大小：252 kB 响应 推荐品牌滑动栏图片 请求地址：https://m.360buyimg.com/mobilecms/s1080x662_jfs/t1/162247/19/18738/108033/6078e5b2Ece7813c9/7e20b3cad50cdb80.jpg!cr_1053x420_4_0!q70.jpg.dpg.webp 请求方式GET 协议HTTP/1.1 请求大小261 B 请求耗时557 ms 响应大小：29.58 kB 响应 商品推荐 请求地址https://api.m.jd.com/client.action?functionId=uniformRecommend 请求方式POST 协议h2 请求大小2.51 kB 请求耗时501 ms 响应大小14.19 kB 响应quot;tabId&quot;: 10220519, &quot;code&quot;: &quot;0&quot;, &quot;new900UIStrategy&quot;: &quot;B&quot;, &quot;waterFallStrategy&quot;: 1, &quot;tabs&quot;: [ &#123; &quot;tabId&quot;: 10220519, &quot;title&quot;: &quot;精选&quot;, &quot;subtitle&quot;: &quot;为你推荐&quot; &#125;, &#123; &quot;tabId&quot;: 20190002, &quot;title&quot;: &quot;秒杀&quot;, &quot;selectedTitleImg&quot;: &quot;https://img11.360buyimg.com/imagetools/jfs/t1/174399/2/3864/6399/6075792eE16165cbd/946984898e27163c.png&quot;, &quot;unselectedTitleImg&quot;: &quot;https://img14.360buyimg.com/imagetools/jfs/t1/171394/40/18243/4043/60757952Eea81d113/7b62d43c66b2d580.png&quot;, &quot;subtitle&quot;: &quot;好物热卖&quot; &#125;, &#123; &quot;tabId&quot;: 16325884, &quot;title&quot;: &quot;直播&quot;, &quot;subtitle&quot;: &quot;主播力荐&quot;, &quot;broker_info&quot;: &quot;eyJwIjoiNjYwMDExIiwic291cmNlIjoiMCIsInRhZyI6Ii0xIiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6IjdlYTAyZWU2NDVlZDMwYmVmMGIxMGZlMjQxMDM0MWFhZDdkOGU2YzMifQ==&quot; &#125;, &#123; &quot;tabId&quot;: 14846285, &quot;title&quot;: &quot;实惠&quot;, &quot;subtitle&quot;: &quot;便宜好货&quot;, &quot;broker_info&quot;: &quot;eyJwIjoiNjYwMDExIiwic291cmNlIjoiMCIsInRhZyI6Ii0xIiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6IjdlYTAyZWU2NDVlZDMwYmVmMGIxMGZlMjQxMDM0MWFhZDdkOGU2YzMifQ==&quot; &#125;, &#123; &quot;tabId&quot;: 12020358, &quot;title&quot;: &quot;进口&quot;, &quot;subtitle&quot;: &quot;京东国际&quot;, &quot;broker_info&quot;: &quot;eyJwIjoiNjYwMDExIiwic291cmNlIjoiMCIsInRhZyI6Ii0xIiwiY3NfdXNlciI6IjIiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6IjdlYTAyZWU2NDVlZDMwYmVmMGIxMGZlMjQxMDM0MWFhZDdkOGU2YzMifQ==&quot; &#125; ], &quot;playCompleteState&quot;: &quot;1&quot;, &quot;isPreload&quot;: 1, &quot;isEnableDarkMode&quot;: &quot;1&quot;, &quot;title&quot;: &quot;https://m.360buyimg.com/mobilecms/s1080x1080_jfs/t22762/45/665418795/22007/60c3cb9a/5b3b538aNe78ce47a.png!q70.jpg&quot;, &quot;animationSwitchOfTabs&quot;: true, &quot;waterFlow&quot;: &quot;0&quot;, &quot;callNewMixerStrategy&quot;: &quot;B&quot;, &quot;isOpenMemoryOpt&quot;: true, &quot;bgColor&quot;: &quot;#f2f2f2&quot;, &quot;fbWizard&quot;: &#123; &quot;imgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t3817/300/1298264125/12824/ae65a9c4/582ac206N0f30483c.png&quot;, &quot;timestamp&quot;: 16 &#125;, &quot;newTabUI&quot;: true, &quot;tabsColor&quot;: [ [ &quot;#f2f2f2&quot;, &quot;#f2f2f2&quot; ], &quot;#FFFFFF&quot;, &quot;#2E2D2D&quot;, &quot;#808080&quot;, &quot;#1A1A1A&quot;, &quot;#F2270C&quot; ], &quot;darkModeTabsColor&quot;: [ [ &quot;#141212&quot;, &quot;#141212&quot; ], &quot;#141212&quot;, &quot;#ECECEC&quot;, &quot;#80848383&quot;, &quot;#ECECEC&quot;, &quot;#FF3826&quot; ], &quot;publicTest&quot;: &quot;0&quot;, &quot;publicTestBubble&quot;: &quot;0&quot;, &quot;feedBackImmediateEffect&quot;: &quot;1&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;request_id&quot;: &quot;3ec602ce-e1c0-4b30-a858-c7bfd3457ca3&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIn0=&quot;, &quot;tracking&quot;: &#123; &quot;Home_RecomSkuExpo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.request_id&quot;, &quot;uet.b_rec&quot;, &quot;uet.b_ads&quot; ], &quot;prv_keys&quot;: [ &quot;isPlusWare&quot;, &quot;uet.b_pub.palantir_exp_id&quot;, &quot;uet.b_rec&quot;, &quot;uet.b_ads&quot; ] &#125;, &quot;Home_Productid&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.request_id&quot;, &quot;uet.b_rec&quot;, &quot;uet.b_ads&quot; ], &quot;prv_keys&quot;: [ &quot;isPlusWare&quot;, &quot;uet.b_pub.palantir_exp_id&quot;, &quot;uet.b_rec&quot;, &quot;uet.b_ads&quot; ] &#125; &#125; &#125;, &quot;wareInfoList&quot;: [ &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10025802445921&quot;, &quot;wname&quot;: &quot;ikbc87机械键盘游戏樱桃cherry轴电脑外设笔记本有线数字办公自营C104/W200无线可选 C87有线87键 红轴&quot;, &quot;markType&quot;: 1, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;329.00&quot;, &quot;underlinePrice&quot;: &quot;349.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1207\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10025802445921\&quot;,\&quot;ts\&quot;:\&quot;1618725710\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3636929733\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1207\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;ac29b937-e45f-4524-9295-1b3da082604a\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500124368&quot;, &quot;opPrice&quot;: &quot;349.00&quot;, &quot;lpPrice&quot;: &quot;369.00&quot;, &quot;couponInfo&quot;: &quot;领券满300减30&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=6B6h-9NL0gjPa6gr724Jyb9EOh63GGw0Do3u0_aOimqqEaAvwAwi7EJ94RLeeAVUmJIgaLQhVdjKC7vckCjUKkKmK4JowVdYG9JLIe4VCyhcftZBNZUph3on_NNK0LzDJ04_qT-WZ8GEApufeBERq_nY1xjnKx882pXArptCox84Vu8Hg6HR6dAjaEUbBnn7sr0_ZnuXSHCOcxDiI4Q3Zw&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTgwMjQ0NTkyMS5odG1s&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam83zxo3XDxflIQz5a0Eqj4icWeZ1J9_o9q8bTLqo_M0WuIGcfrtJSCm37E2CV-LXE3loR9Vq4WvTTO8Zyu72T893ZyWa9DZoPzECk2wdXSnCz5tqpqCSIUXaJ-1hPkuAaAU9T1b2O3gKgl5oYf9p5p5C6cR0dVm18aqLzTIVCeOZyqz59dxWBkyLMwUU0jdzhlr67ioMG3ZkF4ycvKkMSsi_ZSOE1XoGnUz0NxmPn67ypXgO3Td1B2gd35w8SecWrrq_jZ-y3R1rmIiVfqcKQi8BjTf7UZU9YJnTdm3qwDuWREkLBykR5IABWA4iwso27fJonsYOP8SID9uiaNR5-kJhLwbXPf91s-uIQwBYfBz6IBad2B5KQa3mRAuY1r7cEG95mzecLOpjVEXLF_Fz8u9Ig3RTXqE7QcxQz6fVtUbRmtPP_SGBOQkVUBVuEmK3ldEhopMTvDjBlZ_QwD33PcWjqu0HDQMW6y9I7UwonSIAqHc28Lp_p3UOpvp5oSr_twuqG-BiXpASrsYJoMZ9306rDOFzVmOaCBUMS3yKJqX-fm7kAMlphRrwK-D2yab7wWjlWmb3F2GNkbhYAm4HBGFITvUqodMtnQdlNJJICqfjSGuIr8Cn6_e2S3xYxOQeDMu1P-oIRS-ODqX03aGxC1RQql_HmzG17VeRJ_0wnQxAWo1YQKH-1e9JPjIxkp4VQ_TR_YtgQUTQy-0QQmS9LKSzlele8xHKzIWEMjY-AbfX_94K4nUisQn9yvda1iaOQC_kx960NINdm4k67c9FSldjPFOb0UUHAK1UlFwt_rjA9J2cOXS__xIPazQCKg-ipfYC1iySbQC47Q81YkGXkTpCwY362zooSOXscZgEbCnTP0bBWkez5ZecjBo2cDmGRde611W6RR-UiBwycxukCcE3gp_3qkowe-B3TQ-aFo4aLmeDnyqcWh1I0zTryPFwUwcz4fCl1FRoOQhfydMCjsf0K7tWmK6tkFpcuww6vHh-vmOaIdz7Nb97-lvNpJmgHNmP9vo_DQxJhznZVhGUoBOLe6StLwOilA0UkhkN2k0VDh6BZb2Hk3PAAk0sBwp3E86LrEhDe97_MCXZvjBvR0ECUDm975fDhNxpexqj7IO1pv9yUls5RnpHTXWWnOwhJ4E3Pz9FNjAvMeBhsPFvCSnXCo-5O437mZIiYAPpOvavuSE_LGHVfLBUij2PG7dFkcY&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近期购买用户过千\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;0\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;秒杀划线价\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东秒杀\&quot;,\&quot;skuid\&quot;:\&quot;10025802445921\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_var_139&quot;, &quot;labelTitle&quot;: &quot;领券满300减30&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;1\&quot;,\&quot;skus\&quot;:[\&quot;10025802445921\&quot;],\&quot;last_click_id\&quot;:\&quot;74c34d43-4f40-457e-95bf-1eb08e62fc84\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;&#125;&#125;&quot;, &quot;icon618Type&quot;: &quot;2&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTgwMjQ0NTkyMS5odG1s&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam83zxo3XDxflIQz5a0Eqj4icWeZ1J9_o9q8bTLqo_M0WuIGcfrtJSCm37E2CV-LXE3loR9Vq4WvTTO8Zyu72T893ZyWa9DZoPzECk2wdXSnCz5tqpqCSIUXaJ-1hPkuAaAU9T1b2O3gKgl5oYf9p5p5C6cR0dVm18aqLzTIVCeOZyqz59dxWBkyLMwUU0jdzhlr67ioMG3ZkF4ycvKkMSsi_ZSOE1XoGnUz0NxmPn67ypXgO3Td1B2gd35w8SecWrrq_jZ-y3R1rmIiVfqcKQi8BjTf7UZU9YJnTdm3qwDuWREkLBykR5IABWA4iwso27fJonsYOP8SID9uiaNR5-kJhLwbXPf91s-uIQwBYfBz6IBad2B5KQa3mRAuY1r7cEG95mzecLOpjVEXLF_Fz8u9Ig3RTXqE7QcxQz6fVtUbRmtPP_SGBOQkVUBVuEmK3ldEhopMTvDjBlZ_QwD33PcWjqu0HDQMW6y9I7UwonSIAqHc28Lp_p3UOpvp5oSr_twuqG-BiXpASrsYJoMZ9306rDOFzVmOaCBUMS3yKJqX-fm7kAMlphRrwK-D2yab7wWjlWmb3F2GNkbhYAm4HBGFITvUqodMtnQdlNJJICqfjSGuIr8Cn6_e2S3xYxOQeDMu1P-oIRS-ODqX03aGxC1RQql_HmzG17VeRJ_0wnQxAWo1YQKH-1e9JPjIxkp4VQ_TR_YtgQUTQy-0QQmS9LKSzlele8xHKzIWEMjY-AbfX_94K4nUisQn9yvda1iaOQC_kx960NINdm4k67c9FSldjPFOb0UUHAK1UlFwt_rjA9J2cOXS__xIPazQCKg-ipfYC1iySbQC47Q81YkGXkTpCwY362zooSOXscZgEbCnTP0bBWkez5ZecjBo2cDmGRde611W6RR-UiBwycxukCcE3gp_3qkowe-B3TQ-aFo4aLmeDnyqcWh1I0zTryPFwUwcz4fCl1FRoOQhfydMCjsf0K7tWmK6tkFpcuww6vHh-vmOaIdz7Nb97-lvNpJmgHNnbQU2d2itSBzVGYdKyXI7fZ_QI-HMHRrmSPsb1b5d6eJPHr-vlAektQ1SdXDfjVyc0hIqOak2yd9zkNfI-FZOU4sB1tkoZm-hu7NLZuJLyz9NvMwZqjgjixHyrBSB5ezYXOjkL7admjm97nEwhfB6K_-MXUcrCR8J64PBz6f7-1deUaoiKXWKHAA1TVjAJjys&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon2&quot;: &quot;rec_067&quot;, &quot;icon618&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/165341/2/15900/5668/60658e5bE04a1baae/23ab0ff4f44ebeab.png&quot;, &quot;recomReason&quot;: &quot;近期购买用户过千&quot;, &quot;recomReasonTab&quot;: &quot;tab_var_138&quot;, &quot;venderId&quot;: &quot;10157456&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近期购买用户过千\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;秒杀划线价\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;0\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东秒杀\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025802445921\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;index\&quot;:\&quot;0\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;10025802445921\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;10025802445921\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;10025802445921#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#1#0#D0@L0@610#-100#301#1#0#京东秒杀#0#10220519#0#1#-100#0#1#秒杀划线价#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=#0#-100#-100#-100#近期购买用户过千&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;isSpike&quot;: &quot;1&quot;, &quot;isSpikeWare2&quot;: &quot;1&quot;, &quot;seckillType&quot;: &quot;3&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;spu&quot;: &quot;10025802445920&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;7763388&quot;, &quot;wname&quot;: &quot;ESCASE 华为荣耀平板触控/触屏笔 手写绘画笔 通用手机/平板手 塑芯笔 ES-TP-i8+白色&quot;, &quot;wareType&quot;: 128, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t23179/136/303297143/107613/b8a89dde/5b2b9709N8831ba1d.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;15.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: true, &quot;isPinGouWare&quot;: false, &quot;tryPlusPrice&quot;: &quot;13.90&quot;, &quot;isFansWare&quot;: false, &quot;priceColor&quot;: &quot;232326&quot;, &quot;priceIcon&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t3331/312/2223477324/2115/42d33f4b/584539b7N0c09e061.png&quot;, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500048163&quot;, &quot;opPrice&quot;: &quot;15.00&quot;, &quot;couponInfo&quot;: &quot;领券满880减80&quot;, &quot;userLabel&quot;: &quot;111&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;1&quot;, &quot;client_exposal_url&quot;: &quot;&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjNlYzYwMmNlLWUxYzAtNGIzMC1hODU4LWM3YmZkMzQ1N2NhMyIsImNzX3VzZXIiOiIwIiwic2t1aWQiOiI3NzYzMzg4IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;reason\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;1\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:1,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;2\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;plus\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;-100\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;自营\&quot;,\&quot;skuid\&quot;:\&quot;7763388\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_var_139&quot;, &quot;labelTitle&quot;: &quot;领券满880减80&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;beltType&quot;: &quot;3&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;0\&quot;,\&quot;skus\&quot;:[\&quot;7763388\&quot;],\&quot;last_click_id\&quot;:\&quot;\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjNlYzYwMmNlLWUxYzAtNGIzMC1hODU4LWM3YmZkMzQ1N2NhMyIsImNzX3VzZXIiOiIwIiwic2t1aWQiOiI3NzYzMzg4IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;&#125;&#125;&quot;, &quot;icon618Type&quot;: &quot;2&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;9987&quot;, &quot;category2&quot;: &quot;830&quot;, &quot;category3&quot;: &quot;13659&quot;, &quot;benefitTime&quot;: &quot;4.9-4.30&quot;, &quot;benefitTitle&quot;: &quot;多买优惠 2件9折&quot;, &quot;benefitImageUrl&quot;: &quot;https://img10.360buyimg.com/ling/jfs/t1/45062/18/12723/43076/5d9bebc4Ee42bcabf/5713fbd49dc84af5.png&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.660000$src=rec$action=1$reqsig=ff8d0cdfa63162dae69b6abf0a6ef003bd26e885$enb=1$sku=0$p=660000$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=7763388$index=0$st=0$adcli=$expid=D0@L0@610$mexpid=D0@L0@610$im=$rid=4342549711667881678$ver=1$sig=c648faa59aacdb1c7576dacd548019062c82f6b9&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon2&quot;: &quot;tab_054&quot;, &quot;icon3&quot;: &quot;tab_040&quot;, &quot;icon3Price&quot;: &quot;13.90&quot;, &quot;icon618&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/173816/28/1470/5668/60659006E82b4f2ee/431e057232ae0afa.png&quot;, &quot;venderId&quot;: &quot;1000015346&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjNlYzYwMmNlLWUxYzAtNGIzMC1hODU4LWM3YmZkMzQ1N2NhMyIsImNzX3VzZXIiOiIwIiwic2t1aWQiOiI3NzYzMzg4IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;reason\&quot;:\&quot;-100\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;plus\&quot;,\&quot;saleinfo\&quot;:\&quot;1\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;1\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;beltflowID\&quot;:\&quot;2\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;自营\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;7763388\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjNlYzYwMmNlLWUxYzAtNGIzMC1hODU4LWM3YmZkMzQ1N2NhMyIsImNzX3VzZXIiOiIwIiwic2t1aWQiOiI3NzYzMzg4IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;index\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;7763388\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;1\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;skuid\&quot;:\&quot;7763388\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;7763388#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#0#1#D0@L0@610#-100#-100#1#1#自营#0#10220519#0#1#1#0#1#plus#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjNlYzYwMmNlLWUxYzAtNGIzMC1hODU4LWM3YmZkMzQ1N2NhMyIsImNzX3VzZXIiOiIwIiwic2t1aWQiOiI3NzYzMzg4IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=#0#-100#-100#-100#-100&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;1000015346&quot;, &quot;spu&quot;: &quot;7763388&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIiwic2t1X2lkIjoiNzc2MzM4OCIsInJlcXNpZyI6IjNlYzYwMmNlLWUxYzAtNGIzMC1hODU4LWM3YmZkMzQ1N2NhMyJ9&quot; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;70732588133&quot;, &quot;wname&quot;: &quot;cherry樱桃轴机械键盘背光USB有线RK987电竞吃鸡游戏办公打字笔记本台式外接电脑女生 87键白色【无光】 德国cherry红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/162503/31/5949/113505/60216a07Efe78b375/f7884e126c9be713.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;259.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1207\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;70732588133\&quot;,\&quot;ts\&quot;:\&quot;1618725710\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;8933173256839858590\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1207\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;ac29b937-e45f-4524-9295-1b3da082604a\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500061895&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;2&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=ROvLgDr3PGIDkvVdOOX4pALBpV7F9BJ4m-hJfpJv2cdAOdgZCiv-RkTglLozqzh8-Q8I1Mv56UjCA7jJ0s74qrFPHakN0dWFWpw88JdR7nGB44t207F21tF6YaCpHHwYI_xHklBUc3eNxMCbXw_o6cHkmQtvEO5iO4ehZNZ0efPyiHksqBWEOnQsEE2jjJj8&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC83MDczMjU4ODEzMy5odG1s&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam83T-WaOqLWLNgIMwKOXM4EZoPuNkqAtXb4OjMQ_zNcb9hySVg-brG_ddCGu5uuxA0DUu7ulRNmUmS12OHtkk3hsr9i6pvLP-qV-a2rG5WbvbcGRAY23UbStB3no1N8utYNH-FI9EA6LOdpOavzew0_2v9aSfrwpWpfuuhYkgub_JTP45LvgC-uO3bhbKlfa1eyZ-IDS_yj8BrBcPcxE6r8KKO7a-lOgKQeXGyAsY6uiqkj-g1hNvbErbJUVB-wTp5mrFFa3swwGlMPy5NqyYClKqMrYtUpp7rbImdiTFWCSOROvaFwntjPOjeOT5pUapRwLPeUNmzi8QHTUpJTov6yFsVUBA6UJvseCjgsXK3IdJ0DS1FhQ9lQFKlmJYqaS3OyqO4xmc5oz-bp7lP_xZTFv7S-9R0glbWolwWirIFyKPztBoFFsz07bUnO-IVsf9bKd-xNps2WKZP9LSV8cFTnEAbrthg7MqCZu9WeFYAJXMUxiHktyJRxIYN1Q1bxbqyop7m_D4pwP1M7kj2o-JuckDRbALU8gTb75jH7cg2QywaL7RAB4QPMh0sjBbdgVSLLU6zkFYAulcuHX7gSopPslvmVq4gOWDnDUCRnlURggROPX1JO4HPX5OqoTCHcR4v8mbU6y-EXqZ6ITywq6WLBWgtB-zm9w7Bx9HyIy4sIjSoNhEor5aSLhZ8q7aEjUSzsxJSsrmmJ4UDzTpzwqpAjFcvkUpXtHQuO7UX7Anh3kXo2sCxxSgPWoqhV5F5Xdxe2-kqtEQgAEC0j9i8giB5QzZihip9XpX_a7wYBPjr_FjNUwzEoZmlJr8LqQ_KCpRpov3Mql2IDkdRII_K8IW2jvt7ZH0ruJ1TmXlDL25g1irE2OD80yYa62g_dzJ_FowCuj9Jyi7_KwzOLPj6UNXZ4WHamFk7iSrnmUDQV5tJkEkEBchTlv9lUUHqrr9JLAbQ_6xTn5hXqq6A9Iuzjy4NTqey0sUJYzY0wISaURbIYvtF5JRkIKLDVP0yYZoYy41dDZ2bwllzpSHNdRX3mxPo-tV7_xYS1LblISTRO-PrzX5v9ykF7RkcRFKcGH4drhw7X2GLSG4ODdKO-x2xFCOO869jaagS5-nJ6ckuM6zEpn0vBBa7K0n_QsWRgneHF9j0Op9k9nl2cgNuadMO_v3Rx6NWDMIAcQ3vOwO_kLUHxdow&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近7天浏览过千\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;2\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70732588133\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;isBaitiaoMx&quot;: &quot;1&quot;, &quot;baitiaoMxPlanNum&quot;: &quot;3&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_163&quot;, &quot;key&quot;: &quot;freeInterest&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;1\&quot;,\&quot;skus\&quot;:[\&quot;70732588133\&quot;],\&quot;last_click_id\&quot;:\&quot;9967cd0b-39a8-4f2d-b510-aa8fe27eb604\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;&#125;&#125;&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC83MDczMjU4ODEzMy5odG1s&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam83T-WaOqLWLNgIMwKOXM4EZoPuNkqAtXb4OjMQ_zNcb9hySVg-brG_ddCGu5uuxA0DUu7ulRNmUmS12OHtkk3hsr9i6pvLP-qV-a2rG5WbvbcGRAY23UbStB3no1N8utYNH-FI9EA6LOdpOavzew0_2v9aSfrwpWpfuuhYkgub_JTP45LvgC-uO3bhbKlfa1eyZ-IDS_yj8BrBcPcxE6r8KKO7a-lOgKQeXGyAsY6uiqkj-g1hNvbErbJUVB-wTp5mrFFa3swwGlMPy5NqyYClKqMrYtUpp7rbImdiTFWCSOROvaFwntjPOjeOT5pUapRwLPeUNmzi8QHTUpJTov6yFsVUBA6UJvseCjgsXK3IdJ0DS1FhQ9lQFKlmJYqaS3OyqO4xmc5oz-bp7lP_xZTFv7S-9R0glbWolwWirIFyKPztBoFFsz07bUnO-IVsf9bKd-xNps2WKZP9LSV8cFTnEAbrthg7MqCZu9WeFYAJXMUxiHktyJRxIYN1Q1bxbqyop7m_D4pwP1M7kj2o-JuckDRbALU8gTb75jH7cg2QywaL7RAB4QPMh0sjBbdgVSLLU6zkFYAulcuHX7gSopPslvmVq4gOWDnDUCRnlURggROPX1JO4HPX5OqoTCHcR4v8mbU6y-EXqZ6ITywq6WLBWgtB-zm9w7Bx9HyIy4sIjSoNhEor5aSLhZ8q7aEjUSzsxJSsrmmJ4UDzTpzwqpAjFcvkUpXtHQuO7UX7Anh3kXo2sCxxSgPWoqhV5F5Xdxe2-kqtEQgAEC0j9i8giB5QzZihip9XpX_a7wYBPjr_FjNUwzEoZmlJr8LqQ_KCpRpov3Mql2IDkdRII_K8IW2jvt7ZH0ruJ1TmXlDL25g1irE2OD80yYa62g_dzJ_FowCuj9Jyi7_KwzOLPj6UNXZ4WHamFk7iSrnmUDQV5tJkEkEBchTlv9lUUHqrr9JLAbQ_6xTn5hXqq6A9Iuzjy4NTqey0sUJYzY0wISaURbIYvtF5JRkIKLDVP0yYZoYy41dDEDXGe4jRe2GnVgzNKGGicPDNSHQq_qr4mxErCTbKydgwurSQfNFC4BXUQyhWnEIvQz9Mo0zHEbGsou8oyeZi1onOP5iy6EkL7pB-EQbF5DYTV6Jq562oyIm6SInCmXgYhjzMciBQVZ0Oyu-ju8CzAtBBE92oYHzElE7XsRYLXOQ&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;recomReason&quot;: &quot;近7天浏览过千&quot;, &quot;recomReasonTab&quot;: &quot;tab_var_138&quot;, &quot;venderId&quot;: &quot;671231&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近7天浏览过千\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;2\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70732588133\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;index\&quot;:\&quot;2\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;70732588133\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;2\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;70732588133\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;70732588133#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#1#0#D0@L0@610#-100#301#1#2#-100#0#10220519#0#1#-100#0#0#-100#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=#0#-100#-100#-100#近7天浏览过千&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;666766&quot;, &quot;spu&quot;: &quot;70732588119&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10025869855401&quot;, &quot;wname&quot;: &quot;ikbc R300机械键盘游戏樱桃cherry轴电脑外设笔记本数字电竞办公有线自营外接背光 R300白光有线108键 茶轴&quot;, &quot;markType&quot;: 8, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/167502/30/3217/78263/600926b0E27992914/5ac2dc1dcbac8b1a.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;439.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500162382&quot;, &quot;couponInfo&quot;: &quot;领券满400减60&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;3&quot;, &quot;client_exposal_url&quot;: &quot;&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiI3MDg3MDIiLCJzb3VyY2UiOiIwIiwidGFnIjoiMTgzIiwidGlwX3ZpZCI6IjcwODcwMiIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMjU4Njk4NTU0MDEiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;,\&quot;reason\&quot;:\&quot;结构精密的机械轴体\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;3\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;2001\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东超市\&quot;,\&quot;skuid\&quot;:\&quot;10025869855401\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_var_139&quot;, &quot;labelTitle&quot;: &quot;领券满400减60&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;0\&quot;,\&quot;skus\&quot;:[\&quot;10025869855401\&quot;],\&quot;last_click_id\&quot;:\&quot;\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiI3MDg3MDIiLCJzb3VyY2UiOiIwIiwidGFnIjoiMTgzIiwidGlwX3ZpZCI6IjcwODcwMiIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMjU4Njk4NTU0MDEiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;&#125;&#125;&quot;, &quot;icon618Type&quot;: &quot;2&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.660000$src=rec$action=1$reqsig=ff8d0cdfa63162dae69b6abf0a6ef003bd26e885$enb=1$sku=0$p=660000$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=10025869855401$index=1$st=0$adcli=$expid=D0@L0@610$mexpid=D0@L0@610$im=$rid=4342549711667881678$ver=1$sig=1f25b301a349155accebb02bd5516ee4eb259983&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon2&quot;: &quot;tab_101&quot;, &quot;icon618&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/165341/2/15900/5668/60658e5bE04a1baae/23ab0ff4f44ebeab.png&quot;, &quot;recomReason&quot;: &quot;结构精密的机械轴体&quot;, &quot;recomReasonTab&quot;: &quot;tab_var_138&quot;, &quot;venderId&quot;: &quot;10157456&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiI3MDg3MDIiLCJzb3VyY2UiOiIwIiwidGFnIjoiMTgzIiwidGlwX3ZpZCI6IjcwODcwMiIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMjU4Njk4NTU0MDEiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;,\&quot;reason\&quot;:\&quot;结构精密的机械轴体\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;3\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;2001\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东超市\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025869855401\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiI3MDg3MDIiLCJzb3VyY2UiOiIwIiwidGFnIjoiMTgzIiwidGlwX3ZpZCI6IjcwODcwMiIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMjU4Njk4NTU0MDEiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;,\&quot;index\&quot;:\&quot;3\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;10025869855401\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;3\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;skuid\&quot;:\&quot;10025869855401\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;10025869855401#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#0#0#D0@L0@610#-100#2001#1#3#京东超市#0#10220519#0#1#-100#0#1#-100#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiI3MDg3MDIiLCJzb3VyY2UiOiIwIiwidGFnIjoiMTgzIiwidGlwX3ZpZCI6IjcwODcwMiIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMjU4Njk4NTU0MDEiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==#0#-100#-100#-100#结构精密的机械轴体&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;spu&quot;: &quot;10025869855399&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIiwic2t1X2lkIjoiMTAwMjU4Njk4NTU0MDEiLCJyZXFzaWciOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMifQ==&quot; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100016515810&quot;, &quot;wname&quot;: &quot;赛尔贝尔（syllable）S103真无线蓝牙耳机 迷你隐形TWS耳机 入耳式运动跑步耳机 苹果安卓手机通用 白色&quot;, &quot;wareType&quot;: 256, &quot;markType&quot;: 8, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/172467/9/4751/85953/607a3e99Ebbef3599/f722c1313b831408.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;69.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: true, &quot;fansPrice&quot;: &quot;49.90&quot;, &quot;priceColor&quot;: &quot;714AFF&quot;, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1207\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;100016515810\&quot;,\&quot;ts\&quot;:\&quot;1618725710\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3270179298\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1207\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;ac29b937-e45f-4524-9295-1b3da082604a\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500054499&quot;, &quot;couponInfo&quot;: &quot;领券满880减80&quot;, &quot;userLabel&quot;: &quot;111&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;4&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=zS9n5XBDxjcp3wVjev1fjckPK8veJUepmcZLwUMU8jryPzBkibY27NlRvzPzp2FRL3EEIKEC-L6RltKpxfIQd_foxTxWuoTL1ylDDw9bDKR7GJvoBKP_URMJVY66PF7dICW7qlveflimz67fCCtchJhoyghPx-jtEhpfW80OukiIPNaoYSf4XDrgRDVdnTbVCNJOoIoamxykp6NWuxthIg&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMTY1MTU4MTAuaHRtbA&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam83u7wBH6TXqjOe664RDRiuqbSLw1NLVfJlIX1QwZV4Frh6rnGwr-t7RpeMhmC-SNdDPgFSBtHUsjZ0TJ1N2PjI_RgTDnuKyETsDbyO6lCNnNuoV1FJwb3f6TiXqquYfSz6LhH0rXVNCcNJfTak0bZ4ofFsWzJmMsSxRxpUreWJ84HAPZDwAwyHYn07snfqq-oOFzxaRAVuxIhFMuwqwKG2r1cvYTae4BdLw6Tnpd1lSiUkdMlG7fJCn4ToT66SNvLTyA_1_eZvHAAyhzhtNBv5v5vpqxgpw4XfI7iadYL-VOuoVulFDOAUZAh2E9S1Wr726ej8duAvOPQgv96IQ39d1C9hBM6maahnzfh5Fh60KRQZLSGheMcw-TvGLt-MhEDfYeQkN-bspvD3KyfJvBFsI24iQGrQ7Xz2jMNoHm5cbpGOV4Rx-wnxOER_fRUbcspBUDYs3w0fvCIHayd30EjLlF_YqkOVDwlhNsKRQXQeWqbEaqhcFT0cVA5f4nvc9-FESlRK35iXkAHSdUBKuclRbu9BfWgKoI4rbUxof0meEGgE572jpCfxnZtou4nC_qYWR5eJTXITOlBFeYqiB-V_LYKQFe0TlGDP87E6I6rIkJTg0_pdyfSJGpwsYeifV_92PtQp3Pg6m5IKlaMQb617pfBRxohN0e4q_G3_6KdBbz_IdQ9B13o7BuwXkUnVFeaOsTtyG-EqJ_QD1dKfO7rxm6Xmo_RHuvBoL3sKjCOlmdyzFLVYyfUq8RoaS71bcbY1b1JGocu6XcK-gEmJpqB9V0L2bJZdO2bk3gBb-qB5SLlMbwmNzSmQdUMscnBFDCvzdE7ai2QNGbHaH7lC4Aro9GrEbEWSboOAPiYRBtz3s0rFUTyqEcv7epHnwzV7lcQ8LIbYwKaOX7Gdyj54zjiZ-eEjDxsxISsRngorqo6Sn3FUn5iMzZdduQE7R8uHO8TNoZ_3ZRQtN9cgYLju9yfixli0gCs9Z2YL7bb76I6K0VYe2MZP_hXGtzl8EYuzaCpQqC7NLOEP-sUGEv-AjPIilS_JqkEb5GXop0YZplnF_OhLaKHusy4wmcJSypPNjHHDBZL7_10Qmw1UdRnYKK97FfEZtrxsf_V_dCQwdbaPw9fBtbZDW44qwj-ZPlo0yz4B7igsrw0FON9I-g2Xbju0zeGaRijNkKr_BcvoZNCWTAWldkqeq1F3miFNA76tbLpE&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近7天浏览过千\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;4\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;粉丝价\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东超市\&quot;,\&quot;skuid\&quot;:\&quot;100016515810\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;isBaitiaoMx&quot;: &quot;1&quot;, &quot;baitiaoMxPlanNum&quot;: &quot;3&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_var_139&quot;, &quot;labelTitle&quot;: &quot;领券满880减80&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125;, &#123; &quot;resourceCode&quot;: &quot;tab_163&quot;, &quot;key&quot;: &quot;freeInterest&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;1\&quot;,\&quot;skus\&quot;:[\&quot;100016515810\&quot;],\&quot;last_click_id\&quot;:\&quot;6136cb5f-d80b-45df-b365-92a29fc967e5\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;&#125;&#125;&quot;, &quot;icon618Type&quot;: &quot;2&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;652&quot;, &quot;category2&quot;: &quot;828&quot;, &quot;category3&quot;: &quot;842&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: 1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMTY1MTU4MTAuaHRtbA&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam83u7wBH6TXqjOe664RDRiuqbSLw1NLVfJlIX1QwZV4Frh6rnGwr-t7RpeMhmC-SNdDPgFSBtHUsjZ0TJ1N2PjI_RgTDnuKyETsDbyO6lCNnNuoV1FJwb3f6TiXqquYfSz6LhH0rXVNCcNJfTak0bZ4ofFsWzJmMsSxRxpUreWJ84HAPZDwAwyHYn07snfqq-oOFzxaRAVuxIhFMuwqwKG2r1cvYTae4BdLw6Tnpd1lSiUkdMlG7fJCn4ToT66SNvLTyA_1_eZvHAAyhzhtNBv5v5vpqxgpw4XfI7iadYL-VOuoVulFDOAUZAh2E9S1Wr726ej8duAvOPQgv96IQ39d1C9hBM6maahnzfh5Fh60KRQZLSGheMcw-TvGLt-MhEDfYeQkN-bspvD3KyfJvBFsI24iQGrQ7Xz2jMNoHm5cbpGOV4Rx-wnxOER_fRUbcspBUDYs3w0fvCIHayd30EjLlF_YqkOVDwlhNsKRQXQeWqbEaqhcFT0cVA5f4nvc9-FESlRK35iXkAHSdUBKuclRbu9BfWgKoI4rbUxof0meEGgE572jpCfxnZtou4nC_qYWR5eJTXITOlBFeYqiB-V_LYKQFe0TlGDP87E6I6rIkJTg0_pdyfSJGpwsYeifV_92PtQp3Pg6m5IKlaMQb617pfBRxohN0e4q_G3_6KdBbz_IdQ9B13o7BuwXkUnVFeaOsTtyG-EqJ_QD1dKfO7rxm6Xmo_RHuvBoL3sKjCOlmdyzFLVYyfUq8RoaS71bcbY1b1JGocu6XcK-gEmJpqB9V0L2bJZdO2bk3gBb-qB5SLlMbwmNzSmQdUMscnBFDCvzdE7ai2QNGbHaH7lC4Aro9GrEbEWSboOAPiYRBtz3s0rFUTyqEcv7epHnwzV7lcQ8LIbYwKaOX7Gdyj54zjiZ-eEjDxsxISsRngorqo6Sn3FUn5iMzZdduQE7R8uHO8TNoZ_3ZRQtN9cgYLju9yfixli0gCs9Z2YL7bb76I6K0VYe2MZP_hXGtzl8EYuzaCpQqC7NLOEP-sUGEv-AjPIil_dTkgAz4HOsZURPuxNfM0Cfa5tzNE_hsR-xO2oPJc0PWXC8X3M_MrRIn5jEaYMZY-5gFc68LRRndzvijHSE_LSPZs0wHzXFgutJ9-3b3Og8jUYzIWyxD_FWzcmQqMGjHSdHJKvV4MFBRGR-QYZ64n35jhKf45AG6F7T-e9AhmXs&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon2&quot;: &quot;tab_101&quot;, &quot;icon3&quot;: &quot;tab_129&quot;, &quot;icon3Price&quot;: &quot;49.90&quot;, &quot;icon618&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/173816/28/1470/5668/60659006E82b4f2ee/431e057232ae0afa.png&quot;, &quot;recomReason&quot;: &quot;近7天浏览过千&quot;, &quot;recomReasonTab&quot;: &quot;tab_var_138&quot;, &quot;venderId&quot;: &quot;1000352688&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近7天浏览过千\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;粉丝价\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;4\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东超市\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100016515810\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;index\&quot;:\&quot;4\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;100016515810\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;4\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;100016515810\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;100016515810#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#1#0#D0@L0@610#-100#301#1#4#京东超市#0#10220519#0#1#-100#0#1#粉丝价#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=#0#-100#-100#-100#近7天浏览过千&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;1000352688&quot;, &quot;spu&quot;: &quot;100008824097&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;70156849099&quot;, &quot;wname&quot;: &quot;漫步者（EDIFIER） 漫步者X3真无线蓝牙耳机 迷你音乐运动手机耳机智能触控通话降噪苹果安卓手机 白色&quot;, &quot;markType&quot;: 8, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/175509/3/2442/86563/606d678dEee0a7a64/9e36fbd30da46738.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;139.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500172688&quot;, &quot;couponInfo&quot;: &quot;领券满699减40&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;5&quot;, &quot;client_exposal_url&quot;: &quot;&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjcwMTU2ODQ5MDk5IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;reason\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;5\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;京东超市\&quot;,\&quot;skuid\&quot;:\&quot;70156849099\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;isBaitiaoMx&quot;: &quot;1&quot;, &quot;baitiaoMxPlanNum&quot;: &quot;3&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_var_140&quot;, &quot;labelTitle&quot;: &quot;满139元减30元&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125;, &#123; &quot;resourceCode&quot;: &quot;tab_163&quot;, &quot;key&quot;: &quot;freeInterest&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;0\&quot;,\&quot;skus\&quot;:[\&quot;70156849099\&quot;],\&quot;last_click_id\&quot;:\&quot;\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjcwMTU2ODQ5MDk5IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;&#125;&#125;&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;652&quot;, &quot;category2&quot;: &quot;828&quot;, &quot;category3&quot;: &quot;842&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;308&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.660000$src=rec$action=1$reqsig=ff8d0cdfa63162dae69b6abf0a6ef003bd26e885$enb=1$sku=0$p=660000$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=70156849099$index=2$st=0$adcli=$expid=D0@L0@610$mexpid=D0@L0@610$im=$rid=4342549711667881678$ver=1$sig=df1172faf93d22652584397f779442f736e43a2f&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon2&quot;: &quot;tab_101&quot;, &quot;venderId&quot;: &quot;761609&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjcwMTU2ODQ5MDk5IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;reason\&quot;:\&quot;-100\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;5\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;京东超市\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70156849099\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjcwMTU2ODQ5MDk5IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;index\&quot;:\&quot;5\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;70156849099\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;5\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;skuid\&quot;:\&quot;70156849099\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;70156849099#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#0#0#D0@L0@610#-100#-100#1#5#京东超市#0#10220519#0#1#-100#0#0#-100#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjcwMTU2ODQ5MDk5IiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=#0#-100#-100#-100#-100&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;756812&quot;, &quot;spu&quot;: &quot;70156849098&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIiwic2t1X2lkIjoiNzAxNTY4NDkwOTkiLCJyZXFzaWciOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMifQ==&quot; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;70069570938&quot;, &quot;wname&quot;: &quot;漫步者（EDIFIER） MiniBuds真无线蓝牙耳机入耳式通话降噪迷你运动防水苹果华为手机通用 雾霾蓝&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/162802/15/17774/286783/607251e3Eddfd9485/301de4b34101283a.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;209.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1207\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;70069570938\&quot;,\&quot;ts\&quot;:\&quot;1618725710\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;8593839868506319079\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1207\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;ac29b937-e45f-4524-9295-1b3da082604a\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500096190&quot;, &quot;couponInfo&quot;: &quot;领券满99减5&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;6&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=HMZrHDcTs04D3eFzQzu8sbiGW1cMyjQRWcQj3XoJ0E0ziBThnLXl7JoSyhbVg_RkQfzobdD2KGEZVglhsNesq1bN6PLDKO1JKHpueQCVVjiqpLzBo06ZDeYQR-6v8xuCge9hNDZJrmTwAOk7L2CwqV0ygsZ1eHGI1gkIkgWuupOznulZ9YMl3N3Sti2OKV2f&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC83MDA2OTU3MDkzOC5odG1s&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam81GRKgKzR59XwQsoAamJUjJpUDYXZoWTmT9DZnIRNAYZNCAEvmcdfAWp2qZ9e1fv-fLis4A3L9HwGr6OGLHD86ZRXYX_OAHRrq3sHKru3tFI_fxP-fpRKqgcqnE-rRM6qVFzxwZRd_LLSHsnZvjkHbAHQc1MurUW7c7XU3P9X-uAryVfbjex8-nIblmXvKktXJEfGS-1I9uDH73rOCL0dgEF1IbUR-OrKSV7SX2gZ8hacDpiiiHRxkuQvrDASIwe_GlWVwwA70O9Sg5AdFSnfd6LBE0PWahOqE_RfI5Vgn0thx3lkN-294-yv7Hsp0nfqaIci87RUSRaJ-vK9Oiq9-orQ3XnISo3t9Oshry3883i8yVHkjKan1PyqCICEFWnDB3jF6WMC1ZONvUjPX_NS6DYuDlaUoZLm02dKPbYsQBdQginEQIuber53DrN0QD2Dos1NX81TzZVsLoxlBSvA04OSAS3Lb8tGOO9g2u4LpakCibNlIxn2sTUlGOF10xqQcYEY1ox08WvZLiiaC18pN9j7ZaJAOCj9X0CRrewWJ32RCKV8S5o4RyxMY7rDynACXaBRgMDQ9m3SaV-XppvtvRO_9pBYTda06CPxDWHPAn7iDlQNM37lHH5LH-5kGbj2plmOFmxR8YwVMy_BBglSO9tztg0laFvfOYjhN4qdCmMzw-WqM7UWNzPacwkCUyV96zTN-ScPzGwP3KTuGr1k-OJ7IXzJ_-8myG34neCb71tzQh5cWp-AXCENahs_Pxrj6MmTQLwB52FowNHTTnNlELdygU7_nerqMbEfSKdG_XFZIivGM_1QphF4sDaMZIjIC5YvMpzW9dxYGSBYd3xpQvgj9dbF3Ladg5i0No3CNgJab3Ku9MBT-HN4HFDKZeWSdJww9mvQHUnx2tF-IVlSK66aCrLMinxryO_XvVESt9xtqoMUoIoMAM_gfHkg3Xv0RJdLPqz9aBj98jFvaeAdE36_RMDeSwOy_lO5zAZk5mWtD2wmTokMgxxgBeqBXd-IFYtgF24mIPKBxMofy8OhB_WSMZj4bgiLFwd3TZz2n8ix8IUBcIGWJzp3nMjWXmrZ6zBYOFbYzchPzPYrSKXcb3jfmV08S_Yhxf04D3WO1opNEbICWx8X9G2YvP968yPrlV3n36Nl4bljlUADlA4rlICJg1fy8zURuL5m-oXyLHeHU8vODzCSLP-FhK9X_Gldk&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近7天浏览过千\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;6\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70069570938\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;isBaitiaoMx&quot;: &quot;1&quot;, &quot;baitiaoMxPlanNum&quot;: &quot;6&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_var_140&quot;, &quot;labelTitle&quot;: &quot;满209元减30元&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125;, &#123; &quot;resourceCode&quot;: &quot;tab_163&quot;, &quot;key&quot;: &quot;freeInterest&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;1\&quot;,\&quot;skus\&quot;:[\&quot;70069570938\&quot;],\&quot;last_click_id\&quot;:\&quot;19632025-00f6-4aa8-a28e-294c656312e2\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;&#125;&#125;&quot;, &quot;icon618Type&quot;: &quot;2&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;652&quot;, &quot;category2&quot;: &quot;828&quot;, &quot;category3&quot;: &quot;842&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC83MDA2OTU3MDkzOC5odG1s&amp;log=qJbc2K-8Ro1wteQMc1UqTTym8eM-60oONbHjCmYam81GRKgKzR59XwQsoAamJUjJpUDYXZoWTmT9DZnIRNAYZNCAEvmcdfAWp2qZ9e1fv-fLis4A3L9HwGr6OGLHD86ZRXYX_OAHRrq3sHKru3tFI_fxP-fpRKqgcqnE-rRM6qVFzxwZRd_LLSHsnZvjkHbAHQc1MurUW7c7XU3P9X-uAryVfbjex8-nIblmXvKktXJEfGS-1I9uDH73rOCL0dgEF1IbUR-OrKSV7SX2gZ8hacDpiiiHRxkuQvrDASIwe_GlWVwwA70O9Sg5AdFSnfd6LBE0PWahOqE_RfI5Vgn0thx3lkN-294-yv7Hsp0nfqaIci87RUSRaJ-vK9Oiq9-orQ3XnISo3t9Oshry3883i8yVHkjKan1PyqCICEFWnDB3jF6WMC1ZONvUjPX_NS6DYuDlaUoZLm02dKPbYsQBdQginEQIuber53DrN0QD2Dos1NX81TzZVsLoxlBSvA04OSAS3Lb8tGOO9g2u4LpakCibNlIxn2sTUlGOF10xqQcYEY1ox08WvZLiiaC18pN9j7ZaJAOCj9X0CRrewWJ32RCKV8S5o4RyxMY7rDynACXaBRgMDQ9m3SaV-XppvtvRO_9pBYTda06CPxDWHPAn7iDlQNM37lHH5LH-5kGbj2plmOFmxR8YwVMy_BBglSO9tztg0laFvfOYjhN4qdCmMzw-WqM7UWNzPacwkCUyV96zTN-ScPzGwP3KTuGr1k-OJ7IXzJ_-8myG34neCb71tzQh5cWp-AXCENahs_Pxrj6MmTQLwB52FowNHTTnNlELdygU7_nerqMbEfSKdG_XFZIivGM_1QphF4sDaMZIjIC5YvMpzW9dxYGSBYd3xpQvgj9dbF3Ladg5i0No3CNgJab3Ku9MBT-HN4HFDKZeWSdJww9mvQHUnx2tF-IVlSK66aCrLMinxryO_XvVESt9xtqoMUoIoMAM_gfHkg3Xv0RJdLPqz9aBj98jFvaeAdE36_RMDeSwOy_lO5zAZk5mWtD2wmTokMgxxgBeqBXd-IFYtgF24mIPKBxMofy8OhB_sycbiDTTdLX0GPrkswLUMdHhuO2rlwMnv6Xl2pDc8KAW5uV--Z1bSW4PcqXFbOyGIhgBpfgYlIPOSwNyKF6p1qOaLQkqbzFwQwBPwMslPESvLoFuoBZxC-f3yJ_NOz7pJfmvgXxVIL8WLeD9tK_roiOyLmTnFHJSSx_1r__DREo&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon618&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/165341/2/15900/5668/60658e5bE04a1baae/23ab0ff4f44ebeab.png&quot;, &quot;recomReason&quot;: &quot;近7天浏览过千&quot;, &quot;recomReasonTab&quot;: &quot;tab_var_138&quot;, &quot;venderId&quot;: &quot;812327&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;reason\&quot;:\&quot;近7天浏览过千\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;6\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;301\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;1\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70069570938\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;index\&quot;:\&quot;6\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;70069570938\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;6\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;70069570938\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;70069570938#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#1#0#D0@L0@610#-100#301#1#6#-100#0#10220519#0#1#-100#0#1#-100#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=#0#-100#-100#-100#近7天浏览过千&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;810358&quot;, &quot;spu&quot;: &quot;70069570937&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125; &#125; &#125;, &#123; &quot;itemType&quot;: 24, &quot;rt&quot;: 34, &quot;wareId&quot;: &quot;62649&quot;, &quot;wname&quot;: &quot;排行榜&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;description&quot;: &quot;手提电脑包自营热卖榜&quot;, &quot;descriptionMore&quot;: &quot;47.5万人买过&quot;, &quot;imageurlType&quot;: 0, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;isOpenApp&quot;: &quot;0&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;7&quot;, &quot;buttonImg&quot;: &quot;http://m.360buyimg.com/cc/jfs/t1/36860/29/10145/4825/5cd397b4Eafc60751/ac20069cb36fddac.png&quot;, &quot;fontColor&quot;: &quot;#FF9405&quot;, &quot;client_exposal_url&quot;: &quot;&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjExMDkiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;,\&quot;isopenapp\&quot;:\&quot;0\&quot;,\&quot;rt\&quot;:\&quot;34\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;seedsku\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;type\&quot;:\&quot;新热卖榜\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;subid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;100017197778\&quot;,\&quot;testid\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;cvgRt\&quot;:\&quot;-100\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;alclk\&quot;:\&quot;-100\&quot;,\&quot;tpid\&quot;:\&quot;-100\&quot;,\&quot;like\&quot;:\&quot;-100\&quot;,\&quot;titleid\&quot;:\&quot;62649\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;7\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;alid\&quot;:\&quot;-100\&quot;,\&quot;videotype\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;benefitlist\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;geneindex\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;did\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;followCount&quot;: &quot;&quot;, &quot;stockStateId&quot;: 0, &quot;remainNum&quot;: 0, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.660000$src=rec$action=1$reqsig=ff8d0cdfa63162dae69b6abf0a6ef003bd26e885$enb=1$sku=0$p=660000$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=62649$index=3$st=0$adcli=$expid=D0@L0@610$mexpid=D0@L0@610$im=$rid=4342549711667881678$ver=1$sig=bb123d8e471305f9eb1f0c4da11788ae69dbaad1&quot;, &quot;subWareList&quot;: [ &#123; &quot;wareId&quot;: &quot;100017197778&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/163043/15/5740/155427/601e020fEc593411a/eea361688ee31c26.jpg!q70.dpg.webp&quot; &#125; ], &quot;channelJumpUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;modulename\&quot;:\&quot;JDReactRankingList\&quot;,\&quot;appname\&quot;:\&quot;JDReactRankingList\&quot;,\&quot;transparentenable\&quot;:true,\&quot;ishidden\&quot;:true,\&quot;fromName\&quot;:\&quot;shouyetuijianwei\&quot;,\&quot;param\&quot;:&#123;\&quot;contentId\&quot;: \&quot;62649\&quot;,\&quot;fromSkuId\&quot;:\&quot;100017197778\&quot;,\&quot;detailPageType\&quot;:\&quot;5\&quot;,\&quot;rankType\&quot;:\&quot;10\&quot;&#125;&#125;&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjExMDkiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;,\&quot;isopenapp\&quot;:\&quot;0\&quot;,\&quot;rt\&quot;:\&quot;34\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;seedsku\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;type\&quot;:\&quot;新热卖榜\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;subid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;100017197778\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;cvgRt\&quot;:\&quot;-100\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;delivery\&quot;:\&quot;-100\&quot;,\&quot;tpid\&quot;:\&quot;-100\&quot;,\&quot;like\&quot;:\&quot;-100\&quot;,\&quot;titleid\&quot;:\&quot;62649\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;7\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;videotype\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;benefitlist\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjExMDkiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==\&quot;,\&quot;index\&quot;:\&quot;7\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;62649\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;新热卖榜#1#7#62649#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#0#D0@L0@610#100017197778#-100#-100#-100#-100#-100#0#0#34#-100#-100#-100#0#-100#10220519#eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjExMDkiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDYxMCIsInJlcXNpZyI6ImZmOGQwY2RmYTYzMTYyZGFlNjliNmFiZjBhNmVmMDAzYmQyNmU4ODUifQ==#0&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;mergePicUrl&quot;: &quot;https://img13.360buyimg.com/imagetools/jfs/t1/142381/11/14363/17925/5fae3310E2f4daff3/e6aba4b5e483016b.png&quot;, &quot;themeBgcolorStart&quot;: &quot;#FFBE37&quot;, &quot;themeBgcolorEnd&quot;: &quot;#FFDA8C&quot;, &quot;spu&quot;: &quot;0&quot;, &quot;nonWareType&quot;: &quot;NEW_HOTSALE_RANK&quot;, &quot;isMbox&quot;: false, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIiwic2t1X2lkIjoiNjI2NDkiLCJyZXFzaWciOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMifQ==&quot; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100010809953&quot;, &quot;wname&quot;: &quot;荣耀笔记本 MagicBook 14 SE 2021 14英寸全面屏轻薄笔记本电脑（R7 3700U 16G 512G多屏协同）冰河银&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/160023/33/15378/103377/605b3243E30b8ad31/70cd8dc268e25dc7.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;4499.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500003801&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;8&quot;, &quot;client_exposal_url&quot;: &quot;&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjI4NSIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMDEwODA5OTUzIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;reason\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;1\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;8\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;自营\&quot;,\&quot;skuid\&quot;:\&quot;100010809953\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;0\&quot;,\&quot;skus\&quot;:[\&quot;100010809953\&quot;],\&quot;last_click_id\&quot;:\&quot;\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjI4NSIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMDEwODA5OTUzIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;&#125;&#125;&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;671&quot;, &quot;category3&quot;: &quot;672&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;133&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.660000$src=rec$action=1$reqsig=ff8d0cdfa63162dae69b6abf0a6ef003bd26e885$enb=1$sku=0$p=660000$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=100010809953$index=4$st=0$adcli=$expid=D0@L0@610$mexpid=D0@L0@610$im=$rid=4342549711667881678$ver=1$sig=7838725377d1947e2ec39225db74172efbd6e7cd&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;preAppointWare&quot;: &quot;1&quot;, &quot;presaleInfo&quot;: &quot;抢购中&quot;, &quot;icon2&quot;: &quot;tab_054&quot;, &quot;venderId&quot;: &quot;1000000904&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjI4NSIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMDEwODA5OTUzIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;reason\&quot;:\&quot;-100\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;1\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;8\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;自营\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100010809953\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjI4NSIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMDEwODA5OTUzIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=\&quot;,\&quot;index\&quot;:\&quot;8\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;100010809953\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;8\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;skuid\&quot;:\&quot;100010809953\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;100010809953#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#0#0#D0@L0@610#-100#-100#1#8#自营#0#10220519#0#1#-100#0#0#-100#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJwIjoiNjYwMDAwIiwic291cmNlIjoiMCIsInRhZyI6IjI4NSIsInJlcXVlc3RfaWQiOiIzZWM2MDJjZS1lMWMwLTRiMzAtYTg1OC1jN2JmZDM0NTdjYTMiLCJjc191c2VyIjoiMCIsInNrdWlkIjoiMTAwMDEwODA5OTUzIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEA2MTAiLCJyZXFzaWciOiJmZjhkMGNkZmE2MzE2MmRhZTY5YjZhYmYwYTZlZjAwM2JkMjZlODg1In0=#0#-100#1#-100#-100&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;1000000904&quot;, &quot;spu&quot;: &quot;100010809953&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIiwic2t1X2lkIjoiMTAwMDEwODA5OTUzIiwicmVxc2lnIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIn0=&quot; &#125; &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100009226881&quot;, &quot;wname&quot;: &quot;AKKO 3098 DS 海洋之星 机械键盘 有线键盘 游戏键盘 电竞 98键 全尺寸 无光 吃鸡键盘 AKKO V2粉轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s558x558_jfs/t1/167877/12/3189/67264/600533a8E53610be2/5a66766f77143df4.jpg!q70.dpg.webp&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;299.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500063881&quot;, &quot;couponInfo&quot;: &quot;领券满79减10&quot;, &quot;userLabel&quot;: &quot;111&quot;, &quot;interactive&quot;: &quot;1&quot;, &quot;seedPage&quot;: &quot;1&quot;, &quot;seedIndex&quot;: &quot;9&quot;, &quot;client_exposal_url&quot;: &quot;&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiIzMDAzMzIwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwidGlwX3ZpZCI6IjMwMDMzMjAiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjEwMDAwOTIyNjg4MSIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBANjEwIiwicmVxc2lnIjoiZmY4ZDBjZGZhNjMxNjJkYWU2OWI2YWJmMGE2ZWYwMDNiZDI2ZTg4NSJ9\&quot;,\&quot;reason\&quot;:\&quot;高含量PBT键帽\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;9\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;plus\&quot;:0,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;2001\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;自营\&quot;,\&quot;skuid\&quot;:\&quot;100009226881\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;1&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;labelList&quot;: [ &#123; &quot;resourceCode&quot;: &quot;tab_078&quot;, &quot;key&quot;: &quot;newProduct&quot; &#125;, &#123; &quot;resourceCode&quot;: &quot;tab_var_139&quot;, &quot;labelTitle&quot;: &quot;领券满79减10&quot;, &quot;key&quot;: &quot;discountPoint&quot; &#125; ], &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;660000&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isJumpApp&quot;: &quot;0&quot;, &quot;jumpDesUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;JDFlutterView\&quot;,\&quot;flutterRouterName\&quot;:\&quot;JDFlutterMiniProduct\&quot;,\&quot;isShowNativeNavBar\&quot;:\&quot;0\&quot;,\&quot;dragBackEnable\&quot;:\&quot;0\&quot;,\&quot;isFromFlutterVCEnable\&quot;:\&quot;1\&quot;,\&quot;param\&quot;:&#123;\&quot;seedSource\&quot;: \&quot;0\&quot;,\&quot;skus\&quot;:[\&quot;100009226881\&quot;],\&quot;last_click_id\&quot;:\&quot;\&quot;,\&quot;rec_broker\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiIzMDAzMzIwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwidGlwX3ZpZCI6IjMwMDMzMjAiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjEwMDAwOTIyNjg4MSIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBANjEwIiwicmVxc2lnIjoiZmY4ZDBjZGZhNjMxNjJkYWU2OWI2YWJmMGE2ZWYwMDNiZDI2ZTg4NSJ9\&quot;&#125;&#125;&quot;, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;ac29b937-e45f-4524-9295-1b3da082604a&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.660000$src=rec$action=1$reqsig=ff8d0cdfa63162dae69b6abf0a6ef003bd26e885$enb=1$sku=0$p=660000$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=100009226881$index=5$st=0$adcli=$expid=D0@L0@610$mexpid=D0@L0@610$im=$rid=4342549711667881678$ver=1$sig=4aad872da66716a07cc301697b46e7301906da4c&quot;, &quot;similarEnter&quot;: &quot;1&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;1&quot;, &quot;reqsig&quot;: &quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;icon2&quot;: &quot;tab_054&quot;, &quot;recomReason&quot;: &quot;高含量PBT键帽&quot;, &quot;recomReasonTab&quot;: &quot;tab_var_138&quot;, &quot;venderId&quot;: &quot;1000078903&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiIzMDAzMzIwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwidGlwX3ZpZCI6IjMwMDMzMjAiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjEwMDAwOTIyNjg4MSIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBANjEwIiwicmVxc2lnIjoiZmY4ZDBjZGZhNjMxNjJkYWU2OWI2YWJmMGE2ZWYwMDNiZDI2ZTg4NSJ9\&quot;,\&quot;reason\&quot;:\&quot;高含量PBT键帽\&quot;,\&quot;psource\&quot;:\&quot;9\&quot;,\&quot;distance\&quot;:\&quot;-100\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;monetization\&quot;:\&quot;0\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;seedindex\&quot;:\&quot;-100\&quot;,\&quot;isvideo\&quot;:\&quot;0\&quot;,\&quot;promise\&quot;:\&quot;-100\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;seedpage\&quot;:\&quot;-100\&quot;,\&quot;storeid\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;cover\&quot;:\&quot;-100\&quot;,\&quot;comtyp\&quot;:\&quot;0\&quot;,\&quot;jdprice\&quot;:\&quot;-100\&quot;,\&quot;minidetail\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;isArrivalPriceBelt\&quot;:\&quot;0\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;foot\&quot;:\&quot;0\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;tabindex\&quot;:\&quot;0\&quot;,\&quot;index\&quot;:\&quot;9\&quot;,\&quot;usertype\&quot;:\&quot;-100\&quot;,\&quot;nationlogo\&quot;:\&quot;0\&quot;,\&quot;benefit\&quot;:\&quot;-100\&quot;,\&quot;displayMode\&quot;:\&quot;-100\&quot;,\&quot;loga\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;660000\&quot;,\&quot;footname\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;2001\&quot;,\&quot;geneid\&quot;:\&quot;10220519\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;beltflowID\&quot;:\&quot;-100\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;自营\&quot;,\&quot;videostyle\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100009226881\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueFeedback&quot;: &quot;&#123;\&quot;tabid\&quot;:\&quot;10220519\&quot;,\&quot;broker_info\&quot;:\&quot;eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiIzMDAzMzIwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwidGlwX3ZpZCI6IjMwMDMzMjAiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjEwMDAwOTIyNjg4MSIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBANjEwIiwicmVxc2lnIjoiZmY4ZDBjZGZhNjMxNjJkYWU2OWI2YWJmMGE2ZWYwMDNiZDI2ZTg4NSJ9\&quot;,\&quot;index\&quot;:\&quot;9\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;matrt\&quot;:\&quot;-100\&quot;,\&quot;itemid\&quot;:\&quot;-100\&quot;,\&quot;cvgsku\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skuid\&quot;:\&quot;100009226881\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;sourceValueSimilar&quot;: &quot;&#123;\&quot;index\&quot;:\&quot;9\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;skuid\&quot;:\&quot;100009226881\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;sid\&quot;:\&quot;ac29b937-e45f-4524-9295-1b3da082604a\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@610\&quot;,\&quot;reqsig\&quot;:\&quot;ff8d0cdfa63162dae69b6abf0a6ef003bd26e885\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;100009226881#ff8d0cdfa63162dae69b6abf0a6ef003bd26e885#ac29b937-e45f-4524-9295-1b3da082604a#66#0#0#D0@L0@610#-100#2001#1#9#自营#0#10220519#0#1#-100#0#0#-100#0#0#0#0#-100#-100#-100#9#660000#0#0#-100#eyJwIjoiNjYwMDAwIiwidGlwX3ZlcnNpb24iOiIzMDAzMzIwIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwidGlwX3ZpZCI6IjMwMDMzMjAiLCJyZXF1ZXN0X2lkIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIiwiY3NfdXNlciI6IjAiLCJza3VpZCI6IjEwMDAwOTIyNjg4MSIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBANjEwIiwicmVxc2lnIjoiZmY4ZDBjZGZhNjMxNjJkYWU2OWI2YWJmMGE2ZWYwMDNiZDI2ZTg4NSJ9#0#-100#-100#-100#高含量PBT键帽&quot;, &quot;expid&quot;: &quot;D0@L0@610&quot;, &quot;feedBackReason&quot;: [ &#123; &quot;name&quot;: &quot;不感兴趣&quot;, &quot;icon&quot;: &quot;feedback_0&quot;, &quot;id&quot;: 0 &#125;, &#123; &quot;name&quot;: &quot;品类不喜欢&quot;, &quot;icon&quot;: &quot;feedback_1&quot;, &quot;id&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;已经买了&quot;, &quot;icon&quot;: &quot;feedback_5&quot;, &quot;id&quot;: 5 &#125;, &#123; &quot;name&quot;: &quot;商品图引起不适&quot;, &quot;icon&quot;: &quot;feedback_6&quot;, &quot;id&quot;: 6 &#125;, &#123; &quot;name&quot;: &quot;涉及隐私&quot;, &quot;icon&quot;: &quot;feedback_7&quot;, &quot;id&quot;: 7 &#125; ], &quot;feedBackStrategy&quot;: &quot;B&quot;, &quot;shopId&quot;: &quot;1000078903&quot;, &quot;spu&quot;: &quot;100016259996&quot;, &quot;isMbox&quot;: true, &quot;jdShop&quot;: false, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;palantir_exp_id&quot;: &quot;Z^R^A|MIXTAG_Z^R^AR,Z^R^A_NN_CL_L9724,mb|G*Z^R^A_NN_CL_L7403,G*Z^R^A_NN_CL_L10693&quot; &#125;, &quot;b_rec&quot;: &quot;eyJwIjoiNjYwMDAwIiwic2t1X2lkIjoiMTAwMDA5MjI2ODgxIiwicmVxc2lnIjoiM2VjNjAyY2UtZTFjMC00YjMwLWE4NTgtYzdiZmQzNDU3Y2EzIn0=&quot; &#125; &#125; ], &quot;uiStrategy&quot;: &quot;A&quot;, &quot;darkModeBgColor&quot;: &quot;#141212&quot;, &quot;videoWareWifiPlay&quot;: &quot;1&quot;, &quot;expid&quot;: &quot;660000&quot;&#125; 在搜索框搜索 键盘 请求地址https://api.m.jd.com/client.action?functionId=tip 12345678910111213body=&#123; &quot;addressId&quot;: &quot;4567807715&quot;, &quot;gcLat&quot;: &quot;40.138381&quot;, &quot;gcLng&quot;: &quot;116.612914&quot;, &quot;guessWordFlag&quot;: &quot;0&quot;, &quot;keyword&quot;: &quot;键盘&quot;, &quot;lastkey&quot;: &quot;漫步者蓝牙耳机&quot;, &quot;latitude&quot;: &quot;40.138196&quot;, &quot;locLat&quot;: null, &quot;locLng&quot;: null, &quot;longitude&quot;: &quot;116.614013&quot;, &quot;pvid&quot;: &quot;a764cf9f614b4a23b4f4b992a14e1257&quot;&#125; 请求方式POST 协议h2 请求大小2.38kB 请求耗时61ms 响应大小1.17 kB 响应123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259&#123; &quot;insertInfoList&quot;: [ &#123; &quot;attachType&quot;: &quot;0&quot;, &quot;searchQuery&quot;: &quot;键盘&quot;, &quot;functionId&quot;: &quot;searchShop&quot;, &quot;titleIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/41477/8/12010/913/5d551f22E0315f8d8/034222dc70badd97.png&quot;, &quot;title&quot;: &quot;搜索 “键盘” 店铺&quot;, &quot;position&quot;: 5 &#125; ], &quot;shopList&quot;: [ &#123; &quot;functionId&quot;: &quot;searchShop&quot;, &quot;wname&quot;: &quot;键盘&quot;, &quot;tipNumber&quot;: &quot;100&quot; &#125; ], &quot;code&quot;: &quot;0&quot;, &quot;style&quot;: &quot;emphasize&quot;, &quot;tagClicked&quot;: &quot;1&quot;, &quot;version&quot;: &quot;SAK7|MIXTAG_SAK7R,SAK7_M_AM_L5406,SAK7_S_AM_R,SAK7_SC_DC_U11344,SAK7_SS_SA_U11344,SAK7_SM_RN_L10488,SAK7_SM_RT_L10920,SAK7_SM_ST_R,SAK7_SM_SOP_L10314,SAK7_SM_OH_L10478,SAK7_SM_SD_LC|&quot;, &quot;wareList&quot;: [ &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;机械键盘&quot;, &quot;tagshowquery&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无线键盘&quot;, &quot;tagshowquery&quot;: &quot;无线&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;melgeek键盘&quot;, &quot;tagshowquery&quot;: &quot;melgeek&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘机械&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;键盘机械京东自营&quot;, &quot;tagshowquery&quot;: &quot;京东自营&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;罗技键盘机械&quot;, &quot;tagshowquery&quot;: &quot;罗技&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无线键盘机械&quot;, &quot;tagshowquery&quot;: &quot;无线&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘ikbc&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;机械键盘ikbc&quot;, &quot;tagshowquery&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无线键盘ikbc&quot;, &quot;tagshowquery&quot;: &quot;无线&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;键盘ikbcc87&quot;, &quot;tagshowquery&quot;: &quot;c87&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘鼠标&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;键盘鼠标套装&quot;, &quot;tagshowquery&quot;: &quot;套装&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无线键盘鼠标&quot;, &quot;tagshowquery&quot;: &quot;无线&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无线机械键盘鼠标&quot;, &quot;tagshowquery&quot;: &quot;无线机械&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘膜&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;笔记本键盘膜&quot;, &quot;tagshowquery&quot;: &quot;笔记本&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;键盘膜联想&quot;, &quot;tagshowquery&quot;: &quot;联想&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;r9000p键盘膜&quot;, &quot;tagshowquery&quot;: &quot;r9000p&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘无线&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;机械键盘无线&quot;, &quot;tagshowquery&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;鼠标键盘无线&quot;, &quot;tagshowquery&quot;: &quot;鼠标&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;罗技键盘无线&quot;, &quot;tagshowquery&quot;: &quot;罗技&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘清洁&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;键盘清洁套装&quot;, &quot;tagshowquery&quot;: &quot;套装&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;机械键盘清洁&quot;, &quot;tagshowquery&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;电脑键盘清洁&quot;, &quot;tagshowquery&quot;: &quot;电脑&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘托&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;键盘托腕垫&quot;, &quot;tagshowquery&quot;: &quot;腕垫&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;电脑桌带键盘托&quot;, &quot;tagshowquery&quot;: &quot;电脑桌带&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;桌下键盘托&quot;, &quot;tagshowquery&quot;: &quot;桌下&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘静音&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;无线键盘静音&quot;, &quot;tagshowquery&quot;: &quot;无线&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;机械键盘静音&quot;, &quot;tagshowquery&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无声键盘静音&quot;, &quot;tagshowquery&quot;: &quot;无声&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘垫&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;键盘垫腕垫&quot;, &quot;tagshowquery&quot;: &quot;腕垫&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;鼠标键盘垫&quot;, &quot;tagshowquery&quot;: &quot;鼠标&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;笔记本键盘垫&quot;, &quot;tagshowquery&quot;: &quot;笔记本&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘贴纸&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;钢琴键盘贴纸&quot;, &quot;tagshowquery&quot;: &quot;钢琴&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;妙控键盘贴纸&quot;, &quot;tagshowquery&quot;: &quot;妙控&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;键盘贴纸字母&quot;, &quot;tagshowquery&quot;: &quot;字母&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘京东自营&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;机械键盘京东自营&quot;, &quot;tagshowquery&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;无线鼠标键盘京东自营&quot;, &quot;tagshowquery&quot;: &quot;无线鼠标&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;电脑键盘京东自营&quot;, &quot;tagshowquery&quot;: &quot;电脑&quot; &#125; ] &#125;, &#123; &quot;functionId&quot;: &quot;search&quot;, &quot;wname&quot;: &quot;键盘有线&quot;, &quot;tag&quot;: [ &#123; &quot;tagsearchquery&quot;: &quot;鼠标键盘有线&quot;, &quot;tagshowquery&quot;: &quot;鼠标&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;静音键盘有线&quot;, &quot;tagshowquery&quot;: &quot;静音&quot; &#125;, &#123; &quot;tagsearchquery&quot;: &quot;键盘有线京东自营&quot;, &quot;tagshowquery&quot;: &quot;京东自营&quot; &#125; ] &#125; ]&#125; 点击 键盘 后 请求地址https://api.m.jd.com/client.action?functionId=search 1234567891011121314151617181920212223242526272829303132333435363738394041body=&#123; &quot;addrFilter&quot;: &quot;1&quot;, &quot;addressId&quot;: &quot;4567807715&quot;, &quot;articleEssay&quot;: &quot;1&quot;, &quot;cancelCarModel&quot;: &quot;1&quot;, &quot;deviceidTail&quot;: &quot;20&quot;, &quot;exposedCount&quot;: &quot;0&quot;, &quot;frontExpids&quot;: &quot;F_0_0&quot;, &quot;gcAreaId&quot;: &quot;1,2812,51139,0&quot;, &quot;gcLat&quot;: &quot;40.138381&quot;, &quot;gcLng&quot;: &quot;116.612914&quot;, &quot;idPlusSearch&quot;: &quot;1&quot;, &quot;imagesize&quot;: &#123; &quot;gridImg&quot;: &quot;531x531&quot;, &quot;listImg&quot;: &quot;390x390&quot;, &quot;longImg&quot;: &quot;531x680&quot; &#125;, &quot;insertArticle&quot;: &quot;1&quot;, &quot;insertScene&quot;: &quot;1&quot;, &quot;insertedCount&quot;: &quot;0&quot;, &quot;isCorrect&quot;: &quot;1&quot;, &quot;keyword&quot;: &quot;键盘&quot;, &quot;latitude&quot;: &quot;40.138196&quot;, &quot;localNum&quot;: &quot;0&quot;, &quot;longitude&quot;: &quot;116.614013&quot;, &quot;newMiddleTag&quot;: &quot;1&quot;, &quot;newVersion&quot;: &quot;3&quot;, &quot;oneBoxMod&quot;: &quot;1&quot;, &quot;orignalSearch&quot;: &quot;1&quot;, &quot;orignalSelect&quot;: &quot;1&quot;, &quot;page&quot;: &quot;1&quot;, &quot;pageEntrance&quot;: &quot;1&quot;, &quot;pagesize&quot;: &quot;10&quot;, &quot;posAreaId&quot;: &quot;1,2812,51139,0&quot;, &quot;pvid&quot;: &quot;&quot;, &quot;searchVersionCode&quot;: &quot;9280&quot;, &quot;secondInsedCount&quot;: &quot;0&quot;, &quot;showShopTab&quot;: &quot;yes&quot;, &quot;showStoreTab&quot;: &quot;1&quot;, &quot;stock&quot;: &quot;1&quot;&#125; 请求方式POST 协议h2 请求大小3.17kB 请求耗时924ms 响应大小21.70 kB 响应quot;HcCid3&quot;: &quot;689&quot;, &quot;myHistory&quot;: &quot;1&quot;, &quot;code&quot;: &quot;0&quot;, &quot;isBookDisc&quot;: false, &quot;attachCategoryAskInfo&quot;: &#123; &quot;showPage&quot;: &quot;5&quot;, &quot;showTime&quot;: &quot;5&quot;, &quot;showText&quot;: &quot;关于键盘，大家都在问答社区讨论&quot;, &quot;askHcCid3&quot;: &quot;689&quot; &#125;, &quot;abTags&quot;: &#123; &quot;filterItemStatus&quot;: &quot;1&quot;, &quot;labelBgStyle&quot;: &quot;1&quot;, &quot;hideNewClothes&quot;: &quot;1&quot;, &quot;cornerIconLabelOpt&quot;: &quot;1&quot; &#125;, &quot;mtest&quot;: &quot;arch_new_d3,new_arch_fd_feature_log,shop_entrance_t3,~sak7|mixtag_sak7r,sak7_m_res_l7231,sak7_m_rpf_l8339,sak7_m_dl_u9522,sak7_m_ps_u9522,sak7_m_ee_r,sak7_m_ensa_l10648,sak7_m_ema_r,sak7_m_nprd_l2482,sak7_m_ud_l9829,sak7_m_gbp_l7646,sak7_m_lw_u5062,sak7_s_lw_u5062,sak7_m_up_l5907,sak7_m_tnw_r,sak7_m_gtd_l11411,sak7_m_prm_l10783,sak7_m_am_l5406,sak7_m_mtr_l11288,sak7_m_mta_r,sak7_m_lbs_l7926,sak7_m_ptr_r,sak7_m_rmd_l10904,sak7_m_rmso_r,sak7_m_rmp_l10977,sak7_m_rms_r,sak7_m_mbr_r,sak7_m_mlw_lc,sak7_m_mb_l11179,sak7_m_jdhf_l7430,sak7_m_om_l10660,sak7_m_flt_l10230,sak7_m_crr_r,sak7_m_da_r,sak7_m_msc_r,sak7_m_cra_r,sak7_m_sc_lc,sak7_m_ss_l11394,sak7_s_rt_r,sak7_s_bf_l8880,sak7_s_ks_l8072,sak7_s_kver_r,sak7_s_mq_l9221,sak7_s_dl_l9787,sak7_s_ph_l11412,sak7_s_ema_r,sak7_s_ec_r,sak7_s_gbp_l9661,sak7_s_knf_r,sak7_s_obf_r,sak7_s_bdgw_r,sak7_s_am_r,sak7_s_run_r,sak7_s_rmo_r,sak7_s_rat_r,sak7_s_rbr_r,sak7_s_rpr_r,sak7_s_ram_l7942,sak7_s_rbm_r,sak7_s_rba_r,sak7_s_rpm_l8812,sak7_s_rpa_l7947,sak7_s_rpb_r,sak7_s_rbam_l7948,sak7_s_rpam_r,sak7_s_rpbm_l7950,sak7_s_rpba_r,sak7_s_pbam_r,sak7_s_rsd_r,sak7_s_rsdl_l11367,sak7_s_rspr_lc,sak7_s_obe_r,sak7_s_bw_lc,sak7_s_eps_l7533,sak7_s_bfe_l10309,sak7_s_os_l10661,sak7_s_da_r,sak7_s_bmc_r,sak7_s_cra_r,sak7_s_sc_r,sak7_p_fl_l8526,sak7_q_hc_r,sak7_q_qr_r,sak7_q_qrm_r,sak7_q_qtc_l11268,sak7_q_qit_lc,sak7_q_ao_r,sak7_q_bz_r,sak7_d_dsa_l3262,sak7_d_di_l5987,sak7_d_dpi_r,sak7_d_dsc_l7461,sak7_b_cdg_r,sak7_b_jdhf_l7410,sak7_b_ri_r,sak7_b_li_l8595,sak7_b_srf_r,sak7_b_ai_l9123,sak7_o_kss_r,sak7_o_ons_r,sak7_o_oca_l5712,sak7_sc_dc_u11344,sak7_ss_sa_u11344,sak7_sm_rn_l10488,sak7_sm_rt_l10920,sak7_sm_st_r,sak7_sm_sop_l10314,sak7_sm_oh_l10478,sak7_sm_sd_lc,s^z^r^sak7_nn_apf_l10848|&quot;, &quot;isFood&quot;: false, &quot;MergeSKUType&quot;: &quot;mergesku_none&quot;, &quot;gaiaContent&quot;: true, &quot;menuBar&quot;: &#123; &quot;ab&quot;: &quot;on&quot;, &quot;data&quot;: [ &#123; &quot;sortType&quot;: &quot;1&quot;, &quot;sortChilds&quot;: [ &#123; &quot;sortBody&quot;: &quot;0&quot;, &quot;name&quot;: &quot;综合推荐&quot;, &quot;selectName&quot;: &quot;综合推荐&quot; &#125;, &#123; &quot;sortBody&quot;: &quot;6&quot;, &quot;name&quot;: &quot;评论数从高到低&quot;, &quot;selectName&quot;: &quot;评论&quot; &#125; ], &quot;type&quot;: &quot;1&quot; &#125;, &#123; &quot;sortBody&quot;: &quot;1&quot;, &quot;sortType&quot;: &quot;2&quot;, &quot;name&quot;: &quot;销量&quot;, &quot;type&quot;: &quot;1&quot; &#125;, &#123; &quot;sortType&quot;: &quot;3&quot;, &quot;sortChilds&quot;: [ &#123; &quot;sortBody&quot;: &quot;3&quot; &#125;, &#123; &quot;sortBody&quot;: &quot;2&quot; &#125; ], &quot;name&quot;: &quot;价格&quot;, &quot;type&quot;: &quot;1&quot; &#125;, &#123; &quot;refTab&quot;: &quot;2&quot;, &quot;type&quot;: &quot;2&quot;, &quot;name&quot;: &quot;口碑&quot; &#125;, &#123; &quot;name&quot;: &quot;筛选&quot;, &quot;type&quot;: &quot;3&quot; &#125; ] &#125;, &quot;barFilter&quot;: &#123; &quot;cancelTxt&quot;: &quot;取消&quot;, &quot;filterTxtImg&quot;: &quot;https://img13.360buyimg.com/ling/jfs/t1/167727/29/14970/3190/60670f6dE8a24bc97/3d69eb7befd57ff0.png&quot;, &quot;filterValue&quot;: &quot;10000638||icon_id&quot;, &quot;filterPoint&quot;: &quot;10000638&quot;, &quot;filterTxtClicked&quot;: &quot;以下是xx活动商品&quot;, &quot;filterBodyKey&quot;: &quot;promID&quot;, &quot;filterTxt&quot;: &quot;点击筛选xx活动商品&quot; &#125;, &quot;requerySearch&quot;: &quot;0&quot;, &quot;showPraiseTab&quot;: &#123; &quot;moduleName&quot;: &quot;JDReactReputation&quot;, &quot;param&quot;: &#123; &quot;cateId&quot;: &quot;689,675,5146&quot;, &quot;searchContent&quot;: &quot;键盘&quot;, &quot;isShowTitle&quot;: &quot;false&quot; &#125;, &quot;cateId&quot;: &quot;689&quot;, &quot;praiseTitle&quot;: &quot;口碑&quot; &#125;, &quot;problemFeedback&quot;: false, &quot;articleInserted&quot;: &quot;1&quot;, &quot;IsSpecialStock&quot;: &quot;0&quot;, &quot;netContent&quot;: true, &quot;ctmStyle&quot;: &quot;1&quot;, &quot;tiledFilter&quot;: &#123; &quot;tip&quot;: &quot;&quot;, &quot;style&quot;: &quot;0&quot;, &quot;tiledFilterTags&quot;: [ &#123; &quot;tiledTagImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s130x130_jfs/t4447/47/516161355/6328/120dfb24/58d0ee92N6e2c8203.jpg&quot;, &quot;tiledTagLog&quot;: &quot;cat_1001627&quot;, &quot;tiledTagName&quot;: &quot;机械键盘&quot;, &quot;tiledTagType&quot;: &quot;virtual&quot;, &quot;tiledTagValue&quot;: &quot;机械键盘;virtual_categorys,L1001627M1001627&quot; &#125;, &#123; &quot;tiledTagImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s130x130_jfs/t4435/61/537918756/4934/1cc1d6b8/58d0f0e2N07f261a9.jpg&quot;, &quot;tiledTagLog&quot;: &quot;cat_1001628&quot;, &quot;tiledTagName&quot;: &quot;静电容键盘&quot;, &quot;tiledTagType&quot;: &quot;virtual&quot;, &quot;tiledTagValue&quot;: &quot;静电容键盘;virtual_categorys,L1001628M1001628&quot; &#125;, &#123; &quot;tiledTagImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s130x130_jfs/t4312/177/2426795360/6790/e6ef3847/58d0f147N4a365d54.jpg&quot;, &quot;tiledTagLog&quot;: &quot;cat_1001629&quot;, &quot;tiledTagName&quot;: &quot;游戏键盘&quot;, &quot;tiledTagType&quot;: &quot;virtual&quot;, &quot;tiledTagValue&quot;: &quot;游戏键盘;virtual_categorys,L1001629M1001629&quot; &#125;, &#123; &quot;tiledTagImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s130x130_jfs/t4681/254/523080746/6446/3ed28d6e/58d0f1c1Nc432ebee.jpg&quot;, &quot;tiledTagLog&quot;: &quot;cat_1001630&quot;, &quot;tiledTagName&quot;: &quot;薄膜键盘&quot;, &quot;tiledTagType&quot;: &quot;virtual&quot;, &quot;tiledTagValue&quot;: &quot;薄膜键盘;virtual_categorys,L1001630M1001630&quot; &#125;, &#123; &quot;tiledTagImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s130x130_jfs/t3112/77/9378141275/3342/411633ec/58d0f229Ned9146c0.jpg&quot;, &quot;tiledTagLog&quot;: &quot;cat_1001631&quot;, &quot;tiledTagName&quot;: &quot;办公键盘&quot;, &quot;tiledTagType&quot;: &quot;virtual&quot;, &quot;tiledTagValue&quot;: &quot;办公键盘;virtual_categorys,L1001631M1001631&quot; &#125;, &#123; &quot;tiledTagImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s130x130_jfs/t4576/68/554007063/7010/4c1d0152/58d0f28dNb470eee6.jpg&quot;, &quot;tiledTagLog&quot;: &quot;cat_1001632&quot;, &quot;tiledTagName&quot;: &quot;键鼠套装&quot;, &quot;tiledTagType&quot;: &quot;virtual&quot;, &quot;tiledTagValue&quot;: &quot;键鼠套装;virtual_categorys,L1001632M1001632&quot; &#125; ] &#125;, &quot;filterItemsData&quot;: &#123; &quot;nexpandNumber&quot;: &quot;3&quot;, &quot;catelogyList&quot;: [ &#123; &quot;cid&quot;: 686, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;外设产品&quot;, &quot;wareNumber&quot;: &quot;12281&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 689, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;键盘&quot;, &quot;wareNumber&quot;: &quot;12072&quot; &#125;, &#123; &quot;cid&quot;: 690, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;鼠标&quot;, &quot;wareNumber&quot;: &quot;47&quot; &#125;, &#123; &quot;cid&quot;: 826, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;鼠标垫&quot;, &quot;wareNumber&quot;: &quot;100&quot; &#125;, &#123; &quot;cid&quot;: 1049, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;线缆&quot;, &quot;wareNumber&quot;: &quot;41&quot; &#125;, &#123; &quot;cid&quot;: 27154, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;扩展坞&quot;, &quot;wareNumber&quot;: &quot;8&quot; &#125;, &#123; &quot;cid&quot;: 1050, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;电脑工具&quot;, &quot;wareNumber&quot;: &quot;7&quot; &#125;, &#123; &quot;cid&quot;: 1051, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;电脑清洁&quot;, &quot;wareNumber&quot;: &quot;4&quot; &#125;, &#123; &quot;cid&quot;: 698, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;手写板&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125;, &#123; &quot;cid&quot;: 23049, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;移动固态硬盘&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125; ], &quot;type&quot;: &quot;1&quot; &#125;, &#123; &quot;cid&quot;: 830, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;手机配件&quot;, &quot;wareNumber&quot;: &quot;41&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 13659, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;苹果周边&quot;, &quot;wareNumber&quot;: &quot;15&quot; &#125;, &#123; &quot;cid&quot;: 23095, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;手游辅助配件&quot;, &quot;wareNumber&quot;: &quot;13&quot; &#125;, &#123; &quot;cid&quot;: 13661, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;数据线&quot;, &quot;wareNumber&quot;: &quot;9&quot; &#125;, &#123; &quot;cid&quot;: 868, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;创意配件&quot;, &quot;wareNumber&quot;: &quot;3&quot; &#125;, &#123; &quot;cid&quot;: 866, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;手机壳/保护套&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 671, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;电脑整机&quot;, &quot;wareNumber&quot;: &quot;13379&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 675, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;笔记本配件&quot;, &quot;wareNumber&quot;: &quot;10790&quot; &#125;, &#123; &quot;cid&quot;: 2694, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;平板电脑&quot;, &quot;wareNumber&quot;: &quot;64&quot; &#125;, &#123; &quot;cid&quot;: 1105, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;游戏本&quot;, &quot;wareNumber&quot;: &quot;64&quot; &#125;, &#123; &quot;cid&quot;: 5146, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;平板电脑配件&quot;, &quot;wareNumber&quot;: &quot;2313&quot; &#125;, &#123; &quot;cid&quot;: 673, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;台式机&quot;, &quot;wareNumber&quot;: &quot;8&quot; &#125;, &#123; &quot;cid&quot;: 672, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;笔记本&quot;, &quot;wareNumber&quot;: &quot;130&quot; &#125;, &#123; &quot;cid&quot;: 674, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;服务器/工作站&quot;, &quot;wareNumber&quot;: &quot;6&quot; &#125;, &#123; &quot;cid&quot;: 13278, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;特殊商品&quot;, &quot;wareNumber&quot;: &quot;3&quot; &#125;, &#123; &quot;cid&quot;: 12798, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;一体机&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125; ], &quot;type&quot;: &quot;1&quot; &#125;, &#123; &quot;cid&quot;: 13830, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;二手外设产品&quot;, &quot;wareNumber&quot;: &quot;88&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 13831, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手键盘&quot;, &quot;wareNumber&quot;: &quot;79&quot; &#125;, &#123; &quot;cid&quot;: 13832, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手鼠标&quot;, &quot;wareNumber&quot;: &quot;9&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 13826, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;二手电脑配件&quot;, &quot;wareNumber&quot;: &quot;22&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 15896, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手装机配件&quot;, &quot;wareNumber&quot;: &quot;16&quot; &#125;, &#123; &quot;cid&quot;: 15900, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手CPU&quot;, &quot;wareNumber&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 15637, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手硬盘&quot;, &quot;wareNumber&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 15895, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手组装电脑&quot;, &quot;wareNumber&quot;: &quot;2&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 13769, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;二手电脑整机&quot;, &quot;wareNumber&quot;: &quot;30&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 15893, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手平板电脑配件&quot;, &quot;wareNumber&quot;: &quot;10&quot; &#125;, &#123; &quot;cid&quot;: 13770, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手笔记本&quot;, &quot;wareNumber&quot;: &quot;7&quot; &#125;, &#123; &quot;cid&quot;: 13771, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手平板电脑&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125;, &#123; &quot;cid&quot;: 15894, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手笔记本配件&quot;, &quot;wareNumber&quot;: &quot;6&quot; &#125;, &#123; &quot;cid&quot;: 13824, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手台式机&quot;, &quot;wareNumber&quot;: &quot;5&quot; &#125;, &#123; &quot;cid&quot;: 13825, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;二手一体机&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 677, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;电脑组件&quot;, &quot;wareNumber&quot;: &quot;5&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 18522, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;显示器配件&quot;, &quot;wareNumber&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 688, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;显示器&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125;, &#123; &quot;cid&quot;: 5009, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;装机配件&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125;, &#123; &quot;cid&quot;: 15114, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;特殊商品&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 17199, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;特殊商品&quot;, &quot;wareNumber&quot;: &quot;3&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 17200, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;特殊商品&quot;, &quot;wareNumber&quot;: &quot;3&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;cid&quot;: 829, &quot;filed&quot;: &quot;cid2&quot;, &quot;name&quot;: &quot;数码配件&quot;, &quot;wareNumber&quot;: &quot;66&quot;, &quot;childs&quot;: [ &#123; &quot;cid&quot;: 854, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;电池/充电器&quot;, &quot;wareNumber&quot;: &quot;65&quot; &#125;, &#123; &quot;cid&quot;: 851, &quot;filed&quot;: &quot;cid3&quot;, &quot;name&quot;: &quot;相机清洁/贴膜&quot;, &quot;wareNumber&quot;: &quot;1&quot; &#125; ], &quot;type&quot;: &quot;2&quot; &#125; ], &quot;sortedFilterItems&quot;: &#123; &quot;filterItemAttrs&quot;: [ &quot;品牌&quot;, &quot;连接方式&quot;, &quot;背光效果&quot;, &quot;数字键盘&quot;, &quot;类型&quot;, &quot;轴体类型&quot;, &quot;适用场景&quot;, &quot;轴体品牌&quot;, &quot;游戏性能&quot;, &quot;适用机型&quot;, &quot;类别&quot;, &quot;适用品牌&quot; ], &quot;newClothesCate&quot;: &quot;新品&quot;, &quot;filterItemExposed&quot;: 6, &quot;jdServer&quot;: [ &#123; &quot;showName&quot;: &quot;京东物流&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;self&quot; &#125;, &#123; &quot;showName&quot;: &quot;二手&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;secondWareFilter&quot; &#125; ] &#125;, &quot;expandText&quot;: &quot;展开&quot;, &quot;hotExposed&quot;: &quot;2&quot;, &quot;nattrNumber&quot;: &quot;2&quot;, &quot;styleType&quot;: &quot;1&quot;, &quot;selectFilterItems&quot;: [ &#123; &quot;selectFilterType&quot;: &quot;1&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;3&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;newsCLLSFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;newsLXXPFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;newsXRBFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;newsMXTKFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;newsRMXPFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;self&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;hyjWareFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;JSDVIPWareFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;marketSameStyleFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;newClothesCateFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;globalSalesFilter&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;JDYSWareFilter&quot;, &quot;position&quot;: &quot;2&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;secondWareFilter&quot;, &quot;position&quot;: &quot;3&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;JDPMWareFilter&quot;, &quot;position&quot;: &quot;5&quot; &#125;, &#123; &quot;selectFilterType&quot;: &quot;2&quot;, &quot;bodyKey&quot;: &quot;plusWareFilter&quot; &#125; ], &quot;price&quot;: &#123; &quot;value&quot;: [ &quot;55-102&quot;, &quot;102-210&quot;, &quot;210-1349&quot; ], &quot;percent&quot;: [ &quot;31%&quot;, &quot;32%&quot;, &quot;19%&quot; ], &quot;key&quot;: &quot;价格&quot; &#125;, &quot;configuredFilters&quot;: [ &#123; &quot;showName&quot;: &quot;京东物流&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;self&quot;, &quot;order&quot;: 1 &#125;, &#123; &quot;showName&quot;: &quot;仅看有货&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;stock&quot;, &quot;checked&quot;: &quot;YES&quot;, &quot;order&quot;: 3 &#125;, &#123; &quot;showName&quot;: &quot;京东超市&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;JDCSWareFilter&quot;, &quot;order&quot;: 4 &#125;, &#123; &quot;showName&quot;: &quot;PLUS专享&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;plusWareFilter&quot;, &quot;order&quot;: 5 &#125;, &#123; &quot;showName&quot;: &quot;货到付款&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;cod&quot;, &quot;order&quot;: 6 &#125;, &#123; &quot;showName&quot;: &quot;二手&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;secondWareFilter&quot;, &quot;order&quot;: 7 &#125;, &#123; &quot;showName&quot;: &quot;分期免息&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;FQMXWareFilter&quot;, &quot;order&quot;: 8 &#125;, &#123; &quot;showName&quot;: &quot;促销&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;promotion&quot;, &quot;order&quot;: 9 &#125;, &#123; &quot;showName&quot;: &quot;京东国际&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;globalPurchaseFilter&quot;, &quot;order&quot;: 11 &#125;, &#123; &quot;showName&quot;: &quot;新品&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;newClothesCateFilter&quot;, &quot;order&quot;: 12 &#125;, &#123; &quot;showName&quot;: &quot;配送全球&quot;, &quot;bodyValue&quot;: &quot;1&quot;, &quot;bodyKey&quot;: &quot;globalSalesFilter&quot;, &quot;order&quot;: 13 &#125; ], &quot;nexpandSize&quot;: &quot;59&quot;, &quot;nexpandSorts&quot;: [ &#123; &quot;showLogoStyle&quot;: &quot;1&quot;, &quot;selectKey&quot;: &quot;expressionKey&quot;, &quot;expandType&quot;: &quot;1&quot;, &quot;limit&quot;: -1, &quot;alphabeticalItems&quot;: &#123; &quot;A&quot;: [ &#123; &quot;showName&quot;: &quot;阿米洛（Varmilo）&quot; &#125;, &#123; &quot;showName&quot;: &quot;AKKO&quot; &#125;, &#123; &quot;showName&quot;: &quot;外星人（Alienware）&quot; &#125;, &#123; &quot;showName&quot;: &quot;AOC&quot; &#125;, &#123; &quot;showName&quot;: &quot;爱国者（aigo）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Apple&quot; &#125;, &#123; &quot;showName&quot;: &quot;艾石头&quot; &#125;, &#123; &quot;showName&quot;: &quot;安麦威&quot; &#125;, &#123; &quot;showName&quot;: &quot;AZIO&quot; &#125;, &#123; &quot;showName&quot;: &quot;艾丝恺&quot; &#125;, &#123; &quot;showName&quot;: &quot;AJIUYU&quot; &#125;, &#123; &quot;showName&quot;: &quot;AWKICI&quot; &#125;, &#123; &quot;showName&quot;: &quot;Azio&quot; &#125;, &#123; &quot;showName&quot;: &quot;爱魔&quot; &#125;, &#123; &quot;showName&quot;: &quot;爱魔（Amork）&quot; &#125;, &#123; &quot;showName&quot;: &quot;安尚（ACTTO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;奥睿科（ORICO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;艾茉森（Amason）&quot; &#125; ], &quot;B&quot;: [ &#123; &quot;showName&quot;: &quot;B.O.W&quot; &#125;, &#123; &quot;showName&quot;: &quot;B.FRIENDit&quot; &#125;, &#123; &quot;showName&quot;: &quot;蝙蝠骑士（Batknight）&quot; &#125;, &#123; &quot;showName&quot;: &quot;本手&quot; &#125;, &#123; &quot;showName&quot;: &quot;暴狼客&quot; &#125;, &#123; &quot;showName&quot;: &quot;bejoy&quot; &#125;, &#123; &quot;showName&quot;: &quot;Bonks&quot; &#125;, &#123; &quot;showName&quot;: &quot;KPREPUBLIC&quot; &#125;, &#123; &quot;showName&quot;: &quot;BURJUMAN&quot; &#125;, &#123; &quot;showName&quot;: &quot;邦兴晖&quot; &#125;, &#123; &quot;showName&quot;: &quot;贝乐星辉&quot; &#125;, &#123; &quot;showName&quot;: &quot;BSN&quot; &#125;, &#123; &quot;showName&quot;: &quot;BUBM&quot; &#125;, &#123; &quot;showName&quot;: &quot;冰狐&quot; &#125;, &#123; &quot;showName&quot;: &quot;冰雷&quot; &#125;, &#123; &quot;showName&quot;: &quot;BROOKSTONE&quot; &#125;, &#123; &quot;showName&quot;: &quot;毕亚兹（BIAZE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;倍方&quot; &#125;, &#123; &quot;showName&quot;: &quot;邦克仕（Benks）&quot; &#125;, &#123; &quot;showName&quot;: &quot;BRYDGE&quot; &#125;, &#123; &quot;showName&quot;: &quot;倍晶（BestJing）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Brateck&quot; &#125;, &#123; &quot;showName&quot;: &quot;镖头（Biaotou）&quot; &#125;, &#123; &quot;showName&quot;: &quot;8thdays&quot; &#125;, &#123; &quot;showName&quot;: &quot;BZBC&quot; &#125;, &#123; &quot;showName&quot;: &quot;布谷鸟&quot; &#125;, &#123; &quot;showName&quot;: &quot;百瑞仕（BARUS）&quot; &#125; ], &quot;C&quot;: [ &#123; &quot;showName&quot;: &quot;CHERRY&quot; &#125;, &#123; &quot;showName&quot;: &quot;长城（Great Wall）&quot; &#125;, &#123; &quot;showName&quot;: &quot;岑鑫&quot; &#125;, &#123; &quot;showName&quot;: &quot;成爵&quot; &#125;, &#123; &quot;showName&quot;: &quot;超信达（CHAOXINDA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;驰顾&quot; &#125;, &#123; &quot;showName&quot;: &quot;cloud hin&quot; &#125;, &#123; &quot;showName&quot;: &quot;宸焕&quot; &#125;, &#123; &quot;showName&quot;: &quot;CHOETECH&quot; &#125;, &#123; &quot;showName&quot;: &quot;CANHOOGD&quot; &#125;, &#123; &quot;showName&quot;: &quot;超萌（ULTRAGROW）&quot; &#125;, &#123; &quot;showName&quot;: &quot;cxno&quot; &#125;, &#123; &quot;showName&quot;: &quot;CHILIVE&quot; &#125;, &#123; &quot;showName&quot;: &quot;彩膜坊&quot; &#125;, &#123; &quot;showName&quot;: &quot;创狄&quot; &#125;, &#123; &quot;showName&quot;: &quot;CINQUS&quot; &#125; ], &quot;D&quot;: [ &#123; &quot;showName&quot;: &quot;达尔优&quot; &#125;, &#123; &quot;showName&quot;: &quot;戴尔（DELL）&quot; &#125;, &#123; &quot;showName&quot;: &quot;DURGOD&quot; &#125;, &#123; &quot;showName&quot;: &quot;斗鱼（DOUYU.COM）&quot; &#125;, &#123; &quot;showName&quot;: &quot;多彩（Delux）&quot; &#125;, &#123; &quot;showName&quot;: &quot;迪摩&quot; &#125;, &#123; &quot;showName&quot;: &quot;德意龙（BORN IN WAR）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Dear Mean&quot; &#125;, &#123; &quot;showName&quot;: &quot;带带&quot; &#125;, &#123; &quot;showName&quot;: &quot;DCOMA&quot; &#125;, &#123; &quot;showName&quot;: &quot;Double Shell&quot; &#125;, &#123; &quot;showName&quot;: &quot;DAS&quot; &#125;, &#123; &quot;showName&quot;: &quot;稻草屋&quot; &#125;, &#123; &quot;showName&quot;: &quot;doqo&quot; &#125;, &#123; &quot;showName&quot;: &quot;帝伊工坊&quot; &#125;, &#123; &quot;showName&quot;: &quot;DUX DUCIS&quot; &#125;, &#123; &quot;showName&quot;: &quot;杜酷（DUKU）&quot; &#125;, &#123; &quot;showName&quot;: &quot;迪士尼（Disney）&quot; &#125;, &#123; &quot;showName&quot;: &quot;德甲士（WATASHI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;电象&quot; &#125; ], &quot;E&quot;: [ &#123; &quot;showName&quot;: &quot;前行者（EWEADN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;e元素&quot; &#125;, &#123; &quot;showName&quot;: &quot;ET&quot; &#125;, &#123; &quot;showName&quot;: &quot;EISSCCE&quot; &#125;, &#123; &quot;showName&quot;: &quot;EGGUEA&quot; &#125; ], &quot;F&quot;: [ &#123; &quot;showName&quot;: &quot;腹灵（FL·ESPORTS）&quot; &#125;, &#123; &quot;showName&quot;: &quot;斐尔可&quot; &#125;, &#123; &quot;showName&quot;: &quot;富勒（Fuhlen）&quot; &#125;, &#123; &quot;showName&quot;: &quot;富德&quot; &#125;, &#123; &quot;showName&quot;: &quot;FirstBlood&quot; &#125;, &#123; &quot;showName&quot;: &quot;梵特科（FANTECH）&quot; &#125;, &#123; &quot;showName&quot;: &quot;funyak&quot; &#125;, &#123; &quot;showName&quot;: &quot;飞遁（LESAILES）&quot; &#125;, &#123; &quot;showName&quot;: &quot;虎猫&quot; &#125;, &#123; &quot;showName&quot;: &quot;梵超&quot; &#125;, &#123; &quot;showName&quot;: &quot;FUNKING&quot; &#125;, &#123; &quot;showName&quot;: &quot;Facroo&quot; &#125;, &#123; &quot;showName&quot;: &quot;飞智（flydigi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;绯狐&quot; &#125;, &#123; &quot;showName&quot;: &quot;迪湃（FOPATI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;FVYESH&quot; &#125; ], &quot;G&quot;: [ &#123; &quot;showName&quot;: &quot;GANSS&quot; &#125;, &#123; &quot;showName&quot;: &quot;哨鸟（GUARD BIRD）&quot; &#125;, &#123; &quot;showName&quot;: &quot;果瀚&quot; &#125;, &#123; &quot;showName&quot;: &quot;GYSFONE&quot; &#125;, &#123; &quot;showName&quot;: &quot;甘斯（GANSI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;广仁德&quot; &#125;, &#123; &quot;showName&quot;: &quot;咕豆（Gudou）&quot; &#125;, &#123; &quot;showName&quot;: &quot;格玛斯（gemasi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;古汀&quot; &#125;, &#123; &quot;showName&quot;: &quot;冠泽（GUANZE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;概力&quot; &#125;, &#123; &quot;showName&quot;: &quot;广群达&quot; &#125; ], &quot;H&quot;: [ &#123; &quot;showName&quot;: &quot;黑爵（AJAZZ）&quot; &#125;, &#123; &quot;showName&quot;: &quot;惠普（HP）&quot; &#125;, &#123; &quot;showName&quot;: &quot;黑峡谷（Hyeku）&quot; &#125;, &#123; &quot;showName&quot;: &quot;HHKB&quot; &#125;, &#123; &quot;showName&quot;: &quot;华硕（ASUS）&quot; &#125;, &#123; &quot;showName&quot;: &quot;宏碁（acer）&quot; &#125;, &#123; &quot;showName&quot;: &quot;HYPERX&quot; &#125;, &#123; &quot;showName&quot;: &quot;HUKE&quot; &#125;, &#123; &quot;showName&quot;: &quot;华为（HUAWEI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;HyperX&quot; &#125;, &#123; &quot;showName&quot;: &quot;虹龙&quot; &#125;, &#123; &quot;showName&quot;: &quot;虎克&quot; &#125;, &#123; &quot;showName&quot;: &quot;黑沙（HEISHA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;HIXANNY&quot; &#125;, &#123; &quot;showName&quot;: &quot;汉钦&quot; &#125;, &#123; &quot;showName&quot;: &quot;黑吉蛇&quot; &#125;, &#123; &quot;showName&quot;: &quot;好哆屏&quot; &#125;, &#123; &quot;showName&quot;: &quot;虎克（HUKE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;欢乐投&quot; &#125;, &#123; &quot;showName&quot;: &quot;幸福家园（HAPPYNESSFAMILY）&quot; &#125;, &#123; &quot;showName&quot;: &quot;HNM&quot; &#125;, &#123; &quot;showName&quot;: &quot;慧多多（HUIDUODUO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;HonourSea&quot; &#125;, &#123; &quot;showName&quot;: &quot;HRHPYM&quot; &#125;, &#123; &quot;showName&quot;: &quot;HAWOES&quot; &#125;, &#123; &quot;showName&quot;: &quot;惠而浦（Whirlpool）&quot; &#125; ], &quot;I&quot;: [ &#123; &quot;showName&quot;: &quot;ikbc&quot; &#125;, &#123; &quot;showName&quot;: &quot;IQUNIX&quot; &#125;, &#123; &quot;showName&quot;: &quot;方正科技（ifound）&quot; &#125;, &#123; &quot;showName&quot;: &quot;艾拍宝（iPazzPort）&quot; &#125;, &#123; &quot;showName&quot;: &quot;INFILAND&quot; &#125; ], &quot;J&quot;: [ &#123; &quot;showName&quot;: &quot;京东京造&quot; &#125;, &#123; &quot;showName&quot;: &quot;机械师（MACHENIKE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;金士顿（Kingston）&quot; &#125;, &#123; &quot;showName&quot;: &quot;吉选（GESOBYTE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;吉利鸭（KBDucky）&quot; &#125;, &#123; &quot;showName&quot;: &quot;精晟小太阳&quot; &#125;, &#123; &quot;showName&quot;: &quot;贝戋马户（james donkey）&quot; &#125;, &#123; &quot;showName&quot;: &quot;技嘉（GIGABYTE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;金正（NINTAUS）&quot; &#125;, &#123; &quot;showName&quot;: &quot;津浆&quot; &#125;, &#123; &quot;showName&quot;: &quot;惊雷&quot; &#125;, &#123; &quot;showName&quot;: &quot;极途（Gimit）&quot; &#125;, &#123; &quot;showName&quot;: &quot;机械师&quot; &#125;, &#123; &quot;showName&quot;: &quot;极米熊&quot; &#125;, &#123; &quot;showName&quot;: &quot;吉云盛&quot; &#125;, &#123; &quot;showName&quot;: &quot;九科星&quot; &#125;, &#123; &quot;showName&quot;: &quot;JRC&quot; &#125;, &#123; &quot;showName&quot;: &quot;吉润星&quot; &#125;, &#123; &quot;showName&quot;: &quot;久宇&quot; &#125;, &#123; &quot;showName&quot;: &quot;江铭&quot; &#125;, &#123; &quot;showName&quot;: &quot;JABIL&quot; &#125;, &#123; &quot;showName&quot;: &quot;嘉速&quot; &#125;, &#123; &quot;showName&quot;: &quot;金陵声宝&quot; &#125;, &#123; &quot;showName&quot;: &quot;锦读（JINDU）&quot; &#125;, &#123; &quot;showName&quot;: &quot;机械革命（MECHREVO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;金米诺（JINMINUO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;JINCOMSO&quot; &#125;, &#123; &quot;showName&quot;: &quot;极梭（SPINDLEPOLE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;杰梵客（JEEFANCO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;JETech Design&quot; &#125;, &#123; &quot;showName&quot;: &quot;佳电乐（OVY）&quot; &#125;, &#123; &quot;showName&quot;: &quot;吉摩&quot; &#125;, &#123; &quot;showName&quot;: &quot;家樂聲&quot; &#125;, &#123; &quot;showName&quot;: &quot;金刚钻&quot; &#125; ], &quot;K&quot;: [ &#123; &quot;showName&quot;: &quot;keychron&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷冷至尊（CoolerMaster）&quot; &#125;, &#123; &quot;showName&quot;: &quot;珂芝（KZZI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;科大讯飞（iFLYTEK）&quot; &#125;, &#123; &quot;showName&quot;: &quot;凯酷（KEYCOOL）&quot; &#125;, &#123; &quot;showName&quot;: &quot;蝰蛇（VIPERADE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;蝰蛇（KUISHE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;库肯（KUKEN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷蛇（COOLSNAKE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;科普斯&quot; &#125;, &#123; &quot;showName&quot;: &quot;京天（KOTIN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷今（COOLTODAY）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Kinesis&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷怡&quot; &#125;, &#123; &quot;showName&quot;: &quot;咔咔鱼（KAKAY）&quot; &#125;, &#123; &quot;showName&quot;: &quot;卡麦仑（KAMLEN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷奇（cooskin）&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷比魔方&quot; &#125;, &#123; &quot;showName&quot;: &quot;肯客（KENKE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷设&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷兮兮（coolxixi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;康凡&quot; &#125;, &#123; &quot;showName&quot;: &quot;酷嬷&quot; &#125;, &#123; &quot;showName&quot;: &quot;Keating Berus&quot; &#125; ], &quot;L&quot;: [ &#123; &quot;showName&quot;: &quot;罗技（Logitech）&quot; &#125;, &#123; &quot;showName&quot;: &quot;罗技（G）&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷柏（Rapoo）&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷蛇（Razer）&quot; &#125;, &#123; &quot;showName&quot;: &quot;联想（lenovo）&quot; &#125;, &#123; &quot;showName&quot;: &quot;狼蛛（AULA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷神（ThundeRobot）&quot; &#125;, &#123; &quot;showName&quot;: &quot;罗技（logitech）&quot; &#125;, &#123; &quot;showName&quot;: &quot;洛斐（LOFREE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;灵蛇&quot; &#125;, &#123; &quot;showName&quot;: &quot;Leopold&quot; &#125;, &#123; &quot;showName&quot;: &quot;狼途（Langtu）&quot; &#125;, &#123; &quot;showName&quot;: &quot;leopold&quot; &#125;, &#123; &quot;showName&quot;: &quot;镭拓（Rantopad）&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷迪凯（LDK.al）&quot; &#125;, &#123; &quot;showName&quot;: &quot;狼派（teamwolf）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Leoisilence&quot; &#125;, &#123; &quot;showName&quot;: &quot;力胜&quot; &#125;, &#123; &quot;showName&quot;: &quot;罗品贡技&quot; &#125;, &#123; &quot;showName&quot;: &quot;乐玛通（LOKMAT）&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷狼&quot; &#125;, &#123; &quot;showName&quot;: &quot;龙涛&quot; &#125;, &#123; &quot;showName&quot;: &quot;朗森&quot; &#125;, &#123; &quot;showName&quot;: &quot;力拓&quot; &#125;, &#123; &quot;showName&quot;: &quot;罗姿&quot; &#125;, &#123; &quot;showName&quot;: &quot;良雫&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷诺塔&quot; &#125;, &#123; &quot;showName&quot;: &quot;LIMEIDE&quot; &#125;, &#123; &quot;showName&quot;: &quot;绿巨能（llano）&quot; &#125;, &#123; &quot;showName&quot;: &quot;鹿为&quot; &#125;, &#123; &quot;showName&quot;: &quot;绿联（UGREEN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;蓝盛（LENTION）&quot; &#125;, &#123; &quot;showName&quot;: &quot;连拓（LinkStone）&quot; &#125;, &#123; &quot;showName&quot;: &quot;leickeleipzig&quot; &#125;, &#123; &quot;showName&quot;: &quot;绿盾仕&quot; &#125;, &#123; &quot;showName&quot;: &quot;劳科（LAOKE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Lecoo&quot; &#125;, &#123; &quot;showName&quot;: &quot;良奥&quot; &#125;, &#123; &quot;showName&quot;: &quot;列侯（LIEHOU）&quot; &#125;, &#123; &quot;showName&quot;: &quot;荔新&quot; &#125;, &#123; &quot;showName&quot;: &quot;莱菁栎&quot; &#125;, &#123; &quot;showName&quot;: &quot;联语（LIANYU）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Latop family&quot; &#125;, &#123; &quot;showName&quot;: &quot;乐丽&quot; &#125;, &#123; &quot;showName&quot;: &quot;李绅&quot; &#125; ], &quot;M&quot;: [ &#123; &quot;showName&quot;: &quot;美商海盗船（USCORSAIR）&quot; &#125;, &#123; &quot;showName&quot;: &quot;牧马人&quot; &#125;, &#123; &quot;showName&quot;: &quot;摩天手（Mofii）&quot; &#125;, &#123; &quot;showName&quot;: &quot;魔炼者（MAGIC-REFINER）&quot; &#125;, &#123; &quot;showName&quot;: &quot;MageGee&quot; &#125;, &#123; &quot;showName&quot;: &quot;MIIIW&quot; &#125;, &#123; &quot;showName&quot;: &quot;魔蛋（magicforce）&quot; &#125;, &#123; &quot;showName&quot;: &quot;MC&quot; &#125;, &#123; &quot;showName&quot;: &quot;摩豹（Motospeed）&quot; &#125;, &#123; &quot;showName&quot;: &quot;猛豹&quot; &#125;, &#123; &quot;showName&quot;: &quot;摩智（MOZHI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;米徒（ME TOO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;万人迷（manovo）&quot; &#125;, &#123; &quot;showName&quot;: &quot;梦田（MVTV）&quot; &#125;, &#123; &quot;showName&quot;: &quot;咪鼠科技（Mimouse）&quot; &#125;, &#123; &quot;showName&quot;: &quot;麦塔奇（Microtouch）&quot; &#125;, &#123; &quot;showName&quot;: &quot;麦可莉（Macally）&quot; &#125;, &#123; &quot;showName&quot;: &quot;慕正&quot; &#125;, &#123; &quot;showName&quot;: &quot;鳗而登&quot; &#125;, &#123; &quot;showName&quot;: &quot;密探&quot; &#125;, &#123; &quot;showName&quot;: &quot;名龙堂（MLOONG）&quot; &#125;, &#123; &quot;showName&quot;: &quot;漫呗熊&quot; &#125;, &#123; &quot;showName&quot;: &quot;木丁丁&quot; &#125;, &#123; &quot;showName&quot;: &quot;蒙奇奇（monqiqi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;明枫（MINGFENG）&quot; &#125;, &#123; &quot;showName&quot;: &quot;MHMO&quot; &#125;, &#123; &quot;showName&quot;: &quot;蓦越&quot; &#125;, &#123; &quot;showName&quot;: &quot;MagBoard&quot; &#125;, &#123; &quot;showName&quot;: &quot;梦叶夕（Mengyexi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;魅卓&quot; &#125;, &#123; &quot;showName&quot;: &quot;莫哥斯（MAGUS）&quot; &#125;, &#123; &quot;showName&quot;: &quot;魔道（MODAO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;么它&quot; &#125;, &#123; &quot;showName&quot;: &quot;么航&quot; &#125;, &#123; &quot;showName&quot;: &quot;美克杰&quot; &#125;, &#123; &quot;showName&quot;: &quot;美蝎（MEIXIE）&quot; &#125; ], &quot;N&quot;: [ &#123; &quot;showName&quot;: &quot;宁芝（NIZ）&quot; &#125;, &#123; &quot;showName&quot;: &quot;宁美（NINGMEI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;NOPPOO&quot; &#125;, &#123; &quot;showName&quot;: &quot;尼凡（Nifan）&quot; &#125;, &#123; &quot;showName&quot;: &quot;鲶逸挚&quot; &#125;, &#123; &quot;showName&quot;: &quot;纳百川（NBC）&quot; &#125; ], &quot;O&quot;: [ &#123; &quot;showName&quot;: &quot;oloey&quot; &#125;, &#123; &quot;showName&quot;: &quot;ONIKUMA&quot; &#125;, &#123; &quot;showName&quot;: &quot;ohgo！&quot; &#125; ], &quot;P&quot;: [ &#123; &quot;showName&quot;: &quot;飞利浦（PHILIPS ）&quot; &#125;, &#123; &quot;showName&quot;: &quot;普泽罗&quot; &#125;, &#123; &quot;showName&quot;: &quot;perixx&quot; &#125;, &#123; &quot;showName&quot;: &quot;POLIGU&quot; &#125;, &#123; &quot;showName&quot;: &quot;品怡&quot; &#125;, &#123; &quot;showName&quot;: &quot;攀升（IPASON）&quot; &#125;, &#123; &quot;showName&quot;: &quot;胖牛&quot; &#125;, &#123; &quot;showName&quot;: &quot;派凡（oatsbasf）&quot; &#125;, &#123; &quot;showName&quot;: &quot;pitaka&quot; &#125;, &#123; &quot;showName&quot;: &quot;品觞磐&quot; &#125; ], &quot;Q&quot;: [ &#123; &quot;showName&quot;: &quot;七品&quot; &#125;, &#123; &quot;showName&quot;: &quot;QQfamily&quot; &#125;, &#123; &quot;showName&quot;: &quot;乾竡客&quot; &#125;, &#123; &quot;showName&quot;: &quot;QYHJD&quot; &#125;, &#123; &quot;showName&quot;: &quot;群赞（QUNZAN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;趣味咖&quot; &#125;, &#123; &quot;showName&quot;: &quot;启莱&quot; &#125;, &#123; &quot;showName&quot;: &quot;千米（qianmi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;趣派（QUPAI）&quot; &#125; ], &quot;R&quot;: [ &#123; &quot;showName&quot;: &quot;ROG&quot; &#125;, &#123; &quot;showName&quot;: &quot;RK&quot; &#125;, &#123; &quot;showName&quot;: &quot;REALFORCE&quot; &#125;, &#123; &quot;showName&quot;: &quot;RK ROYAL KLUDGE&quot; &#125;, &#123; &quot;showName&quot;: &quot;燃风&quot; &#125;, &#123; &quot;showName&quot;: &quot;Rii&quot; &#125;, &#123; &quot;showName&quot;: &quot;荣耀（HONOR）&quot; &#125;, &#123; &quot;showName&quot;: &quot;芮茉攸&quot; &#125;, &#123; &quot;showName&quot;: &quot;Repair Your Life&quot; &#125;, &#123; &quot;showName&quot;: &quot;RingKe&quot; &#125;, &#123; &quot;showName&quot;: &quot;锐选（RAXUAN）&quot; &#125; ], &quot;S&quot;: [ &#123; &quot;showName&quot;: &quot;双飞燕（A4TECH）&quot; &#125;, &#123; &quot;showName&quot;: &quot;赛睿（SteelSeries）&quot; &#125;, &#123; &quot;showName&quot;: &quot;森松尼（sunsonny）&quot; &#125;, &#123; &quot;showName&quot;: &quot;赛德斯&quot; &#125;, &#123; &quot;showName&quot;: &quot;桑瑞得（Sunreed）&quot; &#125;, &#123; &quot;showName&quot;: &quot;SKYLOONG&quot; &#125;, &#123; &quot;showName&quot;: &quot;SANWA SUPPLY&quot; &#125;, &#123; &quot;showName&quot;: &quot;斯泰克（stiger）&quot; &#125;, &#123; &quot;showName&quot;: &quot;SBARDA&quot; &#125;, &#123; &quot;showName&quot;: &quot;色映盘（loupedeck）&quot; &#125;, &#123; &quot;showName&quot;: &quot;十八渡&quot; &#125;, &#123; &quot;showName&quot;: &quot;SOZA&quot; &#125;, &#123; &quot;showName&quot;: &quot;SU·YOSD&quot; &#125;, &#123; &quot;showName&quot;: &quot;时代节点（ERA NODE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;赛科德（SAIKEDE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Smorss&quot; &#125;, &#123; &quot;showName&quot;: &quot;闪魔（SmartDevil）&quot; &#125;, &#123; &quot;showName&quot;: &quot;三星（SAMSUNG）&quot; &#125;, &#123; &quot;showName&quot;: &quot;索盈（SUOYING）&quot; &#125;, &#123; &quot;showName&quot;: &quot;升派（ESPL）&quot; &#125;, &#123; &quot;showName&quot;: &quot;尚本&quot; &#125;, &#123; &quot;showName&quot;: &quot;尚旬&quot; &#125;, &#123; &quot;showName&quot;: &quot;神舟（HASEE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;SwitchEasy&quot; &#125;, &#123; &quot;showName&quot;: &quot;SkinAT&quot; &#125;, &#123; &quot;showName&quot;: &quot;帅嬷&quot; &#125;, &#123; &quot;showName&quot;: &quot;素拓（SUTUO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;饰盾（Sidy）&quot; &#125;, &#123; &quot;showName&quot;: &quot;首和（SHOUHE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;速设&quot; &#125;, &#123; &quot;showName&quot;: &quot;双如&quot; &#125;, &#123; &quot;showName&quot;: &quot;尚·雅&quot; &#125;, &#123; &quot;showName&quot;: &quot;三奕（SANCYT）&quot; &#125; ], &quot;T&quot;: [ &#123; &quot;showName&quot;: &quot;ThinkPad&quot; &#125;, &#123; &quot;showName&quot;: &quot;Tt eSPORTS（Tt）&quot; &#125;, &#123; &quot;showName&quot;: &quot;钛度&quot; &#125;, &#123; &quot;showName&quot;: &quot;ThinkPlus&quot; &#125;, &#123; &quot;showName&quot;: &quot;TBKB&quot; &#125;, &#123; &quot;showName&quot;: &quot;通优派&quot; &#125;, &#123; &quot;showName&quot;: &quot;台电（TECLAST）&quot; &#125;, &#123; &quot;showName&quot;: &quot;图欧索（Tuousuo）&quot; &#125;, &#123; &quot;showName&quot;: &quot;淘信&quot; &#125; ], &quot;U&quot;: [ &#123; &quot;showName&quot;: &quot;uFound&quot; &#125;, &#123; &quot;showName&quot;: &quot;UAG&quot; &#125; ], &quot;V&quot;: [ &#123; &quot;showName&quot;: &quot;VALK&quot; &#125;, &#123; &quot;showName&quot;: &quot;VOKAMO&quot; &#125; ], &quot;W&quot;: [ &#123; &quot;showName&quot;: &quot;微星（MSI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;微软（Microsoft）&quot; &#125;, &#123; &quot;showName&quot;: &quot;玩家国度（ROG）&quot; &#125;, &#123; &quot;showName&quot;: &quot;武极&quot; &#125;, &#123; &quot;showName&quot;: &quot;沃特概尔&quot; &#125;, &#123; &quot;showName&quot;: &quot;沃野&quot; &#125;, &#123; &quot;showName&quot;: &quot;维想（WEIXIANG）&quot; &#125;, &#123; &quot;showName&quot;: &quot;维恩克&quot; &#125;, &#123; &quot;showName&quot;: &quot;WGJCE&quot; &#125;, &#123; &quot;showName&quot;: &quot;网虫；NETBUG&quot; &#125;, &#123; &quot;showName&quot;: &quot;沃尔玛（Walmart）&quot; &#125;, &#123; &quot;showName&quot;: &quot;万福来（WANFULAI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;WIWU&quot; &#125;, &#123; &quot;showName&quot;: &quot;维妤&quot; &#125;, &#123; &quot;showName&quot;: &quot;宛丝希&quot; &#125;, &#123; &quot;showName&quot;: &quot;无尘谷&quot; &#125;, &#123; &quot;showName&quot;: &quot;卫客（veker）&quot; &#125;, &#123; &quot;showName&quot;: &quot;韦笑（WEIXIAO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;旺驰（Wang Chi）&quot; &#125;, &#123; &quot;showName&quot;: &quot;维杜卡（veedooca）&quot; &#125; ], &quot;X&quot;: [ &#123; &quot;showName&quot;: &quot;小米（MI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;新盟（TECHNOLOGY）&quot; &#125;, &#123; &quot;showName&quot;: &quot;炫光&quot; &#125;, &#123; &quot;showName&quot;: &quot;现代（HYUNDAI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;新贵（Newmen）&quot; &#125;, &#123; &quot;showName&quot;: &quot;现代翼蛇&quot; &#125;, &#123; &quot;showName&quot;: &quot;Xtrfy&quot; &#125;, &#123; &quot;showName&quot;: &quot;西伯利亚（XIBERIA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;小米有品&quot; &#125;, &#123; &quot;showName&quot;: &quot;相思豆&quot; &#125;, &#123; &quot;showName&quot;: &quot;西思里&quot; &#125;, &#123; &quot;showName&quot;: &quot;小袋鼠（XIAO DAI SHU）&quot; &#125;, &#123; &quot;showName&quot;: &quot;鑫喆&quot; &#125;, &#123; &quot;showName&quot;: &quot;讯拓（Sunt）&quot; &#125;, &#123; &quot;showName&quot;: &quot;昕果（XIN GUO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;喜门红&quot; &#125;, &#123; &quot;showName&quot;: &quot;小乙（Ant Black）&quot; &#125;, &#123; &quot;showName&quot;: &quot;嘻他&quot; &#125;, &#123; &quot;showName&quot;: &quot;新爵（seanjazz）&quot; &#125;, &#123; &quot;showName&quot;: &quot;xisiciao&quot; &#125; ], &quot;Y&quot;: [ &#123; &quot;showName&quot;: &quot;英菲克（INPHIC）&quot; &#125;, &#123; &quot;showName&quot;: &quot;优派（ViewSonic）&quot; &#125;, &#123; &quot;showName&quot;: &quot;银雕（YINDIAO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;云墨（YUNMO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;研龙&quot; &#125;, &#123; &quot;showName&quot;: &quot;游猎者&quot; &#125;, &#123; &quot;showName&quot;: &quot;硬豹&quot; &#125;, &#123; &quot;showName&quot;: &quot;云派（witsp@d）&quot; &#125;, &#123; &quot;showName&quot;: &quot;逸祺&quot; &#125;, &#123; &quot;showName&quot;: &quot;雅诺仕（ANOCE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;韵果&quot; &#125;, &#123; &quot;showName&quot;: &quot;易科星&quot; &#125;, &#123; &quot;showName&quot;: &quot;姚膜&quot; &#125;, &#123; &quot;showName&quot;: &quot;韵铭良品&quot; &#125;, &#123; &quot;showName&quot;: &quot;亿色（ESR）&quot; &#125;, &#123; &quot;showName&quot;: &quot;宜客莱（ECOLA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;优微客&quot; &#125;, &#123; &quot;showName&quot;: &quot;益博思&quot; &#125;, &#123; &quot;showName&quot;: &quot;原色派&quot; &#125;, &#123; &quot;showName&quot;: &quot;洋典（YANGDIAN）&quot; &#125;, &#123; &quot;showName&quot;: &quot;YALEBOS&quot; &#125;, &#123; &quot;showName&quot;: &quot;一龙通金&quot; &#125;, &#123; &quot;showName&quot;: &quot;耀胜（YAOSHENG）&quot; &#125;, &#123; &quot;showName&quot;: &quot;Yoves&quot; &#125;, &#123; &quot;showName&quot;: &quot;英望&quot; &#125;, &#123; &quot;showName&quot;: &quot;伊捷&quot; &#125;, &#123; &quot;showName&quot;: &quot;亿壳&quot; &#125;, &#123; &quot;showName&quot;: &quot;雅果（YAGUO）&quot; &#125;, &#123; &quot;showName&quot;: &quot;莺黛氨&quot; &#125;, &#123; &quot;showName&quot;: &quot;御密达（YUMIDA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;友谷（icooya）&quot; &#125;, &#123; &quot;showName&quot;: &quot;荧阙&quot; &#125;, &#123; &quot;showName&quot;: &quot;优本配&quot; &#125;, &#123; &quot;showName&quot;: &quot;YVNAITE&quot; &#125;, &#123; &quot;showName&quot;: &quot;逸爵（YIJUE）&quot; &#125;, &#123; &quot;showName&quot;: &quot;优颐（YOUYI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;元迈&quot; &#125;, &#123; &quot;showName&quot;: &quot;YAIOCR&quot; &#125;, &#123; &quot;showName&quot;: &quot;尹蒲&quot; &#125; ], &quot;Z&quot;: [ &#123; &quot;showName&quot;: &quot;磁动力（ZIDLI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;追光豹&quot; &#125;, &#123; &quot;showName&quot;: &quot;峥图（ZHENGTU）&quot; &#125;, &#123; &quot;showName&quot;: &quot;泽溢（ZEYI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;ZAGG&quot; &#125;, &#123; &quot;showName&quot;: &quot;ZOMOPLUS&quot; &#125;, &#123; &quot;showName&quot;: &quot;zacon&quot; &#125;, &#123; &quot;showName&quot;: &quot;zoyu&quot; &#125;, &#123; &quot;showName&quot;: &quot;佐佑小子&quot; &#125;, &#123; &quot;showName&quot;: &quot;重器（ZHONGQI）&quot; &#125;, &#123; &quot;showName&quot;: &quot;zonyee&quot; &#125;, &#123; &quot;showName&quot;: &quot;中柏（Jumper）&quot; &#125;, &#123; &quot;showName&quot;: &quot;逐讯&quot; &#125;, &#123; &quot;showName&quot;: &quot;展途&quot; &#125;, &#123; &quot;showName&quot;: &quot;征酷&quot; &#125;, &#123; &quot;showName&quot;: &quot;zhisihui&quot; &#125;, &#123; &quot;showName&quot;: &quot;钻玛（ZUANMA）&quot; &#125;, &#123; &quot;showName&quot;: &quot;赞璐桐（ZANLUTONG）&quot; &#125; ] &#125;, &quot;expandSortName&quot;: &quot;品牌&quot;, &quot;items&quot;: [ &#123; &quot;showName&quot;: &quot;罗技（Logitech）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t10369/97/2211502513/1892/ee79238f/59f15a7aN946a4cb8.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;罗技（G）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t9547/278/2188014458/5403/77085817/59f15a6fNfce11113.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷柏（Rapoo）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t7015/182/1351075572/4737/66afb1a4/59804bc0N7715ecf1.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;达尔优&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t24844/194/207448161/2857/9384c964/5b6939ccN40668b22.png&quot; &#125;, &#123; &quot;showName&quot;: &quot;CHERRY&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t2683/65/32196796/5013/46d7883d/56fc8145N9bfa0eb6.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;ikbc&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/150919/10/2930/2478/5f83cd11E8c58b997/9079dbed288096f6.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷蛇（Razer）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t6046/194/7710545184/3732/18988f10/598128caN402e1463.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;阿米洛（Varmilo）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/147278/24/16881/12796/5fc9fef4Eb94db88e/f8a2c57652c5da79.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;黑爵（AJAZZ）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t7195/320/501214423/5673/b56e0615/598128aeN316b85f0.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;惠普（HP）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/42555/24/11711/3073/5d53c164E7c86b7a5/db9725025cffb6c0.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;AKKO&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t15562/17/1325345861/5884/715c3993/5a4f503aN1a447543.png&quot; &#125;, &#123; &quot;showName&quot;: &quot;双飞燕（A4TECH）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t2371/318/2861021030/16671/3e3c596/56fc86b5N9b5e0e86.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;联想（lenovo）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/167575/24/8596/3593/603f1a89E33c9a538/976cfcf44de6edbe.png&quot; &#125;, &#123; &quot;showName&quot;: &quot;狼蛛（AULA）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t2620/92/612939485/3872/ad91a9d1/571d77fbN35b9c013.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;黑峡谷（Hyeku）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/28356/36/7783/1994/5c6f6860E6e499a2e/67f5194ccb564a62.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;戴尔（DELL）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t5734/66/8958452339/6938/b84b1828/59804402N1c4e5159.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;微星（MSI）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/41752/14/12912/8765/5d634c72E6fb9c65b/3492d3df043975e3.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;腹灵（FL·ESPORTS）&quot; &#125;, &#123; &quot;showName&quot;: &quot;飞利浦（PHILIPS ）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/5932/28/11176/6002/5bce822bE4be57b0c/162d6a5b24eb2ab7.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;美商海盗船（USCORSAIR）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t5686/114/8934209008/16044/5fb2574d/598126c0N41426d15.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;小米（MI）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/156162/32/19961/2016/606c2f5fE0926fcbc/f74c5dc87e89fdd4.png&quot; &#125;, &#123; &quot;showName&quot;: &quot;ROG&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t25714/151/2114096477/2971/2c57ec07/5bc467c2Ned5a3c61.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;雷神（ThundeRobot）&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/55274/14/9720/3952/5d6f7ad3E681a37c6/6fc2ea08f8f91e65.jpg&quot; &#125;, &#123; &quot;showName&quot;: &quot;京东京造&quot;, &quot;logourl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/43410/35/9925/3815/5d36ac88Ee96c3002/95b8a8190cfcf764.jpg&quot; &#125; ] &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;连接方式&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 58350, &quot;showName&quot;: &quot;无线&quot; &#125;, &#123; &quot;valueId&quot;: 66906, &quot;showName&quot;: &quot;蓝牙&quot; &#125;, &#123; &quot;valueId&quot;: 77877, &quot;showName&quot;: &quot;有线&quot; &#125;, &#123; &quot;valueId&quot;: 114881, &quot;showName&quot;: &quot;多模&quot; &#125; ], &quot;expandSortId&quot;: 2379 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;背光效果&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 97413, &quot;showName&quot;: &quot;RGB&quot; &#125;, &#123; &quot;valueId&quot;: 114892, &quot;showName&quot;: &quot;单光&quot; &#125;, &#123; &quot;valueId&quot;: 114891, &quot;showName&quot;: &quot;混光&quot; &#125;, &#123; &quot;valueId&quot;: 95640, &quot;showName&quot;: &quot;无光&quot; &#125; ], &quot;expandSortId&quot;: 4706 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;数字键盘&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 87679, &quot;showName&quot;: &quot;有数字键盘&quot; &#125;, &#123; &quot;valueId&quot;: 121994, &quot;showName&quot;: &quot;无数字键盘&quot; &#125; ], &quot;expandSortId&quot;: 5078 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;类型&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 1188, &quot;showName&quot;: &quot;键鼠套装&quot; &#125;, &#123; &quot;valueId&quot;: 554, &quot;showName&quot;: &quot;机械键盘&quot; &#125;, &#123; &quot;valueId&quot;: 84441, &quot;showName&quot;: &quot;薄膜键盘&quot; &#125;, &#123; &quot;valueId&quot;: 102133, &quot;showName&quot;: &quot;个性定制键盘&quot; &#125;, &#123; &quot;valueId&quot;: 84442, &quot;showName&quot;: &quot;静电容键盘&quot; &#125;, &#123; &quot;valueId&quot;: 113925, &quot;showName&quot;: &quot;超薄键盘&quot; &#125;, &#123; &quot;valueId&quot;: 1190, &quot;showName&quot;: &quot;数字键盘&quot; &#125;, &#123; &quot;valueId&quot;: 11, &quot;showName&quot;: &quot;其他&quot; &#125;, &#123; &quot;valueId&quot;: 45583, &quot;showName&quot;: &quot;键盘配件&quot; &#125; ], &quot;expandSortId&quot;: 3184 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;轴体类型&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 84455, &quot;showName&quot;: &quot;红轴&quot; &#125;, &#123; &quot;valueId&quot;: 84453, &quot;showName&quot;: &quot;青轴&quot; &#125;, &#123; &quot;valueId&quot;: 84452, &quot;showName&quot;: &quot;黑轴&quot; &#125;, &#123; &quot;valueId&quot;: 84454, &quot;showName&quot;: &quot;茶轴&quot; &#125;, &#123; &quot;valueId&quot;: 100566, &quot;showName&quot;: &quot;光轴&quot; &#125;, &#123; &quot;valueId&quot;: 11, &quot;showName&quot;: &quot;其他&quot; &#125; ], &quot;expandSortId&quot;: 4708 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;适用场景&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 25059, &quot;showName&quot;: &quot;办公&quot; &#125;, &#123; &quot;valueId&quot;: 45778, &quot;showName&quot;: &quot;游戏&quot; &#125; ], &quot;expandSortId&quot;: 3785 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;轴体品牌&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 84456, &quot;showName&quot;: &quot;樱桃轴&quot; &#125;, &#123; &quot;valueId&quot;: 84457, &quot;showName&quot;: &quot;其他轴&quot; &#125;, &#123; &quot;valueId&quot;: 115256, &quot;showName&quot;: &quot;欧姆龙轴&quot; &#125;, &#123; &quot;valueId&quot;: 119349, &quot;showName&quot;: &quot;自有轴&quot; &#125;, &#123; &quot;valueId&quot;: 120011, &quot;showName&quot;: &quot;凯华轴&quot; &#125; ], &quot;expandSortId&quot;: 4709 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;游戏性能&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 45782, &quot;showName&quot;: &quot;入门级&quot; &#125;, &#123; &quot;valueId&quot;: 45775, &quot;showName&quot;: &quot;发烧级&quot; &#125;, &#123; &quot;valueId&quot;: 67109, &quot;showName&quot;: &quot;骨灰级&quot; &#125; ], &quot;expandSortId&quot;: 5652 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;适用机型&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 94772, &quot;showName&quot;: &quot;苹果笔记本&quot; &#125;, &#123; &quot;valueId&quot;: 125334, &quot;showName&quot;: &quot;游戏笔记本&quot; &#125;, &#123; &quot;valueId&quot;: 125335, &quot;showName&quot;: &quot;轻薄笔记本&quot; &#125;, &#123; &quot;valueId&quot;: 81208, &quot;showName&quot;: &quot;二合一笔记本&quot; &#125;, &#123; &quot;valueId&quot;: 125336, &quot;showName&quot;: &quot;商务笔记本&quot; &#125;, &#123; &quot;valueId&quot;: 125337, &quot;showName&quot;: &quot;其他类型笔记本&quot; &#125;, &#123; &quot;valueId&quot;: 125338, &quot;showName&quot;: &quot;显示器及笔记本通用&quot; &#125; ], &quot;expandSortId&quot;: 2997 &#125;, &#123; &quot;selectKey&quot;: &quot;expandName&quot;, &quot;expandType&quot;: &quot;2&quot;, &quot;expandSortName&quot;: &quot;类别&quot;, &quot;items&quot;: [ &#123; &quot;valueId&quot;: 1512, &quot;showName&quot;: &quot;保护套&quot; &#125;, &#123; &quot;valueId&quot;: 79899, &quot;showName&quot;: &quot;笔记本支架&quot; &#125;, &#123; &quot;valueId&quot;: 69790, &quot;showName&quot;: &quot;保护膜&quot; &#125;, &#123; &quot;valueId&quot;: 14206, &quot;showName&quot;: &quot;触控笔&quot; &#125;, &#123; &quot;valueId&quot;: 97404, &quot;showName&quot;: &quot;笔记本散热器&quot; &#125;, &#123; &quot;valueId&quot;: 40966, &quot;showName&quot;: &quot;连接线&quot; &#125;, &#123; &quot;valueId&quot;: 14205, &quot;showName&quot;: &quot;底座/支架&quot; &#125;, &#123; &quot;valueId&quot;: 125328, &quot;showName&quot;: &quot;屏幕防窥膜&quot; &#125;, &#123; &quot;valueId&quot;: 2100, &quot;showName&quot;: &quot;键盘&quot; &#125;, &#123; &quot;valueId&quot;: 6442, &quot;showName&quot;: &quot;鼠标&quot; &#125;, &#123; &quot;valueId&quot;: 125329, &quot;showName&quot;: &quot;显示器增高架&quot; &#125;, &#123; &quot;valueId&quot;: 14071, &quot;showName&quot;: &quot;后壳&quot; &#125;, &#123; &quot;valueId&quot;: 1048, &quot;showName&quot;: &quot;笔记本电池&quot; &#125;, &#123; &quot;valueId&quot;: 10293, &quot;showName&quot;: &quot;内胆包&quot; &#125;, &#123; &quot;valueId&quot;: 125331, &quot;showName&quot;: &quot;屏幕保护膜&quot; &#125;, &#123; &quot;valueId&quot;: 6166, &quot;showName&quot;: &quot;电源适配器&quot; &#125;, &#123; &quot;valueId&quot;: 3722, &quot;showName&quot;: &quot;清洁套装&quot; &#125;, &#123; &quot;valueId&quot;: 56239, &quot;showName&quot;: &quot;键盘膜&quot; &#125;, &#123; &quot;valueId&quot;: 7897, &quot;showName&quot;: &quot;保护壳&quot; &#125;, &#123; &quot;valueId&quot;: 73964, &quot;showName&quot;: &quot;创意配件&quot; &#125;, &#123; &quot;valueId&quot;: 125333, &quot;showName&quot;: &quot;键鼠相关&quot; &#125;, &#123; &quot;valueId&quot;: 85118, &quot;showName&quot;: &quot;存储拓展&quot; &#125;, &#123; &quot;valueId&quot;: 1569, &quot;showName&quot;: &quot;电脑锁&quot; &#125;, &#123; &quot;valueId&quot;: 85114, &quot;showName&quot;: &quot;手提电脑包&quot; &#125;, &#123; &quot;valueId&quot;: 7670, &quot;showName&quot;: &quot;单肩电脑包&quot; &#125;, &#123; &quot;valueId&quot;: 7671, &quot;showName&quot;: &quot;双肩电脑包&quot; &#125;, &#123; &quot;valueId&quot;: 11, &quot;showName&quot;: &quot;其他&quot; &#125; ], &quot;expandSortId&quot;: 878 &#125; ], &quot;defaultAddress&quot;: &#123; &quot;id&quot;: &quot;1_2812_51139_0&quot;, &quot;name&quot;: &quot;北京_顺义区_南法信地区_&quot; &#125; &#125;, &quot;HcCid1&quot;: &quot;670&quot;, &quot;HcCid2&quot;: &quot;686&quot;, &quot;promType&quot;: &quot;icon_id&quot;, &quot;adEventId&quot;: &quot;7&quot;, &quot;recommSwitch&quot;: &quot;1&quot;, &quot;hasNextPage&quot;: true, &quot;UserPersonalization&quot;: &quot;268697600&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;pvid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;logid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;page&quot;: &quot;1&quot;, &quot;categoryId&quot;: &quot;689&quot;, &quot;keyWord&quot;: &quot;键盘&quot; &#125;, &quot;b_search&quot;: &#123; &quot;pvid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot; &#125;, &quot;tracking&quot;: &#123; &quot;Searchlist_DiscoverGoodsSP_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;uet.b_search&quot;, &quot;uet.buryPointConfig&quot;, &quot;articleSource&quot;, &quot;articleId&quot;, &quot;articleStyle&quot;, &quot;dataSource&quot;, &quot;articleType&quot; ] &#125;, &quot;Searchlist_newProductPlus&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot; ], &quot;prv_keys&quot;: [ &quot;uet.buryPointConfig&quot;, &quot;jumpUrl&quot; ] &#125;, &quot;Searchlist_DiscoverGoodsExpo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;uet.b_search&quot;, &quot;uet.buryPointConfig&quot;, &quot;articleSource&quot;, &quot;articleId&quot;, &quot;articleStyle&quot;, &quot;dataSource&quot;, &quot;articleType&quot; ] &#125;, &quot;Searchlist_LiveCard&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;wareId&quot;, &quot;liveId&quot;, &quot;liveStatus&quot;, &quot;liveIsTop&quot;, &quot;liveCouponInfo.type&quot;, &quot;uet.b_search&quot;, &quot;uet.buryPointConfig&quot; ] &#125;, &quot;Searchlist_Content&quot;: &#123; &quot;prv_keys&quot;: [ &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_InnerCategory&quot;: &#123; &quot;prv_keys&quot;: [ &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_DiscoverGoods&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;uet.b_search&quot;, &quot;uet.buryPointConfig&quot;, &quot;articleSource&quot;, &quot;articleId&quot;, &quot;articleStyle&quot;, &quot;dataSource&quot;, &quot;articleType&quot; ] &#125;, &quot;Searchlist_ShoppingGuide&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;jumpUrl&quot; ] &#125;, &quot;Searchlist_LiveCard_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;wareId&quot;, &quot;liveId&quot;, &quot;liveStatus&quot;, &quot;liveIsTop&quot;, &quot;liveCouponInfo.type&quot;, &quot;uet.b_search&quot;, &quot;uet.buryPointConfig&quot; ] &#125;, &quot;Searchlist_JXCard&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;wareId&quot; ] &#125;, &quot;Searchlist_XSDCard_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;storeId&quot;, &quot;venderId&quot; ] &#125;, &quot;Searchlist_BrowseDepth&quot;: &#123; &quot;prv_keys&quot;: [ &quot;shopId&quot; ] &#125;, &quot;Searchlist_MiddleLabel&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;uet.b_pub.pvid&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;tagName&quot;, &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_ShoppingGuide_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;jumpUrl&quot; ] &#125;, &quot;Searchlist_RankExpo&quot;: &#123; &quot;prv_keys&quot;: [ &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_Rank&quot;: &#123; &quot;prv_keys&quot;: [ &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_PromCard&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot; ], &quot;prv_keys&quot;: [ &quot;wname&quot;, &quot;uet.buryPointConfig&quot; ] &#125;, &quot;Searchlist_ContentExpo&quot;: &#123; &quot;prv_keys&quot;: [ &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_newProductPlus_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot; ], &quot;prv_keys&quot;: [ &quot;uet.buryPointConfig&quot;, &quot;jumpUrl&quot; ] &#125;, &quot;Searchlist_DiscoverGoodsSP&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;uet.b_search&quot;, &quot;uet.buryPointConfig&quot;, &quot;articleSource&quot;, &quot;articleId&quot;, &quot;articleStyle&quot;, &quot;dataSource&quot;, &quot;articleType&quot; ] &#125;, &quot;Searchlist_MiddleLabel_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;uet.b_pub.pvid&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;tagName&quot;, &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_InnerCategoryExpo&quot;: &#123; &quot;prv_keys&quot;: [ &quot;uet.b_search&quot; ] &#125;, &quot;Searchlist_Productid&quot;: &#123; &quot;prv_keys&quot;: [ &quot;shopId&quot; ] &#125;, &quot;Searchlist_PromCard_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot; ], &quot;prv_keys&quot;: [ &quot;wname&quot;, &quot;uet.buryPointConfig&quot; ] &#125;, &quot;Searchlist_VideoContent&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot; ], &quot;prv_keys&quot;: [ &quot;svId&quot; ] &#125;, &quot;Searchlist_VideoContent_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot; ], &quot;prv_keys&quot;: [ &quot;svId&quot; ] &#125;, &quot;Searchlist_XSDCard&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;storeId&quot;, &quot;venderId&quot; ] &#125;, &quot;Searchlist_JXCard_Expo&quot;: &#123; &quot;pub_keys&quot;: [ &quot;uet.b_pub.keyWord&quot;, &quot;uet.b_pub.categoryId&quot;, &quot;mtest&quot; ], &quot;prv_keys&quot;: [ &quot;wareId&quot; ] &#125; &#125; &#125;, &quot;promotionImgUrl&quot;: &quot;https://img13.360buyimg.com/ling/jfs/t1/167727/29/14970/3190/60670f6dE8a24bc97/3d69eb7befd57ff0.png&quot;, &quot;o2oWareCount&quot;: &#123; &quot;1&quot;: [ &#123; &quot;cid3&quot;: &quot;1050&quot;, &quot;count&quot;: &quot;7&quot; &#125; ], &quot;2&quot;: [ &#123; &quot;cid3&quot;: &quot;2687&quot;, &quot;count&quot;: &quot;1&quot; &#125; ], &quot;3&quot;: [ &#123; &quot;cid3&quot;: &quot;854&quot;, &quot;count&quot;: &quot;1&quot; &#125;, &#123; &quot;cid3&quot;: &quot;18686&quot;, &quot;count&quot;: &quot;2&quot; &#125; ] &#125;, &quot;operateText&quot;: &#123; &quot;collected&quot;: &quot;已关注&quot;, &quot;collect&quot;: &quot;关注&quot; &#125;, &quot;trafAdEventId&quot;: &quot;5&quot;, &quot;wareInfo&quot;: [ &#123; &quot;spuId&quot;: &quot;10025869717218&quot;, &quot;wareId&quot;: &quot;10025869717228&quot;, &quot;wname&quot;: &quot;ikbc87机械键盘有线游戏樱桃cherry轴电脑外设笔记本数字办公自营C104/C200 C200粉色有线87键 红轴&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/164751/23/4514/101459/601103e4Ea2b97114/a73a86a234957f87.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;379.00&quot;, &quot;good&quot;: &quot;98%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;5000+条评价&quot;, &quot;venderId&quot;: &quot;10157456&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;有数字键盘&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;樱桃轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;入门级&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;tag&quot;: &quot;无光&quot;, &quot;title&quot;: &quot;背光效果&quot; &#125;, &#123; &quot;tag&quot;: &quot;红轴&quot;, &quot;title&quot;: &quot;轴体类型&quot; &#125; ], &quot;duplicateRemoval&quot;: &quot;1&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/164751/23/4514/101459/601103e4Ea2b97114/a73a86a234957f87.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/164751/23/4514/101459/601103e4Ea2b97114/a73a86a234957f87.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;targetUrl&quot;: &quot;&quot;, &quot;clientClickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTg2OTcxNzIyOC5odG1s&amp;log=uTjl2KOWurNlT2lf4DKtLBvnRsWvjZBL3p92VTWnKadduA6lblodeDCL2XhVzR2lIEI7aJNd3K48nuIzWRHpYWwMj7Pb2-phuuKfph8yw9mHmYSF9ljXMvgVs58KIPASCC7u3RP15teVzsyx6OoJQj5LvEtoBX7huKHU3lB-JEw3dZpX28MdAKMC8fvHqIbweoZm9y2pxydj8JSkuPab_N7fbiPnpQNOePbYDO_Fh5Vr_Injiiu5HcxaWmYs2jsGloYZFbpv331JFuWH0DmFh5gpMOREMcKnIp5UNHut_opQIkCkKNTN8iC_eynmVdHrDD_DJGrOQByHdjlJppdqxKI8RI2KoFFwnNAgcZLjgcszNrlAaAnS1Y9s4K_8hEwxNBH5b76nhRynfiQsGi4_4xQPX_X2h0A-ne7E0bOI4CVAtR6mSBWJT7CwXpbQQSYlR6YRQUki8gRcjZ-7wcJ_Ro3bDTDkg9Mmd-6YVlqW5YIjDHBskR-W92F4LxbzqO9GLmZkP320dSIrGL7Ap-EkgDjnTDsJkNRSxu36TDxlOFXtNey9z_fDglcd4OTVPFDyUlu7yfkBLxsi7EgdzD10DuCAPphdOMdEOiv9Aub62fkftMYvjcv3pl-h7mCZFJU8Au9P7vq7qo89bgJq_MtclO6B2LQ7b4wijiTMaIwVVl8uA1X9LiuTjzM-ykuwR3TXxRUIA54lW4iKg1-XZ2AcV6oY3MMtTDhdg6eozZlAr-ko0qgFkeZiRnK7ENHmo5C71ioy1ONq_DVi9IaN0tHX4Pq-EmYhqD7uDeBjEjP5xmc8gef3qcbL-iEucu1vs5EXTZBRJFHJk7AXSbqxl48Y_ocAyihJkj1WtOYIX1bdQWl8NHYtQacVXKmAuFq_8xlRznq9-rz5BeNiM9zxTmdJROhunwr6phhfgHwusAJtIzLOpesuFokLZwZ1PVZG1qbAxcQyNZvfe1oltXaFh3P0KQ&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;exposal_url&quot;: &quot;https://im-x.jd.com/dsp/np?log=uTjl2KOWurNlT2lf4DKtLBvnRsWvjZBL3p92VTWnKadduA6lblodeDCL2XhVzR2lIEI7aJNd3K48nuIzWRHpYWwMj7Pb2-phuuKfph8yw9mHmYSF9ljXMvgVs58KIPASCC7u3RP15teVzsyx6OoJQj5LvEtoBX7huKHU3lB-JEw3dZpX28MdAKMC8fvHqIbwF1gn7tYoJ00MvljckOTwwxA4bZY25mwroH1euPcOyvL5wv1WKlnp01HlPu8Z5rFv1G-3e1yUDdCbR4oLo5PfdUYyFzkhXjx9Ng9E5CWqgk9LmcvTa6tqUiyi6fXl6JznMjfRv5vY6lTLVWO8LWETkeFDFgDGru__S_rOYZ-I-_6KsC6pqOzeSs_Tl5sx_zF-vaL6P9ie1IKH87mwW3-MG6qBp93Nk3mBUrCo5BthbjMiPB628mn8ipDcKQNiNhc4QWqzGOvPNE2j82ULN-frmMSulUv7q2NOLzwQ8aG71z5p1OmfQfRCq5SVuntnukgwQnHfLKQW8p5TVdn2aSA6QVy51mqJa9d54lFVMD54EYnqBhf5WAfuhPSm3Nu6yzaWmIOAaAm3aBrLoMLNjxPkMGRaxFe7P7YZ9AX1B62-3mCfCdK27hEqlgDVUrqR6VV5DheCoABrAF_j2u1il_bI7cIF-nm2_DxazrKzLhBtIY147OZsgEF4atkx0U0VGrK9u8CLWwJ1alwXZsNiueKHy2iUEr3o-Yg4ujZrpqPuRdBopcJWbZlH8PpQYp1-D7cJGkYyDtY3J3SyCnFJNGX5mEla0muCWMTjvd8tCUtf3-tYGKm3J12kkmDC2PmoLyNVL7Hvbj6tqBl5w1A8D-f2OMLLkIJiAwEF0o9wBd_2fCfpPOTXZHSXXrbN_0DiP2r5IHQnuNDxLnmGidIyeYHA2GguQzNJk-9J2ii9NBBttKZ_coGRYWXzDz5EAL2YVj0TAupjsdGbzVX5-LST_tAtRgn5zT5Jv6Q7g7lubIy9mPI&amp;v=404&amp;client_flow_order=1&amp;rt=3&amp;rt=3&quot;, &quot;unrealExposalUrl&quot;: &quot;&quot;, &quot;flow_order&quot;: 1, &quot;abt&quot;: &quot;0&quot;, &quot;userBehaviorTag&quot;: &quot;0&quot;, &quot;exposeSkus&quot;: false, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_101&quot;, &quot;trackId&quot;: &quot;supermarket&quot;, &quot;squareResCode&quot;: &quot;tab_101&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;hide_ad_subscript&quot;: &quot;0&quot;, &quot;superMarket&quot;: true, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;633\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10025869717228\&quot;,\&quot;ts\&quot;:\&quot;1618731942\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3246870068\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;633\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;e2e94cd9-0b56-4706-9b83-a8b084117151\\\&quot;&#125;\&quot;&#125;&quot;, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopId&quot;: &quot;10025307&quot;, &quot;goodShopName&quot;: &quot;ikbc京东自营官方旗舰店&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;10025307&quot;, &quot;skuid&quot;: &quot;10025869717228&quot; &#125;, &quot;b_ads&quot;: &#123; &quot;ch&quot;: &quot;2&quot;, &quot;sku&quot;: &quot;10025869717228&quot;, &quot;ts&quot;: &quot;1618731942&quot; &#125;, &quot;b_id&quot;: &quot;2&quot; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;10025802445920&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;10025802445921&quot;, &quot;wname&quot;: &quot;ikbc C87 有线 机械键盘&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;329.00&quot;, &quot;subPrices&quot;: [ &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/32275/19/10871/1892/5cb3313dEaac40bfe/e6d46db930856285.png&quot;, &quot;describe&quot;: &quot;秒杀价&quot;, &quot;type&quot;: &quot;secKillPrice&quot; &#125; ], &quot;good&quot;: &quot;98%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;1万+条评价&quot;, &quot;priority&quot;: &quot;9&quot;, &quot;priorityTagName&quot;: &quot;你最近经常浏览&quot;, &quot;venderId&quot;: &quot;10157456&quot;, &quot;venderType&quot;: &quot;100&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;10025802445921,1125904222785672,5448,110,329.000000,1,,1&quot;, &quot;feature_log&quot;: &quot;10025802445921%5E&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;cherry轴｜PBT键帽｜轻盈触发快&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券300减30&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 6, &quot;beltProfit&quot;: &#123; &quot;beltMsg1&quot;: &quot;预估优惠&quot;, &quot;beltStyle&quot;: &quot;4&quot;, &quot;beltBgImgList&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121705/20/12919/28368/5f63161cE40e95ee2/e6c4249a0fc25b0f.png&quot;, &quot;beltMsg&quot;: &quot;预估到手价¥299.00&quot;, &quot;beltMsg2&quot;: &quot;¥30.00&quot;, &quot;beltType&quot;: &quot;11&quot;, &quot;beltBgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141637/26/8516/23678/5f631375E0c06cc73/2b29599416c0c927.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_101&quot;, &quot;trackId&quot;: &quot;supermarket&quot;, &quot;squareResCode&quot;: &quot;tab_101&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券300减30&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;superMarket&quot;: true, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;10025307&quot;, &quot;goodShopName&quot;: &quot;ikbc京东自营官方旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;10025802445921&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;10025307&quot;, &quot;skuid&quot;: &quot;10025802445921&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;10025802445921&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: true &#125;, &#123; &quot;spuId&quot;: &quot;4422029&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;100008319489&quot;, &quot;wname&quot;: &quot;CHERRY MX1.0 TKL 白色红轴&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/117011/1/16142/50148/5f44ea20E9e0ee54a/10a0e3042820b336.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;269.00&quot;, &quot;subPrices&quot;: [ &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/32275/19/10871/1892/5cb3313dEaac40bfe/e6d46db930856285.png&quot;, &quot;describe&quot;: &quot;秒杀价&quot;, &quot;type&quot;: &quot;secKillPrice&quot; &#125; ], &quot;promotionFlag&quot;: [ &quot;60&quot; ], &quot;good&quot;: &quot;97%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;10万+条评价&quot;, &quot;priority&quot;: &quot;9&quot;, &quot;priorityTagName&quot;: &quot;你最近经常浏览&quot;, &quot;venderId&quot;: &quot;1000000317&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000317&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;100008319489,1407379199496328,5445,110,269.000000,1,,1&quot;, &quot;feature_log&quot;: &quot;100008319489%5E&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/117011/1/16142/50148/5f44ea20E9e0ee54a/10a0e3042820b336.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/117011/1/16142/50148/5f44ea20E9e0ee54a/10a0e3042820b336.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券79减10&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 8, &quot;beltProfit&quot;: &#123; &quot;beltTpl&quot;: &quot;0&quot;, &quot;beltStyle&quot;: &quot;3&quot;, &quot;beltBgImgList&quot;: &quot;https://img13.360buyimg.com/ling/jfs/t1/53285/14/12961/21107/5d9becbaE8cd6911f/992755d73b6412fc.png&quot;, &quot;beltMsg&quot;: &quot;爆款限时直降&quot;, &quot;beltPrice&quot;: &#123; &quot;price&quot;: &quot;¥269&quot;, &quot;timePeriod&quot;: &quot;4.16-4.18&quot;, &quot;title&quot;: &quot;到手价&quot; &#125;, &quot;beltType&quot;: &quot;10&quot;, &quot;beltBgImg&quot;: &quot;https://img13.360buyimg.com/ling/jfs/t1/78204/14/12255/36282/5d9beca6Eb13ac076/11abab61f259e13c.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdFxgTag&quot;: &quot;放心购&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_133&quot;, &quot;listShowName&quot;: &quot;放心购&quot;, &quot;trackId&quot;: &quot;JdFxg&quot;, &quot;squareResCode&quot;: &quot;tab_var_133&quot;, &quot;squareShowName&quot;: &quot;放心购&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券79减10&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000000317&quot;, &quot;goodShopName&quot;: &quot;cherry樱桃京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;100008319489&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000000317&quot;, &quot;skuid&quot;: &quot;100008319489&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;100008319489&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: true &#125;, &#123; &quot;spuId&quot;: &quot;47788678512&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;71061400055&quot;, &quot;wname&quot;: &quot;ikbc W200 无线2.4G机械键盘&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/163155/5/13268/193660/6052e91dEe3ee8a2b/70964dbcb95dc707.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;439.00&quot;, &quot;good&quot;: &quot;97%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;5000+条评价&quot;, &quot;priority&quot;: &quot;9&quot;, &quot;priorityTagName&quot;: &quot;你最近经常浏览&quot;, &quot;venderId&quot;: &quot;10103831&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;948220&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;71061400055,1125904222781580,5416,110,439.000000,1,,1&quot;, &quot;flags&quot;: &quot;20971660&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;CHERRY轴｜无线办公｜桌面整洁&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/163155/5/13268/193660/6052e91dEe3ee8a2b/70964dbcb95dc707.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/163155/5/13268/193660/6052e91dEe3ee8a2b/70964dbcb95dc707.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券99减10&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 11, &quot;popFreeShipping&quot;: &quot;商家免邮&quot;, &quot;beltProfit&quot;: &#123; &quot;beltMsg1&quot;: &quot;预估优惠&quot;, &quot;beltStyle&quot;: &quot;4&quot;, &quot;beltBgImgList&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121705/20/12919/28368/5f63161cE40e95ee2/e6c4249a0fc25b0f.png&quot;, &quot;beltMsg&quot;: &quot;预估到手价¥379.00&quot;, &quot;beltMsg2&quot;: &quot;¥60.00&quot;, &quot;beltType&quot;: &quot;11&quot;, &quot;beltBgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141637/26/8516/23678/5f631375E0c06cc73/2b29599416c0c927.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdDelivery&quot;: true, &quot;jdFxgTag&quot;: &quot;放心购&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_121&quot;, &quot;trackId&quot;: &quot;jdDelivery&quot;, &quot;squareResCode&quot;: &quot;tab_121&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_133&quot;, &quot;listShowName&quot;: &quot;放心购&quot;, &quot;trackId&quot;: &quot;JdFxg&quot;, &quot;squareResCode&quot;: &quot;tab_var_133&quot;, &quot;squareShowName&quot;: &quot;放心购&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券99减10&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_083&quot;, &quot;trackId&quot;: &quot;localStore&quot;, &quot;squareResCode&quot;: &quot;tab_083&quot; &#125; ] &#125;, &quot;localStore&quot;: true, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;948220&quot;, &quot;goodShopName&quot;: &quot;ikbc官方旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;71061400055&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;948220&quot;, &quot;skuid&quot;: &quot;71061400055&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;71061400055&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: false, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;100010100135&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;100010548644&quot;, &quot;wname&quot;: &quot;小米 无线 办公数字键盘WXJS01YM&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/163896/9/15432/61603/60609c61E61a4b0a2/7111d5aa96e31436.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;99.00&quot;, &quot;subPrices&quot;: [ &#123; &quot;priceColor&quot;: &quot;#00CC88&quot;, &quot;price&quot;: &quot;￥89.00&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/15846/18/6027/2013/5c4829e1E789e1e90/79c7fada4a4a19af.png&quot;, &quot;fontSize&quot;: &quot;26&quot;, &quot;describe&quot;: &quot;学生价&quot;, &quot;type&quot;: &quot;studentPrice&quot; &#125; ], &quot;good&quot;: &quot;98%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;200万+条评价&quot;, &quot;venderId&quot;: &quot;1000004123&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000004123&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;100010548644,1125899929915528,5401,110,99.000000,1,,1&quot;, &quot;feature_log&quot;: &quot;100010548644%5E&quot;, &quot;flags&quot;: &quot;23072904&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;89-108键&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125;, &#123; &quot;title&quot;: &quot;键盘标准&quot;, &quot;tag&quot;: &quot;89-108键&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;智能省电｜轻量化设计｜低电量提示&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;1040&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/163896/9/15432/61603/60609c61E61a4b0a2/7111d5aa96e31436.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/163896/9/15432/61603/60609c61E61a4b0a2/7111d5aa96e31436.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券300减30&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 4, &quot;newSeasonClothes&quot;: true, &quot;jdjb&quot;: true, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdFxgTag&quot;: &quot;放心购&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;JDJB&quot;, &quot;trackId&quot;: &quot;jdjb&quot;, &quot;squareResCode&quot;: &quot;JDJB&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_078&quot;, &quot;trackId&quot;: &quot;newSeasonClothes&quot;, &quot;squareResCode&quot;: &quot;tab_078&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_133&quot;, &quot;listShowName&quot;: &quot;放心购&quot;, &quot;trackId&quot;: &quot;JdFxg&quot;, &quot;squareResCode&quot;: &quot;tab_var_133&quot;, &quot;squareShowName&quot;: &quot;放心购&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券300减30&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000004123&quot;, &quot;goodShopName&quot;: &quot;小米京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;100010548644&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000004123&quot;, &quot;skuid&quot;: &quot;100010548644&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;100010548644&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;55690316518&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;55690316518&quot;, &quot;wname&quot;: &quot;GANSS 游戏 机械键盘 87c/104c&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/168156/15/19080/190957/607a4fd4E00ce4529/362a76a5f67894e3.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;329.00&quot;, &quot;promotionFlag&quot;: [ &quot;55&quot;, &quot;57&quot; ], &quot;good&quot;: &quot;94%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;2万+条评价&quot;, &quot;venderId&quot;: &quot;824254&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;822915&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ &quot;2&quot; ], &quot;showlog&quot;: &quot;55690316518,1125899927814284,5387,110,329.000000,1,,1&quot;, &quot;flags&quot;: &quot;20971660&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;德国原厂樱桃轴｜PBT键帽｜支持驱动&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/168156/15/19080/190957/607a4fd4E00ce4529/362a76a5f67894e3.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/168156/15/19080/190957/607a4fd4E00ce4529/362a76a5f67894e3.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;upToSaving&quot;: &quot;满309减40&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 20, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdDelivery&quot;: true, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_121&quot;, &quot;trackId&quot;: &quot;jdDelivery&quot;, &quot;squareResCode&quot;: &quot;tab_121&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_071&quot;, &quot;listShowName&quot;: &quot;满309减40&quot;, &quot;trackId&quot;: &quot;upToSaving&quot;, &quot;squareResCode&quot;: &quot;tab_020&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;822915&quot;, &quot;goodShopName&quot;: &quot;GANSS旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;55690316518&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;822915&quot;, &quot;skuid&quot;: &quot;55690316518&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;55690316518&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: false, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;100010346406&quot;, &quot;wareId&quot;: &quot;100018948748&quot;, &quot;wname&quot;: &quot;【热销新品】宏碁无线键盘鼠标套装&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/172551/35/4358/52537/6077bdceEa746b287/7eb432e7dac1f6b0.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;49.90&quot;, &quot;good&quot;: &quot;96%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;2万+条评价&quot;, &quot;venderId&quot;: &quot;1000300215&quot;, &quot;shopId&quot;: &quot;1000300215&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;有数字键盘&quot; &#125; ], &quot;duplicateRemoval&quot;: &quot;1&quot;, &quot;flashBuy&quot;: false, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/172551/35/4358/52537/6077bdceEa746b287/7eb432e7dac1f6b0.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/172551/35/4358/52537/6077bdceEa746b287/7eb432e7dac1f6b0.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;targetUrl&quot;: &quot;&quot;, &quot;clientClickUrl&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMTg5NDg3NDguaHRtbA&amp;log=uTjl2KOWurNlT2lf4DKtLBvnRsWvjZBL3p92VTWnKafoMT9NHeTk8j_ielBQx-W8KTi9wGoLG6QlHORlVmoTu1AirzXZU3pmVdZWndCGRqD6Tw2vfnu9NJpD7xgD89Tf3hbPswMT3y7yCDl5O5HNsiTUelVo8tJyTyeMYFEv1wJxILKdHuOYn4w6-xOSsPyFUCVgQ8fyN_VJk--jILleMQhIgNjC4nWUyPityZ_KS2SLTTtHPOGHVbmelqcEfQIO7ekaAExUecKIp_a59xuR3P31Gx-O1PNYkna28ykYDqOB4LKtlTpzbnLkNG7JmJJUH80lrodKkMuRm30wsUpI3B8Uhkk8qUPI4uqJJOhN6NQCIl0Y1_ZiC_5FqPYyCMPB6BKbEX9OlWVnsNXeEH6B2Dni0FrsVoFyO4xc1gg9q7s7Y4bp-KcdhlIvdXILOJD9lr3a5o-mSULMZY4AWuVMW_jdkCkiIFsOypz4E_VPxqXhpvLSap9HLpkyFYy7X-a54WdTRxMCFmNQerZsyfRtTg4wMij4bh-9NaLJPj0hd84xgFiB14d44nz4S_jiVDk97qq3_ZME8zsw8qE73Wg_gsqy5Np3jj6-wXeyB8rYcgogCBjJAOreJVGokz2EDQbQj3EoKlQnVveSA3z3upgm6H8KNeSowNz0qc3W8kMiQM5w2bWbQE5_4nuacbn7045qLIjPbGlJeyaJ5goC76qFNI4Oid1mMgfQyktPekt2DIOUssN-RWar_QDebPgsYOcc5axJRufkv7H3z_5wJ617J1qliRFT081kPFsM-fDCGy6yWZ4D0PNY7DhpdKxTVsuGlAtboJNvr-cEGt2frZCSFMwkSNgc72FLVPYgQ5ghXsEFhoAjCJ6-HSFVQqbeKpmZjXoaPFX-okH1Xo1BiIrBb46_Y8xR7jvG2MZ5kDs-SYZmXhbaN4MLAQTzLHxHjxc8I6WP4CdqRMh1xTgk92ZZx0mVRI-7He73cAp9MbzT9WR9UqKyWjBLuizguBekN1Fq&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;exposal_url&quot;: &quot;https://im-x.jd.com/dsp/np?log=uTjl2KOWurNlT2lf4DKtLBvnRsWvjZBL3p92VTWnKafoMT9NHeTk8j_ielBQx-W8KTi9wGoLG6QlHORlVmoTu1AirzXZU3pmVdZWndCGRqD6Tw2vfnu9NJpD7xgD89Tf3hbPswMT3y7yCDl5O5HNsiTUelVo8tJyTyeMYFEv1wJxILKdHuOYn4w6-xOSsPyFUCVgQ8fyN_VJk--jILleMThpvEPRRF9rtGkvtJV2g4xTBgBbtwqnY3OuFo6zA3df8v6O7-dEzi9VHhk5lsUC-D-tN2GLavw9RymW9wG8gWSuj6SY0un8ORgU27bERmHoBtRO0JxzAa-tpZp5DzpsLJfiGi_TDYgVC07Riuz7VX1JF9JwKMdQuLzDUQtdZjzcUrq8tQ9Yun3EQHkU2kth_skiPPP5_miPCt5GfJWyvP8MMJ5YYV4f1ttQNKTIKD3eQy0eTgH3T09G3e_8j46YkqtXccweXVgoX2bHzPBwno94W47GDhlpLGCvjSVnKxh0t_Hc6RUCEqXGqCU9swTgC2c1iBmohnsANqo6dw1nyb3yVZlJ-d6fFMIITObh395xG7oLGdo0IlM7uEjmCNVLZTOq9Pjfmb6HiRX9hJtCeNV8nN7TptB0C5U4Ysy56YMhZJNSeF3Hap4oqMkRHs7VKqRyX71rPOGNuUpVincyMjFE_idNEYqJXBtzyiNi6evJyKeIFlLBC_Iu8tirUDqcFNv6-5qsK5novo6h7I_3Ax1Q-Zk1sO9IlBzz2sJqLdwqUXkR8Lhx1-N6E_PkqsoxTclpojhhM-GVohMHYrGtbnLETYK3V0NKXUTLk8q10Cmq0m_7hqj8OCt1O-aEh_fDhNnso5l-U3GvMM-tfCBy6uTCj_DI933jlb2oWDYIxvjD2wBnLvtpBT5RCglzzlBkbXcG4IWgrvHx_4EugJjalRTGDQlNd3Cds3Lsx5Y6yjgjv0XTJbAiztL_XMHhgqPeNqn6Urt1LsbpLhYPOQLO_Xotdd2RniQTxZLiaOejH6i_&amp;v=404&amp;client_flow_order=6&amp;rt=3&amp;rt=3&quot;, &quot;unrealExposalUrl&quot;: &quot;&quot;, &quot;flow_order&quot;: 6, &quot;abt&quot;: &quot;0&quot;, &quot;userBehaviorTag&quot;: &quot;0&quot;, &quot;exposeSkus&quot;: false, &quot;newSeasonClothes&quot;: true, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_101&quot;, &quot;trackId&quot;: &quot;supermarket&quot;, &quot;squareResCode&quot;: &quot;tab_101&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_078&quot;, &quot;trackId&quot;: &quot;newSeasonClothes&quot;, &quot;squareResCode&quot;: &quot;tab_078&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;hide_ad_subscript&quot;: &quot;0&quot;, &quot;superMarket&quot;: true, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;633\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;100018948748\&quot;,\&quot;ts\&quot;:\&quot;1618731942\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3644529796\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;633\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;e2e94cd9-0b56-4706-9b83-a8b084117151\\\&quot;&#125;\&quot;&#125;&quot;, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopId&quot;: &quot;1000300215&quot;, &quot;goodShopName&quot;: &quot;宏碁（acer）键鼠京东自营专区&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000300215&quot;, &quot;skuid&quot;: &quot;100018948748&quot; &#125;, &quot;b_ads&quot;: &#123; &quot;ch&quot;: &quot;2&quot;, &quot;sku&quot;: &quot;100018948748&quot;, &quot;ts&quot;: &quot;1618731942&quot; &#125;, &quot;b_id&quot;: &quot;2&quot; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;100010700296&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;100008834313&quot;, &quot;wname&quot;: &quot;达尔优（dareu）A87机械键盘 有线键盘 游戏键盘 办公键盘 PBT键帽 全键宏定义 KB紫金色 樱桃茶轴&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/136518/39/10723/100249/5f6bf661E5d22d70a/16418a4f2223d36a.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;399.00&quot;, &quot;subPrices&quot;: [ &#123; &quot;priceColorDark&quot;: &quot;#ECECEC&quot;, &quot;priceColor&quot;: &quot;#232326&quot;, &quot;price&quot;: &quot;￥379.00&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t17692/203/1709370700/1809/bb326132/5ad4acf5Nca044b5a.png&quot;, &quot;fontSize&quot;: &quot;26&quot;, &quot;describe&quot;: &quot;plus会员价&quot;, &quot;type&quot;: &quot;plusPrice&quot; &#125; ], &quot;promotionFlag&quot;: [ &quot;60&quot; ], &quot;good&quot;: &quot;96%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;2000+条评价&quot;, &quot;venderId&quot;: &quot;1000000315&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000315&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;100008834313,1407374904529032,5259,110,399.000000,1,,1&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;茶轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;茶轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/136518/39/10723/100249/5f6bf661E5d22d70a/16418a4f2223d36a.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/136518/39/10723/100249/5f6bf661E5d22d70a/16418a4f2223d36a.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;stockQuantity&quot;: 1, &quot;couponTag&quot;: &quot;领券79减10&quot;, &quot;plus95&quot;: false, &quot;showPlus95&quot;: false, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 17, &quot;titleIcon&quot;: &#123; &quot;wordCount&quot;: &quot;4&quot;, &quot;iconUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t3802/184/2262265095/4363/20cc83a/584675ccNb39899f9.png&quot; &#125;, &quot;jdChoice&quot;: true, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_006&quot;, &quot;trackId&quot;: &quot;jdjx&quot;, &quot;squareResCode&quot;: &quot;tab_006&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券79减10&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000000315&quot;, &quot;goodShopName&quot;: &quot;达尔优京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;100008834313&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000000315&quot;, &quot;skuid&quot;: &quot;100008834313&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;100008834313&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;100003554541&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;100008670443&quot;, &quot;wname&quot;: &quot;罗技 红轴机械键盘K835&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/147512/16/8572/68515/5f61c168E33f0790a/2c397d1057a9495d.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;199.00&quot;, &quot;subPrices&quot;: [ &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/32275/19/10871/1892/5cb3313dEaac40bfe/e6d46db930856285.png&quot;, &quot;describe&quot;: &quot;秒杀价&quot;, &quot;type&quot;: &quot;secKillPrice&quot; &#125; ], &quot;promotionFlag&quot;: [ &quot;59&quot;, &quot;55&quot; ], &quot;good&quot;: &quot;97%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;10万+条评价&quot;, &quot;venderId&quot;: &quot;1000000248&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000248&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;100008670443,1407374904529032,5372,110,199.000000,1,,1&quot;, &quot;feature_log&quot;: &quot;100008670443%5E&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;金属材质｜阳极氧化铝｜手感出色&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/147512/16/8572/68515/5f61c168E33f0790a/2c397d1057a9495d.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/147512/16/8572/68515/5f61c168E33f0790a/2c397d1057a9495d.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;upToSaving&quot;: &quot;多买优惠&quot;, &quot;couponTag&quot;: &quot;领券880减80&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 20, &quot;beltProfit&quot;: &#123; &quot;beltMsg1&quot;: &quot;预估优惠&quot;, &quot;beltStyle&quot;: &quot;4&quot;, &quot;beltBgImgList&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121705/20/12919/28368/5f63161cE40e95ee2/e6c4249a0fc25b0f.png&quot;, &quot;beltMsg&quot;: &quot;预估到手价¥173.05&quot;, &quot;beltMsg2&quot;: &quot;¥25.95&quot;, &quot;beltType&quot;: &quot;11&quot;, &quot;beltBgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141637/26/8516/23678/5f631375E0c06cc73/2b29599416c0c927.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdFxgTag&quot;: &quot;放心购&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_133&quot;, &quot;listShowName&quot;: &quot;放心购&quot;, &quot;trackId&quot;: &quot;JdFxg&quot;, &quot;squareResCode&quot;: &quot;tab_var_133&quot;, &quot;squareShowName&quot;: &quot;放心购&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_071&quot;, &quot;listShowName&quot;: &quot;多买优惠&quot;, &quot;trackId&quot;: &quot;upToSaving&quot;, &quot;squareResCode&quot;: &quot;tab_020&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券880减80&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000000248&quot;, &quot;goodShopName&quot;: &quot;罗技京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;100008670443&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000000248&quot;, &quot;skuid&quot;: &quot;100008670443&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;100008670443&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: true &#125;, &#123; &quot;spuId&quot;: &quot;262214&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;1914332&quot;, &quot;wname&quot;: &quot;罗技 无线蓝牙键盘K380&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/59734/28/571/259980/5ced2888E43337972/5c882bf17abbcd2b.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;159.00&quot;, &quot;subPrices&quot;: [ &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/32275/19/10871/1892/5cb3313dEaac40bfe/e6d46db930856285.png&quot;, &quot;describe&quot;: &quot;秒杀价&quot;, &quot;type&quot;: &quot;secKillPrice&quot; &#125; ], &quot;promotionFlag&quot;: [ &quot;55&quot;, &quot;60&quot; ], &quot;good&quot;: &quot;98%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;20万+条评价&quot;, &quot;venderId&quot;: &quot;1000000248&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000248&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;1914332,1125899927818376,5343,110,159.000000,1,,1&quot;, &quot;feature_log&quot;: &quot;1914332%5E&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;蓝牙接口&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;69-88键&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;蓝牙接口&quot; &#125;, &#123; &quot;title&quot;: &quot;键盘标准&quot;, &quot;tag&quot;: &quot;69-88键&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;无线蓝牙｜小巧便携｜多设备切换&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/59734/28/571/259980/5ced2888E43337972/5c882bf17abbcd2b.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/59734/28/571/259980/5ced2888E43337972/5c882bf17abbcd2b.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券880减80&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 19, &quot;beltProfit&quot;: &#123; &quot;beltMsg1&quot;: &quot;预估优惠&quot;, &quot;beltStyle&quot;: &quot;4&quot;, &quot;beltBgImgList&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121705/20/12919/28368/5f63161cE40e95ee2/e6c4249a0fc25b0f.png&quot;, &quot;beltMsg&quot;: &quot;预估到手价¥144.00&quot;, &quot;beltMsg2&quot;: &quot;¥15.00&quot;, &quot;beltType&quot;: &quot;11&quot;, &quot;beltBgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141637/26/8516/23678/5f631375E0c06cc73/2b29599416c0c927.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券880减80&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000000248&quot;, &quot;goodShopName&quot;: &quot;罗技京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;1914332&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000000248&quot;, &quot;skuid&quot;: &quot;1914332&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;1914332&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: true &#125;, &#123; &quot;spuId&quot;: &quot;100007409749&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;100013528274&quot;, &quot;wname&quot;: &quot;RK K104三模机械键盘红轴&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/139616/18/3166/311743/5f1251e0E3bf0a343/d38c5e56fef8fca3.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;299.00&quot;, &quot;promotionFlag&quot;: [ &quot;60&quot; ], &quot;good&quot;: &quot;95%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;2万+条评价&quot;, &quot;venderId&quot;: &quot;1000004350&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000004350&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;100013528274,1125899927818376,5332,110,299.000000,1,,1&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;单光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;单光&quot; &#125;, &#123; &quot;title&quot;: &quot;轴体类型&quot;, &quot;tag&quot;: &quot;红轴&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;有线蓝牙无线｜PBT侧刻键帽｜铝合金面板&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;promotionIconUrl&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/157572/28/16548/5668/60658e4dE8b04e6ad/0cf6a0781fc227fc.png&quot;, &quot;mPromotionId&quot;: &quot;10000638&quot;, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/139616/18/3166/311743/5f1251e0E3bf0a343/d38c5e56fef8fca3.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/139616/18/3166/311743/5f1251e0E3bf0a343/d38c5e56fef8fca3.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券79减10&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 25, &quot;beltProfit&quot;: &#123; &quot;beltMsg1&quot;: &quot;预估优惠&quot;, &quot;beltStyle&quot;: &quot;4&quot;, &quot;beltBgImgList&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121705/20/12919/28368/5f63161cE40e95ee2/e6c4249a0fc25b0f.png&quot;, &quot;beltMsg&quot;: &quot;预估到手价¥289.00&quot;, &quot;beltMsg2&quot;: &quot;¥10.00&quot;, &quot;beltType&quot;: &quot;11&quot;, &quot;beltBgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141637/26/8516/23678/5f631375E0c06cc73/2b29599416c0c927.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdFxgTag&quot;: &quot;放心购&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_133&quot;, &quot;listShowName&quot;: &quot;放心购&quot;, &quot;trackId&quot;: &quot;JdFxg&quot;, &quot;squareResCode&quot;: &quot;tab_var_133&quot;, &quot;squareShowName&quot;: &quot;放心购&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券79减10&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000004350&quot;, &quot;goodShopName&quot;: &quot;RK京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;100013528274&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000004350&quot;, &quot;skuid&quot;: &quot;100013528274&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;100013528274&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;catid&quot;: &quot;0&quot;, &quot;wareId&quot;: &quot;100000&quot;, &quot;wname&quot;: &quot;低价好货 品质无忧&quot;, &quot;good&quot;: &quot;&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;暂无评价&quot;, &quot;venderId&quot;: &quot;0&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;toMURL&quot;: &quot;https://paipai.m.jd.com/search/?entryid=p005ppyj0jdapp7&amp;key=键盘&amp;skuids=72029122935,72029122936,35810331098&quot;, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;groupBuyFlag&quot;: false, &quot;flashBuy&quot;: false, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;secondWareList&quot;: [ &#123; &quot;wareId&quot;: &quot;72029122935&quot;, &quot;price&quot;: &quot;￥158.00&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s536x536_jfs/t1/145222/15/4050/61088/5f2063b1Ec9a2001f/21eab9ab213f7ff5.jpg!q70.jpg&quot; &#125;, &#123; &quot;wareId&quot;: &quot;72029122936&quot;, &quot;price&quot;: &quot;￥198.00&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s536x536_jfs/t1/118143/13/13371/54304/5f2063e0E5e67d554/44d909a95c8aad43.jpg!q70.jpg&quot; &#125;, &#123; &quot;wareId&quot;: &quot;35810331098&quot;, &quot;price&quot;: &quot;￥26.00&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s536x536_jfs/t1/3650/38/14556/91360/5bdbaaacEaf9044fd/b1e8af13d8a2852d.jpg!q70.jpg&quot; &#125; ], &quot;wareType&quot;: &quot;second&quot;, &quot;exposeSkus&quot;: false, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: false, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;wareId&quot;: &quot;4422011&quot;, &quot;wname&quot;: &quot;樱桃（Cherry）MX1.0 TKL G80-3810LYAEU-2 机械键盘 有线键盘 游戏键盘 87键机械键盘 黑色 红轴&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/127935/36/7739/48599/5f169c8fE3f29c9fa/cfb09cb7019e8470.jpg!q70.dpg.webp&quot;, &quot;livePrice&quot;: &quot;239.00&quot;, &quot;good&quot;: &quot;&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;暂无评价&quot;, &quot;eBookFlag&quot;: false, &quot;shopName&quot;: &quot;cherry樱桃京东自营旗舰店&quot;, &quot;shopIcon&quot;: &quot;https://img30.360buyimg.com/popshop/jfs/t1/165740/4/18816/389693/60790958E033f5608/f7819113f46ae803.gif&quot;, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;groupBuyFlag&quot;: false, &quot;flashBuy&quot;: false, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/127935/36/7739/48599/5f169c8fE3f29c9fa/cfb09cb7019e8470.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;flow_order&quot;: 10, &quot;wareType&quot;: &quot;live&quot;, &quot;exposeSkus&quot;: false, &quot;subTitle&quot;: &quot;&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;liveOpenAppUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;LivePlayerRoom\&quot;,\&quot;sourceValue\&quot;:\&quot;sourceValue_test\&quot;,\&quot;sourceType\&quot;:\&quot;sourceType_test\&quot;,\&quot;liveOrigin\&quot;:\&quot;12\&quot;,\&quot;id\&quot;:\&quot;3871742\&quot;,\&quot;sku\&quot;:\&quot;4422011\&quot;,\&quot;isNeedVideo\&quot;:true&#125;&quot;, &quot;liveOnlineNum&quot;: &quot;0&quot;, &quot;liveId&quot;: &quot;3871742&quot;, &quot;liveStatus&quot;: &quot;2&quot;, &quot;liveStatusUrl&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/132921/8/13911/7761/5f992f1bEf3255e1d/7d47837ab35db5a8.png&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;uet&quot;: &#123; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125;, &#123; &quot;spuId&quot;: &quot;100002609743&quot;, &quot;cid1&quot;: &quot;670&quot;, &quot;cid2&quot;: &quot;686&quot;, &quot;catid&quot;: &quot;689&quot;, &quot;wareId&quot;: &quot;100004723285&quot;, &quot;wname&quot;: &quot;AKKO 3087东京樱花机械键盘&quot;, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x531_jfs/t1/81578/21/9761/199729/5d75f817E2f09f5d7/5483f83c4c2f8940.jpg!q70.dpg.webp&quot;, &quot;jdPrice&quot;: &quot;299.00&quot;, &quot;promotionFlag&quot;: [ &quot;60&quot; ], &quot;good&quot;: &quot;97%好评&quot;, &quot;recentYear&quot;: false, &quot;reviews&quot;: &quot;5000+条评价&quot;, &quot;venderId&quot;: &quot;1000078903&quot;, &quot;venderType&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000078903&quot;, &quot;eBookFlag&quot;: false, &quot;international&quot;: false, &quot;eche&quot;: false, &quot;needShield&quot;: false, &quot;needShieldCartAndFollow&quot;: false, &quot;promotionType&quot;: [ ], &quot;showlog&quot;: &quot;100004723285,1407374904529032,5303,110,299.000000,1,,1&quot;, &quot;flags&quot;: &quot;20975752&quot;, &quot;groupBuyFlag&quot;: false, &quot;ctmAttrList&quot;: [ &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;USB&quot; &#125;, &#123; &quot;color&quot;: &quot;#F6F6F6&quot;, &quot;tag&quot;: &quot;69-88键&quot; &#125; ], &quot;ctmNewStyleAttrList&quot;: [ &#123; &quot;title&quot;: &quot;背光效果&quot;, &quot;tag&quot;: &quot;无光&quot; &#125;, &#123; &quot;title&quot;: &quot;接口&quot;, &quot;tag&quot;: &quot;USB&quot; &#125;, &#123; &quot;title&quot;: &quot;键盘标准&quot;, &quot;tag&quot;: &quot;69-88键&quot; &#125; ], &quot;gaiaAttr&quot;: &quot;键线分离｜PBT键帽｜全键无冲&quot;, &quot;oneline&quot;: true, &quot;productext3&quot;: &quot;0&quot;, &quot;author&quot;: &quot;&quot;, &quot;flashBuy&quot;: false, &quot;longImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s531x680_jfs/t1/81578/21/9761/199729/5d75f817E2f09f5d7/5483f83c4c2f8940.jpg!cc_531x680!q70.dpg.webp&quot;, &quot;listImgUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s390x390_jfs/t1/81578/21/9761/199729/5d75f817E2f09f5d7/5483f83c4c2f8940.jpg!q70.dpg.webp&quot;, &quot;preSale&quot;: false, &quot;purchasing&quot;: false, &quot;couponTag&quot;: &quot;领券79减10&quot;, &quot;exposeSkus&quot;: false, &quot;colorCount&quot;: 3, &quot;beltProfit&quot;: &#123; &quot;beltMsg1&quot;: &quot;预估优惠&quot;, &quot;beltStyle&quot;: &quot;4&quot;, &quot;beltBgImgList&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121705/20/12919/28368/5f63161cE40e95ee2/e6c4249a0fc25b0f.png&quot;, &quot;beltMsg&quot;: &quot;预估到手价¥289.00&quot;, &quot;beltMsg2&quot;: &quot;¥10.00&quot;, &quot;beltType&quot;: &quot;11&quot;, &quot;beltBgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141637/26/8516/23678/5f631375E0c06cc73/2b29599416c0c927.png&quot; &#125;, &quot;flags3_29&quot;: &quot;0&quot;, &quot;popularBrands&quot;: false, &quot;superPerformance&quot;: false, &quot;seasonalDiscount&quot;: false, &quot;keplerSku&quot;: false, &quot;jdFxgTag&quot;: &quot;放心购&quot;, &quot;configDatas&quot;: &#123; &quot;priceUnder&quot;: [ &#123; &quot;listResCode&quot;: &quot;tab_054&quot;, &quot;trackId&quot;: &quot;self&quot;, &quot;squareResCode&quot;: &quot;tab_054&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;tab_var_133&quot;, &quot;listShowName&quot;: &quot;放心购&quot;, &quot;trackId&quot;: &quot;JdFxg&quot;, &quot;squareResCode&quot;: &quot;tab_var_133&quot;, &quot;squareShowName&quot;: &quot;放心购&quot; &#125;, &#123; &quot;listResCode&quot;: &quot;search_var_006&quot;, &quot;listShowName&quot;: &quot;领券79减10&quot;, &quot;trackId&quot;: &quot;couponTag&quot;, &quot;squareResCode&quot;: &quot;tab_060&quot; &#125; ] &#125;, &quot;localStore&quot;: false, &quot;priceType&quot;: &quot;1&quot;, &quot;goodShop&quot;: &#123; &quot;goodShopABTest&quot;: &quot;0&quot;, &quot;goodShopId&quot;: &quot;1000078903&quot;, &quot;goodShopName&quot;: &quot;AKKO京东自营旗舰店&quot; &#125;, &quot;goodShopType&quot;: &quot;common&quot;, &quot;activityIte&quot;: &#123; &quot;wareid&quot;: &quot;100004723285&quot; &#125;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;stockstatus&quot;: &quot;其他&quot;, &quot;shopid&quot;: &quot;1000078903&quot;, &quot;skuid&quot;: &quot;100004723285&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;wareid&quot;: &quot;100004723285&quot; &#125; &#125;, &quot;storeDdelivery&quot;: false, &quot;self&quot;: true, &quot;loc&quot;: false, &quot;secKill&quot;: false &#125; ], &quot;realCount&quot;: &quot;10&quot;, &quot;promotionID&quot;: &quot;10000638&quot;, &quot;showStyleRule&quot;: &quot;键盘_689_1_list&quot;, &quot;secondInserted&quot;: &quot;1&quot;, &quot;curPage&quot;: &quot;1&quot;, &quot;middleTags&quot;: [ &#123; &quot;tagList&quot;: [ &#123; &quot;tagId&quot;: &quot;11821&quot;, &quot;tagValue&quot;: &quot;brand,,罗技（Logitech）&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t10369/97/2211502513/1892/ee79238f/59f15a7aN946a4cb8.jpg&quot;, &quot;tagName&quot;: &quot;罗技（Logitech）&quot; &#125;, &#123; &quot;tagId&quot;: &quot;255278&quot;, &quot;tagValue&quot;: &quot;brand,,罗技（G）&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t9547/278/2188014458/5403/77085817/59f15a6fNfce11113.jpg&quot;, &quot;tagName&quot;: &quot;罗技（G）&quot; &#125;, &#123; &quot;tagId&quot;: &quot;107109&quot;, &quot;tagValue&quot;: &quot;brand,,ikbc&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t1/150919/10/2930/2478/5f83cd11E8c58b997/9079dbed288096f6.jpg&quot;, &quot;tagName&quot;: &quot;ikbc&quot; &#125;, &#123; &quot;tagId&quot;: &quot;19916&quot;, &quot;tagValue&quot;: &quot;brand,,CHERRY&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t2683/65/32196796/5013/46d7883d/56fc8145N9bfa0eb6.jpg&quot;, &quot;tagName&quot;: &quot;CHERRY&quot; &#125;, &#123; &quot;tagId&quot;: &quot;11248&quot;, &quot;tagValue&quot;: &quot;brand,,雷柏（Rapoo）&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t7015/182/1351075572/4737/66afb1a4/59804bc0N7715ecf1.jpg&quot;, &quot;tagName&quot;: &quot;雷柏（Rapoo）&quot; &#125;, &#123; &quot;tagId&quot;: &quot;63833&quot;, &quot;tagValue&quot;: &quot;brand,,雷蛇（Razer）&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t6046/194/7710545184/3732/18988f10/598128caN402e1463.jpg&quot;, &quot;tagName&quot;: &quot;雷蛇（Razer）&quot; &#125;, &#123; &quot;tagId&quot;: &quot;205408&quot;, &quot;tagValue&quot;: &quot;brand,,AKKO&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t15562/17/1325345861/5884/715c3993/5a4f503aN1a447543.png&quot;, &quot;tagName&quot;: &quot;AKKO&quot; &#125;, &#123; &quot;tagId&quot;: &quot;42796&quot;, &quot;tagValue&quot;: &quot;brand,,达尔优&quot;, &quot;tagLogoUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s102x36_jfs/t24844/194/207448161/2857/9384c964/5b6939ccN40668b22.png&quot;, &quot;tagName&quot;: &quot;达尔优&quot; &#125; ], &quot;tagPos&quot;: &quot;8&quot;, &quot;type&quot;: &quot;1&quot;, &quot;title&quot;: &quot;Top品牌榜&quot; &#125;, &#123; &quot;tagList&quot;: [ &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|3824&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 1, &quot;labeltext&quot;: &quot;有线&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E6%9C%89%E7%BA%BF&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,有线&quot;, &quot;tagQuery&quot;: &quot;键盘 有线&quot;, &quot;tagName&quot;: &quot;有线&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|1499&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 2, &quot;labeltext&quot;: &quot;无线&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E6%97%A0%E7%BA%BF&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,无线&quot;, &quot;tagQuery&quot;: &quot;键盘 无线&quot;, &quot;tagName&quot;: &quot;无线&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|6016&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 3, &quot;labeltext&quot;: &quot;机械&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E6%9C%BA%E6%A2%B0&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,机械&quot;, &quot;tagQuery&quot;: &quot;键盘 机械&quot;, &quot;tagName&quot;: &quot;机械&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|49094&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 4, &quot;labeltext&quot;: &quot;青轴&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E9%9D%92%E8%BD%B4&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,青轴&quot;, &quot;tagQuery&quot;: &quot;键盘 青轴&quot;, &quot;tagName&quot;: &quot;青轴&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|27&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 5, &quot;labeltext&quot;: &quot;小米&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E5%B0%8F%E7%B1%B3&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,小米&quot;, &quot;tagQuery&quot;: &quot;键盘 小米&quot;, &quot;tagName&quot;: &quot;小米&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|2006&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 6, &quot;labeltext&quot;: &quot;办公&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E5%8A%9E%E5%85%AC&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,办公&quot;, &quot;tagQuery&quot;: &quot;键盘 办公&quot;, &quot;tagName&quot;: &quot;办公&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|46937&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 7, &quot;labeltext&quot;: &quot;红轴&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E7%BA%A2%E8%BD%B4&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,红轴&quot;, &quot;tagQuery&quot;: &quot;键盘 红轴&quot;, &quot;tagName&quot;: &quot;红轴&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|713&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 8, &quot;labeltext&quot;: &quot;罗技&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E7%BD%97%E6%8A%80&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,罗技&quot;, &quot;tagQuery&quot;: &quot;键盘 罗技&quot;, &quot;tagName&quot;: &quot;罗技&quot; &#125; ], &quot;tagPos&quot;: &quot;16&quot;, &quot;floorName&quot;: &quot;精选&quot;, &quot;type&quot;: &quot;2&quot; &#125;, &#123; &quot;tagList&quot;: [ &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|1138&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 1, &quot;labeltext&quot;: &quot;游戏&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E6%B8%B8%E6%88%8F&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,游戏&quot;, &quot;tagQuery&quot;: &quot;键盘 游戏&quot;, &quot;tagName&quot;: &quot;游戏&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|15316&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 2, &quot;labeltext&quot;: &quot;电竞&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E7%94%B5%E7%AB%9E&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,电竞&quot;, &quot;tagQuery&quot;: &quot;键盘 电竞&quot;, &quot;tagName&quot;: &quot;电竞&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|44977&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 3, &quot;labeltext&quot;: &quot;樱桃&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E6%A8%B1%E6%A1%83&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,樱桃&quot;, &quot;tagQuery&quot;: &quot;键盘 樱桃&quot;, &quot;tagName&quot;: &quot;樱桃&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|185&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 4, &quot;labeltext&quot;: &quot;外星人&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E5%A4%96%E6%98%9F%E4%BA%BA&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,外星人&quot;, &quot;tagQuery&quot;: &quot;键盘 外星人&quot;, &quot;tagName&quot;: &quot;外星人&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|726&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 5, &quot;labeltext&quot;: &quot;雷蛇&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E9%9B%B7%E8%9B%87&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,雷蛇&quot;, &quot;tagQuery&quot;: &quot;键盘 雷蛇&quot;, &quot;tagName&quot;: &quot;雷蛇&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|30&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 6, &quot;labeltext&quot;: &quot;华为&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E5%8D%8E%E4%B8%BA&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,华为&quot;, &quot;tagQuery&quot;: &quot;键盘 华为&quot;, &quot;tagName&quot;: &quot;华为&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|3543&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 7, &quot;labeltext&quot;: &quot;双飞燕&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E5%8F%8C%E9%A3%9E%E7%87%95&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,双飞燕&quot;, &quot;tagQuery&quot;: &quot;键盘 双飞燕&quot;, &quot;tagName&quot;: &quot;双飞燕&quot; &#125;, &#123; &quot;tagLog&quot;: &quot;rc|0|0|1|1526&quot;, &quot;uet&quot;: &#123; &quot;b_pub&quot;: &#123; &quot;loc&quot;: 8, &quot;labeltext&quot;: &quot;牧马人&quot;, &quot;labeltitle&quot;: &quot;精选&quot; &#125;, &quot;b_id&quot;: &quot;1&quot;, &quot;b_search&quot;: &#123; &quot;tagid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;tagquery&quot;: &quot;%E9%94%AE%E7%9B%98%20%E7%89%A7%E9%A9%AC%E4%BA%BA&quot; &#125; &#125;, &quot;tagValue&quot;: &quot;recall,,牧马人&quot;, &quot;tagQuery&quot;: &quot;键盘 牧马人&quot;, &quot;tagName&quot;: &quot;牧马人&quot; &#125; ], &quot;tagPos&quot;: &quot;24&quot;, &quot;floorName&quot;: &quot;精选&quot;, &quot;type&quot;: &quot;2&quot; &#125; ], &quot;wareCount&quot;: 7542, &quot;posInfoTag&quot;: &quot;3&quot;, &quot;logid&quot;: &quot;ebf840b3c0284e51aa27fb7aa7639937&quot;, &quot;leStyle&quot;: &quot;2&quot;&#125; 图片压缩都挺严重的，在搜索结果页看到的图片有，jpg、png、web 商品详情页 进入ikbc87键盘页面 请求地址https://api.m.jd.com/client.action?functionId=wareBusiness 123456789101112131415161718192021222324252627282930body=&#123; &quot;abTest800&quot;: true, &quot;avoidLive&quot;: false, &quot;brand&quot;: &quot;Realme&quot;, &quot;cityId&quot;: 2812, &quot;cpsNoTuan&quot;: null, &quot;darkModelEnum&quot;: 3, &quot;districtId&quot;: 51139, &quot;eventId&quot;: &quot;Searchlist_Productid&quot;, &quot;fromType&quot;: 0, &quot;fullAddress&quot;: &quot;ReIsNm+3oY3AqXUnzoPhCHsLgKev+efBIu1yN9mQcFMd2ZwZH8GK18cn3V+PUQRfG8uwOQAl1Ox9pUN214ufvLE13k3FfV3U&quot;, &quot;gcLat&quot;: &quot;40.138381&quot;, &quot;gcLng&quot;: &quot;116.612914&quot;, &quot;isDesCbc&quot;: true, &quot;latitude&quot;: &quot;40.138196&quot;, &quot;lego&quot;: true, &quot;longitude&quot;: &quot;116.614013&quot;, &quot;model&quot;: &quot;RMX1901&quot;, &quot;ocrFlag&quot;: false, &quot;pluginVersion&quot;: 90500, &quot;plusClickCount&quot;: 0, &quot;plusLandedFatigue&quot;: 0, &quot;provinceId&quot;: &quot;1&quot;, &quot;skuId&quot;: &quot;10025802445921&quot;, &quot;source_type&quot;: &quot;search&quot;, &quot;source_value&quot;: &quot;键盘&quot;, &quot;townId&quot;: 0, &quot;uAddrId&quot;: &quot;4567807715&quot;, &quot;utmMedium&quot;: null&#125; 请求方式POST 协议h2 请求大小2.88kB 请求耗时188ms 响应大小16.63 kB 响应12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989910010110210310410510610710810911011111211311411511611711811912012112212312412512612712812913013113213313413513613713813914014114214314414514614714814915015115215315415515615715815916016116216316416516616716816917017117217317417517617717817918018118218318418518618718818919019119219319419519619719819920020120220320420520620720820921021121221321421521621721821922022122222322422522622722822923023123223323423523623723823924024124224324424524624724824925025125225325425525625725825926026126226326426526626726826927027127227327427527627727827928028128228328428528628728828929029129229329429529629729829930030130230330430530630730830931031131231331431531631731831932032132232332432532632732832933033133233333433533633733833934034134234334434534634734834935035135235335435535635735835936036136236336436536636736836937037137237337437537637737837938038138238338438538638738838939039139239339439539639739839940040140240340440540640740840941041141241341441541641741841942042142242342442542642742842943043143243343443543643743843944044144244344444544644744844945045145245345445545645745845946046146246346446546646746846947047147247347447547647747847948048148248348448548648748848949049149249349449549649749849950050150250350450550650750850951051151251351451551651751851952052152252352452552652752852953053153253353453553653753853954054154254354454554654754854955055155255355455555655755855956056156256356456556656756856957057157257357457557657757857958058158258358458558658758858959059159259359459559659759859960060160260360460560660760860961061161261361461561661761861962062162262362462562662762862963063163263363463563663763863964064164264364464564664764864965065165265365465565665765865966066166266366466566666766866967067167267367467567667767867968068168268368468568668768868969069169269369469569669769869970070170270370470570670770870971071171271371471571671771871972072172272372472572672772872973073173273373473573673773873974074174274374474574674774874975075175275375475575675775875976076176276376476576676776876977077177277377477577677777877978078178278378478578678778878979079179279379479579679779879980080180280380480580680780880981081181281381481581681781881982082182282382482582682782882983083183283383483583683783883984084184284384484584684784884985085185285385485585685785885986086186286386486586686786886987087187287387487587687787887988088188288388488588688788888989089189289389489589689789889990090190290390490590690790890991091191291391491591691791891992092192292392492592692792892993093193293393493593693793893994094194294394494594694794894995095195295395495595695795895996096196296396496596696796896997097197297397497597697797897998098198298398498598698798898999099199299399499599699799899910001001100210031004100510061007100810091010101110121013101410151016101710181019102010211022102310241025102610271028102910301031103210331034103510361037103810391040104110421043104410451046104710481049105010511052105310541055105610571058105910601061106210631064106510661067106810691070107110721073107410751076107710781079108010811082108310841085108610871088108910901091109210931094109510961097109810991100110111021103110411051106110711081109111011111112111311141115111611171118111911201121112211231124112511261127112811291130113111321133113411351136113711381139114011411142114311441145114611471148114911501151115211531154115511561157115811591160116111621163116411651166116711681169117011711172117311741175117611771178117911801181118211831184118511861187118811891190119111921193119411951196119711981199120012011202120312041205120612071208120912101211121212131214121512161217121812191220122112221223122412251226122712281229123012311232123312341235123612371238123912401241124212431244124512461247124812491250125112521253125412551256125712581259126012611262126312641265126612671268126912701271127212731274127512761277127812791280128112821283128412851286128712881289129012911292129312941295129612971298129913001301130213031304130513061307130813091310131113121313131413151316131713181319132013211322132313241325132613271328132913301331133213331334133513361337133813391340134113421343134413451346134713481349135013511352135313541355135613571358135913601361136213631364136513661367136813691370137113721373137413751376137713781379138013811382138313841385138613871388138913901391139213931394139513961397139813991400140114021403140414051406140714081409141014111412141314141415141614171418141914201421142214231424142514261427142814291430143114321433143414351436143714381439144014411442144314441445144614471448144914501451145214531454145514561457145814591460146114621463146414651466146714681469147014711472147314741475147614771478147914801481148214831484148514861487148814891490149114921493149414951496149714981499150015011502150315041505150615071508150915101511151215131514151515161517151815191520152115221523152415251526152715281529153015311532153315341535153615371538153915401541154215431544154515461547154815491550155115521553155415551556155715581559156015611562156315641565156615671568156915701571157215731574157515761577157815791580158115821583158415851586158715881589159015911592159315941595159615971598159916001601160216031604160516061607160816091610161116121613161416151616161716181619162016211622162316241625162616271628162916301631163216331634163516361637163816391640164116421643164416451646164716481649165016511652165316541655165616571658165916601661166216631664166516661667166816691670167116721673167416751676167716781679168016811682168316841685168616871688168916901691169216931694169516961697169816991700170117021703170417051706170717081709171017111712171317141715171617171718171917201721172217231724172517261727172817291730173117321733173417351736173717381739174017411742174317441745174617471748174917501751175217531754175517561757175817591760176117621763176417651766176717681769177017711772177317741775177617771778177917801781178217831784&#123; &quot;code&quot;: 0, &quot;floors&quot;: [ &#123; &quot;bId&quot;: &quot;eCustom_flo_299&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;isShowAR&quot;: false, &quot;threeDSwitch&quot;: false, &quot;maxSales&quot;: &#123; &quot;head&quot;: &quot;https://m.360buyimg.com/umm/jfs/t1/160061/4/16456/9958/60658e56E0266055e/da852c6f618d61e5.png&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.sales.MaxSalesInfo&quot; &#125;, &quot;videoControl&quot;: &#123; &quot;optimize&quot;: true, &quot;autoPlay&quot;: false, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.video.VideoControl&quot; &#125; &#125;, &quot;mId&quot;: &quot;bpMainImage&quot;, &quot;refId&quot;: &quot;eMainImage_0000000030&quot;, &quot;sortId&quot;: 1 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_508&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpDsj&quot;, &quot;sortId&quot;: 2 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_333&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpSkinBanner&quot;, &quot;refId&quot;: &quot;eSkinBanner_0000000023&quot;, &quot;sortId&quot;: 2 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_255&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &#125;, &quot;mId&quot;: &quot;bpSecBanner&quot;, &quot;refId&quot;: &quot;eSecBanner_0000000023&quot;, &quot;sortId&quot;: 2 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_334&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpPromot&quot;, &quot;refId&quot;: &quot;ePromot_0000000051&quot;, &quot;sortId&quot;: 2 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_505&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpCjxpUp&quot;, &quot;sortId&quot;: 2 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_627&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;handPriceBanner&quot;: &#123; &quot;iconRight&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/130963/28/19483/4148/5fd312e6E21a63d67/b9f11ca63c84cfaf.png&quot;, &quot;mdNum&quot;: 1, &quot;bgImageToHand1&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/139267/4/18796/2653/5fdafb57E8f74fea1/a341d75bafa8a77e.png&quot;, &quot;bgImageToHand2&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/140181/17/18723/2439/5fdafb6bEfd6a5fb4/3058f597f05e5cab.png&quot;, &quot;countdownText&quot;: &quot;距活动结束&quot;, &quot;originPrice&quot;: &quot;¥349.0&quot;, &quot;bgImage&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/136022/23/18399/102246/5fc9e576E1bee163e/99d8bc69d8c44ff2.png&quot;, &quot;fontColorToHand&quot;: &quot;#FE023A&quot;, &quot;couponDctMap&quot;: &#123; &quot;price&quot;: &quot;¥30&quot;, &quot;text&quot;: &quot;优惠券&quot; &#125;, &quot;handPriceMap&quot;: &#123; &quot;price&quot;: &quot;¥299.00&quot;, &quot;text&quot;: &quot;预估到手价&quot; &#125;, &quot;logoTopLeft&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/140730/30/17045/21321/5fc9e526Ef01f5b41/6343970564c20082.png&quot;, &quot;bgColor&quot;: &quot;#F42F92,#FF0F67,#FF0750&quot;, &quot;countdownSec&quot;: 116049, &quot;bgColorToHand&quot;: &quot;#FFEAE9&quot;, &quot;jdPriceMap&quot;: &#123; &quot;price&quot;: &quot;¥329&quot;, &quot;text&quot;: &quot;京东价&quot; &#125;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.seckill.HandPriceBanner&quot;, &quot;bannerPrice&quot;: &quot;¥329.00&quot;, &quot;fontColor&quot;: &quot;#FFFFFF&quot; &#125; &#125;, &quot;mId&quot;: &quot;bpSecHandBanner&quot;, &quot;sortId&quot;: 2 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_219&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;color&quot;: &quot;#F0250F&quot;, &quot;title&quot;: &quot;6色可选&quot;, &quot;items&quot;: [ &#123; &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/160209/37/14902/70716/60592ad6E92165b81/101cdb2ad5e5204d.jpg!q70.jpg&quot;, &quot;stockEnable&quot;: true, &quot;skuId&quot;: &quot;10025802445925&quot; &#125;, &#123; &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.jpg&quot;, &quot;stockEnable&quot;: true, &quot;skuId&quot;: &quot;10025802445921&quot; &#125;, &#123; &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/160457/4/13395/64125/60501a07E97382f93/c6735838ea5ef63a.jpg!q70.jpg&quot;, &quot;stockEnable&quot;: true, &quot;skuId&quot;: &quot;10027783753073&quot; &#125;, &#123; &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/168595/37/12521/70716/605019ceE1dd870a5/4a481b223cd7b729.jpg!q70.jpg&quot;, &quot;stockEnable&quot;: true, &quot;skuId&quot;: &quot;10027783753070&quot; &#125;, &#123; &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/157718/1/14572/63144/60592ae1E8c3944cc/61a6e9ce00c24ff4.jpg!q70.jpg&quot;, &quot;stockEnable&quot;: true, &quot;skuId&quot;: &quot;10025802445923&quot; &#125;, &#123; &quot;image&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/166095/8/14347/64125/60592aebE61d91eff/1be5161b1cae70ef.jpg!q70.jpg&quot;, &quot;stockEnable&quot;: true, &quot;skuId&quot;: &quot;10025869969100&quot; &#125; ], &quot;showStyleEnum&quot;: 0 &#125;, &quot;mId&quot;: &quot;bpSpic&quot;, &quot;sortId&quot;: 3 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_506&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpCjxpDown&quot;, &quot;sortId&quot;: 4 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_332&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpSeckill&quot;, &quot;refId&quot;: &quot;eSeckill_0000000100&quot;, &quot;sortId&quot;: 8 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_337&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpGroup&quot;, &quot;refId&quot;: &quot;eGroup_0000000006&quot;, &quot;sortId&quot;: 8 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_511&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;icodeImgAndTextList&quot;: [ &#123; &quot;iconDesc&quot;: &quot;一站式囤生活好物&quot;, &quot;iconImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/16173/29/12477/2460/5c98bd39Ed0231aa1/7017ad3b57533a42.png&quot;, &quot;type&quot;: &quot;jdcs&quot; &#125; ] &#125;, &quot;mId&quot;: &quot;JDguojibrand&quot;, &quot;sortId&quot;: 9 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_300&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;showAttention&quot;: true, &quot;imgToWareName&quot;: [ &quot;tab_054&quot; ] &#125;, &quot;mId&quot;: &quot;bpName&quot;, &quot;refId&quot;: &quot;eName_0000000015&quot;, &quot;sortId&quot;: 10 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_452&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;brightPoints&quot;: &quot;• cherry轴 • PBT键帽 • 轻盈触发快&quot; &#125;, &quot;mId&quot;: &quot;bpBrightpoint&quot;, &quot;sortId&quot;: 11 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_199&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;ad&quot;: &#123; &quot;adword&quot;: &quot;经典配色时光灰系列，限时领券下单享优惠价格。更有有线无线红轴茶轴可选戳这里&quot;, &quot;newALContent&quot;: true, &quot;color&quot;: &quot;#f23030&quot;, &quot;adLink&quot;: &quot;https://item.jd.com/10024595535207.html&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.AdWordInfo.AdWordInfo&quot;, &quot;textColor&quot;: &quot;#8C8C8C&quot;, &quot;adLinkContent&quot;: &quot;查看&gt;&quot;, &quot;hasFold&quot;: true &#125; &#125;, &quot;mId&quot;: &quot;bpAdword&quot;, &quot;refId&quot;: &quot;eAdword_0000000028&quot;, &quot;sortId&quot;: 13 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_335&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpBlank&quot;, &quot;refId&quot;: &quot;eBlank_0000000102&quot;, &quot;sortId&quot;: 14 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_347&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpInstallment&quot;, &quot;refId&quot;: &quot;eInstallment_0000000075&quot;, &quot;sortId&quot;: 20 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_329&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpCardFlow&quot;, &quot;refId&quot;: &quot;eCardFlow_0000000053&quot;, &quot;sortId&quot;: 24 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_330&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpCertify&quot;, &quot;refId&quot;: &quot;eCertify_0000000004&quot;, &quot;sortId&quot;: 30 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_501&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;line&quot; &#125;, &quot;data&quot;: &#123; &quot;unitedPLUSExpansion&quot;: &#123; &quot;floorDO&quot;: &#123; &quot;textAfterDiscount&quot;: &quot;，还享肯德基65折起&quot;, &quot;tailText&quot;: &quot;查看详情&quot;, &quot;sign&quot;: &quot;2&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t10729/144/1864295616/3893/749001fc/59e8664cN2fc9f0c9.png&quot;, &quot;discount&quot;: &quot;21.54元&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.plus.FloorDO&quot;, &quot;url&quot;: &quot;https://plus.m.jd.com/index?s=productdetail&amp;flow_system=productdetail&amp;detainer=1398XHSIWsjshwe12&amp;topInfo=10025802445921&quot;, &quot;tailArrow&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/37190/21/1884/640/5cb468e7E0320d6ee/b6b82a415a131526.png&quot;, &quot;textBeforeDiscount&quot;: &quot;开PLUS年卡再省&quot; &#125;, &quot;mmDO&quot;: &quot;2&amp;20_4&amp;1.54&quot;, &quot;popupDO&quot;: &#123; &quot;btnDiscount&quot;: &quot;开通PLUS会员，预估优惠21.54元&quot;, &quot;title&quot;: &quot;PLUS会员 享更多优惠&quot;, &quot;vip&quot;: &#123; &quot;head&quot;: &quot;PLUS会员专属优惠&quot;, &quot;vipDetail&quot;: [ &#123; &quot;head&quot;: &quot;PLUS专享优惠券&quot;, &quot;discount&quot;: &quot;20元&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.plus.PLUSExpansionBase&quot;, &quot;notice&quot;: &quot;无门槛减20全品类京券（开通年卡后24h内到PLUS专区领取）&quot;, &quot;discountText&quot;: &quot;省&quot; &#125; ], &quot;discount&quot;: &quot;20.00元&quot;, &quot;discountText&quot;: &quot;共可省&quot; &#125;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.plus.PopupDO&quot;, &quot;card&quot;: &#123; &quot;head&quot;: &quot;PLUS会员专属开卡福利&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.plus.PopBenefit&quot;, &quot;notice&quot;: &quot;肯德基65折起嗨吃嗨喝特权（开通后到PLUS会员生活特权专区领取）&quot; &#125;, &quot;notice&quot;: &quot;实际优惠金额请以结算页下单结果为准&quot;, &quot;jBean&quot;: &#123; &quot;head&quot;: &quot;购物返京豆&quot;, &quot;discount&quot;: &quot;1.54元&quot;, &quot;ps&quot;: &quot;京豆返利规则：返豆数量＝商品实付金额（扣除促销、优惠券等各项优惠后的金额）×50.0%，以最终到账为准，详细规则可在PLUS会员专区查看&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.plus.PLUSExpansionBase&quot;, &quot;notice&quot;: &quot;订单完成后，会员预估额外返154个京豆，可在下次购物时抵现&quot;, &quot;discountText&quot;: &quot;抵&quot; &#125; &#125;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.plus.UnitedPLUSExpansion&quot;, &quot;shieldLanded&quot;: false &#125; &#125;, &quot;mId&quot;: &quot;bpPLUSExpand&quot;, &quot;sortId&quot;: 48 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_462&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &quot;preferentialGuide&quot;: &#123; &quot;secondLevelGuideInfo&quot;: &#123; &quot;sLevelGuideText1&quot;: &quot;使用以下“*”标优惠，预估价¥299.00 &quot;, &quot;sLevelIconCode&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/75639/12/11713/385/5d91bd73E9865f7db/4122771acdea2dc7.png&quot;, &quot;saveMoney&quot;: &quot;¥299.00&quot;, &quot;sLevelGuideText2&quot;: &quot;以上优惠仅为初步预估，不代表最终价格，规则可在帮助中心查看&quot;, &quot;sLevelJumpUrl&quot;: &quot;https://ihelp.jd.com/l/help/scene/getSceneDetail?id=322666&quot;, &quot;sLevelCode&quot;: &quot;*&quot; &#125;, &quot;vipJumpUrl&quot;: &quot;https://shopmember.m.jd.com/shopcard/?venderId=10157456&amp;shopId=10025307&amp;venderType=0&amp;channel=999&amp;returnUrl=&quot;, &quot;couponInfo&quot;: [ &#123; &quot;couponKind&quot;: 3, &quot;discount&quot;: 30, &quot;milliSecond&quot;: 0, &quot;couponId&quot;: &quot;769739425&quot;, &quot;quota&quot;: 300, &quot;addDays&quot;: 0, &quot;beginTime&quot;: &quot;2021.04.18&quot;, &quot;area&quot;: 1, &quot;userRiskLevel&quot;: 5, &quot;name&quot;: &quot;仅可购买ikbc京东自营官方旗舰店部分商品&quot;, &quot;roleIdCBC&quot;: &quot;H42xUyuopszj2fkX6mPDhA==&quot;, &quot;applicability&quot;: true, &quot;isPlusCoupon&quot;: false, &quot;batchId&quot;: 769739425, &quot;platform&quot;: 0, &quot;couponStyle&quot;: 0, &quot;discountText&quot;: &quot;以下商品可使用满300减30的优惠券&quot;, &quot;couponType&quot;: 1, &quot;timeDesc&quot;: &quot;有效期2021-04-18至2021-04-19&quot;, &quot;isOverlap&quot;: false, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.coupon.ReceiveCoupon&quot;, &quot;toUrl&quot;: &quot;mall.jd.com/index-10025307.html&quot;, &quot;roleId&quot;: 0, &quot;anotherType&quot;: 0, &quot;encryptedKey&quot;: &quot;EaWmI7TLpwo3YxEtPcMR0+sfZ3+cNdTm2XDbBLAz57s2fLq6f128KQ==&quot;, &quot;personalCoupon&quot;: false, &quot;labelTxt&quot;: &quot;店铺东券&quot;, &quot;limitType&quot;: 5, &quot;endTime&quot;: &quot;2021.04.19&quot;, &quot;isMultipleDiscount&quot;: false &#125; ], &quot;bestCouponId&quot;: [ &quot;769739425&quot; ], &quot;whiteBarInfo&quot;: &#123; &quot;marketingText&quot;: &quot;12期内息费七折&quot;, &quot;planInfos&quot;: [ &#123; &quot;planFee&quot;: &quot;0.00&quot;, &quot;rate&quot;: &quot;0.00&quot;, &quot;mainTitle&quot;: &quot;不分期&quot;, &quot;secondTitle&quot;: &quot;先用后付，无服务费&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.WarePayBillInfo&quot;, &quot;plan&quot;: 1, &quot;laterPay&quot;: &quot;329.00&quot;, &quot;isMaxdiscount&quot;: true &#125; ], &quot;secLevelTitle&quot;: &quot;白条支付&quot;, &quot;btUser&quot;: true, &quot;secLevelBtnName&quot;: &quot;立即打白条&quot;, &quot;planId&quot;: 1, &quot;login&quot;: true, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.WhiteBarInfo&quot;, &quot;ava&quot;: true, &quot;marketingTitle&quot;: &quot;白条&quot;, &quot;url&quot;: &quot;https://bt.jd.com/v3/mobile/rGuide_initGuideMobile?source=JD_zw&amp;channelName=SXY&amp;secondCode=&amp;recommend=&quot; &#125;, &quot;vipJumpType&quot;: 2, &quot;iconCode&quot;: &quot;detail_var_045&quot;, &quot;couponIconText&quot;: &quot;领券&quot;, &quot;firstLevelGuideInfo&quot;: &#123; &quot;saveMoney&quot;: &quot;¥299.00&quot;, &quot;fLevelCode&quot;: &quot;detail_047&quot;, &quot;fLevelGuideText&quot;: &quot;使用优惠预估价¥299.00 &quot; &#125;, &quot;businessEnum&quot;: &quot;1&quot;, &quot;promotion&quot;: &#123; &quot;gift&quot;: [ ], &quot;isTwoLine&quot;: true, &quot;plusMark&quot;: &quot;tab_var_124&quot;, &quot;activity&quot;: [ &#123; &quot;value&quot;: &quot;购买不超过10件时享受单件价￥329，超出数量以结算价为准，仅限购买一次&quot;, &quot;text&quot;: &quot;限购&quot;, &quot;skuId&quot;: &quot;&quot;, &quot;proSortNum&quot;: 100, &quot;link&quot;: &quot;&quot;, &quot;proId&quot;: &quot;106050715929&quot;, &quot;promoId&quot;: &quot;&quot; &#125; ], &quot;screenLiPurMap&quot;: &#123; &#125;, &quot;tips&quot;: [ ], &quot;plusDiscountMap&quot;: &#123; &#125;, &quot;activityTypes&quot;: [ &quot;3&quot; ], &quot;isBargain&quot;: false, &quot;tip&quot;: &quot;&quot;, &quot;attach&quot;: [ ], &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.promotion.PromotionInfo&quot;, &quot;canReturnHaggleInfo&quot;: false, &quot;normalMark&quot;: &quot;tab_var_071&quot;, &quot;limitBuyInfo&quot;: &#123; &quot;limitNum&quot;: &quot;0&quot;, &quot;noSaleFlag&quot;: &quot;0&quot; &#125;, &quot;prompt&quot;: &quot;&quot; &#125;, &quot;hasFinanceCoupon&quot;: false &#125; &#125;, &quot;mId&quot;: &quot;bpAggrePromo&quot;, &quot;sortId&quot;: 51 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_442&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;white_line_L&quot; &#125;, &quot;data&quot;: &#123; &quot;actions&quot;: &#123; &quot;bizActs&quot;: [ &#123; &quot;jumpType&quot;: 2, &quot;truthBigSale&quot;: false, &quot;bizKey&quot;: &quot;shopactivity&quot;, &quot;icon&quot;: &quot;https://img10.360buyimg.com/imgzone/jfs/t1/150379/26/9263/4485/5fc5fd0aEcf116246/9eba0735eaeb4de3.png&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.activity.Activity&quot;, &quot;mustLogin&quot;: false, &quot;url&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jshopMain\&quot;,\&quot;venderId\&quot;:\&quot;10157456\&quot;,\&quot;jumpTab\&quot;:\&quot;secKill\&quot;&#125;&quot;, &quot;desc&quot;: &quot;店铺秒杀活动，限时抢！&quot; &#125;, &#123; &quot;jumpType&quot;: 1, &quot;truthBigSale&quot;: false, &quot;bizKey&quot;: &quot;savingCard&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/babel/jfs/t1/147802/19/20082/1383/5fe2d919Ea9355610/72d742627d3991c0.png&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.activity.Activity&quot;, &quot;mustLogin&quot;: false, &quot;url&quot;: &quot;https://smc.m.jd.com/monthIndex?channel=productdetailApp&quot;, &quot;desc&quot;: &quot;【限时福利】开卡领50元全品类券&quot; &#125; ], &quot;bigSale&quot;: &#123; &quot;jumpType&quot;: 1, &quot;truthBigSale&quot;: false, &quot;bizKey&quot;: &quot;gjhsNew&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/17024/4/15356/2143/5caeb5efEf90f64a9/f4205d7302e4433c.png&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.activity.Activity&quot;, &quot;mustLogin&quot;: false, &quot;url&quot;: &quot;https://huishou.m.jd.com/category?id=7&amp;source=3&amp;skuId=10025802445921&amp;cid1=670&amp;cid2=686&amp;cid3=689&amp;province=1&amp;city=2812&amp;town=0&amp;longitude=116.614013&amp;latitude=40.138196&amp;hx=0&amp;IsSXQJ=0&amp;IsYZS=0&amp;menu=0&amp;commodityType=1&amp;activityType=1&quot;, &quot;desc&quot;: &quot;高价回收，极速到账&quot; &#125; &#125; &#125;, &quot;mId&quot;: &quot;bpActivity&quot;, &quot;sortId&quot;: 55 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_309&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &quot;selected&quot;: &quot;&quot; &#125;, &quot;mId&quot;: &quot;bpChoice&quot;, &quot;refId&quot;: &quot;eChoice_0000000018&quot;, &quot;sortId&quot;: 64 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_253&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;white_line_L&quot; &#125;, &quot;data&quot;: &#123; &quot;imgForAddr&quot;: &quot;https://m.360buyimg.com/babel/jfs/t1/130756/9/11972/4289/5f8674d3Eabfebbef/bb964241bd789a72.png&quot;, &quot;defaultAddr&quot;: &#123; &quot;townName&quot;: &quot;&quot;, &quot;cityName&quot;: &quot;顺义区&quot;, &quot;countyId&quot;: &quot;51139&quot;, &quot;cityId&quot;: &quot;2812&quot;, &quot;townId&quot;: &quot;0&quot;, &quot;provinceName&quot;: &quot;北京&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.vo.AddressInfo&quot;, &quot;provinceId&quot;: &quot;1&quot;, &quot;countyName&quot;: &quot;南法信地区&quot; &#125;, &quot;stock&quot;: &quot;现货，23:10前下单，预计明天(04月19日)送达&quot;, &quot;jdService&quot;: true, &quot;basic&quot;: &#123; &quot;title&quot;: &quot;服务说明&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.BasicServiceInfo&quot;, &quot;iconList&quot;: [ &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t3172/266/1698067915/1634/64a0c40e/57d25fcfNd9c62bb7.png&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;选择京准达服务，可指定精确时间点收货；若京东责任超时，即时赔付&quot;, &quot;text&quot;: &quot;京准达&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://img30.360buyimg.com/mobilecms/g15/M01/01/02/rBEhWlLL0iUIAAAAAAAGR2aPiNQAAHq0gJ8jrQAAAZf583.jpg&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;上午下单，下午送达&quot;, &quot;text&quot;: &quot;211限时达&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/babel/jfs/t1/116316/15/7402/1031/5ec22ca4E713f857c/dd49784b20933cf5.png&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;京东物流为该商品提供预约送货服务&quot;, &quot;text&quot;: &quot;预约送货&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/babel/jfs/t1/108073/34/18517/1071/5ec22ce0E11a3b1c5/f8ffea5f4cafa0f9.png&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;如果收件人收货时发现部分货物存在缺少配件、物流损等情形，京东物流提供订单半收服务&quot;, &quot;text&quot;: &quot;部分收货&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/babel/jfs/t1/115738/37/12143/1066/5f0c7d11E4faee520/de3879572e2b2014.png&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;京东快递为您提供送货上门服务&quot;, &quot;text&quot;: &quot;送货上门&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://img30.360buyimg.com/mobilecms/g15/M0A/01/02/rBEhWlLL0P8IAAAAAAAETM3054QAAHqzwGz1eAAAARk092.jpg&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;我们提供多种自提服务，包括京东自提点、自助提货柜、京东校园派、京东星配站、京东便民站等服务&quot;, &quot;text&quot;: &quot;自提&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125; ] &#125;, &quot;jdServiceIcon&quot;: &quot;京准达 • 211限时达 • 预约送货 • 部分收货 • 送货上门 • 自提&quot;, &quot;imgType&quot;: 2 &#125;, &quot;mId&quot;: &quot;bpAddr&quot;, &quot;refId&quot;: &quot;eAddr_0000000008&quot;, &quot;sortId&quot;: 69 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_231&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#fcfcfc&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;servIconRelation&quot;: [ &#123; &quot;iconValue&quot;: &quot;detail_006&quot;, &quot;iconType&quot;: &quot;exclamation&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServIconRelation&quot; &#125;, &#123; &quot;iconValue&quot;: &quot;detail_005&quot;, &quot;iconType&quot;: &quot;right&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServIconRelation&quot; &#125; ], &quot;serviceInfo&quot;: &#123; &quot;basic&quot;: &#123; &quot;title&quot;: &quot;服务说明&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.BasicServiceInfo&quot;, &quot;iconList&quot;: [ &#123; &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1918/274/1086575987/1970/bc766f2d/5680f4b3N24b48659.png&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;支持7天无理由退货&quot;, &quot;text&quot;: &quot;7天无理由退货&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;sortId&quot;: 7, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://img30.360buyimg.com/mobilecms/g15/M0A/10/0C/rBEhWFMxH-oIAAAAAAAEs-McyP4AAKp8AP_4HYAAATL229.jpg&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;所选地址自营订单满99元免基础运费(20kg内)，超出重量加收1元/kg续重运费。&quot;, &quot;text&quot;: &quot;99元免基础运费&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125;, &#123; &quot;sortId&quot;: 6, &quot;iconType&quot;: &quot;right&quot;, &quot;imageUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t2176/234/1856411458/2044/91ae040b/5680f585N70da96a6.png&quot;, &quot;jichu&quot;: false, &quot;show&quot;: true, &quot;tip&quot;: &quot;由京东发货并提供售后服务&quot;, &quot;text&quot;: &quot;京东发货&amp;售后&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServerIcon&quot; &#125; ] &#125;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.icon.ServiceInfo&quot; &#125;, &quot;isIcon&quot;: true &#125;, &quot;mId&quot;: &quot;bpServe&quot;, &quot;refId&quot;: &quot;eServe_0000000038&quot;, &quot;sortId&quot;: 75 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_496&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &quot;unitedRank&quot;: &#123; &quot;jumpType&quot;: &quot;OPENAPP&quot;, &quot;arrowPic&quot;: &quot;https://m.360buyimg.com/rank/jfs/t1/150553/18/8825/500/5fc73568E201b7eb9/ff5562da1388602f.png&quot;, &quot;icon&quot;: &quot;https://m.360buyimg.com/rank/jfs/t1/136248/38/18023/4527/5fc7355dEb30639b7/212447ae34dc9d99.png&quot;, &quot;floorBgImage&quot;: &quot;https://m.360buyimg.com/rank/jfs/t1/137017/16/18232/13551/5fc73563E45a80b1d/e1492c57e773ec56.png&quot;, &quot;id&quot;: &quot;36319&quot;, &quot;floorPosition&quot;: &quot;0&quot;, &quot;type&quot;: &quot;2&quot;, &quot;url&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;transparentenable\&quot;:true,\&quot;appname\&quot;:\&quot;JDReactRankingList\&quot;,\&quot;param\&quot;:&#123;\&quot;detailPageType\&quot;:\&quot;5\&quot;,\&quot;rankType\&quot;:\&quot;10\&quot;,\&quot;contentId\&quot;:\&quot;36319\&quot;,\&quot;fromSkuId\&quot;:\&quot;10025802445921\&quot;&#125;,\&quot;fromName\&quot;:\&quot;Productdetail\&quot;,\&quot;modulename\&quot;:\&quot;JDReactRankingList\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;fontColor&quot;: &quot;#262626&quot;, &quot;desc&quot;: &quot;樱桃轴键盘热卖榜第2名&quot; &#125; &#125;, &quot;mId&quot;: &quot;bpUnionRank&quot;, &quot;sortId&quot;: 81 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_302&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &#125;, &quot;mId&quot;: &quot;bpEvaluate&quot;, &quot;refId&quot;: &quot;eEvaluate_0000000007&quot;, &quot;sortId&quot;: 83 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_517&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;line&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpAsk&quot;, &quot;refId&quot;: &quot;eAsk_0000000044&quot;, &quot;sortId&quot;: 84 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_331&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &quot;track&quot;: &#123; &quot;floorId&quot;: &quot;flo_331&quot;, &quot;shopId&quot;: &quot;&quot;, &quot;skuId&quot;: &quot;&quot; &#125;, &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpShop&quot;, &quot;refId&quot;: &quot;eShop_0000000012&quot;, &quot;sortId&quot;: 88 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_526&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &#125;, &quot;mId&quot;: &quot;bpSearch&quot;, &quot;sortId&quot;: 91 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_478&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &quot;newRecommend&quot;: &quot;&quot; &#125;, &quot;mId&quot;: &quot;bpRelRecom&quot;, &quot;sortId&quot;: 93 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_307&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;grey_strip&quot; &#125;, &quot;data&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot; &#125;, &quot;mId&quot;: &quot;bpDetails&quot;, &quot;refId&quot;: &quot;eDetails_0000000000&quot;, &quot;sortId&quot;: 94 &#125;, &#123; &quot;bId&quot;: &quot;eCustom_flo_201&quot;, &quot;cf&quot;: &#123; &quot;bgc&quot;: &quot;#ffffff&quot;, &quot;spl&quot;: &quot;empty&quot; &#125;, &quot;data&quot;: &#123; &quot;topOn&quot;: false, &quot;colorSizeInfo&quot;: &#123; &quot;colorSizeTips&quot;: &quot;#与其他已选项无法组成可售商品，请重选&quot;, &quot;colorSize&quot;: [ &#123; &quot;buttons&quot;: [ &#123; &quot;no&quot;: &quot;0&quot;, &quot;skuList&quot;: [ &quot;10025802445920&quot;, &quot;10025802445921&quot;, &quot;10026200117747&quot; ], &quot;text&quot;: &quot;C87有线87键&quot; &#125;, &#123; &quot;no&quot;: &quot;1&quot;, &quot;skuList&quot;: [ &quot;10025802445924&quot;, &quot;10025802445925&quot;, &quot;10026200117749&quot; ], &quot;text&quot;: &quot;W200无线2.4G87键&quot; &#125;, &#123; &quot;no&quot;: &quot;2&quot;, &quot;skuList&quot;: [ &quot;10025802445922&quot;, &quot;10025802445923&quot;, &quot;10026200117748&quot; ], &quot;text&quot;: &quot;C104有线104键&quot; &#125;, &#123; &quot;no&quot;: &quot;3&quot;, &quot;skuList&quot;: [ &quot;10025869969099&quot;, &quot;10025869969100&quot;, &quot;10026200117750&quot; ], &quot;text&quot;: &quot;W210无线2.4G108键&quot; &#125;, &#123; &quot;no&quot;: &quot;3&quot;, &quot;skuList&quot;: [ &quot;10027783753070&quot;, &quot;10027783753071&quot;, &quot;10027783753072&quot; ], &quot;text&quot;: &quot;W200有线+蓝牙5.0 87键&quot; &#125;, &#123; &quot;no&quot;: &quot;4&quot;, &quot;skuList&quot;: [ &quot;10027783753073&quot;, &quot;10027783753074&quot;, &quot;10027783753075&quot; ], &quot;text&quot;: &quot;W210有线+蓝牙5.0 108键&quot; &#125; ], &quot;title&quot;: &quot;颜色&quot; &#125;, &#123; &quot;buttons&quot;: [ &#123; &quot;no&quot;: &quot;1&quot;, &quot;skuList&quot;: [ &quot;10025802445921&quot;, &quot;10025802445923&quot;, &quot;10025802445925&quot;, &quot;10025869969100&quot;, &quot;10027783753070&quot;, &quot;10027783753073&quot; ], &quot;text&quot;: &quot;红轴&quot; &#125;, &#123; &quot;no&quot;: &quot;2&quot;, &quot;skuList&quot;: [ &quot;10025802445920&quot;, &quot;10025802445922&quot;, &quot;10025802445924&quot;, &quot;10025869969099&quot;, &quot;10027783753071&quot;, &quot;10027783753074&quot; ], &quot;text&quot;: &quot;青轴&quot; &#125;, &#123; &quot;no&quot;: &quot;3&quot;, &quot;skuList&quot;: [ &quot;10026200117747&quot;, &quot;10026200117748&quot;, &quot;10026200117749&quot;, &quot;10026200117750&quot;, &quot;10027783753072&quot;, &quot;10027783753075&quot; ], &quot;text&quot;: &quot;茶轴&quot; &#125; ], &quot;title&quot;: &quot;版本&quot; &#125; ] &#125;, &quot;isOpenCar&quot;: true, &quot;promotionPoint&quot;: &#123; &quot;promotionTagPoint&quot;: &quot;0&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.promotion.ProBuryingPoint&quot;, &quot;promotionSkinPoint&quot;: &quot;0&quot; &#125;, &quot;supportSale&quot;: true, &quot;abTest800&quot;: true, &quot;yuyueInfo&quot;: &#123; &quot;showDraw&quot;: false, &quot;plusType&quot;: 0, &quot;isYuYue&quot;: false, &quot;mad&quot;: false, &quot;yuYue&quot;: false, &quot;yuyueNum&quot;: 0, &quot;isbuyTime&quot;: false, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.appoint.WareAppointInfo&quot; &#125;, &quot;isOpenNode&quot;: true, &quot;rankName&quot;: &quot;樱桃轴键盘热卖榜第2名&quot;, &quot;property&quot;: &#123; &quot;isJzfp&quot;: false, &quot;newReceiveCoupon&quot;: true, &quot;suitABTest&quot;: 0, &quot;buyMaxNum&quot;: 200, &quot;isJnbtNewText&quot;: false, &quot;plus20Flag&quot;: false, &quot;easyBuy&quot;: true, &quot;isFxyl&quot;: false, &quot;isRegisterUser&quot;: false, &quot;isFlimPrint&quot;: &quot;&quot;, &quot;isShowShopNameB&quot;: false, &quot;dpgRevisionFlag&quot;: true, &quot;fromType&quot;: 0, &quot;showEmptyPrice&quot;: false, &quot;threeSuperFlag&quot;: false, &quot;noStockOrder&quot;: false, &quot;virtualCardUrl&quot;: &quot;https://gamerecg.m.jd.com?skuId=10025802445921&amp;chargeType=689&amp;skuName=ikbc87机械键盘游戏樱桃cherry轴电脑外设笔记本有线数字办公自营C104/W200无线可选 C87有线87键 红轴&amp;skuPrice=329.00&quot;, &quot;isfans&quot;: true, &quot;batchReceiveCoupon&quot;: true, &quot;addAndSubToast&quot;: &#123; &quot;lowestToastText&quot;: &quot;最少购买1件哦！&quot; &#125;, &quot;isEasyBuyPrice&quot;: true, &quot;isRx&quot;: false, &quot;isShowBarrage&quot;: true, &quot;stockNotice&quot;: false, &quot;opForIos&quot;: true, &quot;isCollect&quot;: false, &quot;recTabEnable&quot;: true, &quot;isJx&quot;: false, &quot;isOTC&quot;: &quot;0&quot;, &quot;cartFlag&quot;: true, &quot;wareImageTest&quot;: &quot;&quot;, &quot;brandId&quot;: &quot;107109&quot;, &quot;isOP&quot;: false, &quot;isPop&quot;: true, &quot;androidImageSwitch&quot;: true, &quot;shareUrl&quot;: &quot;https://item.m.jd.com/product/10025802445921.html?wxa_abtest=b&quot;, &quot;chatUrl&quot;: &quot;https://m.360buyimg.com/n3/jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg.webp&quot;, &quot;evaluateTabEnable&quot;: true, &quot;category&quot;: &quot;670;686;689&quot;, &quot;isRegularPrice&quot;: true, &quot;isEncrypt&quot;: true &#125;, &quot;otherUseBannerInfo&quot;: &#123; &quot;bannerText&quot;: &quot;使用优惠预估价&quot;, &quot;koDegrade&quot;: false, &quot;bannerPrice&quot;: &quot;¥299.00&quot;, &quot;businessEnum&quot;: &quot;1&quot;, &quot;flashDegrade&quot;: false &#125;, &quot;leVieuxFusil&quot;: false, &quot;newStyle&quot;: false, &quot;yanBaoInfo&quot;: &#123; &quot;yanBaoUrl&quot;: &quot;https://baozhang.jd.com/static/serviceDesc&quot;, &quot;yanBaoTitle&quot;: &quot;京东保障服务&quot;, &quot;yanBaoDetailUrl&quot;: &quot;https://b.jr.jd.com/service/serveIntroduce/#/introduce3?mainSkuId=10025802445921&amp;brandId=107109&amp;thirdCategoryId=689&amp;bindSkuId=&quot;, &quot;yanBaoList&quot;: [ &#123; &quot;imgurl&quot;: &quot;https://img30.360buyimg.com/fuwu/jfs/t2026/333/1859328310/1230/dfaee170/567cb033Nae7c82e8.png&quot;, &quot;sortName&quot;: &quot;只换不修&quot;, &quot;productId&quot;: 10025802445921, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyServiceItem&quot;, &quot;products&quot;: [ &#123; &quot;sortName&quot;: &quot;2年免费换新&quot;, &quot;price&quot;: &quot;25.00&quot;, &quot;platformPid&quot;: 58749975324, &quot;tip&quot;: &quot;三包性能故障免费换新&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125;, &#123; &quot;sortName&quot;: &quot;3年免费换新&quot;, &quot;price&quot;: &quot;29.00&quot;, &quot;platformPid&quot;: 58753135078, &quot;tip&quot;: &quot;三包性能故障免费换新&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125; ] &#125;, &#123; &quot;imgurl&quot;: &quot;https://img30.360buyimg.com/fuwu/jfs/t2104/251/1133793532/1074/f4dd7f21/567caff5Nc4185618.png&quot;, &quot;sortName&quot;: &quot;促销特惠&quot;, &quot;productId&quot;: 10025802445921, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyServiceItem&quot;, &quot;products&quot;: [ &#123; &quot;sortName&quot;: &quot;1年升级换新&quot;, &quot;price&quot;: &quot;25.00&quot;, &quot;platformPid&quot;: 65897795322, &quot;discount&quot;: &quot;5折用一年&quot;, &quot;tip&quot;: &quot;无故障补贴50%换新型号&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125;, &#123; &quot;sortName&quot;: &quot;3年全保修&quot;, &quot;price&quot;: &quot;25.00&quot;, &quot;platformPid&quot;: 43363095187, &quot;discount&quot;: &quot;免费上门取送&quot;, &quot;tip&quot;: &quot;三包+摔碰挤压意外故障全保修&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125; ] &#125;, &#123; &quot;imgurl&quot;: &quot;https://img30.360buyimg.com/fuwu/jfs/t1/31362/26/15563/1119/5cc2c0eaE0fd54d15/70e8f4e7f5d10769.png&quot;, &quot;sortName&quot;: &quot;全保换新&quot;, &quot;productId&quot;: 10025802445921, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyServiceItem&quot;, &quot;products&quot;: [ &#123; &quot;sortName&quot;: &quot;1年全保换新&quot;, &quot;price&quot;: &quot;19.00&quot;, &quot;platformPid&quot;: 57700569388, &quot;tip&quot;: &quot;三包故障免费换，意外故障2折换&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125;, &#123; &quot;sortName&quot;: &quot;2年全保换新&quot;, &quot;price&quot;: &quot;29.00&quot;, &quot;platformPid&quot;: 57724963046, &quot;discount&quot;: &quot;线上一键报修&quot;, &quot;tip&quot;: &quot;三包故障免费换，意外故障2折换&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125;, &#123; &quot;sortName&quot;: &quot;3年全保换新&quot;, &quot;price&quot;: &quot;49.00&quot;, &quot;platformPid&quot;: 57729212657, &quot;tip&quot;: &quot;三包故障免费换，意外故障2折换&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.extendWarranty.WareExtendWarrantyInfo$WarrantyProduct&quot; &#125; ] &#125; ] &#125;, &quot;priceLabel&quot;: &quot;¥&quot;, &quot;abTestInfo&quot;: &#123; &quot;shopCardTypeAb&quot;: true, &quot;shareShield&quot;: false, &quot;shopPromotionAB&quot;: &quot;B&quot;, &quot;darkModel&quot;: false, &quot;noBotmShop&quot;: false, &quot;hwShare&quot;: true, &quot;evaluateAB&quot;: true, &quot;skuSource&quot;: 1, &quot;shopABTest&quot;: &quot;a&quot;, &quot;recommendYhTag&quot;: true, &quot;collectABInfo&quot;: &#123; &quot;titleABTest&quot;: true, &quot;bottom4ABTest&quot;: true, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.abTest.CollectABInfo&quot;, &quot;bottom3ABTest&quot;: true &#125;, &quot;rankYhTag&quot;: true, &quot;attentionAB&quot;: &quot;A&quot;, &quot;hasChangeButton&quot;: true, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.abTest.ABTestInfo&quot;, &quot;qaUpAb&quot;: false, &quot;toABTest&quot;: true, &quot;changeButtonIsRed&quot;: true, &quot;feedBackAB&quot;: true, &quot;shareM&quot;: &quot;a&quot;, &quot;specialSelectAB&quot;: true, &quot;easyDelAB&quot;: true, &quot;recommendPopup&quot;: false, &quot;askMedicineInfoAb&quot;: false, &quot;showBuyLayer&quot;: true, &quot;newUser&quot;: false, &quot;hospitalAB&quot;: &quot;A&quot;, &quot;shopExtendsAb&quot;: true, &quot;newuserFreeAb&quot;: false, &quot;packABTest&quot;: 1, &quot;shopIntensifyAB&quot;: false &#125;, &quot;shopInfo&quot;: &#123; &quot;shopTag&quot;: &#123; &quot;tagIcon&quot;: &quot;tab_054&quot;, &quot;shopMark&quot;: &quot;fcs&quot;, &quot;priority&quot;: 5, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopTag&quot; &#125;, &quot;customerService&quot;: &#123; &quot;hasChat&quot;: true, &quot;hasJimi&quot;: false, &quot;allGoodJumpUrl&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jshopMain\&quot;,\&quot;shopId\&quot;:\&quot;10025307\&quot;,\&quot;venderId\&quot;:\&quot;10157456\&quot;,\&quot;jumpTab\&quot;:\&quot;allProduct\&quot;&#125;&quot;, &quot;mLink&quot;: &quot;https://m.jd.com/product/10025802445921.html&quot;, &quot;online&quot;: true, &quot;inShopLookJumpUrl&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jshopMain\&quot;,\&quot;shopId\&quot;:\&quot;10025307\&quot;,\&quot;venderId\&quot;:\&quot;10157456\&quot;,\&quot;jumpTab\&quot;:\&quot;home\&quot;&#125;&quot;, &quot;chatInfo&quot;: &#123; &quot;allGoodIcon&quot;: &quot;detail_030&quot;, &quot;shopText&quot;: &quot;联系客服&quot;, &quot;shopIcon&quot;: &quot;detail_044&quot;, &quot;bottomText&quot;: &quot;客服&quot;, &quot;isBubble&quot;: false, &quot;isBubbleHV&quot;: false, &quot;bottomIcon&quot;: &quot;detail_044&quot;, &quot;allGoodText&quot;: &quot;精选商品&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.chat.ChatInfo&quot; &#125; &#125;, &quot;shop&quot;: &#123; &quot;source&quot;: 1, &quot;score&quot;: 0.0, &quot;logo&quot;: &quot;https://img13.360buyimg.com/cms/jfs/t1/145847/12/4815/3682/5f2d2603E2d524cbe/cfa5de167e73ca69.jpg&quot;, &quot;showSignboardUrl&quot;: false, &quot;shopId&quot;: 10025307, &quot;promotionNum&quot;: 0, &quot;telephone&quot;: &quot;&quot;, &quot;nameB&quot;: &quot;ikbc京东自营官方旗舰店&quot;, &quot;goodShop&quot;: 0, &quot;globalGoodShop&quot;: 0, &quot;hotcates&quot;: [ &#123; &quot;categoryType&quot;: 1, &quot;cardPlaceId&quot;: 240171, &quot;imgPath&quot;: &quot;https://img11.360buyimg.com/cms/jfs/t1/138462/10/18471/80329/5fd98518E64a3257c/28a5a717874a8bf0.jpg&quot;, &quot;cardId&quot;: &quot;35337&quot;, &quot;commendSkuId&quot;: 10024939086446, &quot;cname&quot;: &quot;创意系列&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopHotCate&quot;, &quot;cid&quot;: 15707945 &#125;, &#123; &quot;categoryType&quot;: 1, &quot;cardPlaceId&quot;: 240172, &quot;imgPath&quot;: &quot;https://img11.360buyimg.com/cms/jfs/t1/154333/28/12014/60255/5fe943fcEa5640d70/be69205851ecdfda.jpg&quot;, &quot;cardId&quot;: &quot;35337&quot;, &quot;commendSkuId&quot;: 10024595561411, &quot;cname&quot;: &quot;复古系列&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopHotCate&quot;, &quot;cid&quot;: 15903269 &#125;, &#123; &quot;categoryType&quot;: 1, &quot;cardPlaceId&quot;: 240173, &quot;imgPath&quot;: &quot;https://img11.360buyimg.com/cms/jfs/t1/162197/29/1450/185454/5ff6cbc0Ec4b3e6b0/bde3182e869c1cdb.jpg&quot;, &quot;cardId&quot;: &quot;35337&quot;, &quot;commendSkuId&quot;: 10025869717232, &quot;cname&quot;: &quot;经典系列&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopHotCate&quot;, &quot;cid&quot;: 15673239 &#125;, &#123; &quot;categoryType&quot;: 1, &quot;cardPlaceId&quot;: 240174, &quot;imgPath&quot;: &quot;https://img11.360buyimg.com/cms/jfs/t1/162139/22/7130/225667/6030c498E808d1627/63622cc0c90166bb.jpg&quot;, &quot;cardId&quot;: &quot;35337&quot;, &quot;commendSkuId&quot;: 10026660836346, &quot;cname&quot;: &quot;高达系列&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopHotCate&quot;, &quot;cid&quot;: 15903276 &#125; ], &quot;name&quot;: &quot;ikbc京东自营官方旗舰店&quot;, &quot;cateGoodShop&quot;: 0, &quot;serverText&quot;: &quot;服务&quot;, &quot;newNum&quot;: 0, &quot;venderType&quot;: &quot;1&quot;, &quot;hotcatestr&quot;: &quot;ikbc专注键盘创新与研发自营官方旗舰店&quot;, &quot;followCount&quot;: 183676, &quot;isSquareLogo&quot;: true, &quot;giftIcon&quot;: &quot;&quot;, &quot;hasCoupon&quot;: false, &quot;followText&quot;: &quot;关注人数&quot;, &quot;skuCntText&quot;: &quot;全部商品&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.SkuShopInfo&quot;, &quot;brief&quot;: &quot;ikbc专注键盘创新与研发自营官方旗舰店&quot;, &quot;shopImage&quot;: &quot;https://img14.360buyimg.com/cms/jfs/t1/154441/23/19899/213947/603770efEa6d82652/4e94c811ff022e6b.jpg&quot;, &quot;cardType&quot;: 3, &quot;skuText&quot;: &quot;商品&quot;, &quot;logisticsText&quot;: &quot;物流&quot;, &quot;promotions&quot;: [ &#123; &quot;name&quot;: &quot;限时秒杀&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopPromotion&quot;, &quot;url&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jshopMain\&quot;,\&quot;jumpTab\&quot;:\&quot;activity\&quot;,\&quot;shopId\&quot;:\&quot;10025307\&quot;,\&quot;venderId\&quot;:\&quot;10157456\&quot;,\&quot;shopName\&quot;:\&quot;ikbc京东自营官方旗舰店\&quot;,\&quot;logoUrl\&quot;:\&quot;https://img13.360buyimg.com/cms/jfs/t1/145847/12/4815/3682/5f2d2603E2d524cbe/cfa5de167e73ca69.jpg\&quot;,\&quot;signboardUrl\&quot;:\&quot;https://img14.360buyimg.com/cms/jfs/t1/40522/14/9748/77239/5d3170e2E4780da55/fb1f14f689625637.jpg\&quot;,\&quot;activityTabInfo\&quot;:&#123;\&quot;sort\&quot;:\&quot;secKillPage\&quot;&#125;,\&quot;source\&quot;:&#123;\&quot;moduleId\&quot;:\&quot;app-productDetail\&quot;,\&quot;entrance\&quot;:\&quot;商详卡片\&quot;&#125;&#125;&quot; &#125;, &#123; &quot;name&quot;: &quot;券满300减50&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopPromotion&quot;, &quot;url&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jshopMain\&quot;,\&quot;jumpTab\&quot;:\&quot;activity\&quot;,\&quot;shopId\&quot;:\&quot;10025307\&quot;,\&quot;venderId\&quot;:\&quot;10157456\&quot;,\&quot;shopName\&quot;:\&quot;ikbc京东自营官方旗舰店\&quot;,\&quot;logoUrl\&quot;:\&quot;https://img13.360buyimg.com/cms/jfs/t1/145847/12/4815/3682/5f2d2603E2d524cbe/cfa5de167e73ca69.jpg\&quot;,\&quot;signboardUrl\&quot;:\&quot;https://img14.360buyimg.com/cms/jfs/t1/40522/14/9748/77239/5d3170e2E4780da55/fb1f14f689625637.jpg\&quot;,\&quot;activityTabInfo\&quot;:&#123;\&quot;sort\&quot;:\&quot;couponInfos\&quot;&#125;,\&quot;source\&quot;:&#123;\&quot;moduleId\&quot;:\&quot;app-productDetail\&quot;,\&quot;entrance\&quot;:\&quot;商详卡片\&quot;&#125;&#125;&quot; &#125;, &#123; &quot;name&quot;: &quot;赠品促销&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.shop.ShopPromotion&quot;, &quot;url&quot;: &quot;openApp.jdMobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jshopMain\&quot;,\&quot;jumpTab\&quot;:\&quot;activity\&quot;,\&quot;shopId\&quot;:\&quot;10025307\&quot;,\&quot;venderId\&quot;:\&quot;10157456\&quot;,\&quot;shopName\&quot;:\&quot;ikbc京东自营官方旗舰店\&quot;,\&quot;logoUrl\&quot;:\&quot;https://img13.360buyimg.com/cms/jfs/t1/145847/12/4815/3682/5f2d2603E2d524cbe/cfa5de167e73ca69.jpg\&quot;,\&quot;signboardUrl\&quot;:\&quot;https://img14.360buyimg.com/cms/jfs/t1/40522/14/9748/77239/5d3170e2E4780da55/fb1f14f689625637.jpg\&quot;,\&quot;activityTabInfo\&quot;:&#123;\&quot;promotionTitleId\&quot;:\&quot;104405366066\&quot;&#125;,\&quot;source\&quot;:&#123;\&quot;moduleId\&quot;:\&quot;app-productDetail\&quot;,\&quot;entrance\&quot;:\&quot;商详卡片\&quot;&#125;&#125;&quot; &#125; ], &quot;diamond&quot;: false, &quot;totalNum&quot;: 13, &quot;signboardUrl&quot;: &quot;https://img14.360buyimg.com/cms/jfs/t1/40522/14/9748/77239/5d3170e2E4780da55/fb1f14f689625637.jpg&quot;, &quot;shopStateText&quot;: &quot;店铺动态&quot;, &quot;shopActivityTotalNum&quot;: 0, &quot;squareLogo&quot;: &quot;https://img14.360buyimg.com/cms/jfs/t1/149626/6/4794/7554/5f2d2603E9f6d6fbc/74a4732bffd9f4b4.jpg&quot; &#125; &#125;, &quot;isDesCbc&quot;: true, &quot;jdMarketBrandInfo&quot;: &#123; &quot;jumpType&quot;: &quot;2&quot;, &quot;bLContentList&quot;: [ &#123; &quot;bLCateIconTitle&quot;: &quot;什么是京东超市&quot;, &quot;bLCateIconContent&quot;: &quot;京东超市是京东旗下线上线下领先的全渠道超市，经营的商品近千万款，覆盖食品、母婴、清洁、酒水、个护、宠物、玩具乐器等品类，帮助您随时随地一站式购齐生活好物，逛出美好生活。&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.brand.CjxpBLContentInfo&quot;, &quot;bLCateIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/126652/8/16750/2807/5f9be260E23b849d4/1e369775a82bcb72.png&quot; &#125;, &#123; &quot;bLCateIconTitle&quot;: &quot;京东超市的优势&quot;, &quot;bLCateIconContent&quot;: &quot;① 【买贵就赔】您在京东超市购物后，如同一商品出现降价（不包括支付方式的相关优惠），您可以提交价格保护申请，京东将依据价保政策赠送您与差额部分等值的款项、京券、或京豆。\n② 【极速送达】您在当日上午11：00前提交的现货订单（部分城市为上午10：00点前，具体以下单为准）当日送达；当日23：00前提交的现货订单，次日15：00前送达。\n③【售后无忧】您在京东超市购物后，支持破损包退换、7天无理由退货、闪电退款等售后服务。\n④【趣味互动】京东超市拥有众多的场景模块，如爆品限时抢购、大额神券、明星直播等，更有东东超市小游戏，每天京豆实物免费送，羊毛任性薅~&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.brand.CjxpBLContentInfo&quot;, &quot;bLCateIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/134059/7/13976/2948/5f9be26fEee30f6a3/5da16a28eb0e3465.png&quot; &#125; ], &quot;bLJumpImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/132332/15/14076/556/5f9be22dEf4769633/4d7c41e7866d2350.png&quot;, &quot;bLlogo&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/147061/4/13051/2613/5fa129c6Ee4a8225d/4be102de387ccd66.png&quot;, &quot;bLTitle&quot;: &quot;—至省至真—&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.brand.JDMarketBrandInfo&quot;, &quot;bLTitleColor&quot;: &quot;#FFFFFF&quot;, &quot;jumpUrl&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;ishidden\&quot;:true,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactSuperMarketPro\&quot;,\&quot;param\&quot;:&#123;\&quot;transparentenable\&quot;:true,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;sourceId\&quot;:0&#125;,\&quot;needLogin\&quot;:\&quot;0\&quot;,\&quot;modulename\&quot;:\&quot;JDReactSuperMarketPro\&quot;,\&quot;category\&quot;:\&quot;jump\&quot;&#125;&quot;, &quot;jumpEnum&quot;: &quot;1&quot;, &quot;bLBackGroundImage&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/154352/38/4110/401215/5f9be1fcE2a063e15/76fa245e425f8959.png&quot; &#125;, &quot;proPageWhiteBarInfo&quot;: &#123; &quot;pmkt&quot;: &quot;12期内息费七折&quot;, &quot;topText&quot;: &quot;白条&quot;, &quot;planInfos&quot;: [ &#123; &quot;btDefaultPlanId&quot;: 1, &quot;laterPay&quot;: &quot;329.00&quot;, &quot;planFee&quot;: &quot;0.00&quot;, &quot;rate&quot;: &quot;0.00&quot;, &quot;mainTitle&quot;: &quot;不分期&quot;, &quot;secondTitle&quot;: &quot;0服务费&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.ProPagePlanInfo&quot;, &quot;plan&quot;: 1 &#125;, &#123; &quot;btDefaultPlanId&quot;: 3, &quot;laterPay&quot;: &quot;111.50&quot;, &quot;planFee&quot;: &quot;1.84&quot;, &quot;btActivityId&quot;: &quot;4669282907120_114382&quot;, &quot;btCouponId&quot;: &quot;nothing_4669282907120&quot;, &quot;rate&quot;: &quot;0.56&quot;, &quot;mainTitle&quot;: &quot;¥111.50 x 3期&quot;, &quot;secondTitle&quot;: &quot;含服务费¥1.84/期&quot;, &quot;btCouponType&quot;: &quot;MX&quot;, &quot;cornerMarkText&quot;: &quot;折扣&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.ProPagePlanInfo&quot;, &quot;plan&quot;: 3 &#125;, &#123; &quot;btDefaultPlanId&quot;: 6, &quot;laterPay&quot;: &quot;56.69&quot;, &quot;planFee&quot;: &quot;1.84&quot;, &quot;btActivityId&quot;: &quot;4669282907120_114382&quot;, &quot;btCouponId&quot;: &quot;nothing_4669282907120&quot;, &quot;rate&quot;: &quot;0.56&quot;, &quot;mainTitle&quot;: &quot;¥56.69 x 6期&quot;, &quot;secondTitle&quot;: &quot;含服务费¥1.84/期&quot;, &quot;btCouponType&quot;: &quot;MX&quot;, &quot;cornerMarkText&quot;: &quot;折扣&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.ProPagePlanInfo&quot;, &quot;plan&quot;: 6 &#125;, &#123; &quot;btDefaultPlanId&quot;: 12, &quot;laterPay&quot;: &quot;29.22&quot;, &quot;planFee&quot;: &quot;1.84&quot;, &quot;btActivityId&quot;: &quot;4669282907120_114382&quot;, &quot;btCouponId&quot;: &quot;nothing_4669282907120&quot;, &quot;rate&quot;: &quot;0.56&quot;, &quot;mainTitle&quot;: &quot;¥29.22 x 12期&quot;, &quot;secondTitle&quot;: &quot;含服务费¥1.84/期&quot;, &quot;btCouponType&quot;: &quot;MX&quot;, &quot;cornerMarkText&quot;: &quot;折扣&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.ProPagePlanInfo&quot;, &quot;plan&quot;: 12 &#125;, &#123; &quot;btDefaultPlanId&quot;: 24, &quot;laterPay&quot;: &quot;16.30&quot;, &quot;planFee&quot;: &quot;2.63&quot;, &quot;rate&quot;: &quot;0.80&quot;, &quot;mainTitle&quot;: &quot;¥16.30 x 24期&quot;, &quot;secondTitle&quot;: &quot;含服务费¥2.63/期&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.ProPagePlanInfo&quot;, &quot;plan&quot;: 24 &#125; ], &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.whitebar.ProPageWhiteBarInfo&quot; &#125;, &quot;isOpen&quot;: true, &quot;toHandssSrengthen&quot;: &#123; &quot;toHandsPrice&quot;: &quot;¥299&quot;, &quot;buttonShow&quot;: true, &quot;selectShow&quot;: true, &quot;predictText&quot;: &quot;预估到手价&quot;, &quot;toHandsText&quot;: &quot;到手价&quot; &#125;, &quot;eventParam&quot;: &#123; &quot;sep&quot;: &quot;&#123;\&quot;area\&quot;:\&quot;1_2812_51139_0\&quot;,\&quot;sku\&quot;:[[\&quot;10025802445921\&quot;,\&quot;329.00\&quot;,\&quot;现货，23:10前下单，预计明天(04月19日)送达\&quot;,\&quot;33\&quot;,\&quot;0\&quot;]]&#125;&quot; &#125;, &quot;rankType&quot;: 10, &quot;priceInfo&quot;: &#123; &quot;saveMoney&quot;: &quot;省20元&quot;, &quot;originPrice&quot;: &quot;349.0&quot;, &quot;rangePriceFlag&quot;: false, &quot;jprice&quot;: &quot;329.00&quot; &#125;, &quot;showAttentionButton&quot;: true, &quot;attentionInfo&quot;: &#123; &quot;txt2&quot;: &quot;已收藏&quot;, &quot;txt1&quot;: &quot;收藏&quot; &#125;, &quot;searchInfo&quot;: &#123; &quot;subTitle&quot;: &quot;相关商品：&quot;, &quot;reminder&quot;: [ &quot;机械键盘&quot;, &quot;ikbc键盘&quot;, &quot;ikbc87&quot;, &quot;键盘&quot;, &quot;无线键盘&quot;, &quot;无线机械键盘&quot;, &quot;ikbc c87&quot;, &quot;ikbc w200&quot;, &quot;ikbc c104&quot;, &quot;c87&quot;, &quot;樱桃键盘&quot;, &quot;蓝牙键盘&quot;, &quot;87键机械键盘&quot; ], &quot;title&quot;: &quot;搜索&quot;, &quot;defaultReminder&quot;: &quot;ikbc&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.search.SearchDO&quot;, &quot;version&quot;: &quot;1.0&quot; &#125;, &quot;weightInfo&quot;: &#123; &quot;title&quot;: &quot;重量&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.stock.WeightFareInfo$WeightInfo&quot;, &quot;content&quot;: &quot;1.7kg&quot; &#125;, &quot;buttonInfo&quot;: &#123; &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.cart.ButtonInfo&quot;, &quot;main&quot;: &#123; &quot;name&quot;: &quot;立即购买&quot;, &quot;source&quot;: 0, &quot;bgColor&quot;: &quot;#FFA600,#FFB000,#FFBC00;#E59500,#E59B00,#E6A800;#bfbfbf,#bfbfbf,#bfbfbf&quot;, &quot;type&quot;: 1, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.cart.Button&quot;, &quot;textColor&quot;: &quot;#ffffffff&quot; &#125;, &quot;second&quot;: &#123; &quot;name&quot;: &quot;加入购物车&quot;, &quot;source&quot;: 0, &quot;bgColor&quot;: &quot;#F10000,#FF2000,#FF4F18;#D80000,#E51C00,#E54615;#bfbfbf,#bfbfbf,#bfbfbf&quot;, &quot;type&quot;: 0, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.cart.Button&quot;, &quot;textColor&quot;: &quot;#ffffffff&quot; &#125; &#125;, &quot;bottomButtonInfo&quot;: &#123; &quot;leftButtonInfo&quot;: &#123; &quot;buttonText&quot;: &quot;加入购物车&quot;, &quot;buttonNormalColor&quot;: &quot;#F10000,#FF2000,#FF4F18&quot;, &quot;buttonEnable&quot;: true, &quot;buttonBusiness&quot;: &quot;businessCommonGoods&quot;, &quot;buttonHightColor&quot;: &quot;#D80000,#E51C00,#E54615&quot;, &quot;buttonTextColor&quot;: &quot;#ffffffff&quot;, &quot;buttonDisableColor&quot;: &quot;#bfbfbf,#bfbfbf,#bfbfbf&quot;, &quot;buttonEvent&quot;: 1, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.bottombutton.vo.ButtonVo&quot;, &quot;buttonPriority&quot;: 240, &quot;buttonNeedLogin&quot;: false &#125;, &quot;rightButtonInfo&quot;: &#123; &quot;buttonText&quot;: &quot;领券购买&quot;, &quot;buttonNormalColor&quot;: &quot;#FFA600,#FFB000,#FFBC00&quot;, &quot;buttonEnable&quot;: true, &quot;buttonBusiness&quot;: &quot;businessCommonGoods&quot;, &quot;buttonHightColor&quot;: &quot;#E59500,#E59B00,#E6A800&quot;, &quot;buttonTextColor&quot;: &quot;#ffffffff&quot;, &quot;buttonSubText&quot;: &quot;到手价¥299&quot;, &quot;buttonDisableColor&quot;: &quot;#bfbfbf,#bfbfbf,#bfbfbf&quot;, &quot;buttonEvent&quot;: 2, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.bottombutton.vo.ButtonVo&quot;, &quot;buttonPriority&quot;: 240, &quot;buttonNeedLogin&quot;: false &#125;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.bottombutton.vo.BottomButtonInfoVo&quot; &#125;, &quot;pointInfo&quot;: &#123; &quot;isShowAr&quot;: false, &quot;maxSales&quot;: &quot;1&quot; &#125;, &quot;giftShopping&quot;: &#123; &quot;buttons&quot;: [ &#123; &quot;xiaoITips&quot;: &quot;分享给TA，先送后付&quot;, &quot;buttonText&quot;: &quot;分享送礼&quot;, &quot;buttonJumpType&quot;: &quot;1&quot;, &quot;xcxId&quot;: &quot;gh_279e710a5149&quot;, &quot;buttonColor&quot;: &quot;#FFA700,#FFB100,#FFBC00&quot;, &quot;xiaoI&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/97051/5/9447/1374/5e0f0587Ec1d3ec09/984bdf65d6cce9e4.png&quot;, &quot;buttonJumpUrl&quot;: &quot;https://123&quot;, &quot;buttonChannelType&quot;: &quot;2&quot;, &quot;xcxType&quot;: &quot;0&quot; &#125;, &#123; &quot;xiaoITips&quot;: &quot;直接支付，先付后送&quot;, &quot;buttonText&quot;: &quot;购买送礼&quot;, &quot;buttonJumpType&quot;: &quot;2&quot;, &quot;xcxId&quot;: &quot;gh_279e710a5149&quot;, &quot;buttonColor&quot;: &quot;#F2140C,#F2270C,#F24D0C&quot;, &quot;xiaoI&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/97051/5/9447/1374/5e0f0587Ec1d3ec09/984bdf65d6cce9e4.png&quot;, &quot;buttonJumpUrl&quot;: &quot;https://123&quot;, &quot;buttonChannelType&quot;: &quot;1&quot;, &quot;xcxType&quot;: &quot;0&quot; &#125; ], &quot;shoppingPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/119260/10/1067/37167/5e93d85eE244af2ce/d2e5dc20285d0052.png&quot;, &quot;backgroudImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/101711/14/10539/848874/5e1d65b1Ed621354a/d1da047581c9f586.png&quot;, &quot;topEntrance&quot;: &#123; &quot;giftTopAlpha&quot;: &quot;0.5&quot;, &quot;giftTopText&quot;: &quot;礼物送给TA &quot;, &quot;giftTopBgColor&quot;: &quot;#FFF1EF,#FFF1EF&quot;, &quot;giftEntranceType&quot;: &quot;1&quot;, &quot;giftTopIconPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/160201/33/6244/5307/601caaa1E429693af/65cb92c8969dd4e2.png&quot;, &quot;giftTopArrow&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/110940/20/6231/696/5eb909fcE1c378cf6/40b1178c6e885dba.png&quot;, &quot;giftTopTextColor&quot;: &quot;#F2270C&quot; &#125;, &quot;secretGiftTitle&quot;: &quot;神秘礼物&quot;, &quot;secretGiftText&quot;: &quot;分享给收礼人时商品信息保密&quot;, &quot;shareBgList&quot;: [ &#123; &quot;bgColor&quot;: &quot;#ff4a7a&quot;, &quot;name&quot;: &quot;用心好礼&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/158755/8/8829/445191/6038e0abE6603b6c1/cfb7b615d6275de2.jpg&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/156587/2/11396/15361/6038e08aE720a6aa6/58aad40cfc1321b9.jpg&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#fa8e8e&quot;, &quot;name&quot;: &quot;浪漫好礼&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/166830/33/5594/126160/601b9b9bE28706085/99620e0a66e2f6fb.jpg&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/164718/13/5420/22587/601b9b42Ef6bd95b0/5a50ce79d8f9d631.jpg&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#FF340E&quot;, &quot;name&quot;: &quot;暖心家书&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/154157/12/14540/203022/600640c3E7b315b11/d7a9d7326e84c9f0.png&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/153910/40/15117/28778/600640dfE150a149d/2694ea2539e82eef.png&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#bb1019&quot;, &quot;name&quot;: &quot;甄选年货&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/165163/32/1839/82163/5ffc24a8Ecc3b2122/8ebc1960989a224c.jpg&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/151276/26/15035/17175/5ffc248bE247ec5e4/e668d8bc7fc969f0.jpg&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#d83737&quot;, &quot;name&quot;: &quot;跨年盛典&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/139411/6/19479/118231/5fe07623E6543f6d5/49c6e099f1345e65.jpg&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/136021/17/20296/10140/5fdafd06Eb9a65077/b0bf873715510a6e.jpg&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#9f1a29&quot;, &quot;name&quot;: &quot;双旦礼遇&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/145496/22/19236/101321/5fe07638Eeaa97096/01aa9275ebbcfe50.jpg&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/147098/23/18826/23484/5fdafc7fE905cd024/255e20bace35b884.png&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#FFB84D&quot;, &quot;name&quot;: &quot;礼在京东&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/125419/4/3868/224534/5ed7411aE1af186b2/c618f18bd4df4467.png&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/112473/36/9246/15130/5ed7422eE17675cbe/834a85f52b928144.png&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#fad19b&quot;, &quot;name&quot;: &quot;感恩有你&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/123369/2/5234/850015/5eec9beaE917c1eba/3c4bc9411d830ce7.png&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/139959/17/1048/25025/5eec9c1cE720a08e5/28e14864050a3e32.png&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#feceaa&quot;, &quot;name&quot;: &quot;生日快乐&quot;, &quot;bigPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/141641/37/378/540559/5ee0afbcE16ab03d3/aba4c0a8b336dd6c.png&quot;, &quot;smallPic&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/118398/2/9647/23355/5ee0b00fE309a3d43/64ed43bff0d7bd4f.png&quot; &#125;, &#123; &quot;bgColor&quot;: &quot;#cae4f5&quot;, &quot;name&quot;: &quot;佳节品蟹&quot;, &quot;bigPic&quot;: &quot;https://i.loli.net/2020/09/27/NqSbEpBVgP8QmAh.png&quot;, &quot;smallPic&quot;: &quot;https://i.loli.net/2020/09/27/v1OKsidPnfLlBWj.png&quot; &#125; ], &quot;trickContent&quot;: &#123; &quot;inside&quot;: [ &#123; &quot;titleImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/110852/29/10489/26338/5ec7483bEfefef724/a7a6684958641bb3.png&quot;, &quot;content&quot;: [ &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/116430/17/7873/4198/5ec741f1E86186559/6e29f4e5569253e3.png&quot;, &quot;text&quot;: &quot;1.选好宝贝，填好贺卡&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/107175/27/18911/4624/5ec74739Ee7da168c/445ff051df880080.png&quot;, &quot;text&quot;: &quot;2.填写好友地址，完成支付&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/125627/38/2596/3959/5ec7421bE2f9593df/0974501c97bc309d.png&quot;, &quot;text&quot;: &quot;3.打包好礼物&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/123103/28/2600/3335/5ec742b5E0d37aea4/57372698fe91cdff.png&quot;, &quot;text&quot;: &quot;4.捎上祝福（录制视频）&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/120410/36/2658/3546/5ec73ffaE52c40911/9a638d17df242f0d.png&quot;, &quot;text&quot;: &quot;5.分享给好友&quot; &#125; ] &#125; ], &quot;outside&quot;: &#123; &quot;buttonText&quot;: &quot;查看详情&quot;, &quot;img&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/121903/28/2629/24897/5ec739d7Ef90f049a/6469f5c33563095d.png&quot;, &quot;titleImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/114716/4/7811/15929/5ec73b8fE80fa1385/90f2839356438a3a.png&quot;, &quot;content&quot;: [ &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/116430/17/7873/4198/5ec741f1E86186559/6e29f4e5569253e3.png&quot;, &quot;text&quot;: &quot;1.选好宝贝，填好贺卡&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/125627/38/2596/3959/5ec7421bE2f9593df/0974501c97bc309d.png&quot;, &quot;text&quot;: &quot;2.礼物打包，满满爱意&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/123103/28/2600/3335/5ec742b5E0d37aea4/57372698fe91cdff.png&quot;, &quot;text&quot;: &quot;3.送上祝福（录制视频）&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/120410/36/2658/3546/5ec73ffaE52c40911/9a638d17df242f0d.png&quot;, &quot;text&quot;: &quot;4.分享给TA&quot; &#125; ] &#125; &#125;, &quot;shoppingText&quot;: &quot;购买送礼流程&quot;, &quot;selectEntrance&quot;: &#123; &quot;giftSelectArrow&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/110940/20/6231/696/5eb909fcE1c378cf6/40b1178c6e885dba.png&quot;, &quot;giftSelectBgColor&quot;: &quot;#FFDBD7,#FFE5E2&quot;, &quot;giftEntranceType&quot;: &quot;1&quot;, &quot;giftSelectText&quot;: &quot;礼物送给TA &quot;, &quot;giftSelectTextColor&quot;: &quot;#F2270C&quot;, &quot;giftSelectIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/155344/4/11371/1233/5fe407c2E6b61e689/6fcac59ce6824a80.png&quot; &#125; &#125;, &quot;appletShare&quot;: &#123; &quot;appletId&quot;: &quot;gh_45b306365c3d&quot;, &quot;secondPrice&quot;: &quot;349.0&quot;, &quot;endTime&quot;: &quot;4月20日 00点结束&quot;, &quot;priceName&quot;: &quot;秒杀价&quot;, &quot;url&quot;: &quot;pages/item/detail/detail?sku=10025802445921&amp;name=ikbc87机械键盘游戏樱桃cherry轴电脑外设笔记本有线数字办公自营C104/W200无线可选 C87有线87键 红轴&amp;cover=https://m.360buyimg.com/mobilecms/s320x320_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.jpg&amp;price=329.00&quot;, &quot;mpIconUrl&quot;: &quot;https://m.360buyimg.com/mobilecms/s320x320_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.jpg&quot;, &quot;shareThreePic&quot;: &quot;0&quot;, &quot;appletCoupon&quot;: &quot;满300减30&quot; &#125;, &quot;wareImage&quot;: [ &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.dpg.webp&quot;, &quot;share&quot;: &quot;https://m.360buyimg.com/mobilecms/s120x120_jfs/t1/161511/36/14334/68405/60592acbEd8ee25dd/df66343e9a3f4fa8.jpg!q70.jpg&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/166319/9/14656/217953/605c5251Ea1b26195/7a9f6a7b123e0bcb.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/166319/9/14656/217953/605c5251Ea1b26195/7a9f6a7b123e0bcb.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/174166/13/351/183971/605c5251E754d12ba/667ec84565bc24ca.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/174166/13/351/183971/605c5251E754d12ba/667ec84565bc24ca.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/152274/8/13553/166933/5ff6c8c8E439fcf96/d2064b89809f1ca8.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/152274/8/13553/166933/5ff6c8c8E439fcf96/d2064b89809f1ca8.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/168960/15/1413/171776/5ff6c8f7Ec2a007eb/260ba700338ef853.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/168960/15/1413/171776/5ff6c8f7Ec2a007eb/260ba700338ef853.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/152575/18/13662/213329/5ff6c92eEd9afd482/95a41d11989cb200.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/152575/18/13662/213329/5ff6c92eEd9afd482/95a41d11989cb200.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/167891/5/1447/248244/5ff6c8fdE0e5a5161/5b01d63535ef0ce9.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/167891/5/1447/248244/5ff6c8fdE0e5a5161/5b01d63535ef0ce9.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/162436/26/4749/58728/60129535E7f4b35c2/3c831e03a6d2f2ef.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/162436/26/4749/58728/60129535E7f4b35c2/3c831e03a6d2f2ef.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/159135/9/5539/74185/6014fe4bE757aaacd/5608876f195d6c38.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/159135/9/5539/74185/6014fe4bE757aaacd/5608876f195d6c38.jpg!q70.dpg.webp&quot; &#125;, &#123; &quot;small&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/155323/37/16461/85393/6014fe3cEd4967f43/9df719f435048f66.jpg!q70.dpg.webp&quot;, &quot;big&quot;: &quot;https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/155323/37/16461/85393/6014fe3cEd4967f43/9df719f435048f66.jpg!q70.dpg.webp&quot; &#125; ], &quot;oldMoreStyle&quot;: false, &quot;wareInfo&quot;: &#123; &quot;name&quot;: &quot;ikbc87机械键盘游戏樱桃cherry轴电脑外设笔记本有线数字办公自营C104/W200无线可选 C87有线87键 红轴&quot;, &quot;venderId&quot;: &quot;10157456&quot;, &quot;skuId&quot;: &quot;10025802445921&quot; &#125;, &quot;promotionInfo&quot;: &#123; &quot;isBargain&quot;: false, &quot;prompt&quot;: &quot;&quot; &#125;, &quot;tabUrl&quot;: &quot;https://in.m.jd.com/product/graphext/10025802445921.html&quot;, &quot;isOpenH5&quot;: true, &quot;locCouponFlag&quot;: false, &quot;generalTrackDic&quot;: &#123; &quot;skuId&quot;: &quot;10025802445921&quot;, &quot;shopId&quot;: &quot;10025307&quot; &#125;, &quot;hwShareInfo&quot;: &#123; &quot;image&quot;: [ &quot;http://m.360buyimg.com/cc/jfs/t1/102765/20/14157/94675/5e61f59bE4917f89f/3a327a6135c15137.png&quot;, &quot;http://m.360buyimg.com/cc/jfs/t1/85216/14/14130/127510/5e61f5afE84efee9d/cecfbce5f3a8766b.png&quot; ], &quot;btnText&quot;: &quot;授权并继续&quot;, &quot;agreementToast&quot;: &#123; &quot;title&quot;: &quot;共享购物助手用户协议&quot;, &quot;content&quot;: &quot;1、共享购物助手仅对两方用户都为华为手机指定机型系统时才可使用。其他手机系统无法使用此功能。\n2、发起者通过手机通讯录邀请好友即可发起共享。屏幕共享仅共享发起者屏幕界面，为单向共享。\n3、屏幕共享时，发起者和接收用户都可进行涂鸦操作，但接收用户无法操作发起者手机。\n4、在您购物时可能会访问个人隐私页面，如下单支付页、个人资料等，请您操作手机时，提前关闭屏幕共享功能，避免产生财产损失或个人信息泄漏风险。&quot; &#125;, &quot;agreement&quot;: &quot;《共享购物助手用户协议》&quot;, &quot;agreementHead&quot;: &quot;阅读并同意&quot;, &quot;disAgreeToast&quot;: &quot;请先勾选“阅读并同意协议”&quot;, &quot;bgImg&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/87433/9/14305/3942/5e61f36bEbd3d824e/803805e128d145c1.png&quot;, &quot;class&quot;: &quot;com.jd.app.server.warecoresoa.domain.hw.HWShare&quot;, &quot;content&quot;: [ &#123; &quot;text&quot;: &quot;为获取最佳的手机屏幕共享体验，请授权开通一下访问权限&quot;, &quot;title&quot;: &quot;管理权限&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/89131/38/14192/2778/5e61f3d7E850859b5/7fb0f0a3fda84a0b.png&quot;, &quot;text&quot;: &quot;同步您认识的朋友&quot;, &quot;title&quot;: &quot;手机通讯录&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/95040/6/14048/2666/5e61f3bbEfcb1b7c8/f83962066c09a37b.png&quot;, &quot;text&quot;: &quot;和朋友边逛边聊&quot;, &quot;title&quot;: &quot;麦克风&quot; &#125;, &#123; &quot;icon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/95011/21/14187/1831/5e61f3a8Edf0b3de1/b2369787c683d65d.png&quot;, &quot;text&quot;: &quot;开始共享后您的手机屏幕将被对方看到，但对方无法操作您的手机。请在访问隐私页面（下单支付、个人资料等）时提前关闭共享功能，避免造成个人损失。&quot; &#125;, &#123; &quot;text&quot;: &quot;屏幕共享功能仅对两方用户都为华为手机时才可使用。发起者通过手机通讯录邀请好友即可发起共享。&quot;, &quot;title&quot;: &quot;使用介绍&quot; &#125; ] &#125;, &quot;ddFatigueMechanism&quot;: &#123; &quot;leftBottomBubbleCount&quot;: &quot;5&quot;, &quot;ddRightCount&quot;: &quot;5&quot;, &quot;leftBottomBubbleDuration&quot;: &quot;5&quot;, &quot;ddBottomToastDuration&quot;: &quot;10&quot;, &quot;ddBottomToastCount&quot;: &quot;5&quot; &#125;, &quot;appointAndPresaleOpen&quot;: true, &quot;plusShieldLandedPriceFlag&quot;: false, &quot;shareImgInfo&quot;: &#123; &quot;priceDes&quot;: &quot;价格具有时效性&quot;, &quot;promotionStr&quot;: &quot;&quot;, &quot;markingOff&quot;: true, &quot;shareLanguage&quot;: &quot;推荐一个好物给你，请查收&quot;, &quot;secondPrice&quot;: &quot;349.0&quot;, &quot;jprice&quot;: &quot;329.00&quot;, &quot;priceUrl&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/16989/25/11991/6282/5c933b48Eb4fd488e/03e6606b4decb734.png&quot; &#125; &#125;, &quot;mId&quot;: &quot;bpMasterdata&quot;, &quot;sortId&quot;: 199 &#125; ], &quot;others&quot;: &#123; &quot;templateType&quot;: &quot;secKill&quot; &#125;, &quot;wait&quot;: 0&#125; 商品详情页 商品评价 请求地址https://api.m.jd.com/client.action?functionId=getLegoWareDetailComment 12345678body=&#123; &quot;category&quot;: &quot;670;686;689&quot;, &quot;shadowMainSku&quot;: &quot;0&quot;, &quot;shieldCurrentComment&quot;: &quot;1&quot;, &quot;sku&quot;: &quot;10025802445921&quot;, &quot;venderId&quot;: &quot;10157456&quot;, &quot;wareType&quot;: &quot;0&quot;&#125; 请求方式POST 协议h2 请求大小2.18kB 请求耗时116ms 响应大小4.30 kB 响应123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449&#123; &quot;consultBtnName&quot;: &quot;购买咨询&quot;, &quot;mdKey&quot;: &quot;1_55649453#184065261_3_55039229#184160987_8_ABTest_C&quot;, &quot;currentSkuStatus&quot;: &quot;2&quot;, &quot;consultationCount&quot;: &quot;0&quot;, &quot;normalCnt&quot;: &quot;22&quot;, &quot;tagStatisticsinfoList&quot;: [ &#123; &quot;id&quot;: &quot;2487c0f9e595f04d&quot;, &quot;name&quot;: &quot;手感一流&quot;, &quot;count&quot;: &quot;30&quot;, &quot;tagId&quot;: &quot;2487c0f9e595f04d&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=2487c0f9e595f04d^^pid=30018^^sku=10020617840298^^sversion=1000^^token=ddeecb5be4481510&quot; &#125;, &#123; &quot;id&quot;: &quot;2df4fdbae69942d8&quot;, &quot;name&quot;: &quot;倍感舒适&quot;, &quot;count&quot;: &quot;25&quot;, &quot;tagId&quot;: &quot;2df4fdbae69942d8&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=2df4fdbae69942d8^^pid=30018^^sku=10020617840298^^sversion=1000^^token=39136829206d74c9&quot; &#125;, &#123; &quot;id&quot;: &quot;8e1a708319687910&quot;, &quot;name&quot;: &quot;按键舒服&quot;, &quot;count&quot;: &quot;18&quot;, &quot;tagId&quot;: &quot;8e1a708319687910&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=8e1a708319687910^^pid=30018^^sku=10020617840298^^sversion=1000^^token=ace0edb4a2851306&quot; &#125;, &#123; &quot;id&quot;: &quot;47f1dc4df76c0646&quot;, &quot;name&quot;: &quot;时尚大气&quot;, &quot;count&quot;: &quot;18&quot;, &quot;tagId&quot;: &quot;47f1dc4df76c0646&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=47f1dc4df76c0646^^pid=30018^^sku=10020617840298^^sversion=1000^^token=0697f969cc59370b&quot; &#125;, &#123; &quot;id&quot;: &quot;3304683f1c383716&quot;, &quot;name&quot;: &quot;声音清亮&quot;, &quot;count&quot;: &quot;17&quot;, &quot;tagId&quot;: &quot;3304683f1c383716&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=3304683f1c383716^^pid=30018^^sku=10020617840298^^sversion=1000^^token=76397c310fd7a3d0&quot; &#125;, &#123; &quot;id&quot;: &quot;bf8a7e6407288e6d&quot;, &quot;name&quot;: &quot;方便快捷&quot;, &quot;count&quot;: &quot;14&quot;, &quot;tagId&quot;: &quot;bf8a7e6407288e6d&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=bf8a7e6407288e6d^^pid=30018^^sku=10020617840298^^sversion=1000^^token=5461970e8ce45af4&quot; &#125;, &#123; &quot;id&quot;: &quot;d098c313066f4fe2&quot;, &quot;name&quot;: &quot;低调奢华&quot;, &quot;count&quot;: &quot;12&quot;, &quot;tagId&quot;: &quot;d098c313066f4fe2&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=d098c313066f4fe2^^pid=30018^^sku=10020617840298^^sversion=1000^^token=ee1ba10a30f7a472&quot; &#125;, &#123; &quot;id&quot;: &quot;dff7e3c1aeceb990&quot;, &quot;name&quot;: &quot;灵敏度佳&quot;, &quot;count&quot;: &quot;10&quot;, &quot;tagId&quot;: &quot;dff7e3c1aeceb990&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=dff7e3c1aeceb990^^pid=30018^^sku=10020617840298^^sversion=1000^^token=84ec31e5f9c82e9f&quot; &#125;, &#123; &quot;id&quot;: &quot;be4c76ce01b83386&quot;, &quot;name&quot;: &quot;简单方便&quot;, &quot;count&quot;: &quot;10&quot;, &quot;tagId&quot;: &quot;be4c76ce01b83386&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=be4c76ce01b83386^^pid=30018^^sku=10020617840298^^sversion=1000^^token=8e85f03a96357bd7&quot; &#125;, &#123; &quot;id&quot;: &quot;4373009c6260164a&quot;, &quot;name&quot;: &quot;做工一流&quot;, &quot;count&quot;: &quot;10&quot;, &quot;tagId&quot;: &quot;4373009c6260164a&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=4373009c6260164a^^pid=30018^^sku=10020617840298^^sversion=1000^^token=08c1ac02ee254506&quot; &#125;, &#123; &quot;id&quot;: &quot;2a2422ee9d1f7dfc&quot;, &quot;name&quot;: &quot;反应灵敏&quot;, &quot;count&quot;: &quot;10&quot;, &quot;tagId&quot;: &quot;2a2422ee9d1f7dfc&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=2a2422ee9d1f7dfc^^pid=30018^^sku=10020617840298^^sversion=1000^^token=54b7ad1867dbf836&quot; &#125; ], &quot;isAllDefaultGoodComment&quot;: false, &quot;canConsultFlag&quot;: true, &quot;questionGeneralInfo&quot;: &#123; &quot;questionCountText&quot;: &quot;27个问题&quot;, &quot;questionIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/117749/2/1908/3495/5e9d13c8E864ecc1f/b839854ce8687569.png&quot;, &quot;deeplinkText&quot;: &quot;查看全部&quot;, &quot;questionText&quot;: &quot;问答&quot; &#125;, &quot;defaultGoodCountText&quot;: &quot;MeS4hyvkuKrnlKjmiLfpu5jorqTor4Tku7fkuobor6XllYblk4E=&quot;, &quot;noQuestionText&quot;: &quot;商品好不好，问问买过的人吧&quot;, &quot;goodCnt&quot;: &quot;2317&quot;, &quot;commentTitle&quot;: &quot;评价&quot;, &quot;isShowCommentBtn&quot;: true, &quot;commentButtonText&quot;: &quot;查看全部评价&quot;, &quot;showPicCnt&quot;: &quot;500&quot;, &quot;defaultGoodLogo&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t10447/176/1359340654/2177/9ceed2ba/59df1d27N55b368df.png&quot;, &quot;badCnt&quot;: &quot;21&quot;, &quot;styleType&quot;: &quot;1&quot;, &quot;abTest&quot;: &quot;A&quot;, &quot;semanticTagList&quot;: [ &#123; &quot;id&quot;: &quot;2487c0f9e595f04d&quot;, &quot;name&quot;: &quot;手感一流&quot;, &quot;count&quot;: &quot;30&quot;, &quot;tagId&quot;: &quot;2487c0f9e595f04d&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=2487c0f9e595f04d^^pid=30018^^sku=10020617840298^^sversion=1000^^token=ddeecb5be4481510&quot; &#125;, &#123; &quot;id&quot;: &quot;2df4fdbae69942d8&quot;, &quot;name&quot;: &quot;倍感舒适&quot;, &quot;count&quot;: &quot;25&quot;, &quot;tagId&quot;: &quot;2df4fdbae69942d8&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=2df4fdbae69942d8^^pid=30018^^sku=10020617840298^^sversion=1000^^token=39136829206d74c9&quot; &#125;, &#123; &quot;id&quot;: &quot;8e1a708319687910&quot;, &quot;name&quot;: &quot;按键舒服&quot;, &quot;count&quot;: &quot;18&quot;, &quot;tagId&quot;: &quot;8e1a708319687910&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=8e1a708319687910^^pid=30018^^sku=10020617840298^^sversion=1000^^token=ace0edb4a2851306&quot; &#125;, &#123; &quot;id&quot;: &quot;47f1dc4df76c0646&quot;, &quot;name&quot;: &quot;时尚大气&quot;, &quot;count&quot;: &quot;18&quot;, &quot;tagId&quot;: &quot;47f1dc4df76c0646&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=47f1dc4df76c0646^^pid=30018^^sku=10020617840298^^sversion=1000^^token=0697f969cc59370b&quot; &#125;, &#123; &quot;id&quot;: &quot;3304683f1c383716&quot;, &quot;name&quot;: &quot;声音清亮&quot;, &quot;count&quot;: &quot;17&quot;, &quot;tagId&quot;: &quot;3304683f1c383716&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=3304683f1c383716^^pid=30018^^sku=10020617840298^^sversion=1000^^token=76397c310fd7a3d0&quot; &#125;, &#123; &quot;id&quot;: &quot;bf8a7e6407288e6d&quot;, &quot;name&quot;: &quot;方便快捷&quot;, &quot;count&quot;: &quot;14&quot;, &quot;tagId&quot;: &quot;bf8a7e6407288e6d&quot;, &quot;type&quot;: &quot;4&quot;, &quot;canBeFiltered&quot;: true, &quot;stand&quot;: &quot;1&quot;, &quot;ckeKeyWordBury&quot;: &quot;eid=100^^tagid=bf8a7e6407288e6d^^pid=30018^^sku=10020617840298^^sversion=1000^^token=5461970e8ce45af4&quot; &#125; ], &quot;noCommentText&quot;: &quot;&quot;, &quot;isShowYoutuShaituBtn&quot;: true, &quot;pictureCnt&quot;: &quot;500&quot;, &quot;questionList&quot;: [ &#123; &quot;id&quot;: &quot;55649453&quot;, &quot;content&quot;: &quot;用过半年的有没有键帽打油的？&quot;, &quot;answerList&quot;: [ &#123; &quot;content&quot;: &quot;辣鸡别买&quot;, &quot;typeIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/111974/1/3159/2654/5ea692a3E5261e88c/9d5ea0287f968cf9.png&quot;, &quot;nickName&quot;: &quot;秋叶沅&quot;, &quot;systemId&quot;: &quot;20&quot;, &quot;type&quot;: &quot;0&quot;, &quot;userImg&quot;: &quot;https://img10.360buyimg.com/imagetools/jfs/t1/62024/28/3423/4136/5d19da36E2f2d8a8f/85d3ced5216db1d4.png&quot; &#125; ], &quot;systemId&quot;: &quot;20&quot;, &quot;maidian&quot;: &quot;#184065261_3&quot;, &quot;answerCountText&quot;: &quot;3个回答&quot; &#125;, &#123; &quot;id&quot;: &quot;55039229&quot;, &quot;content&quot;: &quot;弹簧音怎么样&quot;, &quot;answerList&quot;: [ &#123; &quot;content&quot;: &quot;是有弹簧音的，不过可以忍受&quot;, &quot;typeIcon&quot;: &quot;https://m.360buyimg.com/cc/jfs/t1/111974/1/3159/2654/5ea692a3E5261e88c/9d5ea0287f968cf9.png&quot;, &quot;nickName&quot;: &quot;jd_uFmSANqQzwXQ&quot;, &quot;systemId&quot;: &quot;20&quot;, &quot;type&quot;: &quot;0&quot;, &quot;userImg&quot;: &quot;https://img10.360buyimg.com/imagetools/jfs/t1/62024/28/3423/4136/5d19da36E2f2d8a8f/85d3ced5216db1d4.png&quot; &#125; ], &quot;systemId&quot;: &quot;20&quot;, &quot;maidian&quot;: &quot;#184160987_8&quot;, &quot;answerCountText&quot;: &quot;8个回答&quot; &#125; ], &quot;testId&quot;: &quot;cmt&quot;, &quot;commentVideoInfoList&quot;: [ ], &quot;commentInfoList&quot;: [ &#123; &quot;userNickName&quot;: &quot;v***t&quot;, &quot;userLevel&quot;: &quot;-1&quot;, &quot;userImgURL&quot;: &quot;https://storage.360buyimg.com/i.imageUpload/766973656e7431363037363834373234343732_sma.jpg&quot;, &quot;commentId&quot;: &quot;15403352544&quot;, &quot;commentType&quot;: &quot;1&quot;, &quot;commentShareUrl&quot;: &quot;https://share.m.jd.com/shareOrder/showSharePage.action?productId=10025802445921&amp;commentId=35a03d46207915db18a501f691d8051d&quot;, &quot;wareAttribute&quot;: [ &#123; &quot;颜色&quot;: &quot;C87有线87键&quot; &#125;, &#123; &quot;型号&quot;: &quot;红轴&quot; &#125; ], &quot;plusAvailable&quot;: &quot;201&quot;, &quot;plusAddress&quot;: &quot;https://plus.m.jd.com/index&quot;, &quot;afterComment&quot;: &#123; &#125;, &quot;noCommentMessage&quot;: &quot;用户未及时作出评价哦~&quot;, &quot;isShowUserLevel&quot;: &quot;0&quot;, &quot;isShowPlusPendant&quot;: &quot;1&quot;, &quot;plusLogoId&quot;: &quot;tab_gif_085&quot;, &quot;plusLogoType&quot;: &quot;2&quot;, &quot;markingList&quot;: [ ], &quot;imageStatusText&quot;: &quot;&quot;, &quot;commentOfficerStatus&quot;: &quot;0&quot;, &quot;iconList&quot;: [ &#123; &quot;iconTagId&quot;: &quot;comment-201&quot;, &quot;iconId&quot;: &quot;commentOfficer&quot;, &quot;iconJumpUrl&quot;: &quot;getCommentOfficerStatusInfo&quot;, &quot;iconType&quot;: &quot;1&quot; &#125;, &#123; &quot;iconTagId&quot;: &quot;tab_gif_085&quot;, &quot;iconId&quot;: &quot;plus&quot;, &quot;iconTagType&quot;: &quot;2&quot;, &quot;iconJumpUrl&quot;: &quot;https://plus.m.jd.com/index&quot;, &quot;iconType&quot;: &quot;0&quot; &#125; ], &quot;tagCommentContent&quot;: &quot;&quot;, &quot;carTagInfo&quot;: &quot;&quot;, &quot;ownerStatus&quot;: &quot;0&quot;, &quot;productId&quot;: &quot;10025802445921&quot;, &quot;commentDate&quot;: &quot;2021-03-10 11:21:53&quot;, &quot;commentScore&quot;: &quot;5&quot;, &quot;praiseCnt&quot;: &quot;2&quot;, &quot;replyCnt&quot;: &quot;3&quot;, &quot;commentData&quot;: &quot;买之前看过太多大神的评测，也看了好多评价。感觉低于千元的，就没有能用的键盘了。其实我想说，对于普通人来说，这款键盘真的很不错。按键力度适中，声音还不错。打字也很顺畅。樱桃的红轴也是第一次用，之前用的黑轴和青轴。红轴打字要比青轴还要舒服。值得入手的。&quot;, &quot;pictureInfoList&quot;: [ &#123; &quot;picURL&quot;: &quot;https://jvod.300hu.com/img/2021/64668396/1/img2.jpg&quot;, &quot;picWidth&quot;: &quot;720&quot;, &quot;picHeight&quot;: &quot;1280&quot;, &quot;mediaType&quot;: &quot;2&quot;, &quot;mediaId&quot;: &quot;545663502&quot;, &quot;mediaLength&quot;: &quot;9&quot;, &quot;videoPlayAddress&quot;: &quot;https://jvod.300hu.com/vod/product/8a276dd5-da09-44bd-8400-512566aeb6a5/b2d3eadfea5e4c0596ec58795375bfce.mp4?source=2&amp;h265=h265/18799/40d98c6c855148acb76d0c2bdf185de7.mp4&quot;, &quot;sharePicUrl&quot;: &quot;https://jvod.300hu.com/img/2021/64668396/1/img2.jpg&quot; &#125;, &#123; &quot;picURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s354x354_jfs/t1/161945/31/11679/188527/60483b51Eb94a15c9/fa0c05dfb3a647f1.jpg.dpg&quot;, &quot;largePicURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s850x850_jfs/t1/161945/31/11679/188527/60483b51Eb94a15c9/fa0c05dfb3a647f1.jpg.dpg&quot;, &quot;mediaType&quot;: &quot;1&quot; &#125;, &#123; &quot;picURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s354x354_jfs/t1/157892/40/12038/178567/60483b51E15c65ec0/c50bfc5a67e230c7.jpg.dpg&quot;, &quot;largePicURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s850x850_jfs/t1/157892/40/12038/178567/60483b51E15c65ec0/c50bfc5a67e230c7.jpg.dpg&quot;, &quot;mediaType&quot;: &quot;1&quot; &#125;, &#123; &quot;picURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s354x354_jfs/t1/168094/20/11384/169108/60483b51E3e664a33/6153191a9bb28e2c.jpg.dpg&quot;, &quot;largePicURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s850x850_jfs/t1/168094/20/11384/169108/60483b51E3e664a33/6153191a9bb28e2c.jpg.dpg&quot;, &quot;mediaType&quot;: &quot;1&quot; &#125; ], &quot;guid&quot;: &quot;35a03d46207915db18a501f691d8051d&quot;, &quot;replyList&quot;: [ &#123; &quot;content&quot;: &quot;时间在悄然流逝，年华在匆匆而过；唯你我相遇的美好，永不逝去，您的一字一句我都记在心里，感谢您真诚的评价，我们会带着您的鼓励继续前行！&quot;, &quot;nickname&quot;: &quot;ikbc京东自营官方旗舰店&quot; &#125; ], &quot;maidianInfo&quot;: &quot;670;686;689_10025802445921_全部_1_1_35a03d46207915db18a501f691d8051d_-100_cmt_-100&quot;, &quot;ckeKeyWordBury&quot;: &quot;&quot;, &quot;testId&quot;: &quot;cmt&quot;, &quot;imageStatus&quot;: &quot;1&quot;, &quot;excellentCommentIcon&quot;: &quot;&quot;, &quot;pictureCnt&quot;: 0, &quot;officerScore&quot;: &quot;228&quot; &#125;, &#123; &quot;userNickName&quot;: &quot;j***4&quot;, &quot;userLevel&quot;: &quot;-1&quot;, &quot;userImgURL&quot;: &quot;https://storage.360buyimg.com/i.imageUpload/6a645f3735663737656362643238343431353334353830393037343532_sma.jpg&quot;, &quot;commentId&quot;: &quot;15429560113&quot;, &quot;commentType&quot;: &quot;1&quot;, &quot;commentShareUrl&quot;: &quot;https://share.m.jd.com/shareOrder/showSharePage.action?productId=10026200117747&amp;commentId=1a8083ce37ebfc05be2fc132217626dd&quot;, &quot;wareAttribute&quot;: [ &#123; &quot;颜色&quot;: &quot;C87有线87键&quot; &#125;, &#123; &quot;型号&quot;: &quot;茶轴&quot; &#125; ], &quot;plusAvailable&quot;: &quot;201&quot;, &quot;plusAddress&quot;: &quot;https://plus.m.jd.com/index&quot;, &quot;afterComment&quot;: &#123; &#125;, &quot;noCommentMessage&quot;: &quot;用户未及时作出评价哦~&quot;, &quot;isShowUserLevel&quot;: &quot;0&quot;, &quot;isShowPlusPendant&quot;: &quot;1&quot;, &quot;plusLogoId&quot;: &quot;tab_gif_085&quot;, &quot;plusLogoType&quot;: &quot;2&quot;, &quot;markingList&quot;: [ ], &quot;imageStatusText&quot;: &quot;&quot;, &quot;commentOfficerStatus&quot;: &quot;0&quot;, &quot;iconList&quot;: [ &#123; &quot;iconTagId&quot;: &quot;comment-201&quot;, &quot;iconId&quot;: &quot;commentOfficer&quot;, &quot;iconJumpUrl&quot;: &quot;getCommentOfficerStatusInfo&quot;, &quot;iconType&quot;: &quot;1&quot; &#125;, &#123; &quot;iconTagId&quot;: &quot;tab_gif_085&quot;, &quot;iconId&quot;: &quot;plus&quot;, &quot;iconTagType&quot;: &quot;2&quot;, &quot;iconJumpUrl&quot;: &quot;https://plus.m.jd.com/index&quot;, &quot;iconType&quot;: &quot;0&quot; &#125; ], &quot;tagCommentContent&quot;: &quot;&quot;, &quot;carTagInfo&quot;: &quot;&quot;, &quot;skinInfoMap&quot;: &#123; &quot;skinFlag&quot;: &quot;1&quot;, &quot;skinOpenApp&quot;: &quot;openapp.jdmobile://virtual?params=&#123;\&quot;category\&quot;:\&quot;jump\&quot;,\&quot;des\&quot;:\&quot;jdreactcommon\&quot;,\&quot;appname\&quot;:\&quot;JDReactSkinTheme\&quot;,\&quot;modulename\&quot;:\&quot;JDReactSkinTheme\&quot;,\&quot;ishidden\&quot;:true,\&quot;needLogin\&quot;:true,\&quot;param\&quot;:&#123;\&quot;screen\&quot;:\&quot;Channel\&quot;,\&quot;sourceFrom\&quot;:\&quot;1\&quot;,\&quot;transparentenable\&quot;: true&#125;&#125;&quot;, &quot;skinIconId&quot;: &quot;tab_143&quot; &#125;, &quot;ownerStatus&quot;: &quot;0&quot;, &quot;productId&quot;: &quot;10026200117747&quot;, &quot;commentDate&quot;: &quot;2021-03-17 09:26:50&quot;, &quot;commentScore&quot;: &quot;5&quot;, &quot;praiseCnt&quot;: &quot;0&quot;, &quot;replyCnt&quot;: &quot;2&quot;, &quot;commentData&quot;: &quot;这款键盘的最大特点在于声音比一般机械键盘要小一些。用的时候即使力气大，也不会太影响别人。另外手感非常不错，比较轻便。大品牌值得信赖，不知道买啥品牌机械键盘的朋友们，无脑选ikbc就够了！&quot;, &quot;pictureInfoList&quot;: [ &#123; &quot;picURL&quot;: &quot;https://jvod.300hu.com/img/2021/65840029/1/img2.jpg&quot;, &quot;picWidth&quot;: &quot;960&quot;, &quot;picHeight&quot;: &quot;1280&quot;, &quot;mediaType&quot;: &quot;2&quot;, &quot;mediaId&quot;: &quot;547735094&quot;, &quot;mediaLength&quot;: &quot;8&quot;, &quot;videoPlayAddress&quot;: &quot;https://jvod.300hu.com/vod/product/7e89c6a6-daa0-4c33-b130-ea6b54e4bab4/6c9dd86f9a9747a1b25fa099f6e943f3.mp4?source=2&amp;h265=h265/18799/29a5a816600c4236927695f4dfdbca69.mp4&quot;, &quot;sharePicUrl&quot;: &quot;https://jvod.300hu.com/img/2021/65840029/1/img2.jpg&quot; &#125;, &#123; &quot;picURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s354x354_jfs/t1/169757/20/13015/350180/60515ad7E5380482f/abead2358391a528.jpg.dpg&quot;, &quot;largePicURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s850x850_jfs/t1/169757/20/13015/350180/60515ad7E5380482f/abead2358391a528.jpg.dpg&quot;, &quot;mediaType&quot;: &quot;1&quot; &#125;, &#123; &quot;picURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s354x354_jfs/t1/141319/8/15707/358010/60515ad9E3b5e79b6/8676e3e04a058edd.jpg.dpg&quot;, &quot;largePicURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s850x850_jfs/t1/141319/8/15707/358010/60515ad9E3b5e79b6/8676e3e04a058edd.jpg.dpg&quot;, &quot;mediaType&quot;: &quot;1&quot; &#125;, &#123; &quot;picURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s354x354_jfs/t1/169816/5/13018/429598/60515adaEdce3252e/4e7696726aea0a0a.jpg.dpg&quot;, &quot;largePicURL&quot;: &quot;https://img30.360buyimg.com/shaidan/s850x850_jfs/t1/169816/5/13018/429598/60515adaEdce3252e/4e7696726aea0a0a.jpg.dpg&quot;, &quot;mediaType&quot;: &quot;1&quot; &#125; ], &quot;guid&quot;: &quot;1a8083ce37ebfc05be2fc132217626dd&quot;, &quot;maidianInfo&quot;: &quot;670;686;689_10025802445921_全部_1_2_1a8083ce37ebfc05be2fc132217626dd_-100_cmt_-100&quot;, &quot;ckeKeyWordBury&quot;: &quot;&quot;, &quot;testId&quot;: &quot;cmt&quot;, &quot;imageStatus&quot;: &quot;1&quot;, &quot;excellentCommentIcon&quot;: &quot;&quot;, &quot;pictureCnt&quot;: 0, &quot;officerScore&quot;: &quot;110&quot; &#125; ], &quot;newCommentStyle&quot;: false, &quot;isShowConsultBtn&quot;: false, &quot;code&quot;: &quot;0&quot;, &quot;newStyleText&quot;: &quot;查看全部27条问题&quot;, &quot;allCntStr&quot;: &quot;1万+&quot;, &quot;isShowBuyersShow&quot;: false, &quot;allCnt&quot;: &quot;15187&quot;, &quot;biData&quot;: &quot;&quot;, &quot;goodRate&quot;: &quot;98%&quot;, &quot;videoAutoPlaySwitch&quot;: &quot;0&quot;, &quot;userVideoStyleType&quot;: &quot;1&quot;, &quot;youTuOrShaiTu&quot;: &quot;0&quot;, &quot;cardStyle&quot;: false&#125; 商品详情页 商品推荐 请求地址https://api.m.jd.com/client.action?functionId=uniformRecommend 请求方式POST 协议h2 请求大小2.24kB 请求耗时294ms 响应大小23.16 kB 响应quot;tabId&quot;: -1, &quot;publicTestBubble&quot;: &quot;0&quot;, &quot;userFlagInfo&quot;: &quot;&quot;, &quot;code&quot;: &quot;0&quot;, &quot;new900UIStrategy&quot;: &quot;B&quot;, &quot;wareInfoList&quot;: [ &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10026203170647&quot;, &quot;wname&quot;: &quot;ikbc机械键盘S200蓝牙无线87粉色电脑笔记本办公自营&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/165621/19/6122/27960/6021ef06Ea545b8eb/817f4634bfe7c87c.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;299.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10026203170647\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3335126858\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500040310&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=KbABdDBWrLerT2mCOFvk9sH5FjLiWpwpUrxXWabMKVyc2KQYPV4vLUUJEvIaFAVOzse2gyI6ZvYkwzdm8-H64vopobs2-tNYi1aC4sd_nA1eaadkS_CJWK2BPKvyqlIHlc2_2uLqSeBFq4esegqGIHQy2v2BIlN06xUFGDQem8rPqaoqLesTDQGe8KiwZid_lYnS-oi5FC2_PvN6O8qxJw&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNjIwMzE3MDY0Ny5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_2W4CORSByBL9ceScZuqVbCle_A-ugInio1-9doZx77AQybvciLXFyX3rphq-mkqElWwWaCluRZC__dF60yyDU2TvWDv0XSIz93ErtA8Tf1KjO-CX5tUMbJocNms-2GOrRlQ7mHkRQ9Vjq6b5MoIkzFl1tqWK0xdsUGY39ZbGrb5qf6zLv8c5TytXwKpU22e-JtGWdh6Ng2UQiW_wYRgA4tfAiA2U65T9ygu9xuNvS27qUa9DhwHXpAoLrRXnBXyRFHNYh2XOYT8oCMxLzxeJUZWqe0o4VrpL76S1P6kjV-7wi4QRCf2_0_LAcK6Gts2SgMHy8TqD2gZ6HH8ork7w0gPPZ8l-yN8cXBi9TQ6wbtJJyZ5jn52du5c6DfAdwHyVNqlh2wXV78fEXuYdY8cQx0djQG1L_STXdin3tTp7JhfBKSrC-lPSIvZQJgL4-LJefPzbz5SA3y2Hm-4MmKMjHhD9Bez1P0-xUp3Bv49H-hCedVeTZvJiJa8sujEg2NhBmjP7rx_VWNvpcDBlbPT3jh5s8zE1Cz2hzfSs-OHC6uN0Ro16ODwW_TMXnhJtGj4swqS22gsOqkQqlwQxUvhOxxgg4mXeSvvsuMEzqPGl4AroAZx3LntIP30vmxt6sqxRWNApg4U7ddnron2hr16Q7GZBXYgtn-3qQJyDtumJXh6wsB2HrxAQg_CQ2GpyLoQ7PzfCtu54wniBfWroFz3qQS4lF4u2_lvBdIGE0XpJ7vTJ0xsafcJ3IHzXsoOLbcvKgjUQxHXTONK3iUkZfoHnm1XxLvqbnaf28gpKL7jgj7QrlvTESxwCbD42Y4GZAcvyYlc2nTRBkoMcmpqV7OSxHkGRsJ_5AEnM6kAqzWzMg-vVkWcTSvbiSbUGfqvF5N7XYVXIjY1J6kXwnwV_4CRk6J_ej3OxGqfbPg1JRsdXnVkjiibZpQdWziDtLLIOcDuDYlb52reHFYBYa3LIyut3SQJwq1To3FeI4PN1YfFh3RD2bkS4Hlg8R5xvxU3jQsObZeg2x3BgZ9yFZ8BGsTxtpFSpkLVEheNnSGfwNNzuPP8yLjm97uRUBb1ZSJ68TOz8&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;0\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10026203170647\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNjIwMzE3MDY0Ny5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_2W4CORSByBL9ceScZuqVbCle_A-ugInio1-9doZx77AQybvciLXFyX3rphq-mkqElWwWaCluRZC__dF60yyDU2TvWDv0XSIz93ErtA8Tf1KjO-CX5tUMbJocNms-2GOrRlQ7mHkRQ9Vjq6b5MoIkzFl1tqWK0xdsUGY39ZbGrb5qf6zLv8c5TytXwKpU22e-JtGWdh6Ng2UQiW_wYRgA4tfAiA2U65T9ygu9xuNvS27qUa9DhwHXpAoLrRXnBXyRFHNYh2XOYT8oCMxLzxeJUZWqe0o4VrpL76S1P6kjV-7wi4QRCf2_0_LAcK6Gts2SgMHy8TqD2gZ6HH8ork7w0gPPZ8l-yN8cXBi9TQ6wbtJJyZ5jn52du5c6DfAdwHyVNqlh2wXV78fEXuYdY8cQx0djQG1L_STXdin3tTp7JhfBKSrC-lPSIvZQJgL4-LJefPzbz5SA3y2Hm-4MmKMjHhD9Bez1P0-xUp3Bv49H-hCedVeTZvJiJa8sujEg2NhBmjP7rx_VWNvpcDBlbPT3jh5s8zE1Cz2hzfSs-OHC6uN0Ro16ODwW_TMXnhJtGj4swqS22gsOqkQqlwQxUvhOxxgg4mXeSvvsuMEzqPGl4AroAZx3LntIP30vmxt6sqxRWNApg4U7ddnron2hr16Q7GZBXYgtn-3qQJyDtumJXh6wsB2HrxAQg_CQ2GpyLoQ7PzfCtu54wniBfWroFz3qQS4lF4u2_lvBdIGE0XpJ7vTJ0xsafcJ3IHzXsoOLbcvKgjUQxHXTONK3iUkZfoHnm1XxLvqbnaf28gpKL7jgj7QrlvTESxwCbD42Y4GZAcvyYlc2nTRBkoMcmpqV7OSxHkGRsJ_5AEnM6kAqzWzMg-vVkWcTSvbiSbUGfqvF5N7U20nxQt8rAK4RUH_zj0JHSYA-GsBR-zwYX1VSr6VBnwyVVEerY6E-mE-0MUV3EJ7nL_XFIIYBu3r2FGluxZ9FymqaSoMBfQhp5qpGIzo9aUnYcqvFfpNJErKKY5loYVC05D5y6oGgQ_p2J5Vd90k6htpgkjts6fNlg8ofKo5WJpPhEj8Cxrdp8NV8dBukLPYk&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;10157456&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;0\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10026203170647\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;10026203170647#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#0#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;71061400055&quot;, &quot;wname&quot;: &quot;ikbc W200/210 机械键盘 2.4G无线 游戏办公键盘 樱桃轴 无线机械键盘 笔记本键盘 W200绿色无线2.4G87键 红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/163155/5/13268/193660/6052e91dEe3ee8a2b/70964dbcb95dc707.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;439.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500090641&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=AiDdLj_HjsHFP_cxBnAfV4p-8ejcAZDQYb6tL_niknVbVWW0oAgBfsQ2_vtd_9r4Wb5rEow8lva0koKIaytj1OPM6pIIJDaOve7hBaZVGgx95s1UFf1tY0T8jwL7JsNddVHMtCWnQ_L2S2RD-9wlLXG-n8IxQTF6433U5nw433fk6DK_qdpkeL0NgbadvoAp&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTYzMTU1LzUvMTMyNjgvMTkzNjYwLzYwNTJlOTFkRWUzZWU4YTJiLzcwOTY0ZGJjYjk1ZGM3MDcuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;1\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;71061400055\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;213&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=71061400055$index=0$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=142573428047624154f1ff7f621a0245c131b7cf&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;10103831&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTYzMTU1LzUvMTMyNjgvMTkzNjYwLzYwNTJlOTFkRWUzZWU4YTJiLzcwOTY0ZGJjYjk1ZGM3MDcuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;1\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;71061400055\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;71061400055#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#1#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTYzMTU1LzUvMTMyNjgvMTkzNjYwLzYwNTJlOTFkRWUzZWU4YTJiLzcwOTY0ZGJjYjk1ZGM3MDcuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjEwIiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;948220&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10025873487444&quot;, &quot;wname&quot;: &quot;ikbc经典系列机械键盘无线游戏樱桃cherry87轴电脑外设&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/163836/33/12937/31896/6052c9d1E391a316f/d13a6fec4a34c0ae.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;409.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10025873487444\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3477942398\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500020466&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=qz9LyN0a6pnimoihxCDOiwVecPfxDTUkS8zvkjjdXVv_a3xfeCgF4IpIW90NS0zc13Ln-oA-wYyk-YCBFZMYU2boaoFrD65dhMLLPlOPTMXm7RuWqvqc_X-2MZ8SOjr6fnFWXC69nCMNj1puRRPG-nQLTZK_JPzxnqMbT4ZgYxCmut7LR0FRbwku9UDP5mWuqMBMGJO8lIaD5T3T6kva9g&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTg3MzQ4NzQ0NC5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_VjHlfNCUD6nDvcC3Wx2EoWcHqSEYQ6pvjQ1aPCkSTdkag3BECFIbhHE42kjuO9BdopoJR3uEZta9jSRE6l0UozJ3MjO7C943iU6c5DRGc9OaMHtQRSfNGpH76rwUZ2uE0BqjCtyWVHJk_E0uUq3DZ5-t5a2tIOmIGBXiXBEm-CKbRIJigrcmNFXT0zcEOYp67p6yaoeoMpTSCr4rPwbvCdQVj-i7BtxTmR6DgxkyERv6hD3jGYXbcUnUYFWS2f2mY_jAt4_f_leJZdOOf-cOX0OvUx-jONAscXdJ-uBqMqZE2jAKHmIt4D5j3fCAgq5Y55-JhGtyWVDosUEq8wQgVWv9a8J2ghvEsHemwqBKglSGXQOyy5E-LfLit99Ya770T2RedCcvHu3iURAK7SqP8h_qZupdNAEb8Isi8-rET5FAw4wQ5pIXYylsgGqUgvO9E_p4wnoHe3eDzpAt_lp20FDSv4pz2BKo1rXNB8re3VHQAcHmd_FYcTskdo89hL0LD-vbxfc_S9y2tQOnz1bBAFyujoAGTqmX9vWMZ0x7W-rxYt-Jj81_gGoWHMHrqR77ELxPEfBM0AIYSnorLv4q98-Vrg9GjY24ih8vQDT6E01T6WrJrjAnApLzcDYvvsPPNKwDP3655Ju9QhAocmC6IzFUZee6Na7xy-yCf_mr3bvxhKB9nexvouRiZgaPyPu-J0NKNCCCXX8YOAH8oM5D6lj9BWqubhd_2-hiLHbUx8YVsVUbaDCE9_Qr0WTzsQZTXa7u3JyTn5ju2-pmoANewEetougSifTxSMMeTh_jKwJgPThL0FIf_zIProD6qf6NcGP60IRnQm452qsyLMxuRIiZvOC3xdCP-mCuKPwdcttkmqHZabqf_sLoGUenB_woig99d1R5Jndv4jzy-jG8ADHQ6ltSAZOymTJn3YP2oFmzchW8tqUONiQo_e8DA2tXtiCMcj2PfOrgUhMO0KDqn_d1yb9TSf-TGTZ3F8qiG0K_l5Bx7Vypew7VVH9zAl6Sn9EsJ9J6fax7NptxTvlxiJZWPrWYU8hmMtkOLpoq9d-HFa7DvgfY9kjXT_DfRDv8&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;2\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025873487444\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTg3MzQ4NzQ0NC5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_VjHlfNCUD6nDvcC3Wx2EoWcHqSEYQ6pvjQ1aPCkSTdkag3BECFIbhHE42kjuO9BdopoJR3uEZta9jSRE6l0UozJ3MjO7C943iU6c5DRGc9OaMHtQRSfNGpH76rwUZ2uE0BqjCtyWVHJk_E0uUq3DZ5-t5a2tIOmIGBXiXBEm-CKbRIJigrcmNFXT0zcEOYp67p6yaoeoMpTSCr4rPwbvCdQVj-i7BtxTmR6DgxkyERv6hD3jGYXbcUnUYFWS2f2mY_jAt4_f_leJZdOOf-cOX0OvUx-jONAscXdJ-uBqMqZE2jAKHmIt4D5j3fCAgq5Y55-JhGtyWVDosUEq8wQgVWv9a8J2ghvEsHemwqBKglSGXQOyy5E-LfLit99Ya770T2RedCcvHu3iURAK7SqP8h_qZupdNAEb8Isi8-rET5FAw4wQ5pIXYylsgGqUgvO9E_p4wnoHe3eDzpAt_lp20FDSv4pz2BKo1rXNB8re3VHQAcHmd_FYcTskdo89hL0LD-vbxfc_S9y2tQOnz1bBAFyujoAGTqmX9vWMZ0x7W-rxYt-Jj81_gGoWHMHrqR77ELxPEfBM0AIYSnorLv4q98-Vrg9GjY24ih8vQDT6E01T6WrJrjAnApLzcDYvvsPPNKwDP3655Ju9QhAocmC6IzFUZee6Na7xy-yCf_mr3bvxhKB9nexvouRiZgaPyPu-J0NKNCCCXX8YOAH8oM5D6lj9BWqubhd_2-hiLHbUx8YVsVUbaDCE9_Qr0WTzsQZTXa7u3JyTn5ju2-pmoANewEetougSifTxSMMeTh_jKwJgPThL0FIf_zIProD6qf6NcGP60IRnQm452qsyLMxuRIiZvOC3xdCP-mCuKPwdcttkmqHZabqf_sLoGUenB_wqrJyC4BHtwE_lSL6Tu04AAbGk_l2VT17Y7SoMKNrH7WBk-mSPCw8WxMw097vxv0TnX_xIHNjMmzo112_xP1QwJ7VhEOl1vExgtrQLQA6wYtrbHYBptv47WlaPpLqZXQP5qtlN1uZ-VVzaaW76OvoNlLjQo4AmkYEZ6YpXMHsM6ZD588Pi-SJWkiXFOXf1iRik&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;10157456&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;2\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025873487444\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;10025873487444#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#2#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100008319489&quot;, &quot;wname&quot;: &quot;樱桃（Cherry）MX1.0 TKL G80-3810LYAEU-0 机械键盘 有线键盘 游戏键盘 87键机械键盘 白色 红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/117011/1/16142/50148/5f44ea20E9e0ee54a/10a0e3042820b336.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;269.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500020251&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=yAU8Es8ZZlIKnlDdvJRFXfLk0Px5LBav2l-Qm06mwJsdVSwvxkh3b5mQ-5aLkBiSgP16ZU01caUJKtxLaxjyncPkI7rWyhr0rnZJxWrS-nE3DzMJoZM_8TyC-_rfM40Ej-zVTnUsYp1NPcNcJyaMYygGSXwV6HSEqyxpUUiZyZTA7VgnydkQgULAlaGWQzSY&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTE3MDExLzEvMTYxNDIvNTAxNDgvNWY0NGVhMjBFOWUwZWU1NGEvMTBhMGUzMDQyODIwYjMzNi5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTAiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;3\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100008319489\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=100008319489$index=2$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=e65715975c546ee3272f2f4b1256929e88c6d230&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;重量：1.23kg&quot;, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;1000000317&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTE3MDExLzEvMTYxNDIvNTAxNDgvNWY0NGVhMjBFOWUwZWU1NGEvMTBhMGUzMDQyODIwYjMzNi5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTAiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;3\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100008319489\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;100008319489#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#3#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTE3MDExLzEvMTYxNDIvNTAxNDgvNWY0NGVhMjBFOWUwZWU1NGEvMTBhMGUzMDQyODIwYjMzNi5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTAiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000317&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;69118277007&quot;, &quot;wname&quot;: &quot;RK836 PINK无线蓝牙樱花粉机械键盘71键迷你可爱女生&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/119491/13/4378/342066/5eb64cf6E37f0c887/1f41e312921759af.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;349.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;69118277007\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3426569252\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500122668&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=kSLIu8JnNrGiMHQipViO9MuXOvZNZsXpP1_3Vm9MHUpTRi6hMx9_-mvs5bVpOlZ5hpYqBeVemgGJbFB-Am5HGTOtXdQ7K63R0w0O1xG_U9vnk1SNBKU6u7_DGONt8aXM35tXw9rlUO43u2k4exOADuuTx0xFiTjTdzPLNXOG6h6PaWNOo1q6cK8eZBwd6mny&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC82OTExODI3NzAwNy5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw8WBCpNIb9GBvxrNvASzIkuDfitV6CzI-O9FpXGEJGBvxQdeorqtGYHmwiGpeCRfjmbF-95uof0GliBSanEKkn9ZfiFiTkY4uWOsS2LcpBhbxGKEk0Yu5r1SlWFRmSXqtgcfCG3a-hjlJwEtJtn6oFvNlz8qot5euOHIiHKf2o0KJlys3dSnKYecUTEzgZX2WSKT-aDW__QRLkLUpqRyJeAHwEoS5k6_u6POXjsUvJ4KS-R5RI3R8uOatpKoatewdY_FZv3ULVPAV0trDlXJ6Vkl1ZNssEv3ox2hejqXZAcz25_9eYTeJmFQewm4Ohwrol5LhrvjE7uoGnk8Oi1jrna7HmJiKIDprbuurmJx0OaI1-_-0iTuwuTEaH1YAOLS44OaZwzz0fFafDzy6IzWJ9a_1WklRN0_DX4k2m1ByBtz87wNrYkv5VF_QR7_Rh5uWvgm2jOvCL-F5czeBTI-TYTh2n59rDBS_mrAD1J3LFTCBER-Mch78qOMPgP67aeWXuJgtgWzrfqtgidArr7UfxchX_Eny1PsQTOLQyf7JNphIQ80z6f7FTmLJbsxdQk8fTrjoookcFjfWz5kEI_LA5M6cHjUHU9iZF2eD3BgzGkn8a9iCAj2M0ih_Gjtzwwg_SFa2LKKt-i4fRdh3jF_m-9xfmFkDEsZBZ-wi9yKqURunt9mWhHEMQrO7xVdjLsKMufcXa-1E9zzfIcugik9ISRFfED8doNh0JCbRftVRvqeLwTbDDmmKPXGAOXz4vG7WRL_Vn3rUPHUZxH8OHkIDfjTqFVBOOsK6jOHA3krKmRkkMb6EK97XLy30ipZTCIPNraU70Nsq2CKD6s8TvG4jIxsdw3xlQCJyu8xsy1qbl-UwQG03UnmPpUxpTOn9y1sbqVkle-SYk1XD51qX9bYM8hD5OIWwdbQRdhB1l0h7aNi4rfJ6pC_vL8K6P1Cb2KHZuwk83pK3tQMvV2SdLmOvvJZ4GfifHJSfRMcQ8cMOuw3sbhh4kUdQu_1yH5WFOv8u57s7I10VaEPFv1zb7xRygt006qRv9Fx0k_aSku4W_y4i4aaZ0UYnyYrsSXedf4PoWggrOk680MjT0a77R2ZxHz&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;4\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;69118277007\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC82OTExODI3NzAwNy5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw8WBCpNIb9GBvxrNvASzIkuDfitV6CzI-O9FpXGEJGBvxQdeorqtGYHmwiGpeCRfjmbF-95uof0GliBSanEKkn9ZfiFiTkY4uWOsS2LcpBhbxGKEk0Yu5r1SlWFRmSXqtgcfCG3a-hjlJwEtJtn6oFvNlz8qot5euOHIiHKf2o0KJlys3dSnKYecUTEzgZX2WSKT-aDW__QRLkLUpqRyJeAHwEoS5k6_u6POXjsUvJ4KS-R5RI3R8uOatpKoatewdY_FZv3ULVPAV0trDlXJ6Vkl1ZNssEv3ox2hejqXZAcz25_9eYTeJmFQewm4Ohwrol5LhrvjE7uoGnk8Oi1jrna7HmJiKIDprbuurmJx0OaI1-_-0iTuwuTEaH1YAOLS44OaZwzz0fFafDzy6IzWJ9a_1WklRN0_DX4k2m1ByBtz87wNrYkv5VF_QR7_Rh5uWvgm2jOvCL-F5czeBTI-TYTh2n59rDBS_mrAD1J3LFTCBER-Mch78qOMPgP67aeWXuJgtgWzrfqtgidArr7UfxchX_Eny1PsQTOLQyf7JNphIQ80z6f7FTmLJbsxdQk8fTrjoookcFjfWz5kEI_LA5M6cHjUHU9iZF2eD3BgzGkn8a9iCAj2M0ih_Gjtzwwg_SFa2LKKt-i4fRdh3jF_m-9xfmFkDEsZBZ-wi9yKqURunt9mWhHEMQrO7xVdjLsKMufcXa-1E9zzfIcugik9ISRFfED8doNh0JCbRftVRvqeLwTbDDmmKPXGAOXz4vG7WRL_Vn3rUPHUZxH8OHkIDfjTqFVBOOsK6jOHA3krKmRkkMb6EK97XLy30ipZTCIPNraU70Nsq2CKD6s8TvG4jIxsdw3xlQCJyu8xsy1qbl-UwQG03UnmPpUxpTOn9y1sbqpXJIzOTxIwOoC0GvOCmeOl2v8LCY-7TAU7fesOFralSQytzIfzQBRzpIf2xDZHHKzi3kAkIPM_CXMi4301T-RBanYl9T_0qmlidTJgMOXhs6X_CwjQZdgJWf0EQudR-Rf-sWlB7LcobpfcO1hruEAortL0_bfY2x-pDnJBpsY7xn1kwPHfFLfFBy5tAan9P-yfRVStFP_YVgtcJO5G43A&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;795345&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;4\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;69118277007\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;69118277007#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#4#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;791519&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10025869855401&quot;, &quot;wname&quot;: &quot;ikbc R300机械键盘游戏樱桃cherry轴电脑外设笔记本数字电竞办公有线自营外接背光 R300白光有线108键 茶轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/167502/30/3217/78263/600926b0E27992914/5ac2dc1dcbac8b1a.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;439.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500162382&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=RpSnuAUXA7mywXsKZp7J8aVD-IuTPj6O-UjatepmFVlzSI4mc7EJeAJFmCxJMQoUZ6KKO-4hjdO8QRm51KJ59sHjHHUHO1PEqBb7U6YKpSNhVv8mm-hDM7oLEaG_GJUWocQQbOrrLJMKkSt2EdM699uTiwh_QayL_ivrvozk4Bp9ekYci2XffK1GR0QkNXs9Lwn-1nJnSa5KaMGOOd8lgw&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTY3NTAyLzMwLzMyMTcvNzgyNjMvNjAwOTI2YjBFMjc5OTI5MTQvNWFjMmRjMWRjYmFjOGIxYS5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiNzYiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;5\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025869855401\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=10025869855401$index=3$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=e445793ad836f78ac63fb95916aedcbd6ccd77b3&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;10157456&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTY3NTAyLzMwLzMyMTcvNzgyNjMvNjAwOTI2YjBFMjc5OTI5MTQvNWFjMmRjMWRjYmFjOGIxYS5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiNzYiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;5\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025869855401\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;10025869855401#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#5#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTY3NTAyLzMwLzMyMTcvNzgyNjMvNjAwOTI2YjBFMjc5OTI5MTQvNWFjMmRjMWRjYmFjOGIxYS5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiNzYiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10025869717219&quot;, &quot;wname&quot;: &quot;ikbc87机械键盘有线游戏樱桃cherry轴电脑外设笔记本&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/170109/12/11224/25839/60474917Efbe08715/6b53594ce239c92b.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;349.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10025869717219\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3319955433\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500084034&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=yUDbMmrpvET9NU8nCh1vQc-Y7dkQ-I-19VmQMCyMLazwTVeKtIyyj7I8nlmCYRLp5Kf512JvUd6OGyVUrqSdaJFVuDYsDYcI8Xr4mMh66y6KfZJC5ZaUjnlFK7XDHGjUr2FAv4WSZdN9mZeEUF73wAf1w59rdY5qC8gHd2HSLtHIRL64CnZ30W31DyEAanVv-L0QBgM2TH_riRGS-njucw&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTg2OTcxNzIxOS5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_PDuXX7PMo_9GF0HGHma9UgS-C4PxyWhhc7VDDHkomZr1nu_QFVPOThUpY1fQfCno8Zyt-GWSrl6K1CsMv3Rkn3mSPTHz4mdZoeulNeiKTMqwSA4X9qfZd1PAQ_KFrwNKWHfVdxAHSq3KY4fsdyc0vF6-SCgmsj6pX4kM3QaQBplCELaHclKfNWgJ9jnJ86btl-ahpcdYSthJzgpPvkWhZK_1QGGCAgZ37eKOiZg1D2WdOCrK2-ONgRGBFTEFZeegrOr7hQ7M6SFBJTUt1A4HI0JtDJ8v9xicYE5eO9HtrycHqQRmqVZytbSrTs8h9hF--khyhZwHhWpeLpNUL-AwQmibXo_WPpTvJD-bQUBQ2CSMAaY9KTM1sgA3kosAoBy8dLYET7udd_idlz7eAnoYn-GJJasbEc82Wij9G5rrz_QmDKxr4YYEMfyLBmszW2XdE0gcG03dCApSZimwx2AC47RwOh5vwd628hOh1mgALNiOcVN5TR9wEoNSURyBai9auNb37NO9EAikx4vCf08gASu9zQ_3J-IZL0NdobmoZf8WBUsxzWOa2F46d1o2QaMN7pgAWXl8p2UlhHREeIfJByIMhPlrFqh3vZoEhJ37TnMIMRHqgifJeSCnJMiB0GsOGT6B97ydIswImOl-JV9qiP-SwpieekY1kh-rLuTTPE3EBsqgkhOq7BTmWXWzS67Z3PWZe0GpqDNOMXrOl6yu8lF76EsCG9T9eQuVxNCrn60ngKDZPng_ETISTO9E_hgZ1eZkbUX5QHAvExwemkVCaxH_I38KhrtRYxlg11bxzIKaDfJwUVVodGdlUKmfhbun5dD4VXu0O6wz0oARNhwGGmlKfLfFhJpaGNyhVzJTjtRqBJtPGU3qOHpxYS7K7BxcYR6mLdERXS3Vqpd3tr3F-CbJDAWog4dOsh6HqWK2aFHYeuDokCh4Ax-FQxGAxS_u_mve41-SEHPoaVLQjfw4W6zT06j8yNsXcFFFyyLgJmSjRTUkC2-5S9h-3KKhmzzf-6PFcChHolPQx71Nh5Ey0TnZNeoe9ax_7171df3IgRVxsdx-V-zVQlAcCxD8dqHE&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;6\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025869717219\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNTg2OTcxNzIxOS5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_PDuXX7PMo_9GF0HGHma9UgS-C4PxyWhhc7VDDHkomZr1nu_QFVPOThUpY1fQfCno8Zyt-GWSrl6K1CsMv3Rkn3mSPTHz4mdZoeulNeiKTMqwSA4X9qfZd1PAQ_KFrwNKWHfVdxAHSq3KY4fsdyc0vF6-SCgmsj6pX4kM3QaQBplCELaHclKfNWgJ9jnJ86btl-ahpcdYSthJzgpPvkWhZK_1QGGCAgZ37eKOiZg1D2WdOCrK2-ONgRGBFTEFZeegrOr7hQ7M6SFBJTUt1A4HI0JtDJ8v9xicYE5eO9HtrycHqQRmqVZytbSrTs8h9hF--khyhZwHhWpeLpNUL-AwQmibXo_WPpTvJD-bQUBQ2CSMAaY9KTM1sgA3kosAoBy8dLYET7udd_idlz7eAnoYn-GJJasbEc82Wij9G5rrz_QmDKxr4YYEMfyLBmszW2XdE0gcG03dCApSZimwx2AC47RwOh5vwd628hOh1mgALNiOcVN5TR9wEoNSURyBai9auNb37NO9EAikx4vCf08gASu9zQ_3J-IZL0NdobmoZf8WBUsxzWOa2F46d1o2QaMN7pgAWXl8p2UlhHREeIfJByIMhPlrFqh3vZoEhJ37TnMIMRHqgifJeSCnJMiB0GsOGT6B97ydIswImOl-JV9qiP-SwpieekY1kh-rLuTTPE3EBsqgkhOq7BTmWXWzS67Z3PWZe0GpqDNOMXrOl6yu8lF76EsCG9T9eQuVxNCrn60ngKDZPng_ETISTO9E_hgZ1eZkbUX5QHAvExwemkVCaxH_I38KhrtRYxlg11bxzIKaDfJwUVVodGdlUKmfhbun5dD4VXu0O6wz0oARNhwGGmlKfLfFhJpaGNyhVzJTjtRqBJtPGU3qOHpxYS7K7BxcwLjoEeoO8YNhx27t6YEZbmpgq-_jSzn2ccA7W13CClEBNBYBN-t0N1rNQ4SpW0DGgVa2f-3R7DuTYObgtFiH0ccDvowILjzhLtznsisEEO1zWLI98zwRv1TEmAb9YAZyA5vDtvZdrOIGkg1RYSlwKVK_irnxNovzMpNUrepsT19KtXWQNEbOE8auDXiYOGM0&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;10157456&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;6\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025869717219\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;10025869717219#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#6#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;10025307&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;70732588133&quot;, &quot;wname&quot;: &quot;cherry樱桃轴机械键盘背光USB有线RK987电竞吃鸡游戏办公打字笔记本台式外接电脑女生 87键白色【无光】 德国cherry红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/162503/31/5949/113505/60216a07Efe78b375/f7884e126c9be713.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;259.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500061895&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=5vjWG2ybbbr1NmlxEk8ZpSZyJTqehswdw8G8puLfYLIFtYekkJrN-KvHQzJ2JMjo1SXZakqyEMgxauP5tXV19oyEYv_tH_wo-nf58F1ajkN5LUUwyTcqxFC5i2WuV4mqdt2Cxm002HOjpit47Vr6XDHZUayBNIe_qgeEdEAW8vK5mO_1T5LNdL3VoCCEvpUn&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTYyNTAzLzMxLzU5NDkvMTEzNTA1LzYwMjE2YTA3RWZlNzhiMzc1L2Y3ODg0ZTEyNmM5YmU3MTMuanBnIiwic291cmNlIjoiMCIsInRhZyI6Ijc4IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;7\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70732588133\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=70732588133$index=4$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=d87ed2f87fb9fccda32d4305e238a8146d182b43&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;671231&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTYyNTAzLzMxLzU5NDkvMTEzNTA1LzYwMjE2YTA3RWZlNzhiMzc1L2Y3ODg0ZTEyNmM5YmU3MTMuanBnIiwic291cmNlIjoiMCIsInRhZyI6Ijc4IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;7\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;70732588133\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;70732588133#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#7#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTYyNTAzLzMxLzU5NDkvMTEzNTA1LzYwMjE2YTA3RWZlNzhiMzc1L2Y3ODg0ZTEyNmM5YmU3MTMuanBnIiwic291cmNlIjoiMCIsInRhZyI6Ijc4IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;666766&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10027637673177&quot;, &quot;wname&quot;: &quot;RK84无线蓝牙2.4G有线三模机械键盘樱桃轴cherry手机ipad电脑笔记本Mac可&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/162685/34/12077/136676/604b443aEc444cbc2/5eefb4139916b03e.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;499.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10027637673177\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3451338450\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500063971&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=XzKUtNVao1hbWBYf1MWwNyk6YFtQZc-vcWBVmflpnNR_Lcaw-WTTzCQpliXi-ZMkKJe0UGba3onUSOdgdYihe2XINSQpoDSsmVwCI7DJc0H1NJsNXHVsxr4yacMdxtXNSnD2CqgdlC7eynYI0qb-NVJYNQVPqc6ViyAEyeH-XMaIuLIQ9yec9VO6h77obOp7QIV3hfyByEPFK6YROf7zzQ&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNzYzNzY3MzE3Ny5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw-5KZ-xF5a-d1w2cJ42FFgZ9hRjifcCNI_6ydsFp0XYqfLoSx7L4Cs74KN9vZUErjPgnT3Ie0Vt4RvO8LSy8GziJB2ny0R_xIH-p0M1ng0gYtKOwJUMzzhMnu3JtyztOrsX-rg3Wut_QymwRn9D6UrOYe9sIFgYTcmJlNJtSNBZMTpwvKfx2phXNBwnOdvdRnhUuuaCRzBldC46N3dDVyZG-nBthmOjxRVEUBKbUMTypMFDkBUHK-S2mUTRIxZlnittWmuVru8xnQZU5oOLUEUI1tbBgdZtSbU19YRzrs1fSEF_nQGSQOWze8XVyud3QoT9iNwSMpsWXoMd0_H_OA7H87BuHE2piDTKWc5krRoe8az_zlFztezhvHLbtJOUyAnDBM4KcsIyOqAjJlZ-IR1cXupRmYHTpJgSJlxvFh4UHhNWsBBvvCf5Civg9-8Ai_y_2Q1CnFYbGxr9CrlR4B5HyX0w0ALZh8nsvROw3Yi8MvH64Af02dAD-CvW_r-0tK_8Yu0w-wiiUWIV3ytvFSdydJ_vkJzE8EePwT1JImm4HSsNof6jJpJtwcOWdxoOXG42NFAKZMLiAekmsuLS392ePz2nSKfz7pi4PiGgPhXowaYRghT217CrB-FEgavaaw2XCLKSmStQqTWi0uR7prrLIEiKMBEzxsOoo82v7WepRt6d1jM2p33oxKX5k1tYJhALCvaDlj-E_WKb7xOeUDR_SywOXBoIeypzPLwMcBVXkRwwLOs2foXxaL5PieZGyakNg8Gn7W95opqnREx4xqixl2lke9nhYfhMwkCb9Jju-ug0lMCMlsCeCP0Ul60Z5yhmj6wGZ1vewzvxUJfkXDKHSXVtcgM_XcPmvZKtb6p1-pl3RsFFSWTccq5jblN44viJyrvzmqXvFBa2ybp-Lt6c02U5pGP_LDvnfd9nRRNfHfuvj8Yhk3bvNC5wA5Z9qkuRhP63dEKt2J1cv-ODmCNovz_tvUzjn6pcYw4DQ94qUZdQSkDZorWTFk0CdmH3uQcsn82gShqXAAE8Bm0t1s7I6RvPDxvlTHdKm7nQH86w0K7ULqhJ2wJCuGOyoZmB2dfuX8SV7gmyWWlGgpsQwqJ0&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;8\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10027637673177\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNzYzNzY3MzE3Ny5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw-5KZ-xF5a-d1w2cJ42FFgZ9hRjifcCNI_6ydsFp0XYqfLoSx7L4Cs74KN9vZUErjPgnT3Ie0Vt4RvO8LSy8GziJB2ny0R_xIH-p0M1ng0gYtKOwJUMzzhMnu3JtyztOrsX-rg3Wut_QymwRn9D6UrOYe9sIFgYTcmJlNJtSNBZMTpwvKfx2phXNBwnOdvdRnhUuuaCRzBldC46N3dDVyZG-nBthmOjxRVEUBKbUMTypMFDkBUHK-S2mUTRIxZlnittWmuVru8xnQZU5oOLUEUI1tbBgdZtSbU19YRzrs1fSEF_nQGSQOWze8XVyud3QoT9iNwSMpsWXoMd0_H_OA7H87BuHE2piDTKWc5krRoe8az_zlFztezhvHLbtJOUyAnDBM4KcsIyOqAjJlZ-IR1cXupRmYHTpJgSJlxvFh4UHhNWsBBvvCf5Civg9-8Ai_y_2Q1CnFYbGxr9CrlR4B5HyX0w0ALZh8nsvROw3Yi8MvH64Af02dAD-CvW_r-0tK_8Yu0w-wiiUWIV3ytvFSdydJ_vkJzE8EePwT1JImm4HSsNof6jJpJtwcOWdxoOXG42NFAKZMLiAekmsuLS392ePz2nSKfz7pi4PiGgPhXowaYRghT217CrB-FEgavaaw2XCLKSmStQqTWi0uR7prrLIEiKMBEzxsOoo82v7WepRt6d1jM2p33oxKX5k1tYJhALCvaDlj-E_WKb7xOeUDR_SywOXBoIeypzPLwMcBVXkRwwLOs2foXxaL5PieZGyakNg8Gn7W95opqnREx4xqixl2lke9nhYfhMwkCb9Jju-ug0lMCMlsCeCP0Ul60Z5yhmj6wGZ1vewzvxUJfkXDKHSXVtcgM_XcPmvZKtb6p1-pl3RsFFSWTccq5jblN44vgPEYrsig0ZNNEsBy95zuSmd4dkYiPvGTIONZGPLyQ8ewxxpwFCrdNMhz0Uwa0oodnuLpON3hPoeFFej7l_sbTVaub9Y-xBsPNCi3XCF2EgVlzD9Z6iX3rxjGA-ZYC-f7kYmzNx01BZDN6-6074JeK33CFrm40iiaTVSz8BgyBshlkRfWbNd6nguwfHF0eFH7Skm8tlGM7uSYJR-wSpkTEd&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;752572&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;8\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10027637673177\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;10027637673177#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#8#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;751048&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100009226881&quot;, &quot;wname&quot;: &quot;AKKO 3098 DS 海洋之星 机械键盘 有线键盘 游戏键盘 电竞 98键 全尺寸 无光 吃鸡键盘 AKKO V2粉轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/167877/12/3189/67264/600533a8E53610be2/5a66766f77143df4.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;299.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500063881&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=WPtTUZ5W0ZmVzV5Lis-DRrWIMyK_C83xtCKticmzoEXYkxou9UAF9lHepvcSrgR37X2DjJcupzbTMhnU4iNPrvGaQm3qLVevZGoViXXSYhHR7wiI59IIf8YgRC8NCwJe7W8jl67m6C_RVYgX19Cy9kMnt_bxXsmRqsHFVS68jUZ-Urm2TLGclXFWVJQmWA-z&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTY3ODc3LzEyLzMxODkvNjcyNjQvNjAwNTMzYThFNTM2MTBiZTIvNWE2Njc2NmY3NzE0M2RmNC5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiODAiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;9\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100009226881\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;新品\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=100009226881$index=5$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=829699811ab9bc242cb7ed2cb26e847d53d4ad45&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;重量：1.48kg&quot;, &quot;renewal&quot;: 0, &quot;resUR&quot;: &quot;rec_005&quot;, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;1000078903&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTY3ODc3LzEyLzMxODkvNjcyNjQvNjAwNTMzYThFNTM2MTBiZTIvNWE2Njc2NmY3NzE0M2RmNC5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiODAiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;9\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100009226881\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;新品\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;100009226881#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#新品#-100#1#9#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTY3ODc3LzEyLzMxODkvNjcyNjQvNjAwNTMzYThFNTM2MTBiZTIvNWE2Njc2NmY3NzE0M2RmNC5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiODAiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000078903&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100003058473&quot;, &quot;wname&quot;: &quot;【限时秒杀】樱桃（Cherry）MX3.0S G80-3870LYAEU-2 机械键盘 有线&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/143561/20/7379/100729/5f4ef2cbE167ed1b2/ce4c902425aa9254.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;437.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;100003058473\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;2200988569\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500134825&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=BCSxUFgH6W1qcmKHgcg75oHJei0o2kG6_2s9gMtf5GtCv52wSlWA5J9pvHhOYlzDaYeHjdSeydwKFIGV-wEx1bhqoTPYa7IRfUBIvXc0L-xBcF3CJD0tmfgdXg-jy28mE8lRns9X_3eoAqo73ZqcEyEfMZrG6JWf54T-MeE0yI_-d3UmDiPcqN28n8rQpwVaEeiLVtXZHdL2NCHvZCAZeQ&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMDMwNTg0NzMuaHRtbA&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw8ycAf0BNaeurnIpB3RQyKRTr7zPtHKcDuahJE1bdNikQ7pRQ3beFSD8bcX0_tYoBELknwuxvKbCeM-rTkgUNU2eV5Rx5S63eXucD5nPOid0BNdFzehMjBAhcOlDxgQLfmFvamAG1iA9NGhFOxT29atZQP7JxR4u-ypOmDMVGK5V0iBmP3E6dJc-1c9cY_S52qs1fIH6jSkq4yEwho9CnQ0kDMzSGaf6R9T6mIuvZZaqp0w61ckJDPDBYO3T_nT44yFyOlIk7CvscMklsuaEbmQk_sxKOrW_dFjthdGqDNLSoPmYT5EwhCZ43Qxa9V47fqDuA-o_OZ2jDLJT7PqC_KzhVASMTpj_fdRvnxXw0pteIsBvwSSRYIy4EdXw9YF2xrK-roQCysc6O3jqm-Qm-_qrV8xT2Kloq5dYyfq9A0kmBAO-HzwiZWfIcIceDmFAVfjBI5yDt93kmts8snnnlhL2tQVyy2Nd_cg8J2b9idQcdUxy0-mSG4rcOK-78xEJEthUpQ3koWiBGVDbUBltn2cNdZTIlpqzbFwJwP6mOHj7VLUz5r8W0w4LRSsLxirF2cBspiBZMnaNTcbuHDUzW8SFnKlk-Wu5zTmDHyKXejvrzek_TDACbKxyE9V5bspOjoqvZrZ39BWpuquYZe31DJYxhbnsp-7NeaQJxLQ4Mfbn_2YjjlalijTe-WbdDMsJGnkXHNHr5GNA-M1CZmXdd97Yi1WXHgvdLC7YzjMpuA2BB29bERoSXOxXgZ8YBcmN1enUFrDL22z9HFxD3avwzhrex8Exwg-84X92P2me0nHElEVWJCfnyymlCFOMVPZe4vZOgNrWh-CHXeL_vhzpGebjEEoTisNNiSHcoNDAH5qvojR4Rt3PEo44WyFQwjtoNUqc5KYaKlVHrsyKki9SlKeMaRc9AvHLggDQgRnDsIFizBRzqy1eyaOQLEILXE1tVrp8FNvxO-8AGet-TJbqlXmXRKH7uOhFp5B2QLVOJg1zclUcoj2skuS7LiKhfa9H8vlHDTR0L772y9Plo_hj7aw2BKePzhCQhoXRYoAY9z8_prWh8gor0m4NGOiJ-qJ26cn2OF2HOq9GrzHRGPZBvE1&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;10\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100003058473\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMDMwNTg0NzMuaHRtbA&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw8ycAf0BNaeurnIpB3RQyKRTr7zPtHKcDuahJE1bdNikQ7pRQ3beFSD8bcX0_tYoBELknwuxvKbCeM-rTkgUNU2eV5Rx5S63eXucD5nPOid0BNdFzehMjBAhcOlDxgQLfmFvamAG1iA9NGhFOxT29atZQP7JxR4u-ypOmDMVGK5V0iBmP3E6dJc-1c9cY_S52qs1fIH6jSkq4yEwho9CnQ0kDMzSGaf6R9T6mIuvZZaqp0w61ckJDPDBYO3T_nT44yFyOlIk7CvscMklsuaEbmQk_sxKOrW_dFjthdGqDNLSoPmYT5EwhCZ43Qxa9V47fqDuA-o_OZ2jDLJT7PqC_KzhVASMTpj_fdRvnxXw0pteIsBvwSSRYIy4EdXw9YF2xrK-roQCysc6O3jqm-Qm-_qrV8xT2Kloq5dYyfq9A0kmBAO-HzwiZWfIcIceDmFAVfjBI5yDt93kmts8snnnlhL2tQVyy2Nd_cg8J2b9idQcdUxy0-mSG4rcOK-78xEJEthUpQ3koWiBGVDbUBltn2cNdZTIlpqzbFwJwP6mOHj7VLUz5r8W0w4LRSsLxirF2cBspiBZMnaNTcbuHDUzW8SFnKlk-Wu5zTmDHyKXejvrzek_TDACbKxyE9V5bspOjoqvZrZ39BWpuquYZe31DJYxhbnsp-7NeaQJxLQ4Mfbn_2YjjlalijTe-WbdDMsJGnkXHNHr5GNA-M1CZmXdd97Yi1WXHgvdLC7YzjMpuA2BB29bERoSXOxXgZ8YBcmN1enUFrDL22z9HFxD3avwzhrex8Exwg-84X92P2me0nHElEVWJCfnyymlCFOMVPZe4vZOgNrWh-CHXeL_vhzpGebjEEoTisNNiSHcoNDAH5qvojR4Rt3PEo44WyFQwjtoNW_kwUTZ9A3Qh909aGJ9yALLwTf6pAxsHDtNBygWpofig1FluBieJh9F-fr2lLsEHXjBV86wT-QwbDyN3-Dsslext26KIh6mIlDu-sCvJVXFeuc_9O28RWUzKN2Dblx5YqqtTdPzQljN0slrX__jv-3O370WPj9uFuWNkrzzp0osLk4upBuWc26q6lEFZ_w13pZ2xTPXzg_rhRSmrMcEvJW&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;1000000317&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;10\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100003058473\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;100003058473#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#10#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000317&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100008954253&quot;, &quot;wname&quot;: &quot;罗技（Logitech）K835机械键盘 有线键盘 游戏办公键盘 84键 白色 TTC轴 红轴-吾皇万睡系列&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/129929/37/11858/100198/5f7fd9daEc421f2cc/2d1ab5ace3cdc5f4.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;259.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500124699&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=aa7f26U5cTTYAV8UL2OqT0i196dSllHQwpa8ilavZOSg2ThhatAai--ZBajAUYXqf-gz13FAJtXjNbob1IW4s605lvmq4crRmgY-afFceo9SdIcXgT8ZNx8FtpwEV-gK39jpNjAuhNjP13O2pSJefth5edJSZdxMrQICzUA2QkNCq662yM-9be3Dt-8v9CpU3s3SivvKIc7lDgvS2X3VNQ&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTI5OTI5LzM3LzExODU4LzEwMDE5OC81ZjdmZDlkYUVjNDIxZjJjYy8yZDFhYjVhY2UzY2RjNWY0LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiI4MCIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;11\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100008954253\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=100008954253$index=6$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=95eb1bcfd4021fed2f8aa59d178a66fba1d3a9a4&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;重量：1.58kg&quot;, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;1000000248&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTI5OTI5LzM3LzExODU4LzEwMDE5OC81ZjdmZDlkYUVjNDIxZjJjYy8yZDFhYjVhY2UzY2RjNWY0LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiI4MCIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;11\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100008954253\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;100008954253#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#11#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTI5OTI5LzM3LzExODU4LzEwMDE5OC81ZjdmZDlkYUVjNDIxZjJjYy8yZDFhYjVhY2UzY2RjNWY0LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiI4MCIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000248&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100018969104&quot;, &quot;wname&quot;: &quot;京东京造 K8蓝牙双模机械键盘 87键背光茶轴无线键盘&quot;, &quot;wareType&quot;: 8, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/167132/24/12725/55592/604ed5fcE600dec56/8749ea3c44b7d26b.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;428.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;priceColor&quot;: &quot;00CC88&quot;, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;100018969104\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3627509727\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500130596&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=fwfp5F4wjfaJDOFK1rjg1BEvSvJotLRaS0wi13b-A3aLHr2eiMBYcSMg6LgLBNj9n0ExrhVqlFYWEaRTjDPYbg-0eq0TKZP-bDUEB963S6CiI0uIrETAB1NAIxtQicC4oGQavE4GSj2CR9OPX7zvG_P2ohEdc0lFlj24JLPCBZzRC4meqCmiceAZ3AJ0BdK7iQo3iEUULDoI_ILiWw8s9A&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMTg5NjkxMDQuaHRtbA&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw-pAaG1FXUpYU-_4fDJ0pkNmyqvHfw5E7ab6-ftP4wCuPx1bYSXAmvU2xGyY4E_Dxxeb1dZL-WMvne0AQ-djMTv7UbJvJJOvrLdqWYIoIMBZ8qN1qcD96_TsyuddGrN_c1chwaAjynHFrXOmh0k2vVH9wvlh26852ZNe82EoPw7_3G5MRJRrYetb86DOGVUwrmCxOiJ119651BUSik2y7yKkYuSsO_T7KIicrO9bj1g-Hj09r_nQIIBdX5lzC4d0fHChjHzusjHP2OwN9aLl67X2U6R5vH3CHk4BYdbalakzybpWvrMlYamqByVy-yLL2a_9AwLLt1DbTMNZ6UTWQJ8GZZhFMJU9ay-mIjxZHrrpsOovltgLzzHwlhTPXhO96-jt8T9u1IQuKD2Hw7V_-s0elTKMXNuJeMYFiI38AAHl2zLKXn8j_DUYTB1ONmLu23WGziNEyliyRiiQ5mFRxfrJKsoFa9DMVoGppG2JB-4oh8k69GpT9T-bAZgS-Wiqv9ThlTUymgpoimIVzVDZZoys7fvlt2y0H78Bm_mEg9T4xnXouo4iGwOkThXTwQ9QJDi7qX3lWCFEzTfWA_plu5VaIywmT7pscMr1vhcRWsCqrHSd7I33s8KUIXuqYSVpVfLsQPJDxVLxv0Wcv5iFOjPHoEP7Uu1xGhfCtHet-CurOUAHlQu19L2LiaX08tSfh9A8fqtB4Y3aElQrBoWxGpN-y4RqoxXD8QfricRKO-Iv-XJyWUEE65ZnKjgmotU3V6wwKDRrcyb7mNV3SHyaJnB6a2dGDaikUgqWVSWteXolOkfVy379qayEF9Re0Y0Ehzyvj3If3VYavi5p40h4Dj4QRORrpIlot1RluScgd15j7eIPOj0iN-N-kJSxlKHeN4HXk-gMxWOti0923TH3pnuxb6hbnrYzImlYNoHgdMRE6WAVcQnAOs2PWxj8dsTPnKKI610kvgkPTwg5FhAZFxdejOLUMqCNPNwFDISH8s9m75XK3FQjUAFSwGa70kZ9FliUmrM4WPijfvdngBKJLkayiUZ_QCU3INBvcP2_PgeVRE4NaTxEYJkU_KlF28UD9YPgWOuVKs5_FsCfWPkGL75xcjCt1MmP6QMG8xNK6cibg&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;学生价\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;12\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100018969104\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMTg5NjkxMDQuaHRtbA&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw-pAaG1FXUpYU-_4fDJ0pkNmyqvHfw5E7ab6-ftP4wCuPx1bYSXAmvU2xGyY4E_Dxxeb1dZL-WMvne0AQ-djMTv7UbJvJJOvrLdqWYIoIMBZ8qN1qcD96_TsyuddGrN_c1chwaAjynHFrXOmh0k2vVH9wvlh26852ZNe82EoPw7_3G5MRJRrYetb86DOGVUwrmCxOiJ119651BUSik2y7yKkYuSsO_T7KIicrO9bj1g-Hj09r_nQIIBdX5lzC4d0fHChjHzusjHP2OwN9aLl67X2U6R5vH3CHk4BYdbalakzybpWvrMlYamqByVy-yLL2a_9AwLLt1DbTMNZ6UTWQJ8GZZhFMJU9ay-mIjxZHrrpsOovltgLzzHwlhTPXhO96-jt8T9u1IQuKD2Hw7V_-s0elTKMXNuJeMYFiI38AAHl2zLKXn8j_DUYTB1ONmLu23WGziNEyliyRiiQ5mFRxfrJKsoFa9DMVoGppG2JB-4oh8k69GpT9T-bAZgS-Wiqv9ThlTUymgpoimIVzVDZZoys7fvlt2y0H78Bm_mEg9T4xnXouo4iGwOkThXTwQ9QJDi7qX3lWCFEzTfWA_plu5VaIywmT7pscMr1vhcRWsCqrHSd7I33s8KUIXuqYSVpVfLsQPJDxVLxv0Wcv5iFOjPHoEP7Uu1xGhfCtHet-CurOUAHlQu19L2LiaX08tSfh9A8fqtB4Y3aElQrBoWxGpN-y4RqoxXD8QfricRKO-Iv-XJyWUEE65ZnKjgmotU3V6wwKDRrcyb7mNV3SHyaJnB6a2dGDaikUgqWVSWteXolOkfVy379qayEF9Re0Y0Ehzyvj3If3VYavi5p40h4Dj4QRORrpIlot1RluScgd15j7eIPOj0iN-N-kJSxlKHeN7J6O8ynY_ueAAlu-cd48XD4mwyOQAUWTn-LDpbh0eoNB08MIyAuPTBJZvguz_PPrfgISAa5MKkc0yM4EqfJk9kzvQjMtb5269W1o7zX8Gyz1sDQiA8C_xTVveGmja3SDjQaYo8T2tgtmnGJSYq_NKRRL97-vFfCJKF0ymMHe6KeW1xedkE6nKDS6mwMUaSdJajGbx5DOCATY2sDjWpVV5mxJYEoBP7g571BIcGdFK6-A&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;icon3&quot;: &quot;tab_141&quot;, &quot;icon3Price&quot;: &quot;368.00&quot;, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;1000096602&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;12\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100018969104\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;100018969104#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#12#-100#0#-100#-100#1#-100#-100#0#学生价#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000096602&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;26396325058&quot;, &quot;wname&quot;: &quot;DURGOD杜伽K320/K310 87/104键cherry樱桃轴可编程背光机械键盘（游戏键盘） TAURUS K320深空灰（无光） 樱桃青轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/171454/33/19389/147528/607b097aEda837f3c/93e630a293fbc0d6.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;449.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;0-8969-0-76-0-16880&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=9Eopi2clPyPxHylMt83-coUJDWWjb9-V8K0s0W9wvoXlARguQeTCEqM-WtSKb6IGKgm0VOWWlvuDWDjNRkQutucoXa8r2WqOyq6NQdoC-2okw_B8o-4EA3gwBqVUuuyjShcDVlEI6QK_xRPnNJzo0vyFvfFEI1CG0T0HhnB61IK9BopMCrTJgDHtZacybVo_&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTcxNDU0LzMzLzE5Mzg5LzE0NzUyOC82MDdiMDk3YUVkYTgzN2YzYy85M2U2MzBhMjkzZmJjMGQ2LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxMCIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;13\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;26396325058\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=26396325058$index=7$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=df54cdc181f51f328dde81ccf31fec6abcec9f9b&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;772293&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTcxNDU0LzMzLzE5Mzg5LzE0NzUyOC82MDdiMDk3YUVkYTgzN2YzYy85M2U2MzBhMjkzZmJjMGQ2LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxMCIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;13\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;26396325058\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;26396325058#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#13#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTcxNDU0LzMzLzE5Mzg5LzE0NzUyOC82MDdiMDk3YUVkYTgzN2YzYy85M2U2MzBhMjkzZmJjMGQ2LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxMCIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;768367&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100009506329&quot;, &quot;wname&quot;: &quot;黑峡谷（Hyeku）X3 有线/无线2.4G双模机械键盘 87键&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/150718/35/12144/72210/5fe31c83Ed8b24358/36fcc4cbe3dc0e74.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;349.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;100009506329\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3077584451\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500014880&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=RBsX4m4zWVhoifboYPNoMj2EhVRMoYq_gyD4Ea0gkqRHb3oD2R1ubdkfP9jT0_7sSsXzWDOHzK_zgLpGbGtUIvHNfb45eAqLP1nokpJ6eTlYuAUFr0NZsz66x06s8_RwJ6o00v_-ss1PGv80q8nilgbITNe3KzLEAhWoWZXkeRibeEceUVacizZxenXzjqLOGMX74XVGVOoebyssYzb3Lg&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMDk1MDYzMjkuaHRtbA&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw9c-6D5r09QyZXzkwZeJ6ib6foKmZtCzHf92bTAYY4rV_X8xIpzFen_a-dRApy0NSZNk1oEOLYJfUe-N6hAHhBhwE0mi6H-KWRPoyU4Vd78fx4hk_UvbjD-3-xQXcnSmEwoamVFz2eANV5eiqQyRrTUPx-3U20QwktnuvNrwpSthe2RPUuLkWgu8cP-Y_mwI0ALk6i0dzHtR5pkpDtqTImqp6G7lJDTy8PbAMs9jsuJgLnVX8n6f78HuSva9SQ46Z4N5AoRnqozLR_Q_GKA7phSNoHXNOxyhTkZx3F26u5DbxVHDr-vqndqKLduVawu5XKLQRANGJyjEOyo9GWV2IEiKuz_Bsag83LB7paF_zLL8t1aShjHhrFrymVJAZ-LGu5vUa2K1jNd6Zi0E4KdDqM8yRQvtW6c4dgu9d4t8J6doIO5lr7h8GnvJwJJa_-vLIgOlKfSEaXrCIb3tgh_B0w3Eu-5ysysQQJgejyjExRK8WdfevDsrKl9ZPu2elHJejduXRaxKBuzBBjkdCViu_LQavd-_cLE5OwlgS64r9-3vBv9dceILTurC6C91Y0eKQGgmARUKwtL9PpOGFicpkE0kwdLZNMPJFYnXPnMjWmJ-TJiidiC5MF4Co0vzKqTddGaK4NYZkNDBZbSW5N4i9ArQ2qKVw9DCw7FgkcpDAoDIcPFDFVpoIsETjNaluIy6shrg3O8Cc0xqDUEe1ADkTiK2fGbLumvppAzKdrLq2GtatuX9IQX8Gi5QqV6fWhxYE5X5AqCsuLaaediXST6DKBqbE_v8vp-kBbj66i2Yh4B64H6s8hvigJ4VzRJXV57N5VnZO6-Oav1g8jcihW4soJTIu2YNejQXR74EzwGZEO35hlKy_8uPM4CpYf6yyoawf7KzJzGcYMk1Ga0boSYEEXaG-BG-LZc8R1xf4_i5jG-5svzUpUBTW7V5MHixIpmzdnAGi6dK6DwO_8raI0PiAtFN7gnmHRV6ljeKT1lKK25TG377BXIuyMjxHA4WCrmlbDnA8WODz05RSeu-u2PLA_gszfMYHZMq4P1G_lEGAtzOY6Ldxc0AXwDCpso6TBfgaQ&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;14\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100009506329\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAwMDk1MDYzMjkuaHRtbA&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw9c-6D5r09QyZXzkwZeJ6ib6foKmZtCzHf92bTAYY4rV_X8xIpzFen_a-dRApy0NSZNk1oEOLYJfUe-N6hAHhBhwE0mi6H-KWRPoyU4Vd78fx4hk_UvbjD-3-xQXcnSmEwoamVFz2eANV5eiqQyRrTUPx-3U20QwktnuvNrwpSthe2RPUuLkWgu8cP-Y_mwI0ALk6i0dzHtR5pkpDtqTImqp6G7lJDTy8PbAMs9jsuJgLnVX8n6f78HuSva9SQ46Z4N5AoRnqozLR_Q_GKA7phSNoHXNOxyhTkZx3F26u5DbxVHDr-vqndqKLduVawu5XKLQRANGJyjEOyo9GWV2IEiKuz_Bsag83LB7paF_zLL8t1aShjHhrFrymVJAZ-LGu5vUa2K1jNd6Zi0E4KdDqM8yRQvtW6c4dgu9d4t8J6doIO5lr7h8GnvJwJJa_-vLIgOlKfSEaXrCIb3tgh_B0w3Eu-5ysysQQJgejyjExRK8WdfevDsrKl9ZPu2elHJejduXRaxKBuzBBjkdCViu_LQavd-_cLE5OwlgS64r9-3vBv9dceILTurC6C91Y0eKQGgmARUKwtL9PpOGFicpkE0kwdLZNMPJFYnXPnMjWmJ-TJiidiC5MF4Co0vzKqTddGaK4NYZkNDBZbSW5N4i9ArQ2qKVw9DCw7FgkcpDAoDIcPFDFVpoIsETjNaluIy6shrg3O8Cc0xqDUEe1ADkTiK2fGbLumvppAzKdrLq2GtatuX9IQX8Gi5QqV6fWhxYE5X5AqCsuLaaediXST6DKBqbE_v8vp-kBbj66i2Yh4B64H6s8hvigJ4VzRJXV57N5VnZO6-Oav1g8jcihW4soJTIu2YNejQXR74EzwGZEO35hlKy_8uPM4CpYf6yyoawf7xuLD4gDB5XAiiLd_C4PtOPm18ruJcMCaFnmiFFzkAte1HBTcDgvBeK5xzDi0EGXp6X7FagFPrsUviW6z3GR6UZwUNxaDD5chBBNCbEgRdz3WMa3xez7TTJGKof82j2K-_xk4NmGA6peB9mUeEr-q6Qjfahuyrbw5K9OllHHgWjmUyzpISOa2LhHrEf7ihzyw&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;1000112803&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100009506329\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;100009506329#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#14#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000112803&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10025688478837&quot;, &quot;wname&quot;: &quot;AKKO 3108DS/SP正刻侧刻地平线 全尺寸电竞吃鸡游戏办公有线机械键盘 TTC CHERRY 正刻-87键 AKKO粉轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/152124/18/11082/71739/5fe314dbEafa3b078/1ac2667293be8596.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;279.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500136574&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=3tVwGF09gxa4yiJqz3WhulwuTJVSHkV5VJkhz-s3nyoqNRwHVwjsQ8VwHzLHWUi1bxVjjlrfXx5IwP7ki3QXAAY5qm0sOkuspYLaKcYQaBC96C2Athy994wtO85_pa7NzC5e9Uy3IcaPSPruyGxwZ2F_Nw5qtXHhUF5MF9LxpbnqIVh5X8z_Utjg8fFy1z5Y0-p6GGG7Sxspn9fWwqwanA&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTUyMTI0LzE4LzExMDgyLzcxNzM5LzVmZTMxNGRiRWFmYTNiMDc4LzFhYzI2NjcyOTNiZTg1OTYuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjE4OSIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;15\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025688478837\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=10025688478837$index=9$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=e242eb0c94441f0c37191e2469e711fb66be7ca9&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;683719&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTUyMTI0LzE4LzExMDgyLzcxNzM5LzVmZTMxNGRiRWFmYTNiMDc4LzFhYzI2NjcyOTNiZTg1OTYuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjE4OSIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;15\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10025688478837\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;10025688478837#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#15#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTUyMTI0LzE4LzExMDgyLzcxNzM5LzVmZTMxNGRiRWFmYTNiMDc4LzFhYzI2NjcyOTNiZTg1OTYuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjE4OSIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;679430&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10027448579108&quot;, &quot;wname&quot;: &quot;腹灵F11蓝牙机械键盘87键无线可充电插拔轴宏编程双模式&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/160844/22/10974/115565/60466b6bE21ce881d/9e64a3895dc5fd27.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;239.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;10027448579108\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3562636989\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500056786&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=QSS2ENwj8CG3SaA7f_zpgVLlMJVhdzmApo_ZJ1SVQl6IEC_iUd6_b3Ejp3CelD1u7k1Pt6RjfQim3-4u2F3LbWC7dW2bC2Cc8ErUpOv8jGTF0iHiqf9yKjabDvDSkfvmZrmVhdmspwRkw6NLg5jb8B35ajMPHr15i2YQH1x7PIog2snTPkAs0qYeBrjb5qrpPM-QAIykWnDwYEWsk6Q6Vg&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNzQ0ODU3OTEwOC5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw-GmLI1V6aKfi1oYi37xuzS2iiHKknCtlAOCvrAkm_aGc_JGkthserPPWsHCItCEHq6ARVttc2EprplWbqo0wIDwWfYBj70ZJ4CC7A3QoBzeLkphRLpBiBWjWD5EOIWc566swYO34XcYlmdYgazjJXshu35Mw_WtIWtYDNBeW_CK687_7mSJCJEN_5xGaT3uFOihAKvnjC4yA65anfCL4eGrpvDz0zfddKqoRJsDC3htbaPAoSj7IcQh_dYx2HNyRytO02n2DWUFQ_VSfH6RYzbEIPy1GNgEBKc53qf0qAEY_ps_GFAtLKA0P-9kC3ApxCxpyDLdV7S9qa-iGBm04tnvIUEwdByDPf_2CJmOYjs9FkLEeSDE7oMwGZBGH243owUMxbYU2Llh3l1IihBubz3ZnEbhk03CuN0w-1vLMhEa-Zhh2ddej0xPYUnkLroiNbAxtkzRiLuGi-pvUfVKeF0DRwFiFESz_eHftFaUhy0Rslfj5ALPOSK468RNUOIfIj9xHSedvLrxVb4vdxu5gvzrFgvG77ewGW07KjugXw1O6x0LdNT7MXOo2O5NflE7smTzG2VS8brG7kRKEW5EZ2F9oyFeB9bjrUxjNi2qPTfHOhrjnF-l6dmhewyoWsXGArgbP_OV8ors58x6XODSBj2RmSzMoeMpfkg-7mA80tSIw3QZvNOZr50uhJOa_QailCat8B2PuHL8itWNcgj9JRkTi_J1hPVsf4WeDia4b6Dj0HTNvLasRBYM26su4hPPWb1Sp4e4Xx9M2stEtjFyzohhYptuXh9BykRTfXRUwuezL0-1MQQtS9zEP_mLgJG8_iGF-CGI7nh1L_7-RFp_BBiAiW6-g9HS_E5CU-CbXHwhV8ZfJFRIotauTPwwm9Tuc9708JzzSCsmsRONtzhwoVMZkcDUCV3f3tWjNPKhN_-XIyQt7EvvU4osyvOILH8m3DzP0DkFuS9X-fVsLPSO_iXStOnOCqL7bYMfd8HuGHSOd4Zs2Tuc21BiDvNo9_c3dLCTl6SJWOjbTJq8A-YbByFKkvOGngIJLLMc8dWtk_JOSZLWgP5v2uE0xMFoXm3MUw&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;16\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10027448579108\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;新品\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC8xMDAyNzQ0ODU3OTEwOC5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw-GmLI1V6aKfi1oYi37xuzS2iiHKknCtlAOCvrAkm_aGc_JGkthserPPWsHCItCEHq6ARVttc2EprplWbqo0wIDwWfYBj70ZJ4CC7A3QoBzeLkphRLpBiBWjWD5EOIWc566swYO34XcYlmdYgazjJXshu35Mw_WtIWtYDNBeW_CK687_7mSJCJEN_5xGaT3uFOihAKvnjC4yA65anfCL4eGrpvDz0zfddKqoRJsDC3htbaPAoSj7IcQh_dYx2HNyRytO02n2DWUFQ_VSfH6RYzbEIPy1GNgEBKc53qf0qAEY_ps_GFAtLKA0P-9kC3ApxCxpyDLdV7S9qa-iGBm04tnvIUEwdByDPf_2CJmOYjs9FkLEeSDE7oMwGZBGH243owUMxbYU2Llh3l1IihBubz3ZnEbhk03CuN0w-1vLMhEa-Zhh2ddej0xPYUnkLroiNbAxtkzRiLuGi-pvUfVKeF0DRwFiFESz_eHftFaUhy0Rslfj5ALPOSK468RNUOIfIj9xHSedvLrxVb4vdxu5gvzrFgvG77ewGW07KjugXw1O6x0LdNT7MXOo2O5NflE7smTzG2VS8brG7kRKEW5EZ2F9oyFeB9bjrUxjNi2qPTfHOhrjnF-l6dmhewyoWsXGArgbP_OV8ors58x6XODSBj2RmSzMoeMpfkg-7mA80tSIw3QZvNOZr50uhJOa_QailCat8B2PuHL8itWNcgj9JRkTi_J1hPVsf4WeDia4b6Dj0HTNvLasRBYM26su4hPPWb1Sp4e4Xx9M2stEtjFyzohhYptuXh9BykRTfXRUwuezL0-1MQQtS9zEP_mLgJG8_iGF-CGI7nh1L_7-RFp_BBiAiW6-g9HS_E5CU-CbXHwhV8ZfJFRIotauTPwwm9Tuc9708JzzSCsmsRONtzhwoVMbNwDneTrJfTW2HgMIwUUWzKEZTtd1nPnusKk_R-djfQHhgQ3JxRBCJKiOUXFipJcsZrPpyW5RO-uYQY8folN0UwFDfs_RcK3QlAmsDgCF0OuYm2C-D4eSGttkzuHN5yow6J9hzbNFGZ9ugZkU1aCaDPbTwvONqEvefiPSiDrsiw&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;resUR&quot;: &quot;rec_005&quot;, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;10658671&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;16\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10027448579108\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;新品\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;10027448579108#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#新品#-100#1#16#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;10429568&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;49005260762&quot;, &quot;wname&quot;: &quot;祥瑞神州监控操作台控制调度指挥中心工作台P款定制操作台监控 P款升级款&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/61627/13/850/98440/5cf0e7f7E09f3c2a6/ae35e40bb9fc737c.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;1800000.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500080995&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=Vsr8_mjmfLe3wXY4rsi-BhQzqNgxmxtWeR7QPGGhNJ7BfwNDK-qvhHz0z1qP9hka9BYv1M1mA-GvvLryYCfdAQmv2u7HIZVSLAYbJllLrytNOSW8bbBFRIJ6_ATwBRNmrpkine3tF7YOW2COeBqBGb_wug2bADRAeI8YCYMQtDjG2cqi4t7UVtEzOwBN0UWm&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNjE2MjcvMTMvODUwLzk4NDQwLzVjZjBlN2Y3RTA5ZjNjMmE2L2FlMzVlNDBiYjlmYzczN2MuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjE4OSIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;17\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;49005260762\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;1048&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=49005260762$index=10$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=30d9d191fa727242b9516c6813475f0c273189b6&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;116910&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNjE2MjcvMTMvODUwLzk4NDQwLzVjZjBlN2Y3RTA5ZjNjMmE2L2FlMzVlNDBiYjlmYzczN2MuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjE4OSIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;17\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;49005260762\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;49005260762#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#17#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNjE2MjcvMTMvODUwLzk4NDQwLzVjZjBlN2Y3RTA5ZjNjMmE2L2FlMzVlNDBiYjlmYzczN2MuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjE4OSIsInJlcXVlc3RfaWQiOiIyYjgwZTMyNy1kMzBkLTQ4MTktYjlmMi05MDNmMGQ1OGRjMmYiLCJjc191c2VyIjoiMiIsInBhbGFudGlyX2V4cGlkcyI6IlJ8TUlYVEFHX1JSLFJfUl9BUExfUixNSVhUQUdfWl5SXkFSLFpeUl5BX05OX0NMX0w5NzI0LG1iLE1JWFRBR19TXlpeUl5TQUs3UixTXlpeUl5TQUs3X05OX0FQRl9MMTA4NDh8RypaXlJeQV9OTl9DTF9MNzQwMyxHKlpeUl5BX05OX0NMX0wxMDY5MyIsImV4cGlkIjoiRDBATDBAMCIsInJlcXNpZyI6IjQ5MDQ1YzZiZTc4NDM0NGY3NDlhMjhmMjFhMzU2MmFmYzg0N2JjOTEifQ==&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;114020&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;60064059165&quot;, &quot;wname&quot;: &quot;e元素 PBT热升华键帽 机械键盘键帽 时尚个性键帽&quot;, &quot;wareType&quot;: 256, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/157382/38/14274/185616/60543b9eE688dee91/3a214994327a521f.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;129.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: true, &quot;fansPrice&quot;: &quot;118.90&quot;, &quot;priceColor&quot;: &quot;714AFF&quot;, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;extension_id&quot;: &quot;&#123;\&quot;ad\&quot;:\&quot;1677\&quot;,\&quot;ch\&quot;:\&quot;2\&quot;,\&quot;sku\&quot;:\&quot;60064059165\&quot;,\&quot;ts\&quot;:\&quot;1618731955\&quot;,\&quot;uniqid\&quot;:\&quot;&#123;\\\&quot;material_id\\\&quot;:\\\&quot;3515192505\\\&quot;,\\\&quot;pos_id\\\&quot;:\\\&quot;1677\\\&quot;,\\\&quot;sid\\\&quot;:\\\&quot;01400653-a73e-433a-bf12-0292757e4149\\\&quot;&#125;\&quot;&#125;&quot;, &quot;samePicPid&quot;: &quot;500011906&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=c6_8o4mM1kR4vrnoUYODsnR-uo2Aqzf3lm7nUkiTkVBt7A-OUKUn_R0eELnl8TxGRt9xd5HKlkwauvP7ZKnr88F5P_uKU8-ik39XkJMYDq2P4L0Q35-009rHkN3soc1U67qqmw-qlpKeJgjBmtkr5Z77rFjZfukb7wksccAiDMdM72CucBPoZKYDxEDHSmUK5YDEYA1nOO6xZWIAsKUR5A&quot;, &quot;client_click_url&quot;: &quot;https://ccc-x.jd.com/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC82MDA2NDA1OTE2NS5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_F_ZlggzzwIrcAt96BLx78idfBdsYNj5aERkCvc2nDCxuyHCI-MdXaY9nqmiXSmpHgXDf7Y7FtV8R60jwfcTy_X_SPWKa73icoEIfw7RYZLz2V9qZ6TBg77xHjHyuwYtYQvB0WiAiN4bJ-QVOKGcdn4BGsabIQUbwF0Zg_-53DvW3LbkNl_0CHuuC8eSstm5rJy12oyJmhZVRGNYf43S0xZCaic71t71FFRI5BPjUar5hl72-VWwW4WvfDoo1jE5NSDXblWrYlD0MRPj5Ntw8TNbs1ao5JvHaL7A0_cH97_SE_-nXZcLhsakmBzI35-KTpqDq4LFr0E5gi-4HDn_UE6sSmBU7xHHiuSFl62t8VdeKhJpEBG92DOeSOmmXgpW_BxdG-58FMvAzo1y96fIBwR77BJnsryiCwksLajOSU83Tzfv20rw8gt3OJuBBUwP1Oz_MOgkha8W9YVYWohuVnsZcsSKXU_tUB0lkTljYo7sugVEhyvs_Aupb4t1Jmt5wD2_cY2nXtVaP4E-wq04NXHHVz1FzBM_dnIpsbki6xkbeK8lNloHWh4JCTD7lBEbXDr2_zMha1iwHyzJkjGIh_3a76UieWPracSuH7gwg2j3B1dWqpq6C6RfNYPiTOBl5OQTPOe87XUDpUaJzu7bej2ePZoJgqltpLztlytbkYehvToFmwKmAAagGrueVGHYDcjrFEEgInHYyxsUpWdlxpusBO6m_ggH-TLhQNR_Dkxgr7Pbx_92AlXOw7qB8VsnxaCzxK4BdldnsTkYltcv9SIlpiku8S8r9nGuR6SKCiDKWw8GXXAxjS32TCw9wbfJs5FWlX31DQ9-M30bbZV8DJvzhADzUuiJSUtwC2yvvQLAoTjAl-QwZdSIZnJGhUhM9OGnAqwS90xTytlAkRZZ_ryIxT2gaE39sTX8KynOwyTvod1nIyrCugxzvCMUwiitpw9TxozdQ8jP7bjS9RtRmLo-ojuVOYCoEx1yDob5R2Frj1KAXSeZHYj3qz0PNhP6_UrbkAPLlq4zVdCz0b_68uT2C4ytGClvEx4WUtoyemHhCu7wvdXUoV2w72vKqtJbFDfHr7nKvXFkRVp1TyyjMV&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;粉丝价\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;18\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;60064059165\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;159&quot;, &quot;clickUrl&quot;: &quot;http://ccc-x.jd.local/dsp/nc?ext=aHR0cDovL2l0ZW0ubS5qZC5jb20vcHJvZHVjdC82MDA2NDA1OTE2NS5odG1s&amp;log=45tUVozynxcmY6Hno4ZfVFEG2Pkbt-Y0x2InuikHCw_F_ZlggzzwIrcAt96BLx78idfBdsYNj5aERkCvc2nDCxuyHCI-MdXaY9nqmiXSmpHgXDf7Y7FtV8R60jwfcTy_X_SPWKa73icoEIfw7RYZLz2V9qZ6TBg77xHjHyuwYtYQvB0WiAiN4bJ-QVOKGcdn4BGsabIQUbwF0Zg_-53DvW3LbkNl_0CHuuC8eSstm5rJy12oyJmhZVRGNYf43S0xZCaic71t71FFRI5BPjUar5hl72-VWwW4WvfDoo1jE5NSDXblWrYlD0MRPj5Ntw8TNbs1ao5JvHaL7A0_cH97_SE_-nXZcLhsakmBzI35-KTpqDq4LFr0E5gi-4HDn_UE6sSmBU7xHHiuSFl62t8VdeKhJpEBG92DOeSOmmXgpW_BxdG-58FMvAzo1y96fIBwR77BJnsryiCwksLajOSU83Tzfv20rw8gt3OJuBBUwP1Oz_MOgkha8W9YVYWohuVnsZcsSKXU_tUB0lkTljYo7sugVEhyvs_Aupb4t1Jmt5wD2_cY2nXtVaP4E-wq04NXHHVz1FzBM_dnIpsbki6xkbeK8lNloHWh4JCTD7lBEbXDr2_zMha1iwHyzJkjGIh_3a76UieWPracSuH7gwg2j3B1dWqpq6C6RfNYPiTOBl5OQTPOe87XUDpUaJzu7bej2ePZoJgqltpLztlytbkYehvToFmwKmAAagGrueVGHYDcjrFEEgInHYyxsUpWdlxpusBO6m_ggH-TLhQNR_Dkxgr7Pbx_92AlXOw7qB8VsnxaCzxK4BdldnsTkYltcv9SIlpiku8S8r9nGuR6SKCiDKWw8GXXAxjS32TCw9wbfJs5FWlX31DQ9-M30bbZV8DJvzhADzUuiJSUtwC2yvvQLKJcnelhTZUA4736FB_hJN9uR7O0UnDbyUClpnXoWIZuiF1sGbcdfRxj8XCGXYfVW5LcK1SqSWLdwB7JyS_6fQSAG6s49elpJG1GimEmn55HcnFU4G1omB8qULLXfsq-Yk_9uuOcrSqYmpwWZGXvYFr356TnnrODDfoDx9kMt5DqQ9rryxTCALLKU6-QLFNbaU14lmRnA0_qaEQPxwwHGGuqAV1A5aAHnqWxlvLLnG5A&amp;v=404&amp;clicktype=1&amp;&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;0&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;renewal&quot;: 0, &quot;icon3&quot;: &quot;tab_129&quot;, &quot;icon3Price&quot;: &quot;118.90&quot;, &quot;tipsMapList&quot;: [ ], &quot;venderId&quot;: &quot;10245089&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;18\&quot;,\&quot;source\&quot;:\&quot;1\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;60064059165\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;1&quot;, &quot;exposureSourceValue&quot;: &quot;60064059165#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#1#0#D0@L0@0#-100#-100#1#18#-100#0#-100#-100#1#-100#-100#0#粉丝价#14#902008#0#eyJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwicGFsYW50aXJfZXhwaWRzIjoiWl5SXkF8TUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYnxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;10107410&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;100005741580&quot;, &quot;wname&quot;: &quot;雷蛇（Razer）黑寡妇蜘蛛轻装版 水银 雷蛇橙轴白色背光 有线电脑办公游戏机械键盘&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/79355/37/8326/168246/5d64912aE2c8bf020/5745171041d65bc5.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;519.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500131021&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=gt3q1R2mQD2qy-ngxQVt_GZquEOFoyAGE8VgGIyPoVhOyS-8fMWeG9bF9OGboSUCFl2SfA1kdowbJW7bjx90QQFRtoqQ9z5Zt5pABbe3qOB7sfU23EjaZw5k5slRB6IA9aJKvNpOZqUy-KUrLimgp_D9kUzSnHh2qP0SyIIB83OpdRTh-x3MR7lmvk5Fo5OWYnMcf0ruMg7o5_zB2xcFBA&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNzkzNTUvMzcvODMyNi8xNjgyNDYvNWQ2NDkxMmFFMmM4YmYwMjAvNTc0NTE3MTA0MWQ2NWJjNS5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTg5IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;19\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100005741580\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;305&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=100005741580$index=11$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=ae3a5e9cd7067ca835ce25a893893f6fc11d5b95&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;重量：1.045kg&quot;, &quot;renewal&quot;: 0, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;1000000370&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNzkzNTUvMzcvODMyNi8xNjgyNDYvNWQ2NDkxMmFFMmM4YmYwMjAvNTc0NTE3MTA0MWQ2NWJjNS5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTg5IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;19\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;100005741580\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;100005741580#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#19#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNzkzNTUvMzcvODMyNi8xNjgyNDYvNWQ2NDkxMmFFMmM4YmYwMjAvNTc0NTE3MTA0MWQ2NWJjNS5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTg5IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;1000000370&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;71382727611&quot;, &quot;wname&quot;: &quot;ikbc机械键盘F87f108单背光rgb笔记本办公电竞游戏有线cherry樱桃红茶青银轴外设 F87白色（蓝色背光）有线87键 红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/152292/17/20371/198012/6052ef5fEf851ccd2/d521407736b36d06.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;439.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500105334&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=A68NnzXgYIzIO7H2nej2JL-B4-N2Dt5rx9Wf3OvPJaMis3y_4udoFo8UNWRkT8d9WACn6XhVdmJ3k7AhEzQzj_EMtkMiDp-MkW34ffAVurZTxqSRswiNR8hCy1BaBvyLm1vuJeeF7E9RV3hjfdkvXYCdA-1yCQgD8HkwYzGhxgGb7eP9FHGARceD8dS9Btbt&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTUyMjkyLzE3LzIwMzcxLzE5ODAxMi82MDUyZWY1ZkVmODUxY2NkMi9kNTIxNDA3NzM2YjM2ZDA2LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxODkiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;20\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;71382727611\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;162&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=71382727611$index=12$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=43d95b5f4dbee631c60d412910d48eb559300303&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;10103831&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTUyMjkyLzE3LzIwMzcxLzE5ODAxMi82MDUyZWY1ZkVmODUxY2NkMi9kNTIxNDA3NzM2YjM2ZDA2LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxODkiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;20\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;71382727611\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;71382727611#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#20#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTUyMjkyLzE3LzIwMzcxLzE5ODAxMi82MDUyZWY1ZkVmODUxY2NkMi9kNTIxNDA3NzM2YjM2ZDA2LmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxODkiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;948220&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;71976270072&quot;, &quot;wname&quot;: &quot;樱桃（CHERRY）G80-3000S TKL 机械键盘 88键有线键盘 客制化键盘 禅 红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/112730/8/13340/66854/5f1e7f0cE671c78a4/1aa6153721ecf3a6.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;989.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500090540&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=pzfmR3uiDJZ134AY4atOwIOe7M0DliA99Cbd_PtTizXviI1tCXp8qX_mjnnFnOjUze1xtFpx_SspiRhypSTJQYHZJwpGH-VguUQh53sYlLbHknIHzYjAzA1pnAxnLGZ55BhUQTJzCJU1TQodnViyu9SaFuMEqGTZ76EdRBciMRMUKDTBO6o5NL9dqkT9D2El&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTEyNzMwLzgvMTMzNDAvNjY4NTQvNWYxZTdmMGNFNjcxYzc4YTQvMWFhNjE1MzcyMWVjZjNhNi5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTg5IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;21\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;71976270072\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=71976270072$index=13$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=392b8b27d65c5d38b5a3f7e721c5bd2bf648d8f2&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;820352&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTEyNzMwLzgvMTMzNDAvNjY4NTQvNWYxZTdmMGNFNjcxYzc4YTQvMWFhNjE1MzcyMWVjZjNhNi5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTg5IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;21\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;71976270072\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;71976270072#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#21#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTEyNzMwLzgvMTMzNDAvNjY4NTQvNWYxZTdmMGNFNjcxYzc4YTQvMWFhNjE1MzcyMWVjZjNhNi5qcGciLCJzb3VyY2UiOiIwIiwidGFnIjoiMTg5IiwicmVxdWVzdF9pZCI6IjJiODBlMzI3LWQzMGQtNDgxOS1iOWYyLTkwM2YwZDU4ZGMyZiIsImNzX3VzZXIiOiIyIiwicGFsYW50aXJfZXhwaWRzIjoiUnxNSVhUQUdfUlIsUl9SX0FQTF9SLE1JWFRBR19aXlJeQVIsWl5SXkFfTk5fQ0xfTDk3MjQsbWIsTUlYVEFHX1NeWl5SXlNBSzdSLFNeWl5SXlNBSzdfTk5fQVBGX0wxMDg0OHxHKlpeUl5BX05OX0NMX0w3NDAzLEcqWl5SXkFfTk5fQ0xfTDEwNjkzIiwiZXhwaWQiOiJEMEBMMEAwIiwicmVxc2lnIjoiNDkwNDVjNmJlNzg0MzQ0Zjc0OWEyOGYyMWEzNTYyYWZjODQ3YmM5MSJ9&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;818792&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;10021631609613&quot;, &quot;wname&quot;: &quot;ikbc机械键盘W200mini2.4G无线蓝牙双模61键德国原厂cherry樱桃轴电脑办公 W200mini白色红轴（无线2.4G-61键）&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/156843/7/16171/131211/60507883E479f7ddd/929604201d4f51cd.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;329.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500089227&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=1InRJmIbCLo091QAsGvkA5kG9oMKh_pdN_YzIdu45EFqNC0GIs47pNdQ8evD9PghunjEbQGKcI43eTGvoSIKcQVbW7a4QsYuixAeJONPMZ_TF9YhIMtUvUjsTtQtXt-hX5_dRMQvstyuUsN59Q9PI9sumgJ-isZA1IRQ7nk_DqxGOa6s1wReU7wvE6Wmr3UwhZ6z4gt9v6FfHAye8dF3eg&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTU2ODQzLzcvMTYxNzEvMTMxMjExLzYwNTA3ODgzRTQ3OWY3ZGRkLzkyOTYwNDIwMWQ0ZjUxY2QuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;22\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10021631609613\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;162&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=10021631609613$index=14$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=6f92204a79d82b3bc228a53c3d8f51d7d7fd8a80&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;10103831&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTU2ODQzLzcvMTYxNzEvMTMxMjExLzYwNTA3ODgzRTQ3OWY3ZGRkLzkyOTYwNDIwMWQ0ZjUxY2QuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;22\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;10021631609613\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;10021631609613#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#22#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvMTU2ODQzLzcvMTYxNzEvMTMxMjExLzYwNTA3ODgzRTQ3OWY3ZGRkLzkyOTYwNDIwMWQ0ZjUxY2QuanBnIiwic291cmNlIjoiMCIsInRhZyI6IjEiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;948220&quot;, &quot;jdShop&quot;: false &#125;, &#123; &quot;itemType&quot;: 0, &quot;rt&quot;: 0, &quot;wareId&quot;: &quot;58843591828&quot;, &quot;wname&quot;: &quot;GANSS高斯 GS104C cherry樱桃轴游戏机械键盘 104键 白色【无光版】 红轴&quot;, &quot;markType&quot;: 0, &quot;isMonetized&quot;: false, &quot;imageurl&quot;: &quot;https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/52377/7/13216/91425/5da02eceE3afca637/ee7109306b5435b1.jpg!q70.dpg&quot;, &quot;imageurlType&quot;: 0, &quot;good&quot;: &quot;&quot;, &quot;commentCount&quot;: &quot;&quot;, &quot;jdPrice&quot;: &quot;319.00&quot;, &quot;isSamWare&quot;: false, &quot;isPlusWare&quot;: false, &quot;isPinGouWare&quot;: false, &quot;isFansWare&quot;: false, &quot;book&quot;: &quot;false&quot;, &quot;promotion&quot;: &quot;false&quot;, &quot;commentAbStrategy&quot;: &quot;A&quot;, &quot;mp&quot;: 0, &quot;feminine&quot;: false, &quot;samePicPid&quot;: &quot;500121791&quot;, &quot;interactive&quot;: &quot;0&quot;, &quot;client_exposal_url&quot;: &quot;https://sh.jd.com/d?fl=AiDdLj_HjsHFP_cxBnAfV119a7AIrjF-TxEU22ih4flw_4JlVSjZBM08uoXMrr0t9-KUQ1VkHUcynY9r_W31Nj4GK1dedXhiZBNeuUOcjNeB7JRyutkOPMEuikYXrJ2lel1dTh54LDdJD8z7Q7iOnT5hbWPetx41_oeiZRpzEByvJ4GwNcucIY5Y6PiNP17i&quot;, &quot;client_click_url&quot;: &quot;&quot;, &quot;canClipTitleImg&quot;: true, &quot;duration&quot;: 0, &quot;exposureJsonSourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNTIzNzcvNy8xMzIxNi85MTQyNS81ZGEwMmVjZUUzYWZjYTYzNy9lZTcxMDkzMDZiNTQzNWIxLmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxODkiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;empty\&quot;:\&quot;1\&quot;,\&quot;pricetype\&quot;:\&quot;-100\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;liveSkuStatus\&quot;:\&quot;0\&quot;,\&quot;titleid\&quot;:\&quot;-100\&quot;,\&quot;tabindex\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;23\&quot;,\&quot;ent\&quot;:\&quot;1\&quot;,\&quot;plus\&quot;:\&quot;0\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;geneid\&quot;:\&quot;-100\&quot;,\&quot;reasonid\&quot;:\&quot;-100\&quot;,\&quot;bigsale\&quot;:\&quot;0\&quot;,\&quot;playshow\&quot;:\&quot;0\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;58843591828\&quot;,\&quot;jumptype\&quot;:\&quot;0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;recomReasonStyle&quot;: &quot;0&quot;, &quot;freeShippingFlag&quot;: &quot;0&quot;, &quot;liveSkuStatus&quot;: &quot;0&quot;, &quot;goodsType&quot;: 1, &quot;promotionType&quot;: 1, &quot;p&quot;: &quot;902008&quot;, &quot;isArrivalPriceBelt&quot;: &quot;0&quot;, &quot;isFollow&quot;: false, &quot;flow&quot;: &quot;66&quot;, &quot;adword&quot;: &quot;&quot;, &quot;startRemainTime&quot;: 0, &quot;endRemainTime&quot;: 0, &quot;sid&quot;: &quot;01400653-a73e-433a-bf12-0292757e4149&quot;, &quot;isFeedBackSlide&quot;: 0, &quot;followCount&quot;: &quot;&quot;, &quot;category1&quot;: &quot;670&quot;, &quot;category2&quot;: &quot;686&quot;, &quot;category3&quot;: &quot;689&quot;, &quot;stockStateId&quot;: 33, &quot;remainNum&quot;: -1, &quot;wareHouseNum&quot;: &quot;-1&quot;, &quot;clickUrl&quot;: &quot;http://knicks.jd.local/log/server?t=rec_common_clk&amp;v=type=rec.902008$src=rec$action=1$reqsig=49045c6be784344f749a28f21a3562afc847bc91$enb=1$sku=10025802445921$p=902008$pin=wdcSqTmcNYCgnv$enp=N1HhZm%2BCQbxycSr%2BtDdgZQ%3D%3D$uuid=MfquHDrmZLK%2F%2FU%2BUJPr6GFaeHcNB96sq$csku=58843591828$index=15$st=0$adcli=$expid=D0@L0@0$mexpid=D0@L0@0$im=$rid=4396846868054738737$ver=1$sig=c426a2c643f9faf7016a2bdec9dfe811c2ad11b5&quot;, &quot;similarEnter&quot;: &quot;0&quot;, &quot;canAddCart&quot;: &quot;0&quot;, &quot;couponSortType&quot;: 0, &quot;canNegFeedback&quot;: &quot;0&quot;, &quot;reqsig&quot;: &quot;49045c6be784344f749a28f21a3562afc847bc91&quot;, &quot;abt&quot;: &quot;&quot;, &quot;isDotScheme&quot;: false, &quot;presaleWare&quot;: 0, &quot;weight&quot;: &quot;不计重量&quot;, &quot;renewal&quot;: 99, &quot;tipsMapList&quot;: [ &#123; &quot;t&quot;: 9999, &quot;v&quot;: &quot;0&quot; &#125; ], &quot;venderId&quot;: &quot;664434&quot;, &quot;sourceValue&quot;: &quot;&#123;\&quot;broker_info\&quot;:\&quot;eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNTIzNzcvNy8xMzIxNi85MTQyNS81ZGEwMmVjZUUzYWZjYTYzNy9lZTcxMDkzMDZiNTQzNWIxLmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxODkiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=\&quot;,\&quot;rec2ad\&quot;:\&quot;0\&quot;,\&quot;psource\&quot;:\&quot;14\&quot;,\&quot;lbsSku\&quot;:\&quot;-100\&quot;,\&quot;redprice\&quot;:\&quot;-100\&quot;,\&quot;index\&quot;:\&quot;23\&quot;,\&quot;source\&quot;:\&quot;0\&quot;,\&quot;tips\&quot;:\&quot;-100\&quot;,\&quot;sid\&quot;:\&quot;01400653-a73e-433a-bf12-0292757e4149\&quot;,\&quot;p\&quot;:\&quot;902008\&quot;,\&quot;saleinfo\&quot;:\&quot;-100\&quot;,\&quot;page\&quot;:\&quot;1\&quot;,\&quot;trap\&quot;:\&quot;0\&quot;,\&quot;skutype\&quot;:\&quot;-100\&quot;,\&quot;skuid\&quot;:\&quot;58843591828\&quot;,\&quot;flow\&quot;:\&quot;66\&quot;,\&quot;expid\&quot;:\&quot;D0@L0@0\&quot;,\&quot;reqsig\&quot;:\&quot;49045c6be784344f749a28f21a3562afc847bc91\&quot;,\&quot;promotion\&quot;:\&quot;-100\&quot;&#125;&quot;, &quot;source&quot;: &quot;0&quot;, &quot;exposureSourceValue&quot;: &quot;58843591828#49045c6be784344f749a28f21a3562afc847bc91#01400653-a73e-433a-bf12-0292757e4149#66#0#0#D0@L0@0#-100#-100#1#23#-100#0#-100#-100#1#-100#-100#0#-100#14#902008#0#eyJwIjoiOTAyMDA4IiwiaW1hZ2UiOiJqZnMvdDEvNTIzNzcvNy8xMzIxNi85MTQyNS81ZGEwMmVjZUUzYWZjYTYzNy9lZTcxMDkzMDZiNTQzNWIxLmpwZyIsInNvdXJjZSI6IjAiLCJ0YWciOiIxODkiLCJyZXF1ZXN0X2lkIjoiMmI4MGUzMjctZDMwZC00ODE5LWI5ZjItOTAzZjBkNThkYzJmIiwiY3NfdXNlciI6IjIiLCJwYWxhbnRpcl9leHBpZHMiOiJSfE1JWFRBR19SUixSX1JfQVBMX1IsTUlYVEFHX1peUl5BUixaXlJeQV9OTl9DTF9MOTcyNCxtYixNSVhUQUdfU15aXlJeU0FLN1IsU15aXlJeU0FLN19OTl9BUEZfTDEwODQ4fEcqWl5SXkFfTk5fQ0xfTDc0MDMsRypaXlJeQV9OTl9DTF9MMTA2OTMiLCJleHBpZCI6IkQwQEwwQDAiLCJyZXFzaWciOiI0OTA0NWM2YmU3ODQzNDRmNzQ5YTI4ZjIxYTM1NjJhZmM4NDdiYzkxIn0=&quot;, &quot;expid&quot;: &quot;D0@L0@0&quot;, &quot;isCoupon&quot;: &quot;0&quot;, &quot;miniCanAddCart&quot;: &quot;0&quot;, &quot;shopId&quot;: &quot;659420&quot;, &quot;jdShop&quot;: false &#125; ], &quot;playCompleteState&quot;: &quot;1&quot;, &quot;isPreload&quot;: 0, &quot;uiStrategy&quot;: &quot;A&quot;, &quot;isEnableDarkMode&quot;: &quot;1&quot;, &quot;waterFlow&quot;: &quot;0&quot;, &quot;videoWareWifiPlay&quot;: &quot;1&quot;, &quot;callNewMixerStrategy&quot;: &quot;B&quot;, &quot;isOpenMemoryOpt&quot;: true, &quot;newTabUI&quot;: false, &quot;expid&quot;: &quot;902008&quot;, &quot;publicTest&quot;: &quot;0&quot;&#125; 在这里看到了新的图片格式 dpg https://m.360buyimg.com/mobilecms/s360x360_jfs/t1/143561/20/7379/100729/5f4ef2cbE167ed1b2/ce4c902425aa9254.jpg!q70.dpg 商品详情页的商品介绍部分图片采用的jpg，对于图片的要求质量较高 京东类似搜索框关键词请求地址https://api.m.jd.com/client.action?functionId=searchBoxWord 1234body=&#123; &quot;geo&quot;: &quot;Iox15QNUfZ6i2hh6U3Jv7bZbnaH68QIf2xItEIee7FOpDVth34cgdEAhx%2BQOPcYw&quot;, &quot;geoLast&quot;: &quot;FIC2qglqe3dw7D%2FnowwpQL2S%2F09x815Tis66Ih3uusLfx4BFAJoVi4qsa002CoCzPq1urUuhGKWzRb10%2FZNNaw%3D%3D&quot;&#125; 请求方式POST 协议h2 请求大小2.17kB 请求耗时192ms 响应大小0.91 kB 响应123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778&#123; &quot;code&quot;: &quot;0&quot;, &quot;showTimes&quot;: 3, &quot;headType&quot;: &quot;0&quot;, &quot;searchWordList&quot;: [ &#123; &quot;realWord&quot;: &quot;路易威登&quot;, &quot;showWord&quot;: &quot;路易威登&quot;, &quot;sourceValue&quot;: &quot;0##&quot; &#125; ], &quot;biSearchWordList&quot;: [ &#123; &quot;realWord&quot;: &quot;键盘鼠标&quot;, &quot;showWord&quot;: &quot;键盘鼠标&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;机械键盘&quot;, &quot;showWord&quot;: &quot;机械键盘&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;鼠标键盘套装&quot;, &quot;showWord&quot;: &quot;鼠标键盘套装&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;电竞键盘&quot;, &quot;showWord&quot;: &quot;电竞键盘&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;无线鼠标&quot;, &quot;showWord&quot;: &quot;无线鼠标&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;键鼠套装无线&quot;, &quot;showWord&quot;: &quot;键鼠套装无线&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;苹果耳机&quot;, &quot;showWord&quot;: &quot;苹果耳机&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;朋克机械键盘&quot;, &quot;showWord&quot;: &quot;朋克机械键盘&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;电脑包&quot;, &quot;showWord&quot;: &quot;电脑包&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125;, &#123; &quot;realWord&quot;: &quot;电源适配器&quot;, &quot;showWord&quot;: &quot;电源适配器&quot;, &quot;sourceValue&quot;: &quot;1#V1.0-balance-0#69634&quot; &#125; ], &quot;searchIconImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/147284/4/5721/1936/5f3b91a0E644d430b/9774d1fb8831dbf2.png&quot;, &quot;refreshTime&quot;: &quot;1&quot;, &quot;rollIntervalTime&quot;: 0, &quot;showWord&quot;: &quot;&quot;, &quot;searchTextColor&quot;: &quot;#b3b3b3&quot;, &quot;smartIconImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/114152/10/5438/7246/5eb3adccE1fb06f12/b7a5193af852494b.png&quot;, &quot;photoIconImg900&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/123561/1/9931/2809/5f3b9309E17f0fe15/26169b730152785a.png&quot;, &quot;realWord&quot;: &quot;&quot;, &quot;rate&quot;: &quot;20&quot;, &quot;dynamicSwitch&quot;: &quot;1&quot;, &quot;iconType&quot;: &quot;1&quot;, &quot;transparency&quot;: 100, &quot;searchHistoryType&quot;: &quot;1&quot;, &quot;photoIconImg&quot;: &quot;https://m.360buyimg.com/mobilecms/jfs/t1/124630/20/164/2677/5eb3add5Ed9eb7861/54de21f19de6233a.png&quot;&#125; 淘宝淘宝首页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应淘宝商品详情页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应拼多多拼多多首页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应拼多多商品详情页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应京喜京喜首页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应京喜商品详情页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应唯品会唯品会首页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应唯品会商品详情页请求地址：请求方式：POST协议：h2请求大小：2.17kB请求耗时：192ms响应大小：响应]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于serverless的坑]]></title>
    <url>%2F%2Fposts%2F202102281.html</url>
    <content type="text"><![CDATA[Github Actions的服务器在国外，访问国内的资源可能会受到影响。联通签到脚本的会经常性的出现“接口防刷策略”，导致奖励领取失败，一直也不知道是什么原因，在本地测试运行时，却没有出现状况，猜测是由于网络的问题。 因此，就在寻找Github Actions的替代品，单独为此去购买服务器不太值得，本地化每天还需手动运行，现今，各大厂商的云函数具有免费额度，仅仅需将程序适配，是用来跑脚本的不二之选。 云函数，宣传的是所谓无服务器架构，创建web项目无需关注环境问题，开发者可将更多的时间着眼于业务的实现，将整个项目化解为一个个小的函数，再拼接到一起，项目就做成了。 因为这个是Python项目，就要寻找Python项目部署到云函数的解决方案。所幸，之前接触过BiliExp这个项目，最早版本就是腾讯云函数，而且也是Python写的，前人栽树，后人乘凉，只需照搬过来即可，然而，也不是那么的容易。 通常项目是有一个主函数，每次程序都从主函数开始运行，在云函数中，需要有一个叫做入口函数的东西，除了go外，每一个云函数都要包括入口函数，Python的入口函数大约是这样： 123456import jsondef main_handler(event, context): print(&quot;Received event: &quot; + json.dumps(event, indent = 2)) print(&quot;Received context: &quot; + str(context)) return(&quot;Hello World&quot;) 我的做法是，将以前主函数内的代码放到这个入口函数中，以后本地运行主函数，再调用这个入口函数就能适配平台不同的问题了。这里主要注意的是，主函数中若使用了全局变量，那就是全局变量，而在普通函数中可能会新建一个同名变量。如下面这样的情况： 12345678n = 10def run(): n = 5 print(&#x27;run:&#x27; + str(n))if __name__ == &#x27;__main__&#x27;: run() print(&#x27;main:&#x27; + str(n)) 这种情况下，在run()函数中的n = 5会新创建一个变量n，在Java中也是如此。如果需要使用全局变量，需要在全局变量上面添加global关键字。 123456789n = 10def run(): global n n = 5 print(&#x27;run:&#x27; + str(n))if __name__ == &#x27;__main__&#x27;: run() print(&#x27;main:&#x27; + str(n)) 若项目中，涉及到读写文件，要极其注意，俺就是在这个坑里呆了很久。我将项目的日志记录输出到了文件，却总是在报这个文件的错误，起初我以为是路径的问题，这里得吐槽一下腾讯云函数控制台的报错信息，黑压压一堆，还有乱码，恰巧看到一个关键词OSError，大概是这个吧，我意识到可能是文件的读写出毛病了。 上网一搜，有一篇文章是关于腾讯自家的小程序的，内容是关于小程序只可读文件，不可写文件，只有/tmp目录下可以临时读写文件，修正这个错误后，就正式从坑里爬起来了。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>云函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[细数我做的一些小工具]]></title>
    <url>%2F%2Fposts%2F202102201.html</url>
    <content type="text"><![CDATA[这个春节过着可真烦啊，人情味太浓，有时候我觉得也不太好，每年家家都要吃个遍，有的还两次三次的吃，属实不想参加，习俗也该改改了。 从最初的贴吧签到开始，那时候刚刚开始什么也都不懂，那时候仅仅收到了手指头能掰出来的star和fork，我还发到了朋友圈去炫耀，不过开心是真的。一转眼，朋友圈也关了快小半年了。 当up主，在b站发了一些小视频，但是没有播放量啊，虚荣心在作祟，那就刷吧。偶然间发现，视频隔段时间进去会增加一次播放量，那么就开干了，利用selenium可以实现代码操作浏览器，那么只需要把每次观看视频的流程让代码去执行一遍就好了，再来个定时执行，就能够实现刷播放量了。 接着，我又发现一个好玩的，b站自动做任务的脚本BiliExp，感到很惊奇，那么我是否可以用Java去实现呢？那么就试一试吧。按照原版Python，我用Java去写，整体逻辑也采用的是他那个， API也是，但是写到最后，我发现有很多的API我并没有使用到，我想要做的只是一些日常任务，并不需要参加活动，评论，抽奖等等。慢慢的，更改代码的逻辑，优化结构，完善功能，一步步走到了今天。我也同样很开心，满足，学到了一些知识和经验。 联通手机营业厅签到，我在早前就已经用上了，之前使用的是CN-Unicom-AutoSign ，本想在其基础上增加新的任务，但是莫名奇妙的会出现一些错误，不了了之；随后我又发现了mixool/HiCnUnicom 让我感到惊喜，竟然可以使用用户名密码登录，并且有着更多的功能，一看shell代码看不懂啊，想扩充一些新的功能却不知道该怎么做。 两个项目，一个登陆需要去抓包，门槛较高，且功能少；另一个功能多，登陆简单，但代码较复杂。因此，我想实现一个，登陆简单，功能较多，代码结构清晰的版本。我本Java使用较多，但考虑到Cookie不好去管理，最终选用了Python。那就开干了，站在巨人的肩膀干活，在代码中查到了登陆部分手机号和服务密码rsa加密的公钥，最后又在网上参考了这篇文章rsa字符串格式公钥转换python rsa库可识别的公钥形式，才得以完成登录部分。做完了之后，才发现已经有一个更完善的版本了，但由于一些原因，作者已不再维护并删库了。 这类小工具很有受众，很有意思。学校要求我们用完美校园每天进行健康上报，那么有没有这样的工具自动帮我们签到呢？还真让我找到了，只是最后每个学校需要上报的数据不一样，所以只需要抓包，找到我们学校上报的数据格式就可以了，后来发展到，有人做到能够适配所有学校签到的程序，完美校园也做出了回应，封掉ip，加强身份验证规则，我适配的版本也废弃掉了。 任何一个东西的出现都是为了解决需求，人们都朝着懒的方向迈进，然而，这并没有什么不好，历史不就是这样发展的吗？从前的日色变得慢；车，马，邮件都慢；一生只够爱一个人。现在飞机，高铁等交通工具让距离不再遥远。以前邮件需要信使去收送传递，而现在，只需要知道个邮箱就可以让天各一方的人，互相发送电子邮件。现在的人工智能火热，它在未来，会将重新定义我们的生活吗？ 最后，进行工具汇总： b站：BilibiliTask 贴吧：TiebaSignIn 联通手厅：UnicomTask]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[忌言]]></title>
    <url>%2F%2Fposts%2F202102031.html</url>
    <content type="text"><![CDATA[腊月18，表姐结婚，腊月19，表哥结婚，由于我们当地的习俗很多，一连四五天，让我感觉比自己要结婚都要累。 嫁出去的女儿，泼出去的水。以前经常逢年过节串门的姐姐，已成为别人家的人了，就在前不久，我们家客人比较多还在帮忙，能干，真诚的感谢，以后再也不会有了吧。 接她回门的那天是我去的，她的新家挺好的，小洋楼，父母年轻健在，一切都好。一个人，在一个陌生的家庭做客人，我觉得挺不会做客人的。称谓，我在想一个问题，我要给我姐的公婆叫什么，别的亲戚，可以随我姐叫，可她的父母我实在是不知道，很尬。临走的时候，本想说几句客套话，年轻啊不懂事啊之类的，可我也不知道该不该说，总之最后也没说。 表哥，我们年纪也相仿，比我大两三岁，大概十年前，他成了单亲家庭，姑爹车祸不幸离世，索性家里条件较好，很早就已经是楼房，还在做些生意，倒也不算困难。转眼，十年矣。 由于疫情，结婚也不敢弄的那么热闹，很多人给推辞了，也没有搞婚庆，只进行了典礼。无论是亲戚还是去做兼职，我也看到过不少的婚礼，一般主持人都是说喜公公，喜婆婆，这次只有一个人，主持人也要忌言喜公公，但在一次不注意，“喜公”叫了一半给收了回去，我看到姑妈满眼红红的，我也忍不住了。十年了，无论多少的不易，我想这一刻是甜的，子女总算是都成了家。 唉，可怜如我，还没看到对象在哪呢。先找份工作吧，去看看外面的世界，加油，打工人。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java异常体系]]></title>
    <url>%2F%2Fposts%2F202101241.html</url>
    <content type="text"><![CDATA[Java语言的特点有不下十种，例如：面向对象、安全性、健壮性、可移植性性等等，其中Java的异常体系保证了Java语言的健壮性。 Java异常体系图Java万物皆对象，Throwable类自然继承自Object类。 ThrowableThrowableErrorErrorExceptionExceptionRuntimeExceptionRuntimeExceptionCheckedExceptionCheckedExceptionJava异常体系简图Java异常体系简图Viewer does not support full SVG 1.1 Error异常Throwable分为Error和Exception，Error通常指的是JVM的错误，导致这类错误，通常是我们自身代码写的有问题，并且这类错误，我们并不能够进行异常处理，有如下几种： StackOverError(栈内存溢出异常) 递归无出口，将会导致栈爆满。 OutOfMemoryError(堆内存溢出异常) 无限创建对象时，将会导致堆爆满。 还有一种说法叫做内存泄漏，是指创建的对象既没有被使用，也没有被回收的情况。 RuntimeException异常Exception即运行时异常，可以进行捕捉并进行处理，包含两种异常，其中RuntimeException被称为运行时异常，又被叫做逻辑异常，通常是由于代码的逻辑写的不够严谨导致，有如下几种： ArrayIndexOutOfBoundsException(数组越界异常) 12int[] a = new int[3];System.out.println(a[4]); NullPointerException(空指针异常) 12String s = null;System.out.println(s.toString()); ClassCastException(类型转换异常) 1String str = new Integer(1); ArithmeticException(算数异常) 1int a = 3/0; NumberFormatException(数字格式异常) 1int a = Integer.parseInt(&quot;3f&quot;); CheckedException异常CheckedException异常又被叫做非运行时异常，导致此错误的原因并不是代码逻辑的错误，而是由于一些外部原因导致，例如要读取的文件并不存在，有如下几种： IOException(输入输出异常) 在读写文件时。 SQLException(数据库异常) 执行SQL方法时。 FileNotFoundException(文件未发现异常) 在读文件路径时,通常是找不到“拒绝访问”和“找不到指定路径”。 NoSuchFiledException(无此成员异常) 在反射获取类成员信息时。 NoSuchMethodException(无此方法异常) 方法不存在或不可访问。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[跨越阶级的出路]]></title>
    <url>%2F%2Fposts%2F202012121.html</url>
    <content type="text"><![CDATA[有好久都没有写了，有点生疏了，这段时间也发生了好多事，但是就是不想写，希望最近捡起来吧，像叶子博客一样。 这段时间，去郑州考试，离开学校回家，买了人生中第一个 ios 新设备，狼狈的套花呗还钱，人的离去，给别人补课，这篇是记录在补课的过程中的一些感受。 一天在一起吃饭，突然聊到了小孩子的成绩，“我家那个才厉害，去年数学考了 12 分”，饭后，看到他写作业，更是一种折磨，消灾是小学三年级，简单的加减法，常常把进位搞错，乘除更不用说，乘法口诀还要思考一会，应用题更是一窍不通。 我不知道我在那个年纪是不是如此，由于是在外地，我是到五年级才回到老家，只记得那时候成绩同样不是很好，拼音写错了常挨耳光，但是，数学记忆中并不是很差。 之前他也曾在补习班中补过一段时间，但是补习班仍然是一位老师带着多名学生，“笨学生”同样不受待见，众亲戚便劝导其父母，要多花心思教导孩子，挣钱就是为了孩子教育，于是乎，闲在家里的我，便被派上了，每天晚上辅导其做作业。 起初，如上述所述，基础真的很差，后来，慢慢的辅导，加、乘法的进位会了，减法也会了，就是除法估计还是在蒙的状态。最近他们在学长方形和正方形，其中的很大一部分就是计算它们的周长，讲了十几到题，不下十几二十遍，令我生气的是，我发现他现在连正方形和长方形的周长都算不明白。让其背公式，提提醒也能背出来、写出来，可是一遇到实际问题，就不知道该怎么用了，属实无奈，这便是目前的一个状况，今天看到其语文只考了 22.5 分_，会不会有些关联呢？ 如今的中国，阶级固化日渐趋于严重，以前我以为，我上了大学一切都会好起来的，我会找到一份挣钱的工作，可是，当看到有那么多一样的人，比你优秀的人，共同涌入这人海茫茫之中，更觉渺小。 中上层阶级，他们的后代，在其一出生开始，也许就注定那是你一个遥不可及的终点，并且在随着自我的认知和年龄的增长，这一事实正在慢慢被证实。 差距就是，从一开始就享受到的优质资源，有着不一样的开阔眼界。人生道阻且长，且行且珍惜吧。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(10)-SpringBoot的内置生命周期事件]]></title>
    <url>%2Fposts%2F2020-11-24-SpringBoot-Source-10%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot的内置生命周期事件 上一篇分析了SpringBoot启动时广播生命周期事件的原理，关键步骤总结： 为广播SpringBoot内置生命周期事件做前期准备： 1）首先加载ApplicationListener监听器实现类； 2）其次加载SPI扩展类EventPublishingRunListener。 SpringBoot启动时利用EventPublishingRunListener广播生命周期事件，然后ApplicationListener监听器实现类监听相应的生命周期事件执行一些初始化逻辑的工作。 1.SpringBoot生命周期事件源码分析SpringBoot的生命周期事件，类结构图： 由上图可以看到事件类之间的关系： 最顶级的父类是JDK的事件基类EventObject； 然后Spring的事件基类ApplicationEvent继承了JDK的事件基类EventObject； 其次SpringBoot的生命周期事件基类SpringApplicationEvent继承了Spring的事件基类ApplicationEvent； 最后SpringBoot具体的7个生命周期事件类再继承了SpringBoot的生命周期事件基类SpringApplicationEvent。 1.1 JDK的事件基类EventObjectEventObject类是JDK的事件基类，是所有Java事件类的基本，即所有的Java事件类都直接或间接继承于该类，源码如下： 12345678910111213141516171819202122232425262728293031323334353637383940public class EventObject implements java.io.Serializable &#123; private static final long serialVersionUID = 5516075349620653480L; /** * The object on which the Event initially occurred. */ protected transient Object source; /** * Constructs a prototypical Event. * * @param source The object on which the Event initially occurred. * @exception IllegalArgumentException if source is null. */ public EventObject(Object source) &#123; if (source == null) throw new IllegalArgumentException(&quot;null source&quot;); this.source = source; &#125; /** * The object on which the Event initially occurred. * * @return The object on which the Event initially occurred. */ public Object getSource() &#123; return source; &#125; /** * Returns a String representation of this EventObject. * * @return A a String representation of this EventObject. */ public String toString() &#123; return getClass().getName() + &quot;[source=&quot; + source + &quot;]&quot;; &#125;&#125; 可以看到EventObject类只有一个属性source，这个属性是用来记录最初事件是发生在哪个类。 比如在SpringBoot启动过程中会触发ApplicationStartingEvent事件，而这个事件最初是在SpringApplication类中触发的，因此source就是SpringApplication对象。 1.2 Spring的事件基类ApplicationEventApplicationEvent继承了JDK的事件基类EventObject类，是Spring的事件基类，被所有Spring的具体事件类继承，源码如下： 123456789101112131415161718192021222324252627public abstract class ApplicationEvent extends EventObject &#123; /** use serialVersionUID from Spring 1.2 for interoperability. */ private static final long serialVersionUID = 7099057708183571937L; /** System time when the event happened. */ private final long timestamp; /** * Create a new ApplicationEvent. * @param source the object on which the event initially occurred (never &#123;@code null&#125;) */ public ApplicationEvent(Object source) &#123; super(source); this.timestamp = System.currentTimeMillis(); &#125; /** * Return the system time in milliseconds when the event happened. */ public final long getTimestamp() &#123; return this.timestamp; &#125;&#125; 可以看到ApplicationEvent有且仅有一个属性timestamp，该属性是用来记录事件发生的时间。 1.3 SpringBoot的事件基类SpringApplicationEventSpringApplicationEvent类继承了Spring的事件基类ApplicationEvent，是所有SpringBoot内置生命周期事件的父类，源码如下： 12345678910111213141516171819@SuppressWarnings(&quot;serial&quot;)public abstract class SpringApplicationEvent extends ApplicationEvent &#123; private final String[] args; public SpringApplicationEvent(SpringApplication application, String[] args) &#123; super(application); this.args = args; &#125; public SpringApplication getSpringApplication() &#123; return (SpringApplication) getSource(); &#125; public final String[] getArgs() &#123; return this.args; &#125;&#125; 可以看到SpringApplicationEvent有且仅有一个属性args，该属性就是SpringBoot启动时的命令行参数即标注@SpringBootApplication启动类中main函数的参数。 2.SpringBoot具体的生命周期事件类接下来分析一下SpringBoot内置生命周期事件即SpringApplicationEvent的7个具体子类。 2.1 ApplicationStartingEvent123456789101112public class ApplicationStartingEvent extends SpringApplicationEvent &#123; /** * Create a new &#123;@link ApplicationStartingEvent&#125; instance. * @param application the current application * @param args the arguments the application is running with */ public ApplicationStartingEvent(SpringApplication application, String[] args) &#123; super(application, args); &#125;&#125; SpringBoot开始启动时便会发布ApplicationStartingEvent事件，其发布时机在环境变量Environment或容器ApplicationContext创建前但在注册ApplicationListener具体监听器之后，标志标志SpringApplication开始启动。 2.2 ApplicationEnvironmentPreparedEvent12345678910111213141516171819202122232425public class ApplicationEnvironmentPreparedEvent extends SpringApplicationEvent &#123; private final ConfigurableEnvironment environment; /** * Create a new &#123;@link ApplicationEnvironmentPreparedEvent&#125; instance. * @param application the current application * @param args the arguments the application is running with * @param environment the environment that was just created */ public ApplicationEnvironmentPreparedEvent(SpringApplication application, String[] args, ConfigurableEnvironment environment) &#123; super(application, args); this.environment = environment; &#125; /** * Return the environment. * @return the environment */ public ConfigurableEnvironment getEnvironment() &#123; return this.environment; &#125;&#125; 可以看到ApplicationEnvironmentPreparedEvent事件多了一个environment属性，作用是利用事件发布订阅机制，相应监听器可以从ApplicationEnvironmentPreparedEvent事件中取出environment变量，然后可以为environment属性增加属性值或读出environment变量中的值。 例如： ConfigFileApplicationListener监听器就是监听了ApplicationEnvironmentPreparedEvent事件，然后取出ApplicationEnvironmentPreparedEvent事件的environment属性，然后再为environment属性增加application.properties配置文件中的环境变量值。 当SpringApplication已经开始启动且环境变量Environment已经创建后，并且为环境变量Environment配置了命令行和Servlet等类型的环境变量后，此时会发布ApplicationEnvironmentPreparedEvent事件。 监听ApplicationEnvironmentPreparedEvent事件的第一个监听器是ConfigFileApplicationListener，因为是ConfigFileApplicationListener监听器还要为环境变量Environment增加application.properties配置文件中的环境变量；此后还有一些也是监听ApplicationEnvironmentPreparedEvent事件的其他监听器监听到此事件时，此时环境变量Environment几乎已经完全准备好了。 思考： 监听同一事件的监听器们执行监听逻辑时是有顺序的，可以想一下这个排序逻辑是什么时候排序的？还有为什么要这样排序呢？ 2.3 ApplicationContextInitializedEvent12345678910111213141516171819202122232425public class ApplicationContextInitializedEvent extends SpringApplicationEvent &#123; private final ConfigurableApplicationContext context; /** * Create a new &#123;@link ApplicationContextInitializedEvent&#125; instance. * @param application the current application * @param args the arguments the application is running with * @param context the context that has been initialized */ public ApplicationContextInitializedEvent(SpringApplication application, String[] args, ConfigurableApplicationContext context) &#123; super(application, args); this.context = context; &#125; /** * Return the application context. * @return the context */ public ConfigurableApplicationContext getApplicationContext() &#123; return this.context; &#125;&#125; 可以看到ApplicationContextInitializedEvent事件多了个ConfigurableApplicationContext类型的context属性，context属性的作用同样是为了相应监听器可以拿到这个context属性执行一些逻辑。 ApplicationContextInitializedEvent事件在ApplicationContext容器创建后，且为ApplicationContext容器设置了environment变量和执行了ApplicationContextInitializers的初始化方法后但在bean定义加载前触发，标志ApplicationContext已经初始化完毕。 扩展： 可以看到ApplicationContextInitializedEvent是在为context容器配置environment变量后触发，此时ApplicationContextInitializedEvent等事件只要有context容器的话，那么其他需要environment环境变量的监听器只需要从context中取出environment变量即可，从而ApplicationContextInitializedEvent等事件没必要再配置environment属性。 2.4 ApplicationPreparedEvent12345678910111213141516171819202122232425public class ApplicationPreparedEvent extends SpringApplicationEvent &#123; private final ConfigurableApplicationContext context; /** * Create a new &#123;@link ApplicationPreparedEvent&#125; instance. * @param application the current application * @param args the arguments the application is running with * @param context the ApplicationContext about to be refreshed */ public ApplicationPreparedEvent(SpringApplication application, String[] args, ConfigurableApplicationContext context) &#123; super(application, args); this.context = context; &#125; /** * Return the application context. * @return the context */ public ConfigurableApplicationContext getApplicationContext() &#123; return this.context; &#125;&#125; 同样可以看到ApplicationPreparedEvent事件多了个ConfigurableApplicationContext类型的context属性，多了context属性的作用是能让监听该事件的监听器们能拿到context属性，监听器拿到context属性一般有如下作用： 从事件中取出context属性，然后可以增加一些后置处理器，比如ConfigFileApplicationListener监听器监听到ApplicationPreparedEvent事件后，然后取出context变量，通过context变量增加了PropertySourceOrderingPostProcessor这个后置处理器； 通过context属性取出beanFactory容器，然后注册一些bean，比如LoggingApplicationListener监听器通过ApplicationPreparedEvent事件的context属性取出beanFactory容器,然后注册了springBootLoggingSystem这个单例bean； 通过context属性取出Environment环境变量，然后就可以操作环境变量，比如PropertiesMigrationListener。 ApplicationPreparedEvent事件在ApplicationContext容器已经完全准备好时但在容器刷新前触发，在这个阶段bean定义已经加载完毕还有environment已经准备好可以用了。 2.5 ApplicationStartedEvent12345678910111213141516171819202122232425public class ApplicationStartedEvent extends SpringApplicationEvent &#123; private final ConfigurableApplicationContext context; /** * Create a new &#123;@link ApplicationStartedEvent&#125; instance. * @param application the current application * @param args the arguments the application is running with * @param context the context that was being created */ public ApplicationStartedEvent(SpringApplication application, String[] args, ConfigurableApplicationContext context) &#123; super(application, args); this.context = context; &#125; /** * Return the application context. * @return the context */ public ConfigurableApplicationContext getApplicationContext() &#123; return this.context; &#125;&#125; ApplicationStartedEvent事件将在容器刷新后但ApplicationRunner和CommandLineRunner的run方法执行前触发，标志Spring容器已经刷新，此时容器已经准备完毕了。 扩展： 这里提到了ApplicationRunner和CommandLineRunner接口有啥作用呢？一般会在Spring容器刷新完毕后，此时可能有一些系统参数等静态数据需要加载，此时就可以实现了ApplicationRunner或CommandLineRunner接口来实现静态数据的加载。 2.6 ApplicationReadyEvent12345678910111213141516171819202122232425public class ApplicationReadyEvent extends SpringApplicationEvent &#123; private final ConfigurableApplicationContext context; /** * Create a new &#123;@link ApplicationReadyEvent&#125; instance. * @param application the current application * @param args the arguments the application is running with * @param context the context that was being created */ public ApplicationReadyEvent(SpringApplication application, String[] args, ConfigurableApplicationContext context) &#123; super(application, args); this.context = context; &#125; /** * Return the application context. * @return the context */ public ConfigurableApplicationContext getApplicationContext() &#123; return this.context; &#125;&#125; ApplicationReadyEvent事件在调用完ApplicationRunner和CommandLineRunner的run方法后触发，此时标志SpringApplication已经正在运行。 2.7 ApplicationFailedEvent12345678910111213141516171819202122232425262728293031323334353637public class ApplicationFailedEvent extends SpringApplicationEvent &#123; private final ConfigurableApplicationContext context; private final Throwable exception; /** * Create a new &#123;@link ApplicationFailedEvent&#125; instance. * @param application the current application * @param args the arguments the application was running with * @param context the context that was being created (maybe null) * @param exception the exception that caused the error */ public ApplicationFailedEvent(SpringApplication application, String[] args, ConfigurableApplicationContext context, Throwable exception) &#123; super(application, args); this.context = context; this.exception = exception; &#125; /** * Return the application context. * @return the context */ public ConfigurableApplicationContext getApplicationContext() &#123; return this.context; &#125; /** * Return the exception that caused the failure. * @return the exception */ public Throwable getException() &#123; return this.exception; &#125;&#125; 可以看到ApplicationFailedEvent事件除了多了一个context属性外，还多了一个Throwable类型的exception属性用来记录SpringBoot启动失败时的异常。 ApplicationFailedEvent事件在SpringBoot启动失败时触发，标志SpringBoot启动失败。 总结SpringBoot启动过程中要触发的各种生命周期事件 发布顺序 时间 用途 1 ApplicationStartingEvent 在SpringApplication启动时，在环境变量Environment或者容器ApplicationContext创建前触发，标志SpringApplication开始启动。 2 ApplicationEnvironmentPreparedEvent 当SpringApplication已经开始启动且环境变量Environment已经准备好时触发，标志环境变量已经准备好。 3 ApplicationContextInitializedEvent ApplicationContextInitializers的初始化方法已经被调用，即从spring.factories中加载的initializers已经执行ApplicationContext初始化逻辑但在bean定义加载前触发，标志ApplicationContext已经初始化完毕。 4 ApplicationPreparedEvent 在Spring容器刷新refresh前触发 5 ApplicationStartedEvent 在spring容器刷新后触发，但在调用ApplicationRunner和CommandLineRunner的run方法调用前触发，标志spring容器已经刷新，此时所有的bean实例等都已经加载了。 6 ApplicationReadyEvent 只要SpringApplication可以接收服务请求时即调用完ApplicationRunner和CommandLineRunner的run方法后触发，此时标志SpringApplication已经正在运行，即启动成功。 7 ApplicationFailedEvent 若SpringApplication未能成功启动时则会catch住异常发布ApplicationFailedEvent事件，标志ApplicationFailedEvent启动失败。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(9)-SpringBoot的事件监听机制]]></title>
    <url>%2Fposts%2F2020-11-23-SpringBoot-Source-09%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot的事件监听机制 上一篇分析了SpringApplication对象的构建过程及SpringBoot自己实现的一套SPI机制，关键步骤总结： SpringApplication对象的构造过程其实就是给SpringApplication类的6个成员变量赋值； SpringBoot通过以下步骤实现自己的SPI机制： 1)首先获取线程上下文类加载器; 2)然后利用上下文类加载器从spring.factories配置文件中加载所有的SPI扩展实现类并放入缓存中; 3)根据SPI接口从缓存中取出相应的SPI扩展实现类; 4)实例化从缓存中取出的SPI扩展实现类并返回。 1.SpringBoot广播内置生命周期事件流程分析在SpringBoot启动过程中，每个不同的启动阶段会分别广播不同的内置生命周期事件，然后相应的监听器会监听这些事件来执行一些初始化逻辑工作。比如ConfigFileApplicationListener会监听onApplicationEnvironmentPreparedEvent事件来加载配置文件application.properties的环境变量等。 为了探究SpringBoot广播内置生命周期事件流程，回顾一下SpringBoot的启动流程代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152public ConfigurableApplicationContext run(String... args) &#123; StopWatch stopWatch = new StopWatch(); stopWatch.start(); ConfigurableApplicationContext context = null; Collection&lt;SpringBootExceptionReporter&gt; exceptionReporters = new ArrayList&lt;&gt;(); configureHeadlessProperty(); // 【0】新建一个SpringApplicationRunListeners对象用于触发SpringBoot启动过程中的生命周期事件 SpringApplicationRunListeners listeners = getRunListeners(args); // 【1】》》》》》触发【ApplicationStartingEvent】事件，标志SpringApplication开始启动 listeners.starting(); try &#123; ApplicationArguments applicationArguments = new DefaultApplicationArguments( args); // 【2】》》》》》触发【ApplicationEnvironmentPreparedEvent】事件，此时会去加载application.properties等配置文件的环境变量，同时也有标志环境变量已经准备好的意思 ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments); configureIgnoreBeanInfo(environment); Banner printedBanner = printBanner(environment); context = createApplicationContext(); exceptionReporters = getSpringFactoriesInstances( SpringBootExceptionReporter.class, new Class[] &#123; ConfigurableApplicationContext.class &#125;, context); // 【3】》》》》》触发【ApplicationContextInitializedEvent】事件，标志context容器被创建且已准备好 // 【4】》》》》》触发【ApplicationPreparedEvent】事件，标志Context容器已经准备完成 prepareContext(context, environment, listeners, applicationArguments, printedBanner); refreshContext(context); afterRefresh(context, applicationArguments); stopWatch.stop(); if (this.logStartupInfo) &#123; new StartupInfoLogger(this.mainApplicationClass) .logStarted(getApplicationLog(), stopWatch); &#125; // 【5】》》》》》触发【ApplicationStartedEvent】事件，标志spring容器已经刷新，此时所有的bean实例都已经加载完毕 listeners.started(context); callRunners(context, applicationArguments); &#125; // 【6】》》》》》触发【ApplicationFailedEvent】事件，标志SpringBoot启动失败 catch (Throwable ex) &#123; handleRunFailure(context, ex, exceptionReporters, listeners); throw new IllegalStateException(ex); &#125; try &#123; // 【7】》》》》》触发【ApplicationReadyEvent】事件，标志SpringApplication已经正在运行即已经成功启动，可以接收服务请求了。 listeners.running(context); &#125; catch (Throwable ex) &#123; handleRunFailure(context, ex, exceptionReporters, null); throw new IllegalStateException(ex); &#125; return context;&#125; 可以看到SpringBoot在启动过程中首先会先新建一个SpringApplicationRunListeners对象用于触发SpringBoot启动过程中的各种生命周期事件，比如触发ApplicationStartingEvent,ApplicationEnvironmentPreparedEvent和ApplicationContextInitializedEvent等事件，然后相应的监听器会执行一些SpringBoot启动过程中的初始化逻辑。那么，监听这些SpringBoot的生命周期事件的监听器们是何时被加载实例化的呢？根据之前的分析SpringApplication的构建过程吗？这些执行初始化逻辑的监听器们正是在SpringApplication的构建过程中根据ApplicationListener接口去spring.factories配置文件中加载并实例化的。 1.1 为广播SpringBoot内置生命周期事件做前期准备1.1.1 加载ApplicationListener监听器实现类前面分析到，在构建SpringApplication对象时的setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));这句代码做的事情就是从spring.factories中加载出ApplicationListener事件监听接口的SPI扩展实现类然后添加到SpringApplication对象的listeners集合中，用于后续监听SpringBoot启动过程中的事件，来执行一些初始化逻辑工作。 SpringBoot启动时的具体监听器们都实现了ApplicationListener接口，其在spring.factories部分配置如下： spring-boot-2.1.0.RELEASE\spring-boot-project\spring-boot\src\main\resources\META-INF\spring.factories 1234567891011# Application Listenersorg.springframework.context.ApplicationListener=\org.springframework.boot.ClearCachesApplicationListener,\org.springframework.boot.builder.ParentContextCloserApplicationListener,\org.springframework.boot.context.FileEncodingApplicationListener,\org.springframework.boot.context.config.AnsiOutputApplicationListener,\org.springframework.boot.context.config.ConfigFileApplicationListener,\org.springframework.boot.context.config.DelegatingApplicationListener,\org.springframework.boot.context.logging.ClasspathLoggingApplicationListener,\org.springframework.boot.context.logging.LoggingApplicationListener,\org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener 1.1.2 加载SPI扩展类EventPublishingRunListener前面讲到，在SpringBoot的启动过程中首先会先新建一个SpringApplicationRunListeners对象用于触发SpringBoot启动过程中的生命周期事件，来看下SpringApplicationRunListeners listeners = getRunListeners(args);这句代码： 12345678private SpringApplicationRunListeners getRunListeners(String[] args) &#123; // 构造一个由SpringApplication.class和String[].class组成的types Class&lt;?&gt;[] types = new Class&lt;?&gt;[] &#123; SpringApplication.class, String[].class &#125;; // 1) 根据SpringApplicationRunListener接口去spring.factories配置文件中加载其SPI扩展实现类 // 2) 构建一个SpringApplicationRunListeners对象并返回 return new SpringApplicationRunListeners(logger, getSpringFactoriesInstances(SpringApplicationRunListener.class, types, this, args));&#125; 将重点放到getSpringFactoriesInstances( SpringApplicationRunListener.class, types, this, args)这句代码，getSpringFactoriesInstances这个方法在之前分析SpringBoot的SPI机制时已经详细分析过。可以看到SpringBoot此时又是根据SpringApplicationRunListener这个SPI接口去spring.factories中加载相应的SPI扩展实现类，直接去spring.factories中看看SpringApplicationRunListener有哪些SPI实现类： 123# Run Listenersorg.springframework.boot.SpringApplicationRunListener=\org.springframework.boot.context.event.EventPublishingRunListener 可以看到，SpringApplicationRunListener只有EventPublishingRunListener这个SPI实现类。 EventPublishingRunListener在SpringBoot启动过程的不同阶段触发不同的SpringBoot的生命周期事件，即SpringApplicationRunListeners对象没有承担广播事件的职责，而最终是委托EventPublishingRunListener来广播事件的。 因为从spring.factories中加载EventPublishingRunListener类后还会实例化该类，那么再跟进EventPublishingRunListener的源码，看看其是如何承担触发SpringBoot生命周期事件这一职责的 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102public class EventPublishingRunListener implements SpringApplicationRunListener, Ordered &#123; private final SpringApplication application; private final String[] args; //拥有一个SimpleApplicationEventMulticaster事件广播器来广播事件 private final SimpleApplicationEventMulticaster initialMulticaster; public EventPublishingRunListener(SpringApplication application, String[] args) &#123; this.application = application; this.args = args; // 新建一个事件广播器SimpleApplicationEventMulticaster对象 this.initialMulticaster = new SimpleApplicationEventMulticaster(); // 遍历在构造SpringApplication对象时从spring.factories配置文件中获取的事件监听器 for (ApplicationListener&lt;?&gt; listener : application.getListeners()) &#123; // 将从spring.factories配置文件中获取的事件监听器们添加到事件广播器initialMulticaster对象的相关集合中 this.initialMulticaster.addApplicationListener(listener); &#125; &#125; @Override public int getOrder() &#123; return 0; &#125; // 》》》》》触发【ApplicationStartingEvent】事件 @Override public void starting() &#123; this.initialMulticaster.multicastEvent(new ApplicationStartingEvent(this.application, this.args)); &#125; // 》》》》》触发【ApplicationEnvironmentPreparedEvent】事件 @Override public void environmentPrepared(ConfigurableEnvironment environment) &#123; this.initialMulticaster.multicastEvent(new ApplicationEnvironmentPreparedEvent(this.application, this.args, environment)); &#125; // 》》》》》触发【ApplicationContextInitializedEvent】事件 @Override public void contextPrepared(ConfigurableApplicationContext context) &#123; this.initialMulticaster.multicastEvent(new ApplicationContextInitializedEvent(this.application, this.args, context)); &#125; // 》》》》》触发【ApplicationPreparedEvent】事件 @Override public void contextLoaded(ConfigurableApplicationContext context) &#123; for (ApplicationListener&lt;?&gt; listener : this.application.getListeners()) &#123; if (listener instanceof ApplicationContextAware) &#123; ((ApplicationContextAware) listener).setApplicationContext(context); &#125; context.addApplicationListener(listener); &#125; this.initialMulticaster.multicastEvent(new ApplicationPreparedEvent(this.application, this.args, context)); &#125; // 》》》》》触发【ApplicationStartedEvent】事件 @Override public void started(ConfigurableApplicationContext context) &#123; context.publishEvent(new ApplicationStartedEvent(this.application, this.args, context)); &#125; // 》》》》》触发【ApplicationReadyEvent】事件 @Override public void running(ConfigurableApplicationContext context) &#123; context.publishEvent(new ApplicationReadyEvent(this.application, this.args, context)); &#125; // 》》》》》触发【ApplicationFailedEvent】事件 @Override public void failed(ConfigurableApplicationContext context, Throwable exception) &#123; ApplicationFailedEvent event = new ApplicationFailedEvent(this.application, this.args, context, exception); if (context != null &amp;&amp; context.isActive()) &#123; // Listeners have been registered to the application context so we should // use it at this point if we can context.publishEvent(event); &#125; else &#123; // An inactive context may not have a multicaster so we use our multicaster to // call all of the context&#x27;s listeners instead if (context instanceof AbstractApplicationContext) &#123; for (ApplicationListener&lt;?&gt; listener : ((AbstractApplicationContext) context).getApplicationListeners()) &#123; this.initialMulticaster.addApplicationListener(listener); &#125; &#125; this.initialMulticaster.setErrorHandler(new LoggingErrorHandler()); this.initialMulticaster.multicastEvent(event); &#125; &#125; private static class LoggingErrorHandler implements ErrorHandler &#123; private static Log logger = LogFactory.getLog(EventPublishingRunListener.class); @Override public void handleError(Throwable throwable) &#123; logger.warn(&quot;Error calling ApplicationEventListener&quot;, throwable); &#125; &#125;&#125; 可以看到EventPublishingRunListener类实现了SpringApplicationRunListener接口，SpringApplicationRunListener接口定义了SpringBoot启动时触发生命周期事件的接口方法，而EventPublishingRunListener类正是通过实现SpringApplicationRunListener接口的starting,environmentPrepared和contextPrepared等方法来广播SpringBoot不同的生命周期事件，直接看下SpringApplicationRunListener接口源码好了： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657public interface SpringApplicationRunListener &#123; /** * Called immediately when the run method has first started. Can be used for very * early initialization. */ void starting(); /** * Called once the environment has been prepared, but before the * &#123;@link ApplicationContext&#125; has been created. * @param environment the environment */ void environmentPrepared(ConfigurableEnvironment environment); /** * Called once the &#123;@link ApplicationContext&#125; has been created and prepared, but * before sources have been loaded. * @param context the application context */ void contextPrepared(ConfigurableApplicationContext context); /** * Called once the application context has been loaded but before it has been * refreshed. * @param context the application context */ void contextLoaded(ConfigurableApplicationContext context); /** * The context has been refreshed and the application has started but * &#123;@link CommandLineRunner CommandLineRunners&#125; and &#123;@link ApplicationRunner * ApplicationRunners&#125; have not been called. * @param context the application context. * @since 2.0.0 */ void started(ConfigurableApplicationContext context); /** * Called immediately before the run method finishes, when the application context has * been refreshed and all &#123;@link CommandLineRunner CommandLineRunners&#125; and * &#123;@link ApplicationRunner ApplicationRunners&#125; have been called. * @param context the application context. * @since 2.0.0 */ void running(ConfigurableApplicationContext context); /** * Called when a failure occurs when running the application. * @param context the application context or &#123;@code null&#125; if a failure occurred before * the context was created * @param exception the failure * @since 2.0.0 */ void failed(ConfigurableApplicationContext context, Throwable exception);&#125; 再接着分析EventPublishingRunListener这个类，可以看到其有一个重要的成员属性initialMulticaster，该成员属性是SimpleApplicationEventMulticaster类对象，该类正是承担了广播SpringBoot启动时生命周期事件的职责,即EventPublishingRunListener对象没有承担广播事件的职责，而最终是委托SimpleApplicationEventMulticaster来广播事件的。 从EventPublishingRunListener的源码中也可以看到在starting,environmentPrepared和contextPrepared等方法中也正是通过调用SimpleApplicationEventMulticaster类对象的multicastEvent方法来广播事件的。 思考 SpringBoot启动过程中触发事件时事件广播者是层层委托职责的，起初由SpringApplicationRunListeners对象承担，然后SpringApplicationRunListeners对象将广播事件职责委托给EventPublishingRunListener对象，最终EventPublishingRunListener对象将广播事件的职责委托给SimpleApplicationEventMulticaster对象。为什么要层层委托这么做呢？ 前面讲到从spring.factories中加载出EventPublishingRunListener类后会实例化，而实例化必然会通过EventPublishingRunListener的构造函数来进行实例化，接下来分析下EventPublishingRunListener的构造函数源码： 1234567891011public EventPublishingRunListener(SpringApplication application, String[] args) &#123; this.application = application; this.args = args; // 新建一个事件广播器SimpleApplicationEventMulticaster对象 this.initialMulticaster = new SimpleApplicationEventMulticaster(); // 遍历在构造SpringApplication对象时从spring.factories配置文件中获取的事件监听器 for (ApplicationListener&lt;?&gt; listener : application.getListeners()) &#123; // 将从spring.factories配置文件中获取的事件监听器们添加到事件广播器initialMulticaster对象的相关集合中 this.initialMulticaster.addApplicationListener(listener); &#125;&#125; 可以看到在EventPublishingRunListener的构造函数中有一个for循环会遍历之前从spring.factories中加载的监听器们，然后添加到集合中缓存起来，用于以后广播各种事件时直接从这个集合中取出来即可，而不用再去spring.factories中加载，提高效率。 1.2 广播SpringBoot的内置生命周期事件从spring.factories配置文件中加载并实例化EventPublishingRunListener对象后，那么在SpringBoot的启动过程中会触发一系列SpringBoot内置的生命周期事件，从以上SpringBoot启动过程中的源码，可以看到在SpringBoot的启动过程中总共会触发7种不同类型的生命周期事件，来标志SpringBoot的不同启动阶段，同时，这些生命周期事件的监听器也会执行一些启动过程中的初始化逻辑。 以下是SpringBoot启动过程中要触发的事件类型，其中ApplicationFailedEvent在SpringBoot启动过程中遇到异常才会触发： ApplicationStartingEvent ApplicationEnvironmentPreparedEvent ApplicationContextInitializedEvent ApplicationPreparedEvent ApplicationStartedEvent ApplicationFailedEvent ApplicationReadyEvent 以listeners.starting();这句代码为例，看看EventPublishingRunListener对象触发事件的源码： 12345678public void starting() &#123; // 遍历listeners集合，这里实质取出的就是刚才从spring.factories中取出的SPI实现类EventPublishingRunListener // 而EventPublishingRunListener对象承担了SpringBoot启动过程中负责广播不同的生命周期事件 for (SpringApplicationRunListener listener : this.listeners) &#123; // 调用EventPublishingRunListener的starting方法来广播ApplicationStartingEvent事件 listener.starting(); &#125;&#125; 继续跟进listener.starting();的源码: 1234567// 》》》》》触发【ApplicationStartingEvent】事件@Overridepublic void starting() &#123; // EventPublishingRunListener对象将发布ApplicationStartingEvent这件事情委托给了initialMulticaster对象 // 调用initialMulticaster的multicastEvent方法来触发ApplicationStartingEvent事件 this.initialMulticaster.multicastEvent(new ApplicationStartingEvent(this.application, this.args));&#125; 可以看到，EventPublishingRunListener对象将发布ApplicationStartingEvent这件事情委托给了SimpleApplicationEventMulticaster对象initialMulticaster,,而initialMulticaster对象最终会调用其multicastEvent方法来触发ApplicationStartingEvent事件。 2.SpringBoot的内置生命周期事件总结SpringBoot启动过程中要触发的各种生命周期事件 发布顺序 时间 用途 1 ApplicationStartingEvent 在SpringApplication启动时，在环境变量Environment或者容器ApplicationContext创建前触发，标志SpringApplication开始启动。 2 ApplicationEnvironmentPreparedEvent 当SpringApplication已经开始启动且环境变量Environment已经准备好时触发，标志环境变量已经准备好。 3 ApplicationContextInitializedEvent ApplicationContextInitializers的初始化方法已经被调用，即从spring.factories中加载的initializers已经执行ApplicationContext初始化逻辑但在bean定义加载前触发，标志ApplicationContext已经初始化完毕。 4 ApplicationPreparedEvent 在Spring容器刷新refresh前触发 5 ApplicationStartedEvent 在spring容器刷新后触发，但在调用ApplicationRunner和CommandLineRunner的run方法调用前触发，标志spring容器已经刷新，此时所有的bean实例等都已经加载了。 6 ApplicationReadyEvent 只要SpringApplication可以接收服务请求时即调用完ApplicationRunner和CommandLineRunner的run方法后触发，此时标志SpringApplication已经正在运行，即启动成功。 7 ApplicationFailedEvent 若SpringApplication未能成功启动时则会catch住异常发布ApplicationFailedEvent事件，标志ApplicationFailedEvent启动失败。 总结SpringBoot启动过程中会触发7种类型的生命周期事件，标志不同的启动阶段，然后相应的监听器会监听这些事件来执行一些初始化逻辑工作。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(8)-SpringApplication对象的构建过程]]></title>
    <url>%2Fposts%2F2020-11-22-SpringBoot-Source-08%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringApplication对象的构建过程 上一篇分析了SpringBoot的启动流程，关键步骤总结： 构建SpringApplication对象，用于启动SpringBoot； 从spring.factories配置文件中加载EventPublishingRunListener对象用于在不同的启动阶段触发不同的生命周期事件； 准备环境变量，包括系统变量，环境变量，命令行参数及配置文件（比如application.properties）等； 创建容器ApplicationContext; 为第4步创建的容器对象做一些初始化工作，准备一些容器属性值等，同时调用各个ApplicationContextInitializer的初始化方法来执行一些初始化逻辑等； 刷新容器，这一步至关重要，是重点中的重点，太多复杂逻辑在这里实现； 调用ApplicationRunner和CommandLineRunner的run方法，可以实现这两个接口在容器启动后来加载一些业务数据等; 在SpringBoot启动过程中，每个不同的启动阶段会分别触发不同的内置生命周期事件，然后相应的监听器会监听这些事件来执行一些初始化逻辑工作比如ConfigFileApplicationListener会监听onApplicationEnvironmentPreparedEvent事件来加载环境变量等。 1.SpringApplication对象的构建过程之前在讲解SpringBoot的启动流程中，有看到新建了一个SpringApplication对象用来启动SpringBoot项目。那么，就来看看SpringApplication对象的构建过程，同时分析下SpringBoot自己实现的SPI机制。 开始分析SpringApplication对象的构造过程，因为一个对象的构造无非就是在其构造函数里给它的一些成员属性赋值，很少包含其他额外的业务逻辑（当然有时候可能也会在构造函数里开启一些线程啥的）。那么，先来看下构造SpringApplication对象时需要用到的一些成员属性： 1234567891011121314151617//SpringBoot的启动类即包含main函数的主类private Set&lt;Class&lt;?&gt;&gt; primarySources;//包含main函数的主类private Class&lt;?&gt; mainApplicationClass;//资源加载器private ResourceLoader resourceLoader;//应用类型private WebApplicationType webApplicationType;//初始化器private List&lt;ApplicationContextInitializer&lt;?&gt;&gt; initializers;//监听器private List&lt;ApplicationListener&lt;?&gt;&gt; listeners; 可以看到构建SpringApplication对象时主要是给上面代码中的六个成员属性赋值，接着来看SpringApplication对象的构造过程。 先回到上一篇文章讲解的构建SpringApplication对象的代码处: 1234public static ConfigurableApplicationContext run(Class&lt;?&gt;[] primarySources, String[] args) &#123; // 构建一个SpringApplication对象，并调用其run方法来启动 return new SpringApplication(primarySources).run(args);&#125; 跟进SpringApplication的构造函数中： 1234public SpringApplication(Class&lt;?&gt;... primarySources) &#123; // 继续调用SpringApplication另一个构造函数 this(null, primarySources);&#125; 继续跟进SpringApplication另一个构造函数： 123456789101112131415public SpringApplication(ResourceLoader resourceLoader, Class&lt;?&gt;... primarySources) &#123; // 【1】给resourceLoader属性赋值，注意传入的resourceLoader参数为null this.resourceLoader = resourceLoader; Assert.notNull(primarySources, &quot;PrimarySources must not be null&quot;); // 【2】给primarySources属性赋值，传入的primarySources其实就是SpringApplication.run(MainApplication.class, args);中的MainApplication.class this.primarySources = new LinkedHashSet&lt;&gt;(Arrays.asList(primarySources)); // 【3】给webApplicationType属性赋值，根据classpath中存在哪种类型的类来确定是哪种应用类型 this.webApplicationType = WebApplicationType.deduceFromClasspath(); // 【4】给initializers属性赋值，利用SpringBoot自定义的SPI从spring.factories中加载ApplicationContextInitializer接口的实现类并赋值给initializers属性 setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class)); // 【5】给listeners属性赋值，利用SpringBoot自定义的SPI从spring.factories中加载ApplicationListener接口的实现类并赋值给listeners属性 setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class)); // 【6】给mainApplicationClass属性赋值，即这里要推断哪个类调用了main函数，然后再赋值给mainApplicationClass属性，用于后面启动流程中打印一些日志。 this.mainApplicationClass = deduceMainApplicationClass();&#125; 可以看到构建SpringApplication对象时其实就是给前面讲的6个SpringApplication类的成员属性赋值而已，做一些初始化工作： 给resourceLoader属性赋值，resourceLoader属性，资源加载器，此时传入的resourceLoader参数为null； 给primarySources属性赋值，primarySources属性即SpringApplication.run(SpringBootSampleNikoApplication.class,args);中传入的SpringBootSampleNikoApplication.class，该类为SpringBoot项目的启动类，主要通过该类来扫描Configuration类加载bean； 给webApplicationType属性赋值，webApplicationType属性，代表应用类型，根据classpath存在的相应Application类来判断。因为后面要根据webApplicationType来确定创建哪种Environment对象和创建哪种ApplicationContext； 给initializers属性赋值，initializers属性为List&lt;ApplicationContextInitializer&lt;?&gt;&gt;集合，利用SpringBoot的SPI机制从spring.factories配置文件中加载，后面在初始化容器的时候会应用这些初始化器来执行一些初始化工作。SpringBoot自己实现的SPI机制比较重要； 给listeners属性赋值，listeners属性为List&lt;ApplicationListener&lt;?&gt;&gt;集合，同样利用利用SpringBoot的SPI机制从spring.factories配置文件中加载。因为SpringBoot启动过程中会在不同的阶段触发一些事件，所以这些加载的监听器们就是来监听SpringBoot启动过程中的一些生命周期事件的； 给mainApplicationClass属性赋值，mainApplicationClass属性表示包含main函数的类，即这里要推断哪个类调用了main函数，然后把这个类的全限定名赋值给mainApplicationClass属性，用于后面启动流程中打印一些日志。 1.1 推断项目应用类型接着分析构造SpringApplication对象的第【3】步WebApplicationType.deduceFromClasspath();这句代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556public enum WebApplicationType &#123; /** * The application should not run as a web application and should not start an * embedded web server. */ NONE, /** * The application should run as a servlet-based web application and should start an * embedded servlet web server. */ SERVLET, /** * The application should run as a reactive web application and should start an * embedded reactive web server. */ REACTIVE; private static final String[] SERVLET_INDICATOR_CLASSES = &#123; &quot;javax.servlet.Servlet&quot;, &quot;org.springframework.web.context.ConfigurableWebApplicationContext&quot; &#125;; private static final String WEBMVC_INDICATOR_CLASS = &quot;org.springframework.&quot; + &quot;web.servlet.DispatcherServlet&quot;; private static final String WEBFLUX_INDICATOR_CLASS = &quot;org.&quot; + &quot;springframework.web.reactive.DispatcherHandler&quot;; private static final String JERSEY_INDICATOR_CLASS = &quot;org.glassfish.jersey.servlet.ServletContainer&quot;; private static final String SERVLET_APPLICATION_CONTEXT_CLASS = &quot;org.springframework.web.context.WebApplicationContext&quot;; private static final String REACTIVE_APPLICATION_CONTEXT_CLASS = &quot;org.springframework.boot.web.reactive.context.ReactiveWebApplicationContext&quot;; static WebApplicationType deduceFromClasspath() &#123; // 若classpath中不存在&quot;org.springframework.&quot; + &quot;web.servlet.DispatcherServlet&quot;和&quot;org.glassfish.jersey.servlet.ServletContainer&quot; // 则返回WebApplicationType.REACTIVE，表明是reactive应用 if (ClassUtils.isPresent(WEBFLUX_INDICATOR_CLASS, null) &amp;&amp; !ClassUtils.isPresent(WEBMVC_INDICATOR_CLASS, null) &amp;&amp; !ClassUtils.isPresent(JERSEY_INDICATOR_CLASS, null)) &#123; return WebApplicationType.REACTIVE; &#125; // 若&#123; &quot;javax.servlet.Servlet&quot;,&quot;org.springframework.web.context.ConfigurableWebApplicationContext&quot; &#125; // 都不存在在classpath，则说明是不是web应用 for (String className : SERVLET_INDICATOR_CLASSES) &#123; if (!ClassUtils.isPresent(className, null)) &#123; return WebApplicationType.NONE; &#125; &#125; // 最终返回普通的web应用 return WebApplicationType.SERVLET; &#125; ....&#125; 如上代码，根据classpath判断应用类型，即通过反射加载classpath判断指定的标志类存在与否来分别判断是Reactive应用，Servlet类型的web应用还是普通的应用。 1.2 推断哪个类调用了main函数分析构造SpringApplication对象的第【6】步this.mainApplicationClass = deduceMainApplicationClass();这句代码： 123456789101112131415161718private Class&lt;?&gt; deduceMainApplicationClass() &#123; try &#123; // 获取StackTraceElement对象数组stackTrace，StackTraceElement对象存储了调用栈相关信息（比如类名，方法名等） StackTraceElement[] stackTrace = new RuntimeException().getStackTrace(); // 遍历stackTrace数组 for (StackTraceElement stackTraceElement : stackTrace) &#123; // 若stackTraceElement记录的调用方法名等于main if (&quot;main&quot;.equals(stackTraceElement.getMethodName())) &#123; // 那么就返回stackTraceElement记录的类名即包含main函数的类名 return Class.forName(stackTraceElement.getClassName()); &#125; &#125; &#125; catch (ClassNotFoundException ex) &#123; // Swallow and continue &#125; return null;&#125; 可以看到deduceMainApplicationClass方法的主要作用就是从StackTraceElement调用栈数组中获取哪个类调用了main方法，然后再返回赋值给mainApplicationClass属性，然后用于后面启动流程中打印一些日志。 2.SpringBoot的SPI机制原理SpringBoot没有使用Java的SPI机制，而是自定义实现了一套自己的SPI机制。SpringBoot利用自定义实现的SPI机制可以加载初始化器实现类，监听器实现类和自动配置类等等。如果要添加自动配置类或自定义监听器，那么很重要的一步就是在spring.factories中进行配置，然后才会被SpringBoot加载。 好了，那么接下来就来重点分析下SpringBoot是如何是实现自己的SPI机制的。 前面构造SpringApplication对象的第【4】步和第【5】步代码，因为第【4】步和第【5】步都是利用SpringBoot的SPI机制来加载扩展实现类，这里只分析第【4】步的setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));这句代码，看看getSpringFactoriesInstances方法中SpringBoot是如何实现自己的一套SPI来加载ApplicationContextInitializer初始化器接口的扩展实现类的？ 1234private &lt;T&gt; Collection&lt;T&gt; getSpringFactoriesInstances(Class&lt;T&gt; type) &#123; // 继续调用重载的getSpringFactoriesInstances方法进行加载 return getSpringFactoriesInstances(type, new Class&lt;?&gt;[] &#123;&#125;);&#125; 继续跟进重载的getSpringFactoriesInstances方法： 12345678910111213private &lt;T&gt; Collection&lt;T&gt; getSpringFactoriesInstances(Class&lt;T&gt; type, Class&lt;?&gt;[] parameterTypes, Object... args) &#123; // 【1】获得类加载器 ClassLoader classLoader = getClassLoader(); // Use names and ensure unique to protect against duplicates // 【2】将接口类型和类加载器作为参数传入loadFactoryNames方法，从spring.factories配置文件中进行加载接口实现类 Set&lt;String&gt; names = new LinkedHashSet&lt;&gt;(SpringFactoriesLoader.loadFactoryNames(type, classLoader)); // 【3】实例化从spring.factories中加载的接口实现类 List&lt;T&gt; instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names); // 【4】进行排序 AnnotationAwareOrderComparator.sort(instances); // 【5】返回加载并实例化好的接口实现类 return instances;&#125; 可以看到，SpringBoot自定义实现的SPI机制代码中最重要的是上面代码的【1】,【2】,【3】步，这3步下面分别进行重点分析。 2.1 获得类加载器Java的SPI机制默认是利用线程上下文类加载器去加载扩展类的，那么，SpringBoot自己实现的SPI机制又是利用哪种类加载器去加载spring.factories配置文件中的扩展实现类呢？ 分析第【1】步的ClassLoader classLoader = getClassLoader();这句代码： 12345678public ClassLoader getClassLoader() &#123; // 前面在构造SpringApplicaiton对象时，传入的resourceLoader参数是null，因此不会执行if语句里面的逻辑 if (this.resourceLoader != null) &#123; return this.resourceLoader.getClassLoader(); &#125; // 获取默认的类加载器 return ClassUtils.getDefaultClassLoader();&#125; 继续跟进getDefaultClassLoader方法： 12345678910111213141516171819202122232425262728// ClassUtils.javapublic static ClassLoader getDefaultClassLoader() &#123; ClassLoader cl = null; try &#123; // 【重点】获取线程上下文类加载器 cl = Thread.currentThread().getContextClassLoader(); &#125; catch (Throwable ex) &#123; // Cannot access thread context ClassLoader - falling back... &#125; // 这里的逻辑不会执行 if (cl == null) &#123; // No thread context class loader -&gt; use class loader of this class. cl = ClassUtils.class.getClassLoader(); if (cl == null) &#123; // getClassLoader() returning null indicates the bootstrap ClassLoader try &#123; cl = ClassLoader.getSystemClassLoader(); &#125; catch (Throwable ex) &#123; // Cannot access system ClassLoader - oh well, maybe the caller can live with null... &#125; &#125; &#125; // 返回刚才获取的线程上下文类加载器 return cl;&#125; 可以看到，原来SpringBoot的SPI机制中也是用线程上下文类加载器去加载spring.factories文件中的扩展实现类的！ 2.2 加载spring.factories配置文件中的SPI扩展类再来看下第【2】步中的SpringFactoriesLoader.loadFactoryNames(type, classLoader)这句代码是如何加载spring.factories配置文件中的SPI扩展类的？ 12345678// SpringFactoriesLoader.javapublic static List&lt;String&gt; loadFactoryNames(Class&lt;?&gt; factoryClass, @Nullable ClassLoader classLoader) &#123; // factoryClass即SPI接口，比如ApplicationContextInitializer,EnableAutoConfiguration等接口 String factoryClassName = factoryClass.getName(); // 【主线，重点关注】继续调用loadSpringFactories方法加载SPI扩展类 return loadSpringFactories(classLoader).getOrDefault(factoryClassName, Collections.emptyList());&#125; 继续跟进loadSpringFactories方法： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051// SpringFactoriesLoader.java/** * The location to look for factories. * &lt;p&gt;Can be present in multiple JAR files. */public static final String FACTORIES_RESOURCE_LOCATION = &quot;META-INF/spring.factories&quot;;private static Map&lt;String, List&lt;String&gt;&gt; loadSpringFactories(@Nullable ClassLoader classLoader) &#123; // 以classLoader作为键先从缓存中取，若能取到则直接返回 MultiValueMap&lt;String, String&gt; result = cache.get(classLoader); if (result != null) &#123; return result; &#125; // 若缓存中无记录，则去spring.factories配置文件中获取 try &#123; // 这里加载所有jar包中包含&quot;MATF-INF/spring.factories&quot;文件的url路径 Enumeration&lt;URL&gt; urls = (classLoader != null ? classLoader.getResources(FACTORIES_RESOURCE_LOCATION) : ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION)); result = new LinkedMultiValueMap&lt;&gt;(); // 遍历urls路径，将所有spring.factories文件的键值对（key:SPI接口类名 value:SPI扩展类名） // 加载放到 result集合中 while (urls.hasMoreElements()) &#123; // 取出一条url URL url = urls.nextElement(); // 将url封装到UrlResource对象中 UrlResource resource = new UrlResource(url); // 利用PropertiesLoaderUtils的loadProperties方法将spring.factories文件键值对内容加载进Properties对象中 Properties properties = PropertiesLoaderUtils.loadProperties(resource); // 遍历刚加载的键值对properties对象 for (Map.Entry&lt;?, ?&gt; entry : properties.entrySet()) &#123; // 取出SPI接口名 String factoryClassName = ((String) entry.getKey()).trim(); // 遍历SPI接口名对应的实现类即SPI扩展类 for (String factoryName : StringUtils.commaDelimitedListToStringArray((String) entry.getValue())) &#123; // SPI接口名作为key，SPI扩展类作为value放入result中 result.add(factoryClassName, factoryName.trim()); &#125; &#125; &#125; // 以classLoader作为key，result作为value放入cache缓存 cache.put(classLoader, result); // 最终返回result对象 return result; &#125; catch (IOException ex) &#123; throw new IllegalArgumentException(&quot;Unable to load factories from location [&quot; + FACTORIES_RESOURCE_LOCATION + &quot;]&quot;, ex); &#125;&#125; 如上代码，loadSpringFactories方法主要做的事情就是利用之前获取的线程上下文类加载器将classpath中的所有spring.factories配置文件中所有SPI接口的所有扩展实现类给加载出来，然后放入缓存中。 注意，这里是一次性加载所有的SPI扩展实现类，所以之后根据SPI接口就直接从缓存中获取SPI扩展类了，就不用再次去spring.factories配置文件中获取SPI接口对应的扩展实现类了。比如之后的获取ApplicationListener,FailureAnalyzer和EnableAutoConfiguration接口的扩展实现类都直接从缓存中获取即可。 思考1： 这里为啥要一次性从spring.factories配置文件中获取所有的扩展类放入缓存中呢？而不是每次都是根据SPI接口去spring.factories配置文件中获取呢？ 思考2： 还记得之前讲的SpringBoot的自动配置源码时提到的AutoConfigurationImportFilter这个接口的作用吗？现在应该能更清楚的理解这个接口的作用了吧。 将所有的SPI扩展实现类加载出来后，此时再调用getOrDefault(factoryClassName, Collections.emptyList())方法根据SPI接口名去筛选当前对应的扩展实现类，比如这里传入的factoryClassName参数名为ApplicationContextInitializer接口，那么这个接口将会作为key从刚才缓存数据中取出ApplicationContextInitializer接口对应的SPI扩展实现类。从spring.factories中获取的ApplicationContextInitializer接口对应的所有SPI扩展实现类。 2.3 实例化从spring.factories中加载的SPI扩展类前面从spring.factories中获取到ApplicationContextInitializer接口对应的所有SPI扩展实现类后，此时会将这些SPI扩展类进行实例化。 再来看下前面的第【3】步的实例化代码：List&lt;T&gt; instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names);。 123456789101112131415161718192021222324private &lt;T&gt; List&lt;T&gt; createSpringFactoriesInstances(Class&lt;T&gt; type, Class&lt;?&gt;[] parameterTypes, ClassLoader classLoader, Object[] args, Set&lt;String&gt; names) &#123; // 新建instances集合，用于存储稍后实例化后的SPI扩展类对象 List&lt;T&gt; instances = new ArrayList&lt;&gt;(names.size()); // 遍历name集合，names集合存储了所有SPI扩展类的全限定名 for (String name : names) &#123; try &#123; // 根据全限定名利用反射加载类 Class&lt;?&gt; instanceClass = ClassUtils.forName(name, classLoader); // 断言刚才加载的SPI扩展类是否属于SPI接口类型 Assert.isAssignable(type, instanceClass); // 获得SPI扩展类的构造器 Constructor&lt;?&gt; constructor = instanceClass.getDeclaredConstructor(parameterTypes); // 实例化SPI扩展类 T instance = (T) BeanUtils.instantiateClass(constructor, args); // 添加进instances集合 instances.add(instance); &#125; catch (Throwable ex) &#123; throw new IllegalArgumentException(&quot;Cannot instantiate &quot; + type + &quot; : &quot; + name, ex); &#125; &#125; // 返回 return instances;&#125; 上面代码主要做的事情就是实例化SPI扩展类。 思考3： SpringBoot为何弃用Java的SPI而自定义了一套SPI？ 总结好了，知识点总结下： 分析了SpringApplication对象的构造过程； 分析了SpringBoot自己实现的一套SPI机制。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(7)-SpringBoot的启动流程]]></title>
    <url>%2Fposts%2F2020-11-21-SpringBoot-Source-07%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot的启动流程 上一篇分析了SpringBoot内置的各种Starter的构建原理，关键点总结： spring-boot-starter-xxx起步依赖没有一行代码，而是直接或间接依赖了xxx-autoconfigure模块，而xxx-autoconfigure模块承担了spring-boot-starter-xxx起步依赖自动配置的实现； xxx-autoconfigure自动配置模块引入了一些可选依赖，这些可选依赖不会被传递到spring-boot-starter-xxx起步依赖中，这是起步依赖构建的关键点； spring-boot-starter-xxx起步依赖显式引入了一些对自动配置起作用的可选依赖，因此会触发 xxx-autoconfigure自动配置的逻辑（比如创建某些符合条件的配置bean）； 经过前面3步的准备，项目只要引入了某个起步依赖后，就可以开箱即用了，而不用手动去创建一些bean等。 1.编写一个SpringBoot启动类运行一个SpringBoot项目，引入相关Starter和相关依赖后，再编写一个启动类，然后在这个启动类标上@SpringBootApplication注解，然后就可以启动运行项目了，如下代码： 12345678@SpringBootApplicationpublic class SpringBootSampleNikoApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringBootSampleNikoApplication.class, args); &#125;&#125; 如上代码，在SpringBootSampleNikoApplication启动类上标注了@SpringBootApplication注解，然后在main函数中调用SpringApplication.run(SpringBootSampleNikoApplication.class, args);这句代码就完成了SpringBoot的启动流程，非常简单。 2.@SpringBootApplication来分析下标注在启动类上的@SpringBootApplication注解，直接上源码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@Documented@Inherited@SpringBootConfiguration@EnableAutoConfiguration// TODO 这两个排除过滤器TypeExcludeFilter和AutoConfigurationExcludeFilter暂不知道啥作用@ComponentScan(excludeFilters = &#123; @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class), @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)public @interface SpringBootApplication &#123; /** * Exclude specific auto-configuration classes such that they will never be applied. * @return the classes to exclude */ // 等同于EnableAutoConfiguration注解的exclude属性 @AliasFor(annotation = EnableAutoConfiguration.class) Class&lt;?&gt;[] exclude() default &#123;&#125;; /** * Exclude specific auto-configuration class names such that they will never be * applied. * @return the class names to exclude * @since 1.3.0 */ // 等同于EnableAutoConfiguration注解的excludeName属性 @AliasFor(annotation = EnableAutoConfiguration.class) String[] excludeName() default &#123;&#125;; /** * Base packages to scan for annotated components. Use &#123;@link #scanBasePackageClasses&#125; * for a type-safe alternative to String-based package names. * @return base packages to scan * @since 1.3.0 */ // 等同于ComponentScan注解的basePackages属性 @AliasFor(annotation = ComponentScan.class, attribute = &quot;basePackages&quot;) String[] scanBasePackages() default &#123;&#125;; /** * Type-safe alternative to &#123;@link #scanBasePackages&#125; for specifying the packages to * scan for annotated components. The package of each class specified will be scanned. * &lt;p&gt; * Consider creating a special no-op marker class or interface in each package that * serves no purpose other than being referenced by this attribute. * @return base packages to scan * @since 1.3.0 */ // 等同于ComponentScan注解的basePackageClasses属性 @AliasFor(annotation = ComponentScan.class, attribute = &quot;basePackageClasses&quot;) Class&lt;?&gt;[] scanBasePackageClasses() default &#123;&#125;;&#125; 可以看到，@SpringBootApplication注解是一个组合注解，主要由@SpringBootConfiguration,@EnableAutoConfiguration和@ComponentScan这三个注解组合而成。 因此@SpringBootApplication注解主要作为一个配置类，能够触发包扫描和自动配置的逻辑，从而使得SpringBoot的相关bean被注册进Spring容器。 3.SpringBoot的怎样启动？SpringApplication类是用来启动SpringBoot项目的，可以在java的main方法中启动，目前知道这些就足够了。下面看下SpringApplication.run(SpringBootSampleNikoApplication.class, args);这句代码的源码： 12345// run方法是一个静态方法，用于启动SpringBootpublic static ConfigurableApplicationContext run(Class&lt;?&gt; primarySource, String... args) &#123; // 继续调用静态的run方法 return run(new Class&lt;?&gt;[] &#123; primarySource &#125;, args);&#125; 在上面的静态run方法里又继续调用另一个静态run方法： 1234public static ConfigurableApplicationContext run(Class&lt;?&gt;[] primarySources, String[] args) &#123; // 构建一个SpringApplication对象，并调用其run方法来启动 return new SpringApplication(primarySources).run(args);&#125; 可以看到构建了一个SpringApplication对象，然后再调用其run方法来启动SpringBoot项目。关于SpringApplication对象是如何构建的，后面再分析，现在直接来看下启动流程的源码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293public ConfigurableApplicationContext run(String... args) &#123; // new 一个StopWatch用于统计run启动过程花了多少时间 StopWatch stopWatch = new StopWatch(); // 开始计时 stopWatch.start(); ConfigurableApplicationContext context = null; // exceptionReporters 集合用来存储异常报告器，用来报告SpringBoot启动过程的异常 Collection&lt;SpringBootExceptionReporter&gt; exceptionReporters = new ArrayList&lt;&gt;(); // 配置headless属性，即“java.awt.headless”属性，默认为ture // 其实是想设置该应用程序,即使没有检测到显示器,也允许其启动.对于服务器来说,是不需要显示器的,所以要这样设置. configureHeadlessProperty(); // 【1】从spring.factories配置文件中加载到EventPublishingRunListener对象并赋值给SpringApplicationRunListeners // EventPublishingRunListener 对象主要用来触发SpringBoot启动过程中内置的一些生命周期事件，标志每个不同启动阶段 SpringApplicationRunListeners listeners = getRunListeners(args); // 启动SpringApplicationRunListener的监听，表示SpringApplication开始启动。 // 》》》》》触发【ApplicationStartingEvent】事件 listeners.starting(); try &#123; // 创建ApplicationArguments对象，封装了args参数 ApplicationArguments applicationArguments = new DefaultApplicationArguments(args); // 【2】准备环境变量，包括系统变量，环境变量，命令行参数，默认变量，servlet相关配置变量，随机值， // JNDI属性值，以及配置文件（比如application.properties）等，注意这些环境变量是有优先级的 // 》》》》》触发【ApplicationEnvironmentPreparedEvent】事件 ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments); // 配置spring.beaninfo.ignore属性，默认为true，即跳过搜索BeanInfo classes. configureIgnoreBeanInfo(environment); // 【3】控制台打印SpringBoot的bannner标志 Banner printedBanner = printBanner(environment); // 【4】根据不同类型创建不同类型的spring applicationcontext容器 // 因为这里是servlet环境，所以创建的是AnnotationConfigServletWebServerApplicationContext容器对象 context = createApplicationContext(); // 【5】从spring.factories配置文件中加载异常报告期实例，这里加载的是FailureAnalyzers // 注意FailureAnalyzers的构造器要传入ConfigurableApplicationContext，因为要从context中获取beanFactory和environment // ConfigurableApplicationContext是AnnotationConfigServletWebServerApplicationContext的父接口 exceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class, new Class[] &#123; ConfigurableApplicationContext.class &#125;, context); // 【6】为刚创建的AnnotationConfigServletWebServerApplicationContext容器对象做一些初始化工作，准备一些容器属性值等 // 1）为AnnotationConfigServletWebServerApplicationContext的属性AnnotatedBeanDefinitionReader和ClassPathBeanDefinitionScanner设置environgment属性 // 2）根据情况对ApplicationContext应用一些相关的后置处理，比如设置resourceLoader属性等 // 3）在容器刷新前调用各个ApplicationContextInitializer的初始化方法，ApplicationContextInitializer是在构建SpringApplication对象时从spring.factories中加载的 // 4）》》》》》触发【ApplicationContextInitializedEvent】事件，标志context容器被创建且已准备好 // 5）从context容器中获取beanFactory，并向beanFactory中注册一些单例bean，比如applicationArguments，printedBanner // 6）TODO 加载bean到application context，注意这里只是加载了部分bean比如mainApplication这个bean，大部分bean应该是在AbstractApplicationContext.refresh方法中被加载？这里留个疑问先 // 7）》》》》》触发【ApplicationPreparedEvent】事件，标志Context容器已经准备完成 prepareContext(context, environment, listeners, applicationArguments, printedBanner); // 【7】刷新容器，这一步至关重要，以后会在分析Spring源码时详细分析，主要做了以下工作： // 1）在context刷新前做一些准备工作，比如初始化一些属性设置，属性合法性校验和保存容器中的一些早期事件等； // 2）让子类刷新其内部bean factory,注意SpringBoot和Spring启动的情况执行逻辑不一样 // 3）对bean factory进行配置，比如配置bean factory的类加载器，后置处理器等 // 4）完成bean factory的准备工作后，此时执行一些后置处理逻辑，子类通过重写这个方法来在BeanFactory创建并预准备完成以后做进一步的设置 // 在这一步，所有的bean definitions将会被加载，但此时bean还不会被实例化 // 5）执行BeanFactoryPostProcessor的方法即调用bean factory的后置处理器： // BeanDefinitionRegistryPostProcessor（触发时机：bean定义注册之前）和BeanFactoryPostProcessor（触发时机：bean定义注册之后bean实例化之前） // 6）注册bean的后置处理器BeanPostProcessor，注意不同接口类型的BeanPostProcessor；在Bean创建前后的执行时机是不一样的 // 7）初始化国际化MessageSource相关的组件，比如消息绑定，消息解析等 // 8）初始化事件广播器，如果bean factory没有包含事件广播器，那么new一个SimpleApplicationEventMulticaster广播器对象并注册到bean factory中 // 9）AbstractApplicationContext定义了一个模板方法onRefresh，留给子类覆写，比如ServletWebServerApplicationContext覆写了该方法来创建内嵌的tomcat容器 // 10）注册实现了ApplicationListener接口的监听器，之前已经有了事件广播器，此时就可以派发一些early application events // 11）完成容器bean factory的初始化，并初始化所有剩余的单例bean。这一步非常重要，一些bean postprocessor会在这里调用。 // 12）完成容器的刷新工作，并且调用生命周期处理器的onRefresh()方法，并且发布ContextRefreshedEvent事件 refreshContext(context); // 【8】执行刷新容器后的后置处理逻辑，注意这里为空方法 afterRefresh(context, applicationArguments); // 停止stopWatch计时 stopWatch.stop(); // 打印日志 if (this.logStartupInfo) &#123; new StartupInfoLogger(this.mainApplicationClass).logStarted(getApplicationLog(), stopWatch); &#125; // 》》》》》触发【ApplicationStartedEvent】事件，标志spring容器已经刷新，此时所有的bean实例都已经加载完毕 listeners.started(context); // 【9】调用ApplicationRunner和CommandLineRunner的run方法，实现spring容器启动后需要做的一些东西比如加载一些业务数据等 callRunners(context, applicationArguments); &#125; // 【10】若启动过程中抛出异常，此时用FailureAnalyzers来报告异常 // 并》》》》》触发【ApplicationFailedEvent】事件，标志SpringBoot启动失败 catch (Throwable ex) &#123; handleRunFailure(context, ex, exceptionReporters, listeners); throw new IllegalStateException(ex); &#125; try &#123; // 》》》》》触发【ApplicationReadyEvent】事件，标志SpringApplication已经正在运行即已经成功启动，可以接收服务请求了。 listeners.running(context); &#125; // 若出现异常，此时仅仅报告异常，而不会触发任何事件 catch (Throwable ex) &#123; handleRunFailure(context, ex, exceptionReporters, null); throw new IllegalStateException(ex); &#125; // 【11】最终返回容器 return context;&#125; 如上代码就是SpringBoot的启动流程了，主要步骤也已经标注【x】，主要步骤总结： 从spring.factories配置文件中加载EventPublishingRunListener对象，该对象拥有SimpleApplicationEventMulticaster属性，即在SpringBoot启动过程的不同阶段用来触发内置的生命周期事件; 准备环境变量，包括系统变量，环境变量，命令行参数，默认变量，servlet相关配置变量，随机值以及配置文件（比如application.properties）等; 控制台打印SpringBoot的bannner标志； 根据不同类型环境创建不同类型的applicationcontext容器，因为这里是servlet环境，所以创建的是AnnotationConfigServletWebServerApplicationContext容器对象； 从spring.factories配置文件中加载FailureAnalyzers对象,用来报告SpringBoot启动过程中的异常； 为刚创建的容器对象做一些初始化工作，准备一些容器属性值等，对ApplicationContext应用一些相关的后置处理和调用各个ApplicationContextInitializer的初始化方法来执行一些初始化逻辑等； 刷新容器，这一步至关重要。比如调用bean factory的后置处理器，注册BeanPostProcessor后置处理器，初始化事件广播器且广播事件，初始化剩下的单例bean和SpringBoot创建内嵌的Tomcat服务器等等重要且复杂的逻辑都在这里实现，主要步骤可见代码的注释； 执行刷新容器后的后置处理逻辑，注意这里为空方法； 调用ApplicationRunner和CommandLineRunner的run方法，实现这两个接口可以在spring容器启动后需要的一些东西比如加载一些业务数据等; 报告启动异常，即若启动过程中抛出异常，此时用FailureAnalyzers来报告异常; 最终返回容器对象，这里调用方法没有声明对象来接收。 当然在SpringBoot启动过程中，每个不同的启动阶段会分别触发不同的内置生命周期事件，比如在准备environment前会触发ApplicationStartingEvent事件，在environment准备好后会触发ApplicationEnvironmentPreparedEvent事件，在刷新容器前会触发ApplicationPreparedEvent事件等，总之SpringBoot总共内置了7个生命周期事件，除了标志SpringBoot的不同启动阶段外，同时一些监听器也会监听相应的生命周期事件从而执行一些启动初始化逻辑。 总结好了，SpringBoot的启动流程就已经分析完了，这篇内容主要对SpringBoot的启动流程有一个整体的认识。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(6)-SpringBoot内置的Starter构建原理]]></title>
    <url>%2Fposts%2F2020-11-20-SpringBoot-Source-06%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot内置的Starter构建原理 上一篇分析了SpringBoot外部配置属性值是如何被绑定到XxxProperties类属性上的相关源码，重要步骤总结： 首先是@EnableConfigurationProperties注解import了EnableConfigurationPropertiesImportSelector后置处理器； EnableConfigurationPropertiesImportSelector后置处理器又向Spring容器中注册了ConfigurationPropertiesBeanRegistrar和ConfigurationPropertiesBindingPostProcessorRegistrar这两个bean； 其中ConfigurationPropertiesBeanRegistrar向Spring容器中注册了XxxProperties类型的bean；ConfigurationPropertiesBindingPostProcessorRegistrar向Spring容器中注册了ConfigurationBeanFactoryMetadata和ConfigurationPropertiesBindingPostProcessor两个后置处理器； ConfigurationBeanFactoryMetadata后置处理器在初始化bean factory时将@Bean注解的元数据存储起来，以便在后续的外部配置属性绑定的相关逻辑中使用； ConfigurationPropertiesBindingPostProcessor后置处理器将外部配置属性值绑定到XxxProperties类属性的逻辑委托给ConfigurationPropertiesBinder对象，然后ConfigurationPropertiesBinder对象又最终将属性绑定的逻辑委托给Binder对象来完成。 可见，重要的是上面的第5步。 1.思考SpringBoot内置了各种Starter起步依赖，使用起来非常方便，大大减轻了我们的开发工作。有了Starter起步依赖，我们不用去考虑这个项目需要什么库，这个库的groupId和artifactId是什么？更不用担心引入这个版本的库后会不会跟其他依赖有没有冲突。 例如：现在开发一个web项目，只要引入spring-boot-starter-web这个起步依赖就可以了，不用考虑要引入哪些版本的哪些依赖了。以前还要考虑引入哪些依赖库，比如要引入spring-web和spring-webmvc依赖等；此外，还要考虑引入这些库的哪些版本才不会跟其他库冲突等问题。 由于起步依赖跟自动配置的关系是如影随形的关系，因此本篇先站在maven项目构建的角度来宏观分析下我们平时使用的SpringBoot内置的各种Starter是怎样构建的？ 2.Maven传递依赖的optional标签在分析SpringBoot内置的各种Starter构建原理前，先来认识下Maven的optional标签，因为这个标签起到至关重要的作用。Maven的optional标签表示可选依赖即不可传递的意思，下面直接举个例子来说明。 比如有A,B和C三个库，C依赖B，B依赖A。下面看下这三个库的pom.xml文件： A的pom.xml 12345678910&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;groupId&gt;com.ymbj&lt;/groupId&gt; &lt;artifactId&gt;A&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&lt;/project&gt; B的pom.xml 1234567891011121314151617181920&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;groupId&gt;com.ymbj&lt;/groupId&gt; &lt;artifactId&gt;B&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;!--注意是可选依赖--&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;com.ymbj&lt;/groupId&gt; &lt;artifactId&gt;A&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; C的pom.xml 123456789101112131415161718&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;groupId&gt;com.ymbj&lt;/groupId&gt; &lt;artifactId&gt;C&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;com.ymbj&lt;/groupId&gt; &lt;artifactId&gt;B&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; 上面三个A,B和C库的pom.xml可知，B库依赖A库，然后C库又依赖了B库，那么请想一下，Maven打包构建C库后，A库有没有被引进来？ 答案肯定是没有，因为B库引入A库依赖时使用了&lt;optional&gt;true&lt;/optional&gt;，即将Maven的optional标签值设为了true，此时C库再引入B库依赖时，A库是不会被引入到C库的。 同时跟Maven传递依赖有关的还有一个exclusions标签，这个表示将某个库的某个子依赖排除掉。 3.SpringBoot内置的各种Starter是怎样构建的先来看一下SpringBoot源码内部模块图： SpringBoot的Starter的构建的原理实质就是自动配置，因上图可以看到SpringBoot源码项目内部跟Starter及其自动配置有关的模块有四个：spring-boot-starters,spring-boot-actuator-autoconfigure,spring-boot-autoconfigure和spring-boot-test-autoconfigure。 那么，spring-boot-starters模块跟后面三个自动配置有关的模块xxx-autoconfigure模块的关系是怎样的呢？ 此时我们先来看看spring-boot-starters模块里面的结构是怎样的？ 可以看到spring-boot-starters模块包含了SpringBoot内置的各种starter：spring-boot-starter-xxx。由于SpringBoot内置的各种starter太多，以常用的spring-boot-starter-web起步依赖来分析。 首先看下spring-boot-starter-web模块内部结构： 可以看到spring-boot-starter-web模块里面只有.flattened-pom.xml和pom.xml文件，而没有任何代码！ 若要用到SpringBoot的web功能时引入spring-boot-starter-web起步依赖即可，而现在spring-boot-starter-web模块里面没有一行代码，那么spring-boot-starter-web究竟是如何构建的呢？会不会跟spring-boot-autoconfigure自动配置模块有关？ 此时就需要看下spring-boot-starter-web模块的pom.xml文件内容： 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starters&lt;/artifactId&gt; &lt;version&gt;$&#123;revision&#125;&lt;/version&gt; &lt;/parent&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;name&gt;Spring Boot Web Starter&lt;/name&gt; &lt;description&gt;Starter for building web, including RESTful, applications using Spring MVC. Uses Tomcat as the default embedded container&lt;/description&gt; &lt;properties&gt; &lt;main.basedir&gt;$&#123;basedir&#125;/../../..&lt;/main.basedir&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-json&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.hibernate.validator&lt;/groupId&gt; &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; 可以看到，spring-boot-starter-web模块依赖了spring-boot-starter,spring-boot-starter-tomcat,spring-web和spring-webmvc等模块，居然没有依赖spring-boot-autoconfigure自动配置模块! 由于spring-boot-starter-web模块肯定跟spring-boot-autoconfigure自动配置模块有关，所以spring-boot-starter-web模块肯定是间接依赖了spring-boot-autoconfigure自动配置模块。 spring-boot-starter模块是大部分spring-boot-starter-xxx模块依赖的基础模块，是核心的Starter，包括了自动配置，日志和YAML支持。关注下spring-boot-starter的pom.xml文件，看看是否依赖了spring-boot-autoconfigure自动配置模块。 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starters&lt;/artifactId&gt; &lt;version&gt;$&#123;revision&#125;&lt;/version&gt; &lt;/parent&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;name&gt;Spring Boot Starter&lt;/name&gt; &lt;description&gt;Core starter, including auto-configuration support, logging and YAML&lt;/description&gt; &lt;properties&gt; &lt;main.basedir&gt;$&#123;basedir&#125;/../../..&lt;/main.basedir&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-autoconfigure&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;javax.annotation&lt;/groupId&gt; &lt;artifactId&gt;javax.annotation-api&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.yaml&lt;/groupId&gt; &lt;artifactId&gt;snakeyaml&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; 可以看到，正是spring-boot-starter模块依赖了spring-boot-autoconfigure自动配置模块！因此，到了这里就可以得出结论了：spring-boot-starter-web模块没有一行代码，但是其通过spring-boot-starter模块间接依赖了spring-boot-autoconfigure自动配置模块，从而实现了其起步依赖的功能。 再来看下spring-boot-autoconfigure自动配置模块的内部包结构： 可以知道spring-boot-starter-web起步依赖的自动配置功能原来是由spring-boot-autoconfigure模块的web包下的类实现的。 到了这里spring-boot-starter-web起步依赖的构建基本原理就搞清楚了，但是还有一个特别重要的关键点我们还没分析。这个关键点跟Maven的optional标签有的作用有关。 思考一个问题：平时开发web项目为什么引入了spring-boot-starter-web这个起步依赖后，spring-boot-autoconfigure模块的web相关的自动配置类就会起自动起作用呢？ 某个自动配置类起作用往往是由于classpath中存在某个类，这里以DispatcherServletAutoConfiguration这个自动配置类为切入点去分析。 先看下DispatcherServletAutoConfiguration能够自动配置的条件是啥？ 1234567@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE)@Configuration@ConditionalOnWebApplication(type = Type.SERVLET)@ConditionalOnClass(DispatcherServlet.class)@AutoConfigureAfter(ServletWebServerFactoryAutoConfiguration.class)public class DispatcherServletAutoConfiguration &#123;&#125; DispatcherServletAutoConfiguration能够自动配置的条件之一是@ConditionalOnClass(DispatcherServlet.class)，即只有classpath中存在DispatcherServlet.class这个类，那么DispatcherServletAutoConfiguration自动配置相关逻辑才能起作用。 而DispatcherServlet这个类是在spring-webmvc这个依赖库中的 再看下spring-boot-autoconfigure模块的pom.xml文件引入spring-webmvc这个依赖的情况： 12345&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; spring-boot-autoconfigure模块引入的spring-webmvc这个依赖时optional被设置为true，原来是可选依赖。即spring-webmvc这个依赖库只会被导入到spring-boot-autoconfigure模块中，而不会被导入到间接依赖spring-boot-autoconfigure模块的spring-boot-starter-web这个起步依赖中。 此时，再来看看spring-boot-starter-web的pom.xml文件的依赖情况： 1234&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;&lt;/dependency&gt; spring-boot-starter-web起步依赖显式引入了spring-webmvc这个依赖库，即引入spring-webmvc时没有optional这个标签，又因为DispatcherServlet这个类是在spring-webmvc这个依赖库中的,从而classpath中存在DispatcherServlet这个类，因此DispatcherServletAutoConfiguration这个自动配置类就生效了。当然，web相关的其他自动配置类生效也是这个原理。 至此，明白了spring-boot-autoconfigure模块为什么要把引入的spring-webmvc这个依赖作为可选依赖了，其目的就是为了在spring-boot-starter-web起步依赖中能显式引入spring-webmvc这个依赖（这个起决定性作用），从而开发web项目只要引入了spring-boot-starter-web起步依赖，那么web相关的自动配置类就生效，从而可以开箱即用​这个就是spring-boot-starter-web这个起步依赖的构建原理了。 前面提到的spring-boot-starter-actuator,spring-boot-starter-test及其他内置的spring-boot-starter-xxx的起步依赖的构建原理也是如此，只不过spring-boot-starter-actuator依赖的是spring-boot-actuator-autoconfigure，spring-boot-starter-test依赖的是spring-boot-test-autoconfigure模块罢了。 思考：spring-boot-actuator-autoconfigure的pom.xml文件引入了20多个可选依赖，而为什么spring-boot-starter-actuator起步依赖只引入了micrometer-core这个依赖呢？ 4.模仿SpringBoot包结构自定义一个Starter分析了SpringBoot内置的各种Starter的构建原理，我们可以自己动手实践一下自定义Starter。 自定义starter的demo资料： https://github.com/jinyue233/mock-spring-boot-autoconfiguration https://github.com/mybatis/spring-boot-starter 总结SpringBoot内置的各种Starter的构建原理分析就到此结束了，关键点总结： spring-boot-starter-xxx起步依赖没有一行代码，而是直接或间接依赖了xxx-autoconfigure模块，而xxx-autoconfigure模块承担了spring-boot-starter-xxx起步依赖自动配置的实现； xxx-autoconfigure自动配置模块引入了一些可选依赖，这些可选依赖不会被传递到spring-boot-starter-xxx起步依赖中，这是起步依赖构建的关键点； spring-boot-starter-xxx起步依赖显式引入了一些对自动配置起作用的可选依赖； 经过前面3步的准备，项目只要引入了某个起步依赖后，就可以开箱即用了，而不用手动去创建一些bean等。 参考资料 https://dayarch.top/p/maven-dependency-optional-transitive.html]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(5)-SpringBoot 的配置属性值的绑定流程]]></title>
    <url>%2Fposts%2F2020-11-19-SpringBoot-Source-05%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot 的配置属性值的绑定流程 上一篇分析了SpringBoot的自动配置的相关源码，自动配置主要有以下几个重要的步骤： 从spring.factories配置文件中加载自动配置类； 加载的自动配置类中排除掉@EnableAutoConfiguration注解的exclude属性指定的自动配置类； 然后再用AutoConfigurationImportFilter接口去过滤自动配置类是否符合其标注注解（若有标注的话）@ConditionalOnClass,@ConditionalOnBean和@ConditionalOnWebApplication的条件，若都符合的话则返回匹配结果； 然后触发AutoConfigurationImportEvent事件，告诉ConditionEvaluationReport条件评估报告器对象来分别记录符合条件和exclude的自动配置类。 最后spring再将最后筛选后的自动配置类导入IOC容器中 继续来分析SpringBoot的自动配置的相关源码，我们来分析下@EnableConfigurationProperties和@ConfigurationProperties这两个注解，来探究下外部配置属性值是如何被绑定到@ConfigurationProperties注解的类属性中的？ Example：以配置web项目的服务器端口为例，若我们要将服务器端口配置为9999，那么需要在application.properties配置文件中配置server.port=9999，此时该配置值9999就将会绑定到被@ConfigurationProperties注解的类ServerProperties的属性port上，从而使得配置生效。 1.@EnableConfigurationProperties以前面的设置服务器端口的例子来分析，先直接来看看ServerProperties的源码，应该能找到源码的入口： 12345678910@ConfigurationProperties(prefix = &quot;server&quot;, ignoreUnknownFields = true)public class ServerProperties &#123; /** * Server HTTP port. */ private Integer port; ...&#125; 可以看到，ServerProperties类上标注了@ConfigurationProperties这个注解，服务器属性配置前缀为server，是否忽略未知的配置值（ignoreUnknownFields）设置为true。 那么再来看下@ConfigurationProperties这个注解的源码： 12345678910111213141516171819202122232425262728293031323334353637383940414243@Target(&#123; ElementType.TYPE, ElementType.METHOD &#125;)@Retention(RetentionPolicy.RUNTIME)@Documentedpublic @interface ConfigurationProperties &#123; /** * The name prefix of the properties that are valid to bind to this object. Synonym * for &#123;@link #prefix()&#125;. A valid prefix is defined by one or more words separated * with dots (e.g. &#123;@code &quot;acme.system.feature&quot;&#125;). * @return the name prefix of the properties to bind */ // 前缀别名 @AliasFor(&quot;prefix&quot;) String value() default &quot;&quot;; /** * The name prefix of the properties that are valid to bind to this object. Synonym * for &#123;@link #value()&#125;. A valid prefix is defined by one or more words separated with * dots (e.g. &#123;@code &quot;acme.system.feature&quot;&#125;). * @return the name prefix of the properties to bind */ // 前缀 @AliasFor(&quot;value&quot;) String prefix() default &quot;&quot;; /** * Flag to indicate that when binding to this object invalid fields should be ignored. * Invalid means invalid according to the binder that is used, and usually this means * fields of the wrong type (or that cannot be coerced into the correct type). * @return the flag value (default false) */ // 忽略无效的配置属性 boolean ignoreInvalidFields() default false; /** * Flag to indicate that when binding to this object unknown fields should be ignored. * An unknown field could be a sign of a mistake in the Properties. * @return the flag value (default true) */ // 忽略未知的配置属性 boolean ignoreUnknownFields() default true;&#125; @ConfigurationProperties这个注解的作用就是将外部配置的配置值绑定到其注解的类的属性上，可以作用于配置类或配置类的方法上。可以看到@ConfigurationProperties注解除了有设置前缀，是否忽略一些不存在或无效的配置等属性等外，这个注解没有其他任何的处理逻辑，可以看到@ConfigurationProperties是一个标志性的注解，源码入口不在这里。 这里讲的是服务器的自动配置，来看下自动配置类ServletWebServerFactoryAutoConfiguration的源码： 1234567891011@Configuration@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE)@ConditionalOnClass(ServletRequest.class)@ConditionalOnWebApplication(type = Type.SERVLET)@EnableConfigurationProperties(ServerProperties.class)@Import(&#123; ServletWebServerFactoryAutoConfiguration.BeanPostProcessorsRegistrar.class, ServletWebServerFactoryConfiguration.EmbeddedTomcat.class, ServletWebServerFactoryConfiguration.EmbeddedJetty.class, ServletWebServerFactoryConfiguration.EmbeddedUndertow.class &#125;)public class ServletWebServerFactoryAutoConfiguration &#123;&#125; 可以看到，ServletWebServerFactoryAutoConfiguration自动配置类中有一个@EnableConfigurationProperties注解，且注解值是前面讲的ServerProperties.class，因此@EnableConfigurationProperties注解肯定就是关注的重点了。 再来看下@EnableConfigurationProperties注解的源码： 123456789101112131415@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@Documented@Import(EnableConfigurationPropertiesImportSelector.class)public @interface EnableConfigurationProperties &#123; /** * Convenient way to quickly register &#123;@link ConfigurationProperties&#125; annotated beans * with Spring. Standard Spring Beans will also be scanned regardless of this value. * @return &#123;@link ConfigurationProperties&#125; annotated beans to register */ // 这个值指定的类就是@ConfigurationProperties注解标注的类，其将会被注册到spring容器中 Class&lt;?&gt;[] value() default &#123;&#125;;&#125; @EnableConfigurationProperties注解的主要作用就是为@ConfigurationProperties注解标注的类提供支持，即对将外部配置属性值（比如application.properties配置值）绑定到@ConfigurationProperties标注的类的属性中。 SpringBoot源码中还存在了ConfigurationPropertiesAutoConfiguration这个自动配置类，同时spring.factories配置文件中的EnableAutoConfiguration接口也配置了ConfigurationPropertiesAutoConfiguration，这个自动配置类上也有@EnableConfigurationProperties这个注解，堆属性绑定进行了默认开启。 那么，@EnableConfigurationProperties这个注解对属性绑定提供怎样的支持呢？ 可以看到@EnableConfigurationProperties这个注解上还标注了@Import(EnableConfigurationPropertiesImportSelector.class)，其导入了EnableConfigurationPropertiesImportSelector，因此可以肯定的是@EnableConfigurationProperties这个注解对属性绑定提供的支持必定跟EnableConfigurationPropertiesImportSelector有关。 接下来分析EnableConfigurationPropertiesImportSelector，是如何承担将外部配置属性值绑定到@ConfigurationProperties标注的类的属性中的。 2.EnableConfigurationPropertiesImportSelectorEnableConfigurationPropertiesImportSelector类的作用主要用来处理外部属性绑定的相关逻辑，其实现了ImportSelector接口的selectImports方法可以向容器中注册bean。 那么，看下EnableConfigurationPropertiesImportSelector覆写的selectImports方法： 1234567891011121314class EnableConfigurationPropertiesImportSelector implements ImportSelector &#123; // IMPORTS数组即是要向spring容器中注册的bean private static final String[] IMPORTS = &#123; ConfigurationPropertiesBeanRegistrar.class.getName(), ConfigurationPropertiesBindingPostProcessorRegistrar.class.getName() &#125;; @Override public String[] selectImports(AnnotationMetadata metadata) &#123; // 返回ConfigurationPropertiesBeanRegistrar和 ConfigurationPropertiesBindingPostProcessorRegistrar的全限定名 // 即上面两个类将会被注册到Spring容器中 return IMPORTS; &#125;&#125; 可以看到EnableConfigurationPropertiesImportSelector类中的selectImports方法中返回的是IMPORTS数组，而这个IMPORTS是一个常量数组，值是ConfigurationPropertiesBeanRegistrar和ConfigurationPropertiesBindingPostProcessorRegistrar。即EnableConfigurationPropertiesImportSelector的作用是向Spring容器中注册了ConfigurationPropertiesBeanRegistrar和ConfigurationPropertiesBindingPostProcessorRegistrar这两个bean。 在EnableConfigurationPropertiesImportSelector类中没看到处理外部属性绑定的相关逻辑，其只是注册了ConfigurationPropertiesBeanRegistrar和ConfigurationPropertiesBindingPostProcessorRegistrar这两个bean,接下来我们再看下注册的这两个bean类。 2.1 ConfigurationPropertiesBeanRegistrar先来看下ConfigurationPropertiesBeanRegistrar这个类的源码： 1234567891011121314public static class ConfigurationPropertiesBeanRegistrar implements ImportBeanDefinitionRegistrar &#123; // metadata是 AnnotationMetadata 对象，存储了某个配置类的元数据 @Override public void registerBeanDefinitions(AnnotationMetadata metadata, BeanDefinitionRegistry registry) &#123; // （1）得到 @EnableConfigurationProperties注解的所有属性值, // 比如 @EnableConfigurationProperties(ServerProperties.class),那么得到的值是ServerProperties.class // （2）然后再将得到的@EnableConfigurationProperties注解的所有属性值注册到容器中 getTypes(metadata).forEach((type) -&gt; register(registry, (ConfigurableListableBeanFactory) registry, type)); &#125; ...&#125; ConfigurationPropertiesBeanRegistrar是EnableConfigurationPropertiesImportSelector的内部类，其实现了ImportBeanDefinitionRegistrar接口，覆写了registerBeanDefinitions方法。可见，ConfigurationPropertiesBeanRegistrar又是用来注册一些bean definition的，即也是向Spring容器中注册一些bean。 在ConfigurationPropertiesBeanRegistrar实现的registerBeanDefinitions中，可以看到主要做了两件事： 调用getTypes方法获取@EnableConfigurationProperties注解的属性值XxxProperties； 调用register方法将获取的属性值XxxProperties注册到Spring容器中，用于以后和外部属性绑定时使用。 来看下getTypes方法的源码： 123456789private List&lt;Class&lt;?&gt;&gt; getTypes(AnnotationMetadata metadata) &#123; // 得到 @EnableConfigurationProperties注解的所有属性值, // 比如 @EnableConfigurationProperties(ServerProperties.class),那么得到的值是ServerProperties.class MultiValueMap&lt;String, Object&gt; attributes = metadata .getAllAnnotationAttributes( EnableConfigurationProperties.class.getName(), false); // 将属性值取出装进List集合并返回 return collectClasses((attributes != null) ? attributes.get(&quot;value&quot;) : Collections.emptyList());&#125; getTypes方法里面的逻辑很简单，即将@EnableConfigurationProperties注解里面的属性值XxxProperties（比如ServerProperties.class）取出并装进List集合并返回。 由getTypes方法拿到@EnableConfigurationProperties注解里面的属性值XxxProperties（比如ServerProperties.class）后，此时再遍历将XxxProperties逐个注册进Spring容器中，来看下register方法： 12345678910private void register(BeanDefinitionRegistry registry, ConfigurableListableBeanFactory beanFactory, Class&lt;?&gt; type) &#123; // 得到type的名字，一般用类的全限定名作为bean name String name = getName(type); // 根据bean name判断beanFactory容器中是否包含该bean if (!containsBeanDefinition(beanFactory, name)) &#123; // 若不包含，那么注册bean definition registerBeanDefinition(registry, name, type); &#125;&#125; 2.2 ConfigurationPropertiesBindingPostProcessorRegistrar可以看到ConfigurationPropertiesBindingPostProcessorRegistrar类名字又是以Registrar单词为结尾，说明其肯定又是导入一些bean definition的。直接看源码： 12345678910111213141516171819202122232425262728293031323334353637383940public class ConfigurationPropertiesBindingPostProcessorRegistrar implements ImportBeanDefinitionRegistrar &#123; @Override public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) &#123; // 若容器中没有注册ConfigurationPropertiesBindingPostProcessor这个处理属性绑定的后置处理器， // 那么将注册ConfigurationPropertiesBindingPostProcessor和ConfigurationBeanFactoryMetadata这两个bean // 注意onApplicationEnvironmentPreparedEvent事件加载配置属性在先，然后再注册一些后置处理器用来处理这些配置属性 if (!registry.containsBeanDefinition(ConfigurationPropertiesBindingPostProcessor.BEAN_NAME)) &#123; // (1)注册ConfigurationPropertiesBindingPostProcessor后置处理器，用来对配置属性进行后置处理 registerConfigurationPropertiesBindingPostProcessor(registry); // (2)注册一个ConfigurationBeanFactoryMetadata类型的bean， // 注意ConfigurationBeanFactoryMetadata实现了BeanFactoryPostProcessor，然后其会在postProcessBeanFactory中注册一些元数据 registerConfigurationBeanFactoryMetadata(registry); &#125; &#125; // 注册ConfigurationPropertiesBindingPostProcessor后置处理器 private void registerConfigurationPropertiesBindingPostProcessor( BeanDefinitionRegistry registry) &#123; GenericBeanDefinition definition = new GenericBeanDefinition(); definition.setBeanClass(ConfigurationPropertiesBindingPostProcessor.class); definition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE); registry.registerBeanDefinition( ConfigurationPropertiesBindingPostProcessor.BEAN_NAME, definition); &#125; // 注册ConfigurationBeanFactoryMetadata后置处理器 private void registerConfigurationBeanFactoryMetadata( BeanDefinitionRegistry registry) &#123; GenericBeanDefinition definition = new GenericBeanDefinition(); definition.setBeanClass(ConfigurationBeanFactoryMetadata.class); definition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE); registry.registerBeanDefinition(ConfigurationBeanFactoryMetadata.BEAN_NAME, definition); &#125;&#125; ConfigurationPropertiesBindingPostProcessorRegistrar类的逻辑非常简单，主要用来注册外部配置属性绑定相关的后置处理器即ConfigurationBeanFactoryMetadata和ConfigurationPropertiesBindingPostProcessor。 那么接下来再来探究下注册的这两个后置处理器又是执行怎样的后置处理逻辑呢？ 2.2.1 ConfigurationBeanFactoryMetadata先来看下ConfigurationBeanFactoryMetadata类源码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445public class ConfigurationBeanFactoryMetadata implements BeanFactoryPostProcessor &#123; /** * The bean name that this class is registered with. */ public static final String BEAN_NAME = ConfigurationBeanFactoryMetadata.class.getName(); private ConfigurableListableBeanFactory beanFactory; /** * beansFactoryMetadata集合存储beansFactory的元数据 * key:某个bean的名字 value：FactoryMetadata对象（封装了工厂bean名和工厂方法名） * 比如下面这个配置类： * * @Configuration * public class ConfigA &#123; * @Bean * public BeanXXX methodB（configA, ） &#123; * return new BeanXXX(); * &#125; * &#125; * * 那么：key值为&quot;methodB&quot;，value为FactoryMetadata（configA, methodB）对象，其bean属性值为&quot;configA&quot;,method属性值为&quot;methodB&quot; */ private final Map&lt;String, FactoryMetadata&gt; beansFactoryMetadata = new HashMap&lt;&gt;(); @Override public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException &#123; this.beanFactory = beanFactory; // 遍历beanFactory的beanDefinitionName，即每个bean的名字（比如工厂方法对应的bean名字） for (String name : beanFactory.getBeanDefinitionNames()) &#123; // 根据name得到beanDefinition BeanDefinition definition = beanFactory.getBeanDefinition(name); // 工厂方法名：一般是注解@Bean的方法名 String method = definition.getFactoryMethodName(); // 工厂bean名：一般是注解@Configuration的类名 String bean = definition.getFactoryBeanName(); if (method != null &amp;&amp; bean != null) &#123; // 将beanDefinitionName作为Key，封装了工厂bean名和工厂方法名的FactoryMetadata对象作为value装入beansFactoryMetadata中 this.beansFactoryMetadata.put(name, new FactoryMetadata(bean, method)); &#125; &#125; &#125;&#125; ConfigurationBeanFactoryMetadata这个后置处理器，其实现了BeanFactoryPostProcessor接口的postProcessBeanFactory方法，在初始化bean factory时将@Bean注解的元数据存储起来，以便在后续的外部配置属性绑定的相关逻辑中使用。 从上面代码可以看到ConfigurationBeanFactoryMetadata类覆写的postProcessBeanFactory方法做的事情就是将工厂Bean（可以理解为@Configuration注解的类）及其@Bean注解的工厂方法的一些元数据缓存到beansFactoryMetadata集合中，以便后续使用。 由上代码中我们看到了ConfigurationBeanFactoryMetadata类的beansFactoryMetadata集合类型是Map&lt;String, FactoryMetadata&gt;，那么我们再来看下封装相关工厂元数据的FactoryMetadata类： 123456789101112131415161718192021private static class FactoryMetadata &#123; // @Configuration注解的配置类的类名 private final String bean; // @Bean注解的方法名 private final String method; FactoryMetadata(String bean, String method) &#123; this.bean = bean; this.method = method; &#125; public String getBean() &#123; return this.bean; &#125; public String getMethod() &#123; return this.method; &#125;&#125; FactoryMetadata仅有两个属性bean和method，分别表示@Configuration注解的工厂bean和@Bean注解的工厂方法。 例如： 12345678910111213141516/** * beansFactoryMetadata集合存储beansFactory的元数据 * key:某个bean的名字 value：FactoryMetadata对象（封装了工厂bean名和工厂方法名） * 比如下面这个配置类： * * @Configuration * public class ConfigA &#123; * @Bean * public BeanXXX methodB（configA, ） &#123; * return new BeanXXX(); * &#125; * &#125; * * 那么：key值为&quot;methodB&quot;，value为FactoryMetadata（configA, methodB）对象，其bean属性值为&quot;configA&quot;,method属性值为&quot;methodB&quot; */ private final Map&lt;String, FactoryMetadata&gt; beansFactoryMetadata = new HashMap&lt;&gt;(); 为了更好理解上面beansFactoryMetadata集合存储的数据是啥，最好动手调试看看里面装的是什么。总之这里记住一点就好了：ConfigurationBeanFactoryMetadata类的beansFactoryMetadata集合存储的是工厂bean的相关元数据，以便在ConfigurationPropertiesBindingPostProcessor后置处理器中使用。 2.2.2 ConfigurationPropertiesBindingPostProcessor再来看下ConfigurationPropertiesBindingPostProcessorRegistrar类注册的另外一个后置处理器ConfigurationPropertiesBindingPostProcessor，这个后置处理器主要承担了将外部配置属性绑定到@ConfigurationProperties注解标注的XxxProperties类的属性中（比如application.properties配置文件中设置了server.port=9999,那么9999将会绑定到ServerProperties类的port属性中）的实现逻辑。 先来看下ConfigurationPropertiesBindingPostProcessor的源码： 1234567891011121314public class ConfigurationPropertiesBindingPostProcessor implements BeanPostProcessor, PriorityOrdered, ApplicationContextAware, InitializingBean &#123; @Override public void afterPropertiesSet() throws Exception &#123; // ...这里省略实现代码先 &#125; @Override public Object postProcessBeforeInitialization(Object bean, String beanName) &#123; // ...这里省略实现代码先 &#125; // ...省略非关键代码&#125; 可以看到ConfigurationPropertiesBindingPostProcessor后置处理器实现了两个重要的接口InitializingBean和BeanPostProcessor。 InitializingBean接口的afterPropertiesSet方法会在bean属性赋值后调用，用来执行一些自定义的初始化逻辑比如检查某些强制的属性是否有被赋值，校验某些配置或给一些未被赋值的属性赋值。 BeanPostProcessor接口是bean的后置处理器，其有postProcessBeforeInitialization和postProcessAfterInitialization两个勾子方法，分别会在bean初始化前后被调用来执行一些后置处理逻辑，比如检查标记接口或是否用代理包装了bean。 同时以上代码可以看到ConfigurationPropertiesBindingPostProcessor后置处理器覆写了InitializingBean的afterPropertiesSet方法和BeanPostProcessor的postProcessBeforeInitialization方法。 接下来再来探究ConfigurationPropertiesBindingPostProcessor后置处理器覆写的两个方法的源码。 2.2.2.1 在执行外部属性绑定逻辑前先准备好相关元数据和配置属性绑定器先来分析下ConfigurationPropertiesBindingPostProcessor覆写InitializingBean接口的afterPropertiesSet方法： 12345678910111213141516// 这里主要是给 beanFactoryMetadata 和 configurationPropertiesBinder 的属性赋值，用于后面的后置处理器方法处理属性绑定的时候用@Overridepublic void afterPropertiesSet() throws Exception &#123; // We can&#x27;t use constructor injection of the application context because // it causes eager factory bean initialization // 【1】利用afterPropertiesSet这个勾子方法从容器中获取之前注册的ConfigurationBeanFactoryMetadata对象赋给beanFactoryMetadata属性 // （问1）beanFactoryMetadata这个bean是什么时候注册到容器中的？ // （答1）在ConfigurationPropertiesBindingPostProcessorRegistrar类的registerBeanDefinitions方法中将beanFactoryMetadata这个bean注册到容器中 // （问2）从容器中获取beanFactoryMetadata对象后，什么时候会被用到？ // （答2）beanFactoryMetadata对象的beansFactoryMetadata集合保存的工厂bean相关的元数据，在ConfigurationPropertiesBindingPostProcessor类 // 要判断某个bean是否有FactoryAnnotation或FactoryMethod时会根据这个beanFactoryMetadata对象的beansFactoryMetadata集合的元数据来查找 this.beanFactoryMetadata = this.applicationContext.getBean(ConfigurationBeanFactoryMetadata.BEAN_NAME, ConfigurationBeanFactoryMetadata.class); // 【2】new一个ConfigurationPropertiesBinder，用于后面的外部属性绑定时使用 // VALIDATOR_BEAN_NAME=&quot;configurationPropertiesValidator&quot; this.configurationPropertiesBinder = new ConfigurationPropertiesBinder(this.applicationContext, VALIDATOR_BEAN_NAME);&#125; 可以看到以上代码主要逻辑就是在执行外部属性绑定逻辑前先准备好相关元数据和配置属性绑定器，即从Spring容器中获取到之前注册的ConfigurationBeanFactoryMetadata对象赋给ConfigurationPropertiesBindingPostProcessor后置处理器的beanFactoryMetadata属性,还有就是新建一个ConfigurationPropertiesBinder配置属性绑定器对象并赋值给configurationPropertiesBinder属性。 再来看下ConfigurationPropertiesBinder这个配置属性绑定器对象是如何构造的。 12345678910ConfigurationPropertiesBinder(ApplicationContext applicationContext, String validatorBeanName) &#123; this.applicationContext = applicationContext; // 将applicationContext封装到PropertySourcesDeducer对象中并返回 // 获取属性源，主要用于在ConfigurableListableBeanFactory的后置处理方法postProcessBeanFactory中处理 this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources(); // 如果没有配置validator的话，这里一般返回的是null this.configurationPropertiesValidator = getConfigurationPropertiesValidator(applicationContext, validatorBeanName); // 检查实现JSR-303规范的bean校验器相关类在classpath中是否存在 this.jsr303Present = ConfigurationPropertiesJsr303Validator.isJsr303Present(applicationContext);&#125; 可以看到在构造ConfigurationPropertiesBinder对象时主要给其相关属性赋值（一般构造器逻辑都是这样）： 给applicationContext属性赋值注入上下文对象； 给propertySources属性赋值，属性源即外部配置值比如application.properties配置的属性值，注意这里的属性源是由ConfigFileApplicationListener这个监听器负责读取的。 给configurationPropertiesValidator属性赋值，值来自Spring容器中名为configurationPropertiesValidator的bean。 给jsr303Present属性赋值，当javax.validation.Validator,javax.validation.ValidatorFactory和javax.validation.bootstrap.GenericBootstrap&quot;这三个类同时存在于classpath中jsr303Present属性值才为true。 关于JSR303：JSR-303是JAVA EE 6中的一项子规范，叫做Bean Validation，Hibernate Validator是Bean Validation的参考实现 。Hibernate Validator提供了JSR 303规范中所有内置constraint 的实现，除此之外还有一些附加的constraint。 2.2.2.2 执行真正的外部属性绑定逻辑【主线】前面分析了那么多，发现都还没到外部属性绑定的真正处理逻辑，前面步骤都是在做一些准备性工作，为外部属性绑定做铺垫。 在执行外部属性绑定逻辑前，准备好了相关元数据和配置属性绑定器后，此时再来看看ConfigurationPropertiesBindingPostProcessor实现BeanPostProcessor接口的postProcessBeforeInitialization后置处理方法了，外部属性绑定逻辑都是在这个后置处理方法里实现。 直接看代码： 12345678910111213141516// 因为是外部配置属性后置处理器，因此这里对@ConfigurationProperties注解标注的XxxProperties类进行后置处理完成属性绑定@Overridepublic Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException &#123; // 注意，BeanPostProcessor后置处理器默认会对所有的bean进行处理，因此需要根据bean的一些条件进行过滤得到最终要处理的目的bean， // 这里的过滤条件就是判断某个bean是否有@ConfigurationProperties注解 // 【1】从bean上获取@ConfigurationProperties注解,若bean有标注，那么返回该注解；若没有，则返回Null。 // 比如ServerProperty上标注了@ConfigurationProperties注解 ConfigurationProperties annotation = getAnnotation(bean, beanName, ConfigurationProperties.class); // 【2】若标注有@ConfigurationProperties注解的bean，那么则进行进一步处理：将配置文件的配置注入到bean的属性值中 if (annotation != null) &#123; /********主线，重点关注】********/ bind(bean, beanName, annotation); &#125; // 【3】返回外部配置属性值绑定后的bean（一般是XxxProperties对象） return bean;&#125; ConfigurationPropertiesBindingPostProcessor类覆写的postProcessBeforeInitialization方法的做的事情就是将外部属性配置绑定到@ConfigurationProperties注解标注的XxxProperties类上，关键步骤总结如下： 从bean上获取@ConfigurationProperties注解； 若标注有@ConfigurationProperties注解的bean，那么则进行进一步的处理：将外部配置属性值绑定到bean的属性值中后再返回bean；若没有标注有@ConfigurationProperties注解的bean，那么将直接原样返回bean。 注意：后置处理器默认会对每个容器中的bean进行后置处理，因为这里只针对标注有@ConfigurationProperties注解的bean进行外部属性绑定，因此没有标注@ConfigurationProperties注解的bean将不会被处理。 接下来再来看看外部配置属性是如何绑定到@ConfigurationProperties注解的XxxProperties类属性上的呢？ 直接看代码： 1234567891011121314151617181920private void bind(Object bean, String beanName, ConfigurationProperties annotation) &#123; // 【1】得到bean的类型，比如ServerPropertie这个bean得到的类型是：org.springframework.boot.autoconfigure.web.ServerProperties ResolvableType type = getBeanType(bean, beanName); // 【2】获取bean上标注的@Validated注解 Validated validated = getAnnotation(bean, beanName, Validated.class); // 若标注有@Validated注解的话则跟@ConfigurationProperties注解一起组成一个Annotation数组 Annotation[] annotations = (validated != null) ? new Annotation[] &#123; annotation, validated &#125; : new Annotation[] &#123; annotation &#125;; // 【3】返回一个绑定了XxxProperties类的Bindable对象target，这个target对象即被外部属性值注入的目标对象 // （比如封装了标注有@ConfigurationProperties注解的ServerProperties对象的Bindable对象） // 设置annotations属性数组 Bindable&lt;?&gt; target = Bindable.of(type).withExistingValue(bean).withAnnotations(annotations); try &#123; // 【4】执行外部配置属性绑定逻辑 /********【主线，重点关注】********/ this.configurationPropertiesBinder.bind(target); &#125; catch (Exception ex) &#123; throw new ConfigurationPropertiesBindException(beanName, bean, annotation, ex); &#125;&#125; 前面分析了解到 ConfigurationBeanFactoryMetadata覆写的postProcessBeanFactory方法里已经将相关工厂bean的元数据封装到ConfigurationBeanFactoryMetadata类的beansFactoryMetadata集合。 再来看下上面代码中的【1】getBeanType和【2】getAnnotation方法源码： 123456789101112131415161718private ResolvableType getBeanType(Object bean, String beanName) &#123; // 首先获取有没有工厂方法 Method factoryMethod = this.beanFactoryMetadata.findFactoryMethod(beanName); // 若有工厂方法 if (factoryMethod != null) &#123; return ResolvableType.forMethodReturnType(factoryMethod); &#125; // 没有工厂方法，则说明是普通的配置类 return ResolvableType.forClass(bean.getClass());&#125;private &lt;A extends Annotation&gt; A getAnnotation(Object bean, String beanName, Class&lt;A&gt; type) &#123; A annotation = this.beanFactoryMetadata.findFactoryAnnotation(beanName, type); if (annotation == null) &#123; annotation = AnnotationUtils.findAnnotation(bean.getClass(), type); &#125; return annotation;&#125; 注意到上面代码中的beanFactoryMetadata对象没，ConfigurationPropertiesBindingPostProcessor后置处理器的getBeanType和getAnnotation方法分别会调用ConfigurationBeanFactoryMetadata的findFactoryMethod和findFactoryAnnotation方法，而ConfigurationBeanFactoryMetadata的findFactoryMethod和findFactoryAnnotation方法又会依赖存储工厂bean元数据的beansFactoryMetadata集合来寻找是否有FactoryMethod和FactoryAnnotation。因此，到这里就知道之前ConfigurationBeanFactoryMetadata的beansFactoryMetadata集合存储工厂bean元数据的作用了。 3.ConfigurationPropertiesBinder分析this.configurationPropertiesBinder.bind(target);这行代码： 12345678910111213public void bind(Bindable&lt;?&gt; target) &#123; //【1】得到@ConfigurationProperties注解 ConfigurationProperties annotation = target.getAnnotation(ConfigurationProperties.class); Assert.state(annotation != null, () -&gt; &quot;Missing @ConfigurationProperties on &quot; + target); // 【2】得到Validator对象集合，用于属性校验 List&lt;Validator&gt; validators = getValidators(target); // 【3】得到BindHandler对象（默认是IgnoreTopLevelConverterNotFoundBindHandler对象）， // 用于对ConfigurationProperties注解的ignoreUnknownFields等属性的处理 BindHandler bindHandler = getBindHandler(annotation, validators); // 【4】得到一个Binder对象，并利用其bind方法执行外部属性绑定逻辑 /********************【主线，重点关注】********************/ getBinder().bind(annotation.prefix(), target, bindHandler);&#125; 上面代码的主要逻辑是： 先获取target对象（对应XxxProperties类）上的@ConfigurationProperties注解和校验器（若有）; 然后再根据获取的的@ConfigurationProperties注解和校验器来获得BindHandler对象，BindHandler的作用是用于在属性绑定时来处理一些附件逻辑; 最后再获取一个Binder对象，调用其bind方法来执行外部属性绑定的逻辑。 3.1 获取BindHandler对象以便在属性绑定时来处理一些附件逻辑在看getBindHandler方法的逻辑前先来认识下BindHandler是干什么的。 BindHandler是一个父类接口，用于在属性绑定时来处理一些附件逻辑。先看下BindHandler的类图，好有一个整体的认识： 可以看到AbstractBindHandler作为抽象基类实现了BindHandler接口，其有四个具体的子类分别是IgnoreTopLevelConverterNotFoundBindHandler,NoUnboundElementsBindHandler,IgnoreErrorsBindHandler和ValidationBindHandler。 IgnoreTopLevelConverterNotFoundBindHandler：在处理外部属性绑定时的默认BindHandler，当属性绑定失败时会忽略最顶层的ConverterNotFoundException； NoUnboundElementsBindHandler：用来处理配置文件配置的未知的属性； IgnoreErrorsBindHandler：用来忽略无效的配置属性例如类型错误； ValidationBindHandler：利用校验器对绑定的结果值进行校验。 分析完类关系后，再来看下BindHandler接口提供了哪些方法在外部属性绑定时提供一些额外的处理逻辑，直接看代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970public interface BindHandler &#123; /** * Default no-op bind handler. */ BindHandler DEFAULT = new BindHandler() &#123; &#125;; /** * Called when binding of an element starts but before any result has been determined. * @param &lt;T&gt; the bindable source type * @param name the name of the element being bound * @param target the item being bound * @param context the bind context * @return the actual item that should be used for binding (may be &#123;@code null&#125;) */ // onStart方法在外部属性绑定前被调用 default &lt;T&gt; Bindable&lt;T&gt; onStart(ConfigurationPropertyName name, Bindable&lt;T&gt; target, BindContext context) &#123; return target; &#125; /** * Called when binding of an element ends with a successful result. Implementations * may change the ultimately returned result or perform addition validation. * @param name the name of the element being bound * @param target the item being bound * @param context the bind context * @param result the bound result (never &#123;@code null&#125;) * @return the actual result that should be used (may be &#123;@code null&#125;) */ // onSuccess方法在外部属性成功绑定时被调用，该方法能够改变最终返回的属性值或对属性值进行校验 default Object onSuccess(ConfigurationPropertyName name, Bindable&lt;?&gt; target, BindContext context, Object result) &#123; return result; &#125; /** * Called when binding fails for any reason (including failures from * &#123;@link #onSuccess&#125; calls). Implementations may choose to swallow exceptions and * return an alternative result. * @param name the name of the element being bound * @param target the item being bound * @param context the bind context * @param error the cause of the error (if the exception stands it may be re-thrown) * @return the actual result that should be used (may be &#123;@code null&#125;). * @throws Exception if the binding isn&#x27;t valid */ // onFailure方法在外部属性绑定失败（包括onSuccess方法里的逻辑执行失败）时被调用， // 该方法可以用来catch住相关异常或者返回一个替代的结果（跟微服务的降级结果有点类似） default Object onFailure(ConfigurationPropertyName name, Bindable&lt;?&gt; target, BindContext context, Exception error) throws Exception &#123; throw error; &#125; /** * Called when binding finishes, regardless of whether the property was bound or not. * @param name the name of the element being bound * @param target the item being bound * @param context the bind context * @param result the bound result (may be &#123;@code null&#125;) * @throws Exception if the binding isn&#x27;t valid */ // 当外部属性绑定结束时（不管绑定成功还是失败）被调用 default void onFinish(ConfigurationPropertyName name, Bindable&lt;?&gt; target, BindContext context, Object result) throws Exception &#123; &#125;&#125; 可以看到BindHandler接口定义了onStart,onSuccess,onFailure和onFinish方法，这四个方法分别会在执行外部属性绑定时的不同时段被调用，在属性绑定时用来添加一些额外的处理逻辑，比如在onSuccess方法改变最终绑定的属性值或对属性值进行校验，在onFailure方法catch住相关异常或者返回一个替代的绑定的属性值。 知道了BindHandler是在属性绑定时添加一些额外的处理逻辑后，再来看下getBindHandler方法的逻辑，直接上代码： 12345678910111213141516171819202122232425262728// 注意BindHandler的设计技巧，应该是责任链模式，非常巧妙，值得借鉴private BindHandler getBindHandler(ConfigurationProperties annotation, List&lt;Validator&gt; validators) &#123; // 新建一个IgnoreTopLevelConverterNotFoundBindHandler对象，这是个默认的BindHandler对象 BindHandler handler = new IgnoreTopLevelConverterNotFoundBindHandler(); // 若注解@ConfigurationProperties的ignoreInvalidFields属性设置为true， // 则说明可以忽略无效的配置属性例如类型错误，此时新建一个IgnoreErrorsBindHandler对象 if (annotation.ignoreInvalidFields()) &#123; handler = new IgnoreErrorsBindHandler(handler); &#125; // 若注解@ConfigurationProperties的ignoreUnknownFields属性设置为true， // 则说明配置文件配置了一些未知的属性配置，此时新建一个ignoreUnknownFields对象 if (!annotation.ignoreUnknownFields()) &#123; UnboundElementsSourceFilter filter = new UnboundElementsSourceFilter(); handler = new NoUnboundElementsBindHandler(handler, filter); &#125; // 如果@Valid注解不为空，则创建一个ValidationBindHandler对象 if (!validators.isEmpty()) &#123; handler = new ValidationBindHandler(handler, validators.toArray(new Validator[0])); &#125; // 遍历获取的ConfigurationPropertiesBindHandlerAdvisor集合， // ConfigurationPropertiesBindHandlerAdvisor目前只在测试类中有用到 for (ConfigurationPropertiesBindHandlerAdvisor advisor : getBindHandlerAdvisors()) &#123; // 对handler进一步处理 handler = advisor.apply(handler); &#125; // 返回handler return handler;&#125; getBindHandler方法的逻辑很简单，主要是根据传入的@ConfigurationProperties注解和validators校验器来创建不同的BindHandler具体实现类： 首先new一个IgnoreTopLevelConverterNotFoundBindHandler作为默认的BindHandler; 若@ConfigurationProperties注解的属性ignoreInvalidFields值为true，那么再new一个IgnoreErrorsBindHandler对象，把刚才新建的IgnoreTopLevelConverterNotFoundBindHandler对象作为构造参数传入赋值给AbstractBindHandler父类的parent属性； 若@ConfigurationProperties注解的属性ignoreUnknownFields值为false，那么再new一个UnboundElementsSourceFilter对象，把之前构造的BindHandler对象作为构造参数传入赋值给AbstractBindHandler父类的parent属性； ……以此类推，前一个handler对象作为后一个hangdler对象的构造参数，就这样利用AbstractBindHandler父类的parent属性将每一个handler链起来，最后再得到最终构造的handler。 GET技巧：上面的这个设计模式是不是很熟悉，这个就是责任链模式。学习源码，同时也是学习别人怎么熟练运用设计模式。责任链模式的应用案例有很多，比如Dubbo的各种Filter们（比如AccessLogFilter是用来记录服务的访问日志的，ExceptionFilter是用来处理异常的…），一开始学习java web时的Servlet的Filter,MyBatis的Plugin们以及Netty的Pipeline都采用了责任链模式。 了解了BindHandler的作用后，再来紧跟主线，看属性绑定是如何绑定的？ 3.2 获取Binder对象用于进行属性绑定【主线】这里分析 ConfigurationPropertiesBinder代码中标注【4】的主线代码getBinder().bind(annotation.prefix(), target, bindHandler); 可以看到这句代码主要做了两件事： 调用getBinder方法获取用于属性绑定的Binder对象； 调用Binder对象的bind方法进行外部属性绑定到@ConfigurationProperties注解的XxxProperties类的属性上。 那么我们先看下getBinder方法源码： 123456789101112131415private Binder getBinder() &#123; // Binder是一个能绑定ConfigurationPropertySource的容器对象 if (this.binder == null) &#123; // 新建一个Binder对象，这个binder对象封装了ConfigurationPropertySources， // PropertySourcesPlaceholdersResolver，ConversionService和PropertyEditorInitializer对象 // getConfigurationPropertySources() 将PropertySources对象封装成SpringConfigurationPropertySources对象并返回 // getPropertySourcesPlaceholdersResolver(), getConversionService() 将PropertySources对象封装成PropertySourcesPlaceholdersResolver对象并返回，从容器中获取到ConversionService对象 // getPropertyEditorInitializer() 得到Consumer&lt;PropertyEditorRegistry&gt;对象，这些初始化器用来配置property editors，property editors通常可以用来转换值 this.binder = new Binder(getConfigurationPropertySources(), getPropertySourcesPlaceholdersResolver(), getConversionService(), getPropertyEditorInitializer()); &#125; // 返回binder return this.binder;&#125; 可以看到Binder对象封装了ConfigurationPropertySources,PropertySourcesPlaceholdersResolver,ConversionService和PropertyEditorInitializer这四个对象，Binder对象封装了这四个肯定是在后面属性绑定逻辑中会用到，先看下这四个对象是干嘛的： ConfigurationPropertySources:外部配置文件的属性源，由ConfigFileApplicationListener监听器负责触发读取； PropertySourcesPlaceholdersResolver:解析属性源中的占位符$&#123;&#125;； ConversionService:对属性类型进行转换 PropertyEditorInitializer:用来配置property editors 获取了Binder属性绑定器后，再来看下它的bind方法是如何执行属性绑定的。 123456789101112131415161718public &lt;T&gt; BindResult&lt;T&gt; bind(String name, Bindable&lt;T&gt; target, BindHandler handler) &#123; // ConfigurationPropertyName.of(name)：将name（这里指属性前缀名）封装到ConfigurationPropertyName对象中 // 将外部配置属性绑定到目标对象target中 return bind(ConfigurationPropertyName.of(name), target, handler);&#125;public &lt;T&gt; BindResult&lt;T&gt; bind(ConfigurationPropertyName name, Bindable&lt;T&gt; target, BindHandler handler) &#123; Assert.notNull(name, &quot;Name must not be null&quot;); Assert.notNull(target, &quot;Target must not be null&quot;); handler = (handler != null) ? handler : BindHandler.DEFAULT; // Context是Binder的内部类，实现了BindContext，Context可以理解为Binder的上下文，可以用来获取binder的属性比如Binder的sources属性 Context context = new Context(); // 进行属性绑定，并返回绑定属性后的对象bound，注意bound的对象类型是T，T就是@ConfigurationProperties注解的类比如ServerProperties /********【主线，重点关注】************/ T bound = bind(name, target, handler, context, false); // 将刚才返回的bound对象封装到BindResult对象中并返回 return BindResult.of(bound);&#125; 上面代码中首先创建了一个Context对象，Context是Binder的内部类，为Binder的上下文，利用Context上下文可以获取Binder的属性比如获取Binder的sources属性值并绑定到XxxProperties属性中。然后再紧跟主线看下 bind(name, target, handler, context, false)方法源码： 1234567891011121314151617181920protected final &lt;T&gt; T bind(ConfigurationPropertyName name, Bindable&lt;T&gt; target, BindHandler handler, Context context, boolean allowRecursiveBinding) &#123; // 清空Binder的configurationProperty属性值 context.clearConfigurationProperty(); try &#123; // 【1】调用BindHandler的onStart方法，执行一系列的责任链对象的该方法 target = handler.onStart(name, target, context); if (target == null) &#123; return null; &#125; // 【2】调用bindObject方法对Bindable对象target的属性进行绑定外部配置的值，并返回赋值给bound对象。 // 例如：比如设置了server.port=9999,那么该方法最终会调用Binder.bindProperty方法，最终返回的bound的value值为9999 /************【主线：重点关注】***********/ Object bound = bindObject(name, target, handler, context, allowRecursiveBinding); // 【3】封装handleBindResult对象并返回，注意在handleBindResult的构造函数中会调用BindHandler的onSucess，onFinish方法 return handleBindResult(name, target, handler, context, bound); &#125; catch (Exception ex) &#123; return handleBindError(name, target, handler, context, ex); &#125;&#125; 接着紧跟主线来看看bindObject方法源码: 1234567891011121314151617181920212223242526272829303132333435private &lt;T&gt; Object bindObject(ConfigurationPropertyName name, Bindable&lt;T&gt; target, BindHandler handler, Context context, boolean allowRecursiveBinding) &#123; // 从propertySource中的配置属性，获取ConfigurationProperty对象property即application.properties配置文件中若有相关的配置的话， // 那么property将不会为null。例如：假如你在配置文件中配置了spring.profiles.active=dev，那么相应property值为dev；否则为null ConfigurationProperty property = findProperty(name, context); // 若property为null，则不会执行后续的属性绑定相关逻辑 if (property == null &amp;&amp; containsNoDescendantOf(context.getSources(), name)) &#123; // 如果property == null，则返回null return null; &#125; // 根据target类型获取不同的Binder，可以是null（普通的类型一般是Null）,MapBinder,CollectionBinder或ArrayBinder AggregateBinder&lt;?&gt; aggregateBinder = getAggregateBinder(target, context); // 若aggregateBinder不为null比如配置了spring.profiles属性（当然包括其子属性比如spring.profiles.active等） if (aggregateBinder != null) &#123; // 若aggregateBinder不为null，则调用bindAggregate并返回绑定后的对象 return bindAggregate(name, target, handler, context, aggregateBinder); &#125; // 若property不为null if (property != null) &#123; try &#123; // 绑定属性到对象中，比如配置文件中设置了server.port=8888，那么将会最终调用bindProperty方法进行属性设置 return bindProperty(target, context, property); &#125; catch (ConverterNotFoundException ex) &#123; // We might still be able to bind it as a bean Object bean = bindBean(name, target, handler, context, allowRecursiveBinding); if (bean != null) &#123; return bean; &#125; throw ex; &#125; &#125; // 只有@ConfigurationProperties注解的类进行外部属性绑定才会走这里 /***********************【主线，重点关注】****************************/ return bindBean(name, target, handler, context, allowRecursiveBinding);&#125; 由上代码中可以看到bindObject中执行属性绑定的逻辑会根据不同的属性类型进入不同的绑定逻辑中，例如： application.properties配置文件中配置了spring.profiles.active=dev的话，那么将会进入return bindAggregate(name, target, handler, context, aggregateBinder);这个属性绑定的代码逻辑； application.properties配置文件中配置了server.port=9999的话，那么将会进入return bindBean(name, target, handler, context, allowRecursiveBinding);的属性绑定的逻辑。 再次紧跟主线，进入@ConfigurationProperties注解的XxxProperties类的属性绑定逻辑中的bindBean方法中： 123456789101112131415161718192021222324252627282930313233343536373839404142434445// name指的是ConfigurationProperties的前缀名private Object bindBean(ConfigurationPropertyName name, Bindable&lt;?&gt; target, BindHandler handler, Context context, boolean allowRecursiveBinding) &#123; // 这里做一些ConfigurationPropertyState的相关检查 if (containsNoDescendantOf(context.getSources(), name) || isUnbindableBean(name, target, context)) &#123; return null; &#125; // 这里新建一个BeanPropertyBinder的实现类对象，注意这个对象实现了bindProperty方法 BeanPropertyBinder propertyBinder = (propertyName, propertyTarget) -&gt; bind( name.append(propertyName), propertyTarget, handler, context, false); /** * (propertyName, propertyTarget) -&gt; bind( * name.append(propertyName), propertyTarget, handler, context, false); * 等价于 * new BeanPropertyBinder() &#123; * Object bindProperty(String propertyName, Bindable&lt;?&gt; target)&#123; * bind(name.append(propertyName), propertyTarget, handler, context, false); * &#125; * &#125; */ // type类型即@ConfigurationProperties注解标注的XxxProperties类 Class&lt;?&gt; type = target.getType().resolve(Object.class); if (!allowRecursiveBinding &amp;&amp; context.hasBoundBean(type)) &#123; return null; &#125; // 这里应用了java8的lambda语法，作为没怎么学习java8的lambda语法的我，不怎么好理解下面的逻辑，哈哈 // 真正实现将外部配置属性绑定到@ConfigurationProperties注解的XxxProperties类的属性中的逻辑应该就是在这句lambda代码了 /*******************【主线】***************************/ return context.withBean(type, () -&gt; &#123; Stream&lt;?&gt; boundBeans = BEAN_BINDERS.stream() .map((b) -&gt; b.bind(name, target, context, propertyBinder)); return boundBeans.filter(Objects::nonNull).findFirst().orElse(null); &#125;); // 根据上面的lambda语句翻译如下： /** 这里的T指的是各种属性绑定对象，比如ServerProperties * return context.withBean(type, new Supplier&lt;T&gt;() &#123; * T get() &#123; * Stream&lt;?&gt; boundBeans = BEAN_BINDERS.stream() * .map((b) -&gt; b.bind(name, target, context, propertyBinder)); * return boundBeans.filter(Objects::nonNull).findFirst().orElse(null); * &#125; * &#125;); */&#125; 从上面代码中，追根究底来到了外部配置属性绑定到XxxProperties类属性中的比较底层的代码了，可以看到属性绑定的逻辑应该就在上面代码标注【主线】的lambda代码处了。这个属于SpringBoot的属性绑定Binder的范畴，Binder相关类是SpringBoot2.0才出现的，即对之前的属性绑定相关代码进行推翻重写了。 总结好了，外部配置属性值是如何被绑定到XxxProperties类属性上的源码分析就到此结束了，重要步骤总结： 首先是@EnableConfigurationProperties注解import了EnableConfigurationPropertiesImportSelector后置处理器； EnableConfigurationPropertiesImportSelector后置处理器又向Spring容器中注册了ConfigurationPropertiesBeanRegistrar和ConfigurationPropertiesBindingPostProcessorRegistrar这两个bean； 其中ConfigurationPropertiesBeanRegistrar向Spring容器中注册了XxxProperties类型的bean；ConfigurationPropertiesBindingPostProcessorRegistrar向Spring容器中注册了ConfigurationBeanFactoryMetadata和ConfigurationPropertiesBindingPostProcessor两个后置处理器； ConfigurationBeanFactoryMetadata后置处理器在初始化bean factory时将@Bean注解的元数据存储起来，以便在后续的外部配置属性绑定的相关逻辑中使用； ConfigurationPropertiesBindingPostProcessor后置处理器将外部配置属性值绑定到XxxProperties类属性的逻辑委托给ConfigurationPropertiesBinder对象，然后ConfigurationPropertiesBinder对象又最终将属性绑定的逻辑委托给Binder对象来完成。 可见，重要的是上面的第5步。 参考资料 https://www.jianshu.com/p/554533f88370]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(4)-SpringBoot 的自动配置]]></title>
    <url>%2Fposts%2F2020-11-18-SpringBoot-Source-04%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot 的自动配置 上一篇我们分析了SpringBoot的条件注解@ConditionalOnXXX的相关源码，总结如下： SpringBoot的所有@ConditionalOnXxx的条件类OnXxxCondition都是继承于SpringBootCondition基类，而SpringBootCondition又实现了Condition接口。 SpringBootCondition基类主要用来打印一些条件注解评估报告的日志，这些条件评估信息全部来源于其子类注解条件类OnXxxCondition，因此其也抽象了一个模板方法getMatchOutcome留给子类去实现来评估其条件注解是否符合条件。 前一篇还有一个重要的知识点没分析，那就是跟过滤自动配置类逻辑有关的AutoConfigurationImportFilter接口，这篇文章来分析一下。 前面分析了跟SpringBoot的自动配置息息相关内置条件注解@ConditionalOnXxx后，现在就开始来分析跟SpringBoot自动配置的相关源码。 1.@SpringBootApplication注解思考下，SpringBoot为何一个标注有@SpringBootApplication注解的启动类通过执行一个简单的run方法就能实现SpringBoot大量Starter的自动配置呢？ 其实SpringBoot自动配置就跟@SpringBootApplication这个注解有关，先来看下这个注解的源码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@Documented@Inherited@SpringBootConfiguration@EnableAutoConfiguration@ComponentScan(excludeFilters = &#123; @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class), @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)public @interface SpringBootApplication &#123; /** * Exclude specific auto-configuration classes such that they will never be applied. * @return the classes to exclude */ @AliasFor(annotation = EnableAutoConfiguration.class) Class&lt;?&gt;[] exclude() default &#123;&#125;; /** * Exclude specific auto-configuration class names such that they will never be * applied. * @return the class names to exclude * @since 1.3.0 */ @AliasFor(annotation = EnableAutoConfiguration.class) String[] excludeName() default &#123;&#125;; /** * Base packages to scan for annotated components. Use &#123;@link #scanBasePackageClasses&#125; * for a type-safe alternative to String-based package names. * @return base packages to scan * @since 1.3.0 */ @AliasFor(annotation = ComponentScan.class, attribute = &quot;basePackages&quot;) String[] scanBasePackages() default &#123;&#125;; /** * Type-safe alternative to &#123;@link #scanBasePackages&#125; for specifying the packages to * scan for annotated components. The package of each class specified will be scanned. * &lt;p&gt; * Consider creating a special no-op marker class or interface in each package that * serves no purpose other than being referenced by this attribute. * @return base packages to scan * @since 1.3.0 */ @AliasFor(annotation = ComponentScan.class, attribute = &quot;basePackageClasses&quot;) Class&lt;?&gt;[] scanBasePackageClasses() default &#123;&#125;;&#125; @SpringBootApplication标注了很多注解，可以看到其中跟SpringBoot自动配置有关的注解就只有@EnableAutoConfiguration，因此，可以肯定的是SpringBoot的自动配置肯定跟@EnableAutoConfiguration相关(其中@ComponentScan注解的excludeFilters属性也有一个类AutoConfigurationExcludeFilter,这个类跟自动配置也有点关系，但不是我们关注的重点)。 现在我们来打开@EnableAutoConfiguration注解的源码： 12345678910111213141516171819202122232425@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@Documented@Inherited@AutoConfigurationPackage@Import(AutoConfigurationImportSelector.class)public @interface EnableAutoConfiguration &#123; String ENABLED_OVERRIDE_PROPERTY = &quot;spring.boot.enableautoconfiguration&quot;; /** * Exclude specific auto-configuration classes such that they will never be applied. * @return the classes to exclude */ Class&lt;?&gt;[] exclude() default &#123;&#125;; /** * Exclude specific auto-configuration class names such that they will never be * applied. * @return the class names to exclude * @since 1.3.0 */ String[] excludeName() default &#123;&#125;;&#125; 看到@EnableAutoConfiguration注解又标有@AutoConfigurationPackage和@Import(AutoConfigurationImportSelector.class)两个注解。 @AutoConfigurationPackage注解肯定跟自动配置的包有关，而AutoConfigurationImportSelector则是跟SpringBoot的自动配置选择导入有关（Spring中的ImportSelector是用来导入配置类的，通常是基于某些条件注解@ConditionalOnXxxx来决定是否导入某个配置类）。 因此，需要重点分析AutoConfigurationImportSelector类，因为SpringBoot的自动配置肯定有一个配置类，而这个配置类的导入则需要靠AutoConfigurationImportSelector来实现。 2.SpringBoot自动配置实现逻辑的入口方法可以肯定的是SpringBoot的自动配置的逻辑肯定与AutoConfigurationImportSelector这个类有关，那么该如何找到SpringBoot自动配置实现逻辑的入口方法呢？ AutoConfigurationImportSelector的相关类图： 可以看到AutoConfigurationImportSelector重点是实现了DeferredImportSelector接口和各种Aware接口，然后DeferredImportSelector接口又继承了ImportSelector接口。 AutoConfigurationImportSelector复写DeferredImportSelector接口的实现方法selectImports方法，因为selectImports方法跟导入自动配置类有关，而这个方法往往是程序执行的入口方法。经过调试发现，selectImports方法跟自动配置相关的逻辑有点关系，但实质关系不大。 又该如何来找到自动配置逻辑有关的入口方法呢？ 最简单的方法就是在AutoConfigurationImportSelector类的每个方法都打上断点，然后调试看先执行到哪个方法，但是这样太复杂了。自定义一个Starter的时候，要在spring.factories配置文件中配置 1EnableAutoConfiguration=XxxAutoConfiguration 因此可以推断，SpringBoot的自动配置原理肯定跟从spring.factories配置文件中加载自动配置类有关，于是结合AutoConfigurationImportSelector的方法注释，我们找到了getAutoConfigurationEntry方法。于是在这个方法里面打上一个断点，此时通过调用栈帧来看下更上层的入口方法在哪里，然后再从跟自动配置相关的更上层的入口方法开始分析。 通过上图可以看到，跟自动配置逻辑相关的入口方法在DeferredImportSelectorGrouping类的getImports方法处，因此就从DeferredImportSelectorGrouping类的getImports方法来开始分析SpringBoot的自动配置源码。 3.分析SpringBoot自动配置原理既然找到ConfigurationClassParser.getImports()方法是自动配置相关的入口方法，那么下面就来真正分析SpringBoot自动配置的源码。 先看一下getImports方法代码： 12345678910public Iterable&lt;Group.Entry&gt; getImports() &#123; // 遍历DeferredImportSelectorHolder对象集合deferredImports，deferredImports集合装了各种ImportSelector，当然这里装的是AutoConfigurationImportSelector for (DeferredImportSelectorHolder deferredImport : this.deferredImports) &#123; // 【1】利用AutoConfigurationGroup的process方法来处理自动配置的相关逻辑，决定导入哪些配置类（这个是分析的重点，自动配置的逻辑全在这） this.group.process(deferredImport.getConfigurationClass().getMetadata(), deferredImport.getImportSelector()); &#125; // 【2】经过上面的处理后，然后再进行选择导入哪些配置类 return this.group.selectImports();&#125; 【1】处的的代码是分析的重点，自动配置相关的大部分逻辑全在这里，深入分析自动配置的主要逻辑。那么this.group.process(deferredImport.getConfigurationClass().getMetadata(), deferredImport.getImportSelector())；主要做的事情就是在this.group即AutoConfigurationGroup对象的process方法中，传入的AutoConfigurationImportSelector对象来选择一些符合条件的自动配置类，过滤掉一些不符合条件的自动配置类。 AutoConfigurationGroup：是AutoConfigurationImportSelector的内部类，主要用来处理自动配置相关的逻辑，拥有process和selectImports方法，然后拥有entries和autoConfigurationEntries集合属性，这两个集合分别存储被处理后的符合条件的自动配置类； AutoConfigurationImportSelector：承担自动配置的大部分逻辑，负责选择一些符合条件的自动配置类； metadata:标注在SpringBoot启动类上的@SpringBootApplication注解元数据 【2】的this.group.selectImports的方法主要是针对前面的process方法处理后的自动配置类再进一步有选择的选择导入。 3.1 分析自动配置的主要逻辑这里继续深究前面【1】处的 this.group.process方法是如何处理自动配置相关逻辑的。 123456789101112131415161718192021// 这里用来处理自动配置类，比如过滤掉不符合匹配条件的自动配置类@Overridepublic void process(AnnotationMetadata annotationMetadata, DeferredImportSelector deferredImportSelector) &#123; Assert.state( deferredImportSelector instanceof AutoConfigurationImportSelector, () -&gt; String.format(&quot;Only %s implementations are supported, got %s&quot;, AutoConfigurationImportSelector.class.getSimpleName(), deferredImportSelector.getClass().getName())); // 【1】,调用getAutoConfigurationEntry方法得到自动配置类放入autoConfigurationEntry对象中 AutoConfigurationEntry autoConfigurationEntry = ((AutoConfigurationImportSelector) deferredImportSelector) .getAutoConfigurationEntry(getAutoConfigurationMetadata(), annotationMetadata); // 【2】，又将封装了自动配置类的autoConfigurationEntry对象装进autoConfigurationEntries集合 this.autoConfigurationEntries.add(autoConfigurationEntry); // 【3】，遍历刚获取的自动配置类 for (String importClassName : autoConfigurationEntry.getConfigurations()) &#123; // 这里符合条件的自动配置类作为key，annotationMetadata作为值放进entries集合 this.entries.putIfAbsent(importClassName, annotationMetadata); &#125;&#125; 上面代码中再来看标【1】的方法getAutoConfigurationEntry，这个方法主要是用来获取自动配置类有关，承担了自动配置的主要逻辑。直接上代码： 1234567891011121314151617181920212223242526272829303132333435// 获取符合条件的自动配置类，避免加载不必要的自动配置类从而造成内存浪费protected AutoConfigurationEntry getAutoConfigurationEntry( AutoConfigurationMetadata autoConfigurationMetadata, AnnotationMetadata annotationMetadata) &#123; // 获取是否有配置spring.boot.enableautoconfiguration属性，默认返回true if (!isEnabled(annotationMetadata)) &#123; return EMPTY_ENTRY; &#125; // 获得@Congiguration标注的Configuration类即被审视introspectedClass的注解数据， // 比如：@SpringBootApplication(exclude = FreeMarkerAutoConfiguration.class) // 将会获取到exclude = FreeMarkerAutoConfiguration.class和excludeName=&quot;&quot;的注解数据 AnnotationAttributes attributes = getAttributes(annotationMetadata); // 【1】得到spring.factories文件配置的所有自动配置类 List&lt;String&gt; configurations = getCandidateConfigurations(annotationMetadata, attributes); // 利用LinkedHashSet移除重复的配置类 configurations = removeDuplicates(configurations); // 得到要排除的自动配置类，比如注解属性exclude的配置类 // 比如：@SpringBootApplication(exclude = FreeMarkerAutoConfiguration.class) // 将会获取到exclude = FreeMarkerAutoConfiguration.class的注解数据 Set&lt;String&gt; exclusions = getExclusions(annotationMetadata, attributes); // 检查要被排除的配置类，因为有些不是自动配置类，故要抛出异常 checkExcludedClasses(configurations, exclusions); // 【2】将要排除的配置类移除 configurations.removeAll(exclusions); // 【3】因为从spring.factories文件获取的自动配置类太多，如果有些不必要的自动配置类都加载进内存，会造成内存浪费，因此这里需要进行过滤 // 注意这里会调用AutoConfigurationImportFilter的match方法来判断是否符合@ConditionalOnBean,@ConditionalOnClass或@ConditionalOnWebApplication，后面会重点分析一下 configurations = filter(configurations, autoConfigurationMetadata); // 【4】获取了符合条件的自动配置类后，此时触发AutoConfigurationImportEvent事件， // 目的是告诉ConditionEvaluationReport条件评估报告器对象来记录符合条件的自动配置类 // 该事件什么时候会被触发？--&gt; 在刷新容器时调用invokeBeanFactoryPostProcessors后置处理器时触发 fireAutoConfigurationImportEvents(configurations, exclusions); // 【5】将符合条件和要排除的自动配置类封装进AutoConfigurationEntry对象，并返回 return new AutoConfigurationEntry(configurations, exclusions);&#125; AutoConfigurationEntry方法主要做的事情就是获取符合条件的自动配置类，避免加载不必要的自动配置类从而造成内存浪费。下面总结下AutoConfigurationEntry方法主要做的事情： 【1】从spring.factories配置文件中加载EnableAutoConfiguration自动配置类（注意此时是从缓存中拿到的）,获取的自动配置类如下图所示。 【2】若@EnableAutoConfiguration等注解标有要exclude的自动配置类，那么再将这个自动配置类排除掉； 【3】排除掉要exclude的自动配置类后，然后再调用filter方法进行进一步的过滤，再次排除一些不符合条件的自动配置类； 【4】经过重重过滤后，此时再触发AutoConfigurationImportEvent事件，告诉ConditionEvaluationReport条件评估报告器对象来记录符合条件的自动配置类； 【5】 最后再将符合条件的自动配置类返回。 总结了AutoConfigurationEntry方法主要的逻辑后，再来细看一下AutoConfigurationImportSelector的filter方法： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354private List&lt;String&gt; filter(List&lt;String&gt; configurations, AutoConfigurationMetadata autoConfigurationMetadata) &#123; long startTime = System.nanoTime(); // 将从spring.factories中获取的自动配置类转出字符串数组 String[] candidates = StringUtils.toStringArray(configurations); // 定义skip数组，是否需要跳过。注意skip数组与candidates数组顺序一一对应 boolean[] skip = new boolean[candidates.length]; boolean skipped = false; // getAutoConfigurationImportFilters方法：拿到OnBeanCondition，OnClassCondition和OnWebApplicationCondition // 然后遍历这三个条件类去过滤从spring.factories加载的大量配置类 for (AutoConfigurationImportFilter filter : getAutoConfigurationImportFilters()) &#123; // 调用各种aware方法，将beanClassLoader,beanFactory等注入到filter对象中， // 这里的filter对象即OnBeanCondition，OnClassCondition或OnWebApplicationCondition invokeAwareMethods(filter); // 判断各种filter来判断每个candidate（这里实质要通过candidate(自动配置类)拿到其标注的 // @ConditionalOnClass,@ConditionalOnBean和@ConditionalOnWebApplication里面的注解值）是否匹配， // 注意candidates数组与match数组一一对应 /**********************【主线，重点关注】********************************/ boolean[] match = filter.match(candidates, autoConfigurationMetadata); // 遍历match数组，注意match顺序跟candidates的自动配置类一一对应 for (int i = 0; i &lt; match.length; i++) &#123; // 若有不匹配的话 if (!match[i]) &#123; // 不匹配的将记录在skip数组，标志skip[i]为true，也与candidates数组一一对应 skip[i] = true; // 因为不匹配，将相应的自动配置类置空 candidates[i] = null; // 标注skipped为true skipped = true; &#125; &#125; &#125; // 这里表示若所有自动配置类经过OnBeanCondition，OnClassCondition和OnWebApplicationCondition过滤后，全部都匹配的话，则全部原样返回 if (!skipped) &#123; return configurations; &#125; // 建立result集合来装匹配的自动配置类 List&lt;String&gt; result = new ArrayList&lt;&gt;(candidates.length); for (int i = 0; i &lt; candidates.length; i++) &#123; // 若skip[i]为false，则说明是符合条件的自动配置类，此时添加到result集合中 if (!skip[i]) &#123; result.add(candidates[i]); &#125; &#125; // 打印日志 if (logger.isTraceEnabled()) &#123; int numberFiltered = configurations.size() - result.size(); logger.trace(&quot;Filtered &quot; + numberFiltered + &quot; auto configuration class in &quot; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime) + &quot; ms&quot;); &#125; // 最后返回符合条件的自动配置类 return new ArrayList&lt;&gt;(result);&#125; AutoConfigurationImportSelector的filter方法主要做的事情就是调用AutoConfigurationImportFilter接口的match方法来判断每一个自动配置类上的条件注解（若有的话）@ConditionalOnClass,@ConditionalOnBean或@ConditionalOnWebApplication是否满足条件，若满足，则返回true，说明匹配，若不满足，则返回false说明不匹配。 3.2 有选择的导入自动配置类继续深究前面分析SpringBoot自动配置原理这节标【2】处的 this.group.selectImports方法是如何进一步有选择的导入自动配置类的。直接看代码： 12345678910111213141516171819202122232425// AutoConfigurationImportSelector$AutoConfigurationGroup.java@Overridepublic Iterable&lt;Entry&gt; selectImports() &#123; if (this.autoConfigurationEntries.isEmpty()) &#123; return Collections.emptyList(); &#125; // 这里得到所有要排除的自动配置类的set集合 Set&lt;String&gt; allExclusions = this.autoConfigurationEntries.stream() .map(AutoConfigurationEntry::getExclusions) .flatMap(Collection::stream).collect(Collectors.toSet()); // 这里得到经过滤后所有符合条件的自动配置类的set集合 Set&lt;String&gt; processedConfigurations = this.autoConfigurationEntries.stream() .map(AutoConfigurationEntry::getConfigurations) .flatMap(Collection::stream) .collect(Collectors.toCollection(LinkedHashSet::new)); // 移除掉要排除的自动配置类 processedConfigurations.removeAll(allExclusions); // 对标注有@Order注解的自动配置类进行排序， return sortAutoConfigurations(processedConfigurations, getAutoConfigurationMetadata()) .stream() .map((importClassName) -&gt; new Entry( this.entries.get(importClassName), importClassName)) .collect(Collectors.toList());&#125; 可以看到，selectImports方法主要是针对经过排除掉exclude的和被AutoConfigurationImportFilter接口过滤后的满足条件的自动配置类再进一步排除exclude的自动配置类，然后再排序。 疑问: 前面已经exclude过一次了，为何这里还要再exclude一次？ 4.AutoConfigurationImportFilter继续分析前面的 AutoConfigurationImportSelector.filter方法的过滤自动配置类的boolean[] match = filter.match(candidates, autoConfigurationMetadata);这行代码。 因此继续分析AutoConfigurationImportFilter接口，分析其match方法，同时也是对前一篇@ConditionalOnXxx的源码分析文章中留下的问题进行补充。 AutoConfigurationImportFilter接口只有一个match方法用来过滤不符合条件的自动配置类。 12345@FunctionalInterfacepublic interface AutoConfigurationImportFilter &#123; boolean[] match(String[] autoConfigurationClasses, AutoConfigurationMetadata autoConfigurationMetadata);&#125; 在分析AutoConfigurationImportFilter接口的match方法前，先看下类关系图： 可以看到AutoConfigurationImportFilter接口有一个具体的实现类FilteringSpringBootCondition，FilteringSpringBootCondition又有三个具体的子类：OnClassCondition,OnBeanCondtition和OnWebApplicationCondition。 那么这几个类之间的关系是怎样的呢？ FilteringSpringBootCondition实现了AutoConfigurationImportFilter接口的match方法，然后在FilteringSpringBootCondition的match方法调用getOutcomes这个抽象模板方法返回自动配置类的匹配与否的信息。同时，最重要的是FilteringSpringBootCondition的三个子类OnClassCondition,OnBeanCondtition和OnWebApplicationCondition将会复写这个模板方法实现自己的匹配判断逻辑。 好了，AutoConfigurationImportFilter接口的整体关系已经清楚了，现在再进入其具体实现类FilteringSpringBootCondition的match方法看看是其如何根据条件过滤自动配置类的。 12345678910111213141516171819202122232425// FilteringSpringBootCondition.java@Overridepublic boolean[] match(String[] autoConfigurationClasses, AutoConfigurationMetadata autoConfigurationMetadata) &#123; // 创建评估报告 ConditionEvaluationReport report = ConditionEvaluationReport.find(this.beanFactory); // 注意getOutcomes是模板方法，将spring.factories文件种加载的所有自动配置类传入 // 子类（这里指的是OnClassCondition,OnBeanCondition和OnWebApplicationCondition类）去过滤 // 注意outcomes数组存储的是不匹配的结果，跟autoConfigurationClasses数组一一对应 /*****************************【主线，重点关注】*********************************************/ ConditionOutcome[] outcomes = getOutcomes(autoConfigurationClasses, autoConfigurationMetadata); boolean[] match = new boolean[outcomes.length]; // 遍历outcomes,这里outcomes为null则表示匹配，不为null则表示不匹配 for (int i = 0; i &lt; outcomes.length; i++) &#123; match[i] = (outcomes[i] == null || outcomes[i].isMatch()); if (!match[i] &amp;&amp; outcomes[i] != null) &#123; // 这里若有某个类不匹配的话，此时调用父类SpringBootCondition的logOutcome方法打印日志 logOutcome(autoConfigurationClasses[i], outcomes[i]); // 并将不匹配情况记录到report if (report != null) &#123; report.recordConditionEvaluation(autoConfigurationClasses[i], this, outcomes[i]); &#125; &#125; &#125; return match;&#125; FilteringSpringBootCondition的match方法主要做的事情还是调用抽象模板方法getOutcomes来根据条件来过滤自动配置类，而复写getOutcomes模板方法的有三个子类，这里不再一一分析，只挑选OnClassCondition复写的getOutcomes方法进行分析。 4.1 OnClassConditionOnClassCondition复写的getOutcomes方法的代码： 123456789101112131415161718192021222324252627// OnClassCondition.java@Overrideprotected final ConditionOutcome[] getOutcomes(String[] autoConfigurationClasses, AutoConfigurationMetadata autoConfigurationMetadata) &#123; // Split the work and perform half in a background thread. Using a single // additional thread seems to offer the best performance. More threads make // things worse // 这里经过测试用两个线程去跑的话性能是最好的，大于两个线程性能反而变差 int split = autoConfigurationClasses.length / 2; // 【1】开启一个新线程去扫描判断已经加载的一半自动配置类 OutcomesResolver firstHalfResolver = createOutcomesResolver(autoConfigurationClasses, 0, split, autoConfigurationMetadata); // 【2】这里用主线程去扫描判断已经加载的一半自动配置类 OutcomesResolver secondHalfResolver = new StandardOutcomesResolver(autoConfigurationClasses, split, autoConfigurationClasses.length, autoConfigurationMetadata, getBeanClassLoader()); // 【3】先让主线程去执行解析一半自动配置类是否匹配条件 ConditionOutcome[] secondHalf = secondHalfResolver.resolveOutcomes(); // 【4】这里用新开启的线程取解析另一半自动配置类是否匹配 // 注意为了防止主线程执行过快结束，resolveOutcomes方法里面调用了thread.join()来 // 让主线程等待新线程执行结束，因为后面要合并两个线程的解析结果 ConditionOutcome[] firstHalf = firstHalfResolver.resolveOutcomes(); // 新建一个ConditionOutcome数组来存储自动配置类的筛选结果 ConditionOutcome[] outcomes = new ConditionOutcome[autoConfigurationClasses.length]; // 将前面两个线程的筛选结果分别拷贝进outcomes数组 System.arraycopy(firstHalf, 0, outcomes, 0, firstHalf.length); System.arraycopy(secondHalf, 0, outcomes, split, secondHalf.length); // 返回自动配置类的筛选结果 return outcomes;&#125; 可以看到，OnClassCondition的getOutcomes方法主要解析自动配置类是否符合匹配条件，当然这个匹配条件指自动配置类上的注解@ConditionalOnClass指定的类存不存在于classpath中，存在则返回匹配，不存在则返回不匹配。 由于解析自动配置类是否匹配比较耗时，因此从上面代码中我们可以看到分别创建了firstHalfResolver和secondHalfResolver两个解析对象，这两个解析对象个分别对应一个线程去解析加载的自动配置类是否符合条件，最终将两个线程的解析自动配置类的匹配结果合并后返回。 那么自动配置类是否符合条件的解析判断过程又是怎样的呢？现在我们分别来看一下上面代码注释标注的【1】，【2】，【3】和【4】处。 4.1.1 createOutcomesResolver12345678910111213141516// OnClassCondition.javaprivate OutcomesResolver createOutcomesResolver(String[] autoConfigurationClasses, int start, int end, AutoConfigurationMetadata autoConfigurationMetadata) &#123; // 新建一个StandardOutcomesResolver对象 OutcomesResolver outcomesResolver = new StandardOutcomesResolver( autoConfigurationClasses, start, end, autoConfigurationMetadata, getBeanClassLoader()); try &#123; // new一个ThreadedOutcomesResolver对象，并将StandardOutcomesResolver类型的outcomesResolver对象作为构造器参数传入 return new ThreadedOutcomesResolver(outcomesResolver); &#125; // 若上面开启的线程抛出AccessControlException异常，则返回StandardOutcomesResolver对象 catch (AccessControlException ex) &#123; return outcomesResolver; &#125;&#125; 可以看到createOutcomesResolver方法创建了一个封装了StandardOutcomesResolver类的ThreadedOutcomesResolver解析对象。再来看下ThreadedOutcomesResolver这个线程解析类封装StandardOutcomesResolver这个对象的目的是什么？继续跟进代码： 12345678private ThreadedOutcomesResolver(OutcomesResolver outcomesResolver) &#123; // 这里开启一个新的线程，这个线程其实还是利用StandardOutcomesResolver的resolveOutcomes方法 // 对自动配置类进行解析判断是否匹配 this.thread = new Thread( () -&gt; this.outcomes = outcomesResolver.resolveOutcomes()); // 开启线程 this.thread.start();&#125; 可以看到在构造ThreadedOutcomesResolver对象时候，原来是开启了一个线程，然后这个线程其实还是调用了刚传进来的StandardOutcomesResolver对象的resolveOutcomes方法去解析自动配置类。 4.1.2 new StandardOutcomesResolver()逻辑很简单，就是创建了一个StandardOutcomesResolver对象，用于后面解析自动配置类是否匹配，同时，新建的一个线程也是利用它来完成自动配置类的解析的。 4.1.3 StandardOutcomesResolver.resolveOutcomes()这个方法承担了解析自动配置类匹配与否的全部逻辑，是需要重点分析的方法，resolveOutcomes方法最终把解析的自动配置类的结果赋给secondHalf数组。那么它是如何解析自动配置类是否匹配条件的呢？ 123456789101112131415161718192021222324252627282930313233343536373839404142// OnClassCondition$StandardOutcomesResolver.java@Overridepublic ConditionOutcome[] resolveOutcomes() &#123; // 再调用getOutcomes方法来解析 return getOutcomes(this.autoConfigurationClasses, this.start, this.end, this.autoConfigurationMetadata);&#125;private ConditionOutcome[] getOutcomes(String[] autoConfigurationClasses, int start, int end, AutoConfigurationMetadata autoConfigurationMetadata) &#123; // 只要autoConfigurationMetadata没有存储相关自动配置类，那么outcome默认为null，则说明匹配 ConditionOutcome[] outcomes = new ConditionOutcome[end - start]; // 遍历每一个自动配置类 for (int i = start; i &lt; end; i++) &#123; String autoConfigurationClass = autoConfigurationClasses[i]; /** * TODO 对于autoConfigurationMetadata有个疑问： * 为何有些自动配置类的条件注解能被加载到autoConfigurationMetadata，而有些又不能， * 比如自己定义的一个自动配置类HelloWorldEnableAutoConfiguration就没有被存到autoConfigurationMetadata中 */ if (autoConfigurationClass != null) &#123; // 这里取出注解在AutoConfiguration自动配置类类的@ConditionalOnClass注解的指定类的全限定名， // 举个栗子，看下面的KafkaStreamsAnnotationDrivenConfiguration这个自动配置类 /** * @ConditionalOnClass(StreamsBuilder.class) * class KafkaStreamsAnnotationDrivenConfiguration &#123; * // 省略无关代码 * &#125; */ // 那么取出的就是StreamsBuilder类的全限定名即candidates = org.apache.kafka.streams.StreamsBuilder String candidates = autoConfigurationMetadata.get(autoConfigurationClass, &quot;ConditionalOnClass&quot;); // 因为这里是处理某个类是否存在于classpath中，所以传入的key是ConditionalOnClass // 若自动配置类标有ConditionalOnClass注解且有值，此时调用getOutcome判断是否存在于类路径中 if (candidates != null) &#123; // 拿到自动配置类注解@ConditionalOnClass的值后，再调用getOutcome方法去判断匹配结果,若该类存在于类路径，则getOutcome返回null，否则非null /*******************【主线，重点关注】******************/ outcomes[i - start] = getOutcome(candidates); &#125; &#125; &#125; return outcomes;&#125; 可以看到StandardOutcomesResolver.resolveOutcomes的方法中再次调用getOutcomes方法，主要是从autoConfigurationMetadata对象中获取到自动配置类上的注解@ConditionalOnClass指定的类的全限定名，然后作为参数传入getOutcome方法用于去类路径加载该类，若能加载到则说明注解@ConditionalOnClass满足条件，此时说明自动配置类匹配成功。 但是别忘了，这里只是分析了@ConditionalOnClass注解，若自动配置类还有其他注解比如@ConditionalOnBean，若该@ConditionalOnBean注解不满足条件的话，同样最终结果是不匹配的。回到OnClassCondtion的判断逻辑，继续进入getOutcome方法看它是如何去判断@ConditionalOnClass注解满不满足条件的。 12345678910111213141516171819202122232425// OnClassCondition$StandardOutcomesResolver.java// 返回的outcome记录的是不匹配的情况，不为null，则说明不匹配；为null，则说明匹配private ConditionOutcome getOutcome(String candidates) &#123; // candidates的形式为“org.springframework.boot.autoconfigure.aop.AopAutoConfiguration.ConditionalOnClass=org.aspectj.lang.annotation.Aspect,org.aspectj.lang.reflect.Advice,org.aspectj.weaver.AnnotatedElement” try &#123; // 自动配置类上@ConditionalOnClass的值只有一个的话，直接调用getOutcome方法判断是否匹配 if (!candidates.contains(&quot;,&quot;)) &#123; // 看到因为传入的参数是 ClassNameFilter.MISSING，因此可以猜测这里应该是得到不匹配的结果 /******************【主线，重点关注】********************/ return getOutcome(candidates, ClassNameFilter.MISSING, this.beanClassLoader); &#125; // 自动配置类上@ConditionalOnClass的值有多个的话，则遍历每个值（其值以逗号，分隔） for (String candidate : StringUtils.commaDelimitedListToStringArray(candidates)) &#123; ConditionOutcome outcome = getOutcome(candidate, ClassNameFilter.MISSING, this.beanClassLoader); // 可以看到，这里只要有一个不匹配的话，则返回不匹配结果 if (outcome != null) &#123; return outcome; &#125; &#125; &#125; catch (Exception ex) &#123; // We&#x27;ll get another chance later &#125; return null;&#125; 可以看到，getOutcome方法再次调用重载方法getOutcome进一步去判断注解@ConditionalOnClass指定的类存不存在类路径中，跟着主线继续跟进去： 12345678910111213// OnClassCondition$StandardOutcomesResolver.javaprivate ConditionOutcome getOutcome(String className, ClassNameFilter classNameFilter, ClassLoader classLoader) &#123; // 调用classNameFilter的matches方法来判断`@ConditionalOnClass`指定的类存不存在类路径中 /******************【主线，重点关注】********************/ if (classNameFilter.matches(className, classLoader)) &#123; // 这里调用classNameFilter去判断className是否存在于类路径中， // 其中ClassNameFilter又分为PRESENT和MISSING两种; // 目前只看到ClassNameFilter为MISSING的调用情况，所以默认为true的话记录不匹配信息； // 若传入ClassNameFilter为PRESENT的话，估计还要再写一个else分支 return ConditionOutcome.noMatch(ConditionMessage.forCondition(ConditionalOnClass.class).didNotFind(&quot;required class&quot;).items(Style.QUOTE, className)); &#125; return null;&#125; 一层一层的剥，最终剥到了最底层了，这个真的需要足够耐心，没办法，源码只能一点一点的啃。可以看到最终是调用ClassNameFilter的matches方法来判断@ConditionalOnClass指定的类存不存在类路径中,若不存在的话，则返回不匹配。 继续跟进ClassNameFilter的源码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253// FilteringSpringBootCondition.javaprotected enum ClassNameFilter &#123; // 这里表示指定的类存在于类路径中，则返回true PRESENT &#123; @Override public boolean matches(String className, ClassLoader classLoader) &#123; return isPresent(className, classLoader); &#125; &#125;, // 这里表示指定的类不存在于类路径中，则返回true MISSING &#123; @Override public boolean matches(String className, ClassLoader classLoader) &#123; // 若classpath不存在className这个类，则返回true return !isPresent(className, classLoader); &#125; &#125;; // 这又是一个抽象方法，分别被PRESENT和MISSING枚举类实现 public abstract boolean matches(String className, ClassLoader classLoader); // 检查指定的类是否存在于类路径中 public static boolean isPresent(String className, ClassLoader classLoader) &#123; if (classLoader == null) &#123; classLoader = ClassUtils.getDefaultClassLoader(); &#125; // 利用类加载器去加载相应类，若没有抛出异常则说明类路径中存在该类，此时返回true try &#123; forName(className, classLoader); return true; &#125; // 若不存在于类路径中，此时抛出的异常将catch住，返回false。 catch (Throwable ex) &#123; return false; &#125; &#125; // 利用类加载器去加载指定的类 private static Class&lt;?&gt; forName(String className, ClassLoader classLoader) throws ClassNotFoundException &#123; if (classLoader != null) &#123; return classLoader.loadClass(className); &#125; return Class.forName(className); &#125;&#125; 可以看到ClassNameFilter原来是FilteringSpringBootCondition的一个内部枚举类，实现了判断指定类是否存在于classpath中的逻辑。 4.1.4 ThreadedOutcomesResolver.resolveOutcomes()这里是用新开启的线程去调用StandardOutcomesResolver.resolveOutcomes方法解析另一半自动配置类是否匹配，因为是新线程，这里很可能会出现这么一种情况：主线程解析完属于自己解析的一半自动配置类后，那么就继续往下跑了，此时不会等待新开启的子线程的。 因此，为了让主线程解析完后，需要让主线程继续等待正在解析的子线程，直到子线程结束。那么继续跟进代码区看下ThreadedOutcomesResolver.resolveOutcomes方法是怎样实现让主线程等待子线程的： 12345678910111213// OnClassCondition$ThreadedOutcomesResolver.java@Overridepublic ConditionOutcome[] resolveOutcomes() &#123; try &#123; // 调用子线程的Join方法，让主线程等待 this.thread.join(); &#125; catch (InterruptedException ex) &#123; Thread.currentThread().interrupt(); &#125; // 若子线程结束后，此时返回子线程的解析结果 return this.outcomes;&#125; 可以看到用了Thread.join()方法来让主线程等待正在解析自动配置类的子线程，这里应该也可以用CountDownLatch来让主线程等待子线程结束。最终将子线程解析后的结果赋给firstHalf数组。 4.2 OnBeanCondition 和 OnWebApplicationCondition前面深入分析了OnClassCondition是如何过滤自动配置类的，那么自动配置类除了要经过OnClassCondition的过滤，还要经过OnBeanCondition和OnWebApplicationCondition这两个条件类的过滤，可自行分析。 5.AutoConfigurationImportListener继续分析前面AutoConfigurationImportSelector.getAutoConfigurationEntry方法的触发自动配置类过滤完毕的事件fireAutoConfigurationImportEvents(configurations, exclusions);这句代码。 直接点进fireAutoConfigurationImportEvents方法看看其是如何触发事件的： 12345678910111213141516// AutoConfigurationImportSelector.javaprivate void fireAutoConfigurationImportEvents(List&lt;String&gt; configurations, Set&lt;String&gt; exclusions) &#123; // 从spring.factories总获取到AutoConfigurationImportListener即ConditionEvaluationReportAutoConfigurationImportListener List&lt;AutoConfigurationImportListener&gt; listeners = getAutoConfigurationImportListeners(); if (!listeners.isEmpty()) &#123; // 新建一个AutoConfigurationImportEvent事件 AutoConfigurationImportEvent event = new AutoConfigurationImportEvent(this, configurations, exclusions); // 遍历刚获取到的AutoConfigurationImportListener for (AutoConfigurationImportListener listener : listeners) &#123; // 这里调用各种Aware方法用于触发事件前赋值，比如设置factory,environment等 invokeAwareMethods(listener); // 真正触发AutoConfigurationImportEvent事件即回调listener的onXXXEveent方法。这里用于记录自动配置类的评估信息 listener.onAutoConfigurationImportEvent(event); &#125; &#125;&#125; 如上，fireAutoConfigurationImportEvents方法做了以下两件事情： 调用getAutoConfigurationImportListeners方法从spring.factories配置文件获取实现AutoConfigurationImportListener接口的事件监听器；如下图，可以看到获取的是ConditionEvaluationReportAutoConfigurationImportListener： 遍历获取的各个事件监听器，然后调用监听器各种Aware方法给监听器赋值，最后再依次回调事件监听器的onAutoConfigurationImportEvent方法，执行监听事件的逻辑。 此时再来看下ConditionEvaluationReportAutoConfigurationImportListener监听器监听到事件后，它的onAutoConfigurationImportEvent方法究竟做了哪些事情： 123456789101112// ConditionEvaluationReportAutoConfigurationImportListener.java@Overridepublic void onAutoConfigurationImportEvent(AutoConfigurationImportEvent event) &#123; if (this.beanFactory != null) &#123; // 获取到条件评估报告器对象 ConditionEvaluationReport report = ConditionEvaluationReport.get(this.beanFactory); // 将符合条件的自动配置类记录到unconditionalClasses集合中 report.recordEvaluationCandidates(event.getCandidateConfigurations()); // 将要exclude的自动配置类记录到exclusions集合中 report.recordExclusions(event.getExclusions()); &#125;&#125; 可以看到，ConditionEvaluationReportAutoConfigurationImportListener监听器监听到事件后，做的事情很简单，只是分别记录下符合条件和被exclude的自动配置类。 6.AutoConfigurationPackages前面已经详述了SpringBoot的自动配置原理了，最后，跟SpringBoot自动配置有关的注解@AutoConfigurationPackage还没分析，来看下这个注解的源码： 12345678@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@Documented@Inherited@Import(AutoConfigurationPackages.Registrar.class)public @interface AutoConfigurationPackage &#123;&#125; 可以看到@AutoConfigurationPackage注解是跟SpringBoot自动配置所在的包相关的，即将 添加该注解的类所在的package 作为 自动配置package 进行管理。 接下来我们再看看AutoConfigurationPackages.Registrar类是干嘛的，直接看源码： 123456789101112131415//AutoConfigurationPackages.Registrar.javastatic class Registrar implements ImportBeanDefinitionRegistrar, DeterminableImports &#123; @Override public void registerBeanDefinitions(AnnotationMetadata metadata, BeanDefinitionRegistry registry) &#123; register(registry, new PackageImport(metadata).getPackageName()); &#125; @Override public Set&lt;Object&gt; determineImports(AnnotationMetadata metadata) &#123; return Collections.singleton(new PackageImport(metadata)); &#125;&#125; 可以看到Registrar类是AutoConfigurationPackages的静态内部类，实现了ImportBeanDefinitionRegistrar和DeterminableImports两个接口。现在主要来关注下Registrar实现的registerBeanDefinitions方法，这个方法是注册bean定义的方法。看到它又调用了AutoConfigurationPackages的register方法，继续跟进源码： 1234567891011121314151617public static void register(BeanDefinitionRegistry registry, String... packageNames) &#123; if (registry.containsBeanDefinition(BEAN)) &#123; BeanDefinition beanDefinition = registry.getBeanDefinition(BEAN); ConstructorArgumentValues constructorArguments = beanDefinition .getConstructorArgumentValues(); constructorArguments.addIndexedArgumentValue(0, addBasePackages(constructorArguments, packageNames)); &#125; else &#123; GenericBeanDefinition beanDefinition = new GenericBeanDefinition(); beanDefinition.setBeanClass(BasePackages.class); beanDefinition.getConstructorArgumentValues().addIndexedArgumentValue(0, packageNames); beanDefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE); registry.registerBeanDefinition(BEAN, beanDefinition); &#125;&#125; 如上，可以看到register方法注册了一个packageNames即自动配置类注解@EnableAutoConfiguration所在的所在的包名相关的bean。那么注册这个bean的目的是为了什么呢？ 结合注释知道，注册这个自动配置包名相关的bean是为了被其他地方引用，比如JPA entity scanner。 7.总结最后，再总结下SpringBoot自动配置的原理，主要做了以下事情： 从spring.factories配置文件中加载自动配置类； 加载的自动配置类中排除掉@EnableAutoConfiguration注解的exclude属性指定的自动配置类； 然后再用AutoConfigurationImportFilter接口去过滤自动配置类是否符合其标注注解（若有标注的话）@ConditionalOnClass,@ConditionalOnBean和@ConditionalOnWebApplication的条件，若都符合的话则返回匹配结果； 然后触发AutoConfigurationImportEvent事件，告诉ConditionEvaluationReport条件评估报告器对象来分别记录符合条件和exclude的自动配置类。 最后spring再将最后筛选后的自动配置类导入IOC容器中 疑问： 为了避免加载不必要的自动配置类造成内存浪费，FilteringSpringBootCondition用于过滤spring.factories文件的自动配置类，而FilteringSpringBootCondition为啥只有OnOnBeanCondition,OnClassCondition和onWebApplicationCondition这三个条件类用于过滤，为啥没有onPropertyCondtion，onResourceCondition等条件类来过滤自动配置类呢？ 12345# Auto Configuration Import Filtersorg.springframework.boot.autoconfigure.AutoConfigurationImportFilter=\org.springframework.boot.autoconfigure.condition.OnBeanCondition,\org.springframework.boot.autoconfigure.condition.OnClassCondition,\org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition 参考资料 https://blog.csdn.net/ttyy1112/article/details/101284541]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(3)-SpringBoot自动配置的条件注解原理]]></title>
    <url>%2Fposts%2F2020-11-17-SpringBoot-Source-03%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot自动配置的条件注解原理 1.SpringBoot 内置条件注解SpringBoot自动配置是需要满足相应的条件才会自动配置,因此SpringBoot的自动配置大量应用了条件注解ConditionalOnXXX。 @ConditionalOnBean：当SpringIoc容器内存在指定Bean的条件 @ConditionalOnClass：当SpringIoc容器内存在指定Class的条件 @ConditionalOnExpression：基于SpEL表达式作为判断条件 @ConditionalOnJava：基于JVM版本作为判断条件 @ConditionalOnJndi：在JNDI存在时查找指定的位置 @ConditionalOnMissingBean：当SpringIoc容器内不存在指定Bean的条件 @ConditionalOnMissingClass：当SpringIoc容器内不存在指定Class的条件 @ConditionalOnNotWebApplication：当前项目不是Web项目的条件 @ConditionalOnProperty：指定的属性是否有指定的值 @ConditionalOnResource：类路径是否有指定的值 @ConditionalOnSingleCandidate：当指定Bean在SpringIoc容器内只有一个，或者虽然有多个但是指定首选的Bean @ConditionalOnWebApplication：当前项目是Web项目的条件 SpringBoot的@ConditionalOnXXX等条件注解都是派生注解，SpringBoot的自动配置原理是建立在大量的派生条件注解@ConditionalOnXXX之上，而这些条件注解的原理跟Spring的Condition接口有关。因此接下来先来看看Condition接口的相关源码。 2.Condition接口2.1 Condition接口demo比如自定义一个@ConditionalOnLinux注解，该注解只有在其属性environment是”linux”才会创建相关的bean。 LinuxCondition.java: 1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * 实现spring 的Condition接口，并且重写matches()方法， * 如果@ConditionalOnLinux的注解属性environment是linux就返回true */public class LinuxCondition implements Condition &#123; @Override public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) &#123; // 获得注解@ConditionalOnLinux的所有属性 List&lt;AnnotationAttributes&gt; allAnnotationAttributes = annotationAttributesFromMultiValueMap( metadata.getAllAnnotationAttributes(ConditionalOnLinux.class.getName())); for (AnnotationAttributes annotationAttributes : allAnnotationAttributes) &#123; // 获得注解@ConditionalOnLinux的environment属性 String environment = annotationAttributes.getString(&quot;environment&quot;); // 若environment等于linux，则返回true if (&quot;linux&quot;.equals(environment)) &#123; return true; &#125; &#125; return false; &#125; private List&lt;AnnotationAttributes&gt; annotationAttributesFromMultiValueMap( MultiValueMap&lt;String, Object&gt; multiValueMap) &#123; List&lt;Map&lt;String, Object&gt;&gt; maps = new ArrayList&lt;&gt;(); multiValueMap.forEach((key, value) -&gt; &#123; for (int i = 0; i &lt; value.size(); i++) &#123; Map&lt;String, Object&gt; map; if (i &lt; maps.size()) &#123; map = maps.get(i); &#125; else &#123; map = new HashMap&lt;&gt;(); maps.add(map); &#125; map.put(key, value.get(i)); &#125; &#125;); List&lt;AnnotationAttributes&gt; annotationAttributes = new ArrayList&lt;&gt;(maps.size()); for (Map&lt;String, Object&gt; map : maps) &#123; annotationAttributes.add(AnnotationAttributes.fromMap(map)); &#125; return annotationAttributes; &#125;&#125; ConditionalOnLinux.java 123456789@Target(&#123; ElementType.TYPE, ElementType.METHOD &#125;)@Retention(RetentionPolicy.RUNTIME)@Documented@Conditional(LinuxCondition.class)public @interface ConditionalOnLinux &#123; // 标注是哪个环境 String environment() default &quot;&quot;;&#125; ConditionConfig.java 123456789@Configurationpublic class ConditionConfig &#123; // 只有`@ConditionalOnLinux`的注解属性`environment`是&quot;linux&quot;时才会创建bean @Bean @ConditionalOnLinux(environment = &quot;linux&quot;) public Environment linuxEnvironment() &#123; return new LinuxEnvironment(); &#125;&#125; LinuxCondition实现了Condition接口并实现了matches方法，而matches方法则判断@ConditionalOnLinux的注解属性environment是否”linux”，是则返回true，否则false。 然后再定义一个注解@ConditionalOnLinux，这个注解是@Conditional的派生注解，与@Conditional(LinuxCondition.class)等价，注意@ConditionalOnLinux注解定义了一个属性environment。而最终可以利用LinuxCondition的matches方法中的参数AnnotatedTypeMetadata来获取@ConditionalOnLinux的注解属性environment的值，从而用来判断值是否为linux”。 最后定义一个配置类ConditionConfig，在linuxEnvironment方法上标注了@ConditionalOnLinux(environment = “linux”)。因此，这里只有 LinuxCondition的matches方法返回true才会创建bean。 2.2 Condition接口源码分析Condition接口的源码： 1234567891011121314@FunctionalInterfacepublic interface Condition &#123; /** * Determine if the condition matches. * @param context the condition context * @param metadata metadata of the &#123;@link org.springframework.core.type.AnnotationMetadata class&#125; * or &#123;@link org.springframework.core.type.MethodMetadata method&#125; being checked * @return &#123;@code true&#125; if the condition matches and the component can be registered, * or &#123;@code false&#125; to veto the annotated component&#x27;s registration */ boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata);&#125; Condition接口主要有一个matches方法，该方法决定了是否要注册相应的bean对象。其中matches方法中有两个参数，参数类型分别是ConditionContext和AnnotatedTypeMetadata，这两个参数非常重要。它们分别用来获取一些环境信息和注解元数据，从而用在matches方法中判断是否符合条件。 ConditionContext 主要是跟Condition的上下文有关，主要用来获取Registry,BeanFactory,Environment,ResourceLoader和ClassLoader等。比如OnResourceCondition需要靠ConditionContext来获取ResourceLoader来加载指定资源，OnClassCondition需要靠ConditionContext来获取ClassLoader来加载指定类等，下面看下其源码： 12345678910111213141516171819202122232425262728293031323334353637public interface ConditionContext &#123; /** * Return the &#123;@link BeanDefinitionRegistry&#125; that will hold the bean definition * should the condition match. * @throws IllegalStateException if no registry is available (which is unusual: * only the case with a plain &#123;@link ClassPathScanningCandidateComponentProvider&#125;) */ BeanDefinitionRegistry getRegistry(); /** * Return the &#123;@link ConfigurableListableBeanFactory&#125; that will hold the bean * definition should the condition match, or &#123;@code null&#125; if the bean factory is * not available (or not downcastable to &#123;@code ConfigurableListableBeanFactory&#125;). */ @Nullable ConfigurableListableBeanFactory getBeanFactory(); /** * Return the &#123;@link Environment&#125; for which the current application is running. */ Environment getEnvironment(); /** * Return the &#123;@link ResourceLoader&#125; currently being used. */ ResourceLoader getResourceLoader(); /** * Return the &#123;@link ClassLoader&#125; that should be used to load additional classes * (only &#123;@code null&#125; if even the system ClassLoader isn&#x27;t accessible). * @see org.springframework.util.ClassUtils#forName(String, ClassLoader) */ @Nullable ClassLoader getClassLoader();&#125; AnnotatedTypeMetadata，这个跟注解元数据有关，利用AnnotatedTypeMetadata可以拿到某个注解的一些元数据，而这些元数据就包含了某个注解里面的属性，比如上面的demo，利用AnnotatedTypeMetadata可以拿到@ConditionalOnLinux的注解属性environment的值。下面看下其源码： 123456789101112131415public interface AnnotatedTypeMetadata &#123; boolean isAnnotated(String var1); @Nullable Map&lt;String, Object&gt; getAnnotationAttributes(String var1); @Nullable Map&lt;String, Object&gt; getAnnotationAttributes(String var1, boolean var2); @Nullable MultiValueMap&lt;String, Object&gt; getAllAnnotationAttributes(String var1); @Nullable MultiValueMap&lt;String, Object&gt; getAllAnnotationAttributes(String var1, boolean var2);&#125; @ConditionalOnLinux注解真正起作用的是Condition接口的具体实现类LinuxCondition的matches方法。 这个matches方法是在何时被调用的呢？通过idea调试看调用的栈帧，如下图： 从图片上可以看到，在ConditionEvaluator的shouldSkip方法中调用了LinuxCondition的matches方法，分析下ConditionEvaluator的shouldSkip方法。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546// 这个方法主要是如果是解析阶段则跳过，如果是注册阶段则不跳过public boolean shouldSkip(@Nullable AnnotatedTypeMetadata metadata, @Nullable ConfigurationPhase phase) &#123; // 若没有被@Conditional或其派生注解所标注，则不会跳过 if (metadata == null || !metadata.isAnnotated(Conditional.class.getName())) &#123; return false; &#125; // 没有指定phase，注意phase可以分为PARSE_CONFIGURATION或REGISTER_BEAN类型 if (phase == null) &#123; // 若标有@Component，@Import，@Bean或@Configuration等注解的话，则说明是PARSE_CONFIGURATION类型 if (metadata instanceof AnnotationMetadata &amp;&amp; ConfigurationClassUtils.isConfigurationCandidate((AnnotationMetadata) metadata)) &#123; return shouldSkip(metadata, ConfigurationPhase.PARSE_CONFIGURATION); &#125; // 否则是REGISTER_BEAN类型 return shouldSkip(metadata, ConfigurationPhase.REGISTER_BEAN); &#125; List&lt;Condition&gt; conditions = new ArrayList&lt;&gt;(); // TODO 获得所有标有@Conditional注解或其派生注解里面的Condition接口实现类并实例化成对象。 // 比如@Conditional(OnBeanCondition.class)则获得OnBeanCondition.class，OnBeanCondition.class往往实现了Condition接口 for (String[] conditionClasses : getConditionClasses(metadata)) &#123; // 将类实例化成对象 for (String conditionClass : conditionClasses) &#123; Condition condition = getCondition(conditionClass, this.context.getClassLoader()); conditions.add(condition); &#125; &#125; // 排序，即按照Condition的优先级进行排序 AnnotationAwareOrderComparator.sort(conditions); for (Condition condition : conditions) &#123; ConfigurationPhase requiredPhase = null; if (condition instanceof ConfigurationCondition) &#123; // 从condition中获得对bean是解析还是注册 requiredPhase = ((ConfigurationCondition) condition).getConfigurationPhase(); &#125; // 若requiredPhase为null或获取的阶段类型正是当前阶段类型且不符合condition的matches条件，则跳过 if ((requiredPhase == null || requiredPhase == phase) &amp;&amp; !condition.matches(this.context, metadata)) &#123; return true; &#125; &#125; return false;&#125; shouldSkip这个方法执行的逻辑主要是如果是解析阶段(PARSE_CONFIGURATION)则跳过，如果是注册阶段(REGISTER_BEAN)则不跳过；如果是在注册阶段的话，此时会得到所有的Condition接口的具体实现类并实例化这些实现类，然后再执行下面关键的代码进行判断是否需要跳过。 123if ((requiredPhase == null || requiredPhase == phase) &amp;&amp; !condition.matches(this.context, metadata)) &#123; return true;&#125; 上面代码最重要的逻辑是调用了Condition接口的具体实现类的matches方法，若matches返回false，则跳过，不进行注册bean的操作；若matches返回true，则不跳过，进行注册bean的操作； 2.3 Spring的内置Condition接口实现类Spring的Condition接口的具体实现类的关系图: 发现Spring内置的Condition接口的具体实现类虽然有多个，但只有ProfileCondition不是测试相关的，因此真正内置的Condition接口的具体实现类只有ProfileCondition一个。 ProfileCondition 是跟环境有关， 一般有dev,test和prod环境，而ProfileCondition就是判断 项目配置了哪个环境的。下面是ProfileCondition的源码： 1234567891011121314151617class ProfileCondition implements Condition &#123; @Override public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) &#123; MultiValueMap&lt;String, Object&gt; attrs = metadata.getAllAnnotationAttributes(Profile.class.getName()); if (attrs != null) &#123; for (Object value : attrs.get(&quot;value&quot;)) &#123; if (context.getEnvironment().acceptsProfiles(Profiles.of((String[]) value))) &#123; return true; &#125; &#125; return false; &#125; return true; &#125;&#125; 3.SpringBootCondition源码解析前面Spring对Condition的内置注解只有ProfileCondition一个，但是，SpringBoot内置了大量的条件注解ConditionalOnXXX。 SpringBootCondition的整体类图： 可以看到SpringBootCondition作为SpringBoot条件注解的基类，它实现了Condition接口，然后又有很多具体的子类OnXXXCondition,这些OnXXXCondition其实就是@ConditionalOnXXX的条件类。 先来看下SpringBootCondition这个父类是主要做了哪些事情，抽象了哪些共有的逻辑？ SpringBootConditon实现了Condition接口，作为SpringBoot众多条件注解OnXXXCondtion的父类，它的作用主要就是打印一些条件注解评估报告的日志，比如打印哪些配置类是符合条件注解的，哪些是不符合的。 因为SpringBootConditon实现了Condition接口，也实现了matches方法，因此该方法同样也是被ConditionEvaluator的shouldSkip方法中调用，因此我们就以SpringBootConditon的matches方法为入口去进行分析。直接上代码： 12345678910111213141516171819202122232425@Overridepublic final boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) &#123; String classOrMethodName = getClassOrMethodName(metadata); try &#123; ConditionOutcome outcome = getMatchOutcome(context, metadata); logOutcome(classOrMethodName, outcome); recordEvaluation(context, classOrMethodName, outcome); return outcome.isMatch(); &#125; catch (NoClassDefFoundError ex) &#123; throw new IllegalStateException( &quot;Could not evaluate condition on &quot; + classOrMethodName + &quot; due to &quot; + ex.getMessage() + &quot; not &quot; + &quot;found. Make sure your own configuration does not rely on &quot; + &quot;that class. This can also happen if you are &quot; + &quot;@ComponentScanning a springframework package (e.g. if you &quot; + &quot;put a @ComponentScan in the default package by mistake)&quot;, ex); &#125; catch (RuntimeException ex) &#123; throw new IllegalStateException( &quot;Error processing condition on &quot; + getName(metadata), ex); &#125;&#125; 上面代码的注释已经非常详细，知道了SpringBootCondition抽象了所有其具体实现类OnXXXCondition的共有逻辑–condition评估信息打印，最重要的是封装了一个模板方法getMatchOutcome(context, metadata)，留给各个OnXXXCondition具体子类去覆盖实现属于自己的判断逻辑，然后再返回相应的匹配结果给SpringBootCondition用于日志打印。 SpringBootCondition其实就是用来打印condition评估信息的，对于其他枝节方法暂时先不追究过深，免得丢了主线。现在的重点是放在交给OnXXXCondition子类实现的模板方法上getMatchOutcome(context, metadata)，因为这个方法将会由很多OnXXXCondition覆盖重写判断逻辑，这里是接下来分析的重点。 因为SpringBootCondition有众多具体实现类，下面只挑OnResourceCondition，OnBeanCondition和OnWebApplicationCondition进行讲解，而AutoConfigurationImportFilter跟自动配置有关，则留到自动配置源码解析的时候再进行分析。 3.1 OnResourceCondition源码分析先来看一下逻辑及其简单的注解条件类OnResourceCondition，OnResourceCondition继承了SpringBootCondition父类，覆盖了其getMatchOutcome方法，用于@ConditionalOnResource注解指定的资源存在与否。OnResourceCondition的判断逻辑非常简单，主要拿到@ConditionalOnResource注解指定的资源路径后，然后用ResourceLoader根据指定路径去加载看资源存不存在。源码如下: @ConditionalOnResource 代码： 12345678910111213@Target(&#123; ElementType.TYPE, ElementType.METHOD &#125;)@Retention(RetentionPolicy.RUNTIME)@Documented@Conditional(OnResourceCondition.class)public @interface ConditionalOnResource &#123; /** * The resources that must be present. * @return the resource paths that must be present. */ String[] resources() default &#123;&#125;;&#125; OnResourceCondition 代码: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152@Order(Ordered.HIGHEST_PRECEDENCE + 20)class OnResourceCondition extends SpringBootCondition &#123; private final ResourceLoader defaultResourceLoader = new DefaultResourceLoader(); @Override public ConditionOutcome getMatchOutcome(ConditionContext context, AnnotatedTypeMetadata metadata) &#123; // 获得@ConditionalOnResource注解的属性元数据 MultiValueMap&lt;String, Object&gt; attributes = metadata .getAllAnnotationAttributes(ConditionalOnResource.class.getName(), true); // 获得资源加载器，若ConditionContext中有ResourceLoader则用ConditionContext中的，没有则用默认的 ResourceLoader loader = (context.getResourceLoader() != null) ? context.getResourceLoader() : this.defaultResourceLoader; List&lt;String&gt; locations = new ArrayList&lt;&gt;(); // 将@ConditionalOnResource中定义的resources属性值取出来装进locations集合 collectValues(locations, attributes.get(&quot;resources&quot;)); Assert.isTrue(!locations.isEmpty(), &quot;@ConditionalOnResource annotations must specify at &quot; + &quot;least one resource location&quot;); // missing集合是装不存在指定资源的资源路径的 List&lt;String&gt; missing = new ArrayList&lt;&gt;(); // 遍历所有的资源路径，若指定的路径的资源不存在则将其资源路径存进missing集合中 for (String location : locations) &#123; // 这里针对有些资源路径是Placeholders的情况，即处理$&#123;&#125; String resource = context.getEnvironment().resolvePlaceholders(location); if (!loader.getResource(resource).exists()) &#123; missing.add(location); &#125; &#125; // 如果存在某个资源不存在，那么则报错 if (!missing.isEmpty()) &#123; return ConditionOutcome.noMatch(ConditionMessage .forCondition(ConditionalOnResource.class) .didNotFind(&quot;resource&quot;, &quot;resources&quot;).items(Style.QUOTE, missing)); &#125; // 所有资源都存在，那么则返回能找到就提的资源 return ConditionOutcome .match(ConditionMessage.forCondition(ConditionalOnResource.class) .found(&quot;location&quot;, &quot;locations&quot;).items(locations)); &#125; // 将@ConditionalOnResource中定义的resources属性值取出来装进locations集合 private void collectValues(List&lt;String&gt; names, List&lt;Object&gt; values) &#123; for (Object value : values) &#123; for (Object item : (Object[]) value) &#123; names.add((String) item); &#125; &#125; &#125;&#125; 3.2 OnBeanCondition源码分析OnBeanCondition继承了FilteringSpringBootCondition父类，覆盖了父类FilteringSpringBootCondition的getOutcomes方法。而FilteringSpringBootCondition又是SpringBootCondition的子类，FilteringSpringBootCondition跟自动配置类过滤有关。值得注意的是OnBeanCondition同样重写了SpringBootCondition的getMatchOutcome方法，用来判断Spring容器中是否存在指定条件的bean。同时OnBeanCondition是@ConditionalOnBean,@ConditionalOnSingleCandidate和ConditionalOnMissingBean的条件类。 OnBeanCondition复写父类SpringBootCondition的getMatchOutcome方法的代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263@Overridepublic ConditionOutcome getMatchOutcome(ConditionContext context, AnnotatedTypeMetadata metadata) &#123; ConditionMessage matchMessage = ConditionMessage.empty(); // (1) 配置类（metadata）标注@ConditionalOnBean注解的情况 if (metadata.isAnnotated(ConditionalOnBean.class.getName())) &#123; // 将@ConditionalOnBean注解属性封装进BeanSearchSpec对象中 // 注意BeanSearchSpec是一个静态内部类，用来存储@ConditionalOnBean和@ConditionalOnMissingBean注解的属性值 BeanSearchSpec spec = new BeanSearchSpec(context, metadata, ConditionalOnBean.class); // 调用getMatchingBeans得到符合条件的bean MatchResult matchResult = getMatchingBeans(context, spec); // 如果不匹配 if (!matchResult.isAllMatched()) &#123; String reason = createOnBeanNoMatchReason(matchResult); return ConditionOutcome.noMatch(ConditionMessage .forCondition(ConditionalOnBean.class, spec).because(reason)); &#125; // 如果匹配 matchMessage = matchMessage.andCondition(ConditionalOnBean.class, spec) .found(&quot;bean&quot;, &quot;beans&quot;) .items(Style.QUOTE, matchResult.getNamesOfAllMatches()); &#125; // (2) 配置类（metadata）标注@ConditionalOnSingleCandidate注解的情况 if (metadata.isAnnotated(ConditionalOnSingleCandidate.class.getName())) &#123; BeanSearchSpec spec = new SingleCandidateBeanSearchSpec(context, metadata, ConditionalOnSingleCandidate.class); MatchResult matchResult = getMatchingBeans(context, spec); if (!matchResult.isAllMatched()) &#123; return ConditionOutcome.noMatch(ConditionMessage .forCondition(ConditionalOnSingleCandidate.class, spec) .didNotFind(&quot;any beans&quot;).atAll()); &#125; else if (!hasSingleAutowireCandidate(context.getBeanFactory(), matchResult.getNamesOfAllMatches(), spec.getStrategy() == SearchStrategy.ALL)) &#123; return ConditionOutcome.noMatch(ConditionMessage .forCondition(ConditionalOnSingleCandidate.class, spec) .didNotFind(&quot;a primary bean from beans&quot;) .items(Style.QUOTE, matchResult.getNamesOfAllMatches())); &#125; matchMessage = matchMessage .andCondition(ConditionalOnSingleCandidate.class, spec) .found(&quot;a primary bean from beans&quot;) .items(Style.QUOTE, matchResult.getNamesOfAllMatches()); &#125; // (3) 配置类（metadata）标注@ConditionalOnMissingBean注解的情况 if (metadata.isAnnotated(ConditionalOnMissingBean.class.getName())) &#123; BeanSearchSpec spec = new BeanSearchSpec(context, metadata, ConditionalOnMissingBean.class); MatchResult matchResult = getMatchingBeans(context, spec); if (matchResult.isAnyMatched()) &#123; String reason = createOnMissingBeanNoMatchReason(matchResult); return ConditionOutcome.noMatch(ConditionMessage .forCondition(ConditionalOnMissingBean.class, spec) .because(reason)); &#125; matchMessage = matchMessage.andCondition(ConditionalOnMissingBean.class, spec) .didNotFind(&quot;any beans&quot;).atAll(); &#125; // 最终返回matchMessage return ConditionOutcome.match(matchMessage);&#125; 可以看到OnBeanCondition类覆盖的getMatchOutcome方法分别处理了标注@ConditionalOnBean,@ConditionalOnSingleCandidate和@ConditionalOnMissingBean注解的情况，分别对应上面代码注释的(1),(2)和(3)处。 只看针对@ConditionalOnBean注解的处理逻辑，从上面代码中可以看到若配置类（metadata）标注@ConditionalOnBean注解的话，主要做了以下事情： 将该注解属性提取出来封装进BeanSearchSpec对象中; 然后调用getMatchingBeans(context, spec)方法来获取是否有匹配的bean； 最后返回bean的匹配情况； 可以看到最重要的逻辑是第2步，那么再来看下getMatchingBeans方法，直接看代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566protected final MatchResult getMatchingBeans(ConditionContext context, BeanSearchSpec beans) &#123; // 获得Spring容器的beanFactory ConfigurableListableBeanFactory beanFactory = context.getBeanFactory(); // 判断bean的搜索策略是否是SearchStrategy.ANCESTORS策略 if (beans.getStrategy() == SearchStrategy.ANCESTORS) &#123; BeanFactory parent = beanFactory.getParentBeanFactory(); Assert.isInstanceOf(ConfigurableListableBeanFactory.class, parent, &quot;Unable to use SearchStrategy.PARENTS&quot;); beanFactory = (ConfigurableListableBeanFactory) parent; &#125; // MatchResult用来存储bean的匹配结果 MatchResult matchResult = new MatchResult(); // 如果bean的搜索策略不是SearchStrategy.CURRENT的话，则置considerHierarchy为true boolean considerHierarchy = beans.getStrategy() != SearchStrategy.CURRENT; // 获取TypeExtractor，TypeExtractor是用来判断bean的类型的 TypeExtractor typeExtractor = beans.getTypeExtractor(context.getClassLoader()); // 获取是否有被忽略bean类型，若有的话将该bean类型的名称装进beansIgnoredByType集合 // 这里主要是针对@ConditionalOnMissingBean的ignored属性 List&lt;String&gt; beansIgnoredByType = getNamesOfBeansIgnoredByType( beans.getIgnoredTypes(), typeExtractor, beanFactory, context, considerHierarchy); // 遍历bean的所有类型 for (String type : beans.getTypes()) &#123; // 调用getBeanNamesForType方法根据bean类型得到所有符合条件的bean类型，并放到typeMatches集合 Collection&lt;String&gt; typeMatches = getBeanNamesForType(beanFactory, type, typeExtractor, context.getClassLoader(), considerHierarchy); // 移除掉Ignored的类型 typeMatches.removeAll(beansIgnoredByType); // 若typeMatches为空，那么则说明正在遍历的这个type类型不符合匹配条件，此时用matchResult记录一下这个不符合条件的类型 if (typeMatches.isEmpty()) &#123; matchResult.recordUnmatchedType(type); &#125; // 若typeMatches不为空，那么则说明正在遍历的这个type类型符合匹配条件，此时用matchResult记录一下这个符合条件的类型 else &#123; matchResult.recordMatchedType(type, typeMatches); &#125; &#125; // 这里针对@ConditionalOnBean等注解的annotation属性的处理 for (String annotation : beans.getAnnotations()) &#123; List&lt;String&gt; annotationMatches = Arrays .asList(getBeanNamesForAnnotation(beanFactory, annotation, context.getClassLoader(), considerHierarchy)); annotationMatches.removeAll(beansIgnoredByType); if (annotationMatches.isEmpty()) &#123; matchResult.recordUnmatchedAnnotation(annotation); &#125; else &#123; matchResult.recordMatchedAnnotation(annotation, annotationMatches); &#125; &#125; // 这里针对@ConditionalOnBean等注解的name属性的处理 for (String beanName : beans.getNames()) &#123; // beansIgnoredByType集合不包含beanName且beanFactory包含这个bean，则匹配 if (!beansIgnoredByType.contains(beanName) &amp;&amp; containsBean(beanFactory, beanName, considerHierarchy)) &#123; matchResult.recordMatchedName(beanName); &#125; // 否则，不匹配 else &#123; matchResult.recordUnmatchedName(beanName); &#125; &#125; // 最后返回匹配结果 return matchResult;&#125; 上面的逻辑主要是从spring容器中搜索有无指定条件的bean，Spring容器搜索bean的话有三种搜索策略，分别是： CURRENT：表示只从当前的context中搜索bean ANCESTORS：表示只从父context中搜索bean ALL：表示从整个context中搜索bean 定义了搜索策略后，然后再根据BeanSearchSpec对象封装的注解属性分别取指定的容器中查找有无符合条件的bean，然后再进行一些过滤。比如@ConditionalOnMissingBean注解有定义ignored属性值，那么从容器中搜索到有符合条件的bean时，此时还要移除掉ignored指定的bean。 3.3 OnWebApplicationCondition源码分析OnWebApplicationCondition继承了FilteringSpringBootCondition父类，覆盖了父类FilteringSpringBootCondition的getOutcomes方法。而FilteringSpringBootCondition又是SpringBootCondition的子类，FilteringSpringBootCondition跟自动配置类过滤有关。值得注意的是OnWebApplicationCondition同样重写了SpringBootCondition的getMatchOutcome方法，用来判断当前应用是否web应用。同时是OnWebApplicationCondition是@ConditionalOnWebApplication的条件类。 OnWebApplicationCondition重写SpringBootCondition的getMatchOutcome方法： 1234567891011121314151617181920@Overridepublic ConditionOutcome getMatchOutcome(ConditionContext context, AnnotatedTypeMetadata metadata) &#123; // 配置类是否标注有@ConditionalOnWebApplication注解 boolean required = metadata .isAnnotated(ConditionalOnWebApplication.class.getName()); // 调用isWebApplication方法返回匹配结果 ConditionOutcome outcome = isWebApplication(context, metadata, required); // 若有标注@ConditionalOnWebApplication但不符合条件，则返回不匹配 if (required &amp;&amp; !outcome.isMatch()) &#123; return ConditionOutcome.noMatch(outcome.getConditionMessage()); &#125; // 若没有标注@ConditionalOnWebApplication但符合条件，则返回不匹配 if (!required &amp;&amp; outcome.isMatch()) &#123; return ConditionOutcome.noMatch(outcome.getConditionMessage()); &#125; // 这里返回匹配的情况 // TODO 疑问：如果没有标注@ConditionalOnWebApplication注解，又不符合条件的话，也会执行到这里，返回匹配？ return ConditionOutcome.match(outcome.getConditionMessage());&#125; 主要是调用isWebApplication方法来判断当前应用是否是web应用。因此，再来看下isWebApplication方法: 123456789101112131415private ConditionOutcome isWebApplication(ConditionContext context, AnnotatedTypeMetadata metadata, boolean required) &#123; // 调用deduceType方法判断是哪种类型，其中有SERVLET，REACTIVE和ANY类型，其中ANY表示了SERVLET或REACTIVE类型 switch (deduceType(metadata)) &#123; // SERVLET类型 case SERVLET: return isServletWebApplication(context); // REACTIVE类型 case REACTIVE: return isReactiveWebApplication(context); // ANY类型 default: return isAnyWebApplication(context, required); &#125;&#125; 在isWebApplication方法中，首先从@ConditionalOnWebApplication注解中获取其定义了什么类型，然后根据不同的类型进入不同的判断逻辑。这里看下SERVLET的情况判断处理，看isServletWebApplication代码： 12345678910111213141516171819202122232425262728private ConditionOutcome isServletWebApplication(ConditionContext context) &#123; ConditionMessage.Builder message = ConditionMessage.forCondition(&quot;&quot;); // 若classpath中不存在org.springframework.web.context.support.GenericWebApplicationContext.class，则返回不匹配 if (!ClassNameFilter.isPresent(SERVLET_WEB_APPLICATION_CLASS, context.getClassLoader())) &#123; return ConditionOutcome.noMatch( message.didNotFind(&quot;servlet web application classes&quot;).atAll()); &#125; // 若classpath中存在org.springframework.web.context.support.GenericWebApplicationContext.class，那么又分为以下几种匹配的情况 // session if (context.getBeanFactory() != null) &#123; String[] scopes = context.getBeanFactory().getRegisteredScopeNames(); if (ObjectUtils.containsElement(scopes, &quot;session&quot;)) &#123; return ConditionOutcome.match(message.foundExactly(&quot;&#x27;session&#x27; scope&quot;)); &#125; &#125; // ConfigurableWebEnvironment if (context.getEnvironment() instanceof ConfigurableWebEnvironment) &#123; return ConditionOutcome .match(message.foundExactly(&quot;ConfigurableWebEnvironment&quot;)); &#125; // WebApplicationContext if (context.getResourceLoader() instanceof WebApplicationContext) &#123; return ConditionOutcome.match(message.foundExactly(&quot;WebApplicationContext&quot;)); &#125; // 若以上三种都不匹配的话，则说明不是一个servlet web application return ConditionOutcome.noMatch(message.because(&quot;not a servlet web application&quot;));&#125; 对于是SERVLET的情况，首先根据classpath中是否存在org.springframework.web.context.support.GenericWebApplicationContext.class，如果不存在该类，则直接返回不匹配；若存在的话那么又分为以下几种匹配的情况： session ConfigurableWebEnvironment WebApplicationContext 若上面三种情况都不匹配，则说明不是一个servlet web application。 3.4 其他由于springboot的OnXXXCondition类实现太多，不可能每个条件类都分析一遍，因此上面只分析了OnResourceCondition,OnBeanCondition和onWebApplicationCondition的源码。分析源码不可能把所有代码都通读一遍的，阅读源码的话，只要理解了某个模块的类之间的关系及挑几个有代表性的类分析下就行，不可能一网打尽。 若有时间的话，推荐看下几个我们常用的条件类的源码：OnPropertyCondition,OnClassCondition和OnExpressionCondition等。 参考资料 https://blog.csdn.net/zhanglu1236789/article/details/78999496 https://www.cnblogs.com/sam-uncle/p/9111281.html]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(2)-SpringBoot源码的模块和结构]]></title>
    <url>%2Fposts%2F2020-11-16-SpringBoot-Source-02%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-SpringBoot源码的模块和结构 1.源码模块 源码项目主要有以下四个模块： 1. spring-boot-project：整个SpringBoot框架全部功能在这个模块实现，SpringBoot项目95%的代码都在这里实现，源码总共有26万行左右。 2. Spring-boot-samples：包含了各种各样使用SpringBoot的简单demo，调试阅读源码的时候可以充分利用该模块。 3. Spring-boot-sample-invoker：这个模块是跟samples模块有关，根pom.xml中有这么一句话：Samples are built via the invoker plugin，该模块无代码。 4. Spring-boot-tests：SpringBoot的测试模块，跟部署测试和集成测试有关。 SpringBoot的全部功能在spring-boot-project模块实现，因此下面重点来介绍下 spring-boot-project 模块。 2.spring-boot-project 模块 1) spring-boot-parent这个模块没有代码，是spring-boot模块的父项目，被其他子模块继承。 2) spring-boot这个模块是SpringBoot项目的核心，一些基础核心的功能都在这里实现，为SpringBoot的其他模块组件功能提供了支持，主要包括以下核心功能： 1. SpringApplication类，这个是SpringBoot的启动类，提供了一个静态的run方法来启动程序，该类主要用来创建并且刷新Spring容器ApplicationContext. 2. 支持选择不同的容器比如Tomcat,Jetty等来作为应用的嵌入容器。 3. 外部配置支持，执行java -jar xxx.jar命令时可以带一些参数，比如执行java -jar demo.jar --server.port=9999来将应用端口修改为9999. 4. 内置了一些SpringBoot启动时的生命周期事件和一些容器初始化器(ApplicationContext initializers)，来执行一些SpringBoot启动时的初始化逻辑。 3) spring-boot-autoconfigure这个模块跟SpringBoot的自动配置有关。比如SpringBoot能基于类路径来自动配置某个项目模块，自动配置最为关键的注解是@EnableAutoConfiguration,这个注解能触发Spring上下文的自动配置。另外一个重要的注解是@Conditional。 除了根据类路径来进行自动配置外，还有根据容器中是否存在某个bean等方式来进行自动配置。 4) spring-boot-starters这个模块是跟SpringBoot的起步依赖有关。SpringBoot通过提供各种各样的起步依赖降低项目依赖的复杂度。起步依赖其实就是利用maven项目模型将其他相关的依赖给聚合起来，里面各种依赖的版本号都给定义好，避免用户在引入依赖时出现各种版本冲突，方便了我们的使用。 比如说：要用到activemq时，可以直接引入spring-boot-starter-activemq起步依赖即可，若SpringBoot官网或第三方组织没有提供相应的SpringBoot起步依赖时，可以进行定制自己的起步依赖。 注意，该模块没有代码，主要是通过maven的pom.xml来组织各种依赖。 5) spring-boot-cliSpring Boot CLI是一个命令行工具，如果想使用Spring快速开发，可以使用它。允许运行Groovy脚本，这意味着有一个熟悉的类似Java的语法，而没有那么多样板代码。还可以引导一个新项目或编写自己的命令。 6) spring-boot-actuatorSpringBoot的监控模块。可以通过HTTP端点或JMX等来管理和监控应用。审计、运行状况和度量收集可以自动应用到应用程序。这个监控模块是开箱即用的，提供了一系列端点包括HealthEndpoint, EnvironmentEndpoint和BeansEndpoint等端点。 7) spring-boot-actuator-autoconfigure这个模块为spring-boot-actuator监控模块提供自动配置的功能，通常也是根据类路径来进行配置。比如Micrometer存在于类路径中，那么将会自动配置MetricsEndpoint。 8) spring-boot-test这个模块是spring-boot 测试有关的模块，包含了一些帮助测试的核心类和注解（比如@SpringBootTest）。 9) spring-boot-dependencies这个模块没有代码，主要是定义了一些SpringBoot的maven相关的一些依赖及其版本。 10) spring-boot-devtools这个模块跟SpringBoot的热部署有关，即修改代码后无需重启应用即生效。 11) spring-boot-docs这个是跟文档相关的模块。 12) spring-boot-properties-migratorSpringBoot 对外部化配置原生支持迁移功能，所谓迁移，具体是指对应配置的属性名变动，仍可以使用原来的属性名配置。 在 spring-configuration-metadata.json 的信息可以辅助 IDE 进行配置的提示，也可以用来完成配置的迁移。 13) spring-boot-test-autoconfigure这个模块是跟spring-boot-test的测试的自动配置有关。 14) spring-boot-tools这个模块是SpringBoot的工具相关的模块，提供了加载，maven插件，Gradle插件，metadata和后置处理相关的支持。 上面介绍了这么多spring-boot-project模块下的子模块，真正要重点分析的模块有spring-boot，spring-boot-autoconfigure，spring-boot-starters和spring-boot-actuator模块。 3. SpringBoot模块间的POM关系根据上面SpringBoot的各个模块的具体功能，来看下SpringBoot模块的pom之间的关系。 根据上图可以看到： 1. spring-boot-build(pom.xml)是项目的根pom，其子pom有spring-boot-project(pom.xml)和spring-boot-dependencies(pom.xml)； 2. spring-boot-dependencies(pom.xml)主要定义了SpringBoot项目的各种依赖及其版本，其子pom有spring-boot-parent(pom.xml)和spring-boot-starter-parent(pom.xml)； 3. spring-boot-project(pom.xml)有聚合module的作用，其子模块并不继承于它，而是继承于spring-boot-parent(pom.xml)； 4. spring-boot-parent(pom.xml)是spring-boot-project(pom.xml)的子module，但继承的父pom为spring-boot-dependencies(pom.xml)，其定义了一些properties等相关的东西。其子pom为spring-boot-project(pom.xml)的子module（注意除去spring-boot-dependencies(pom.xml)），比如有spring-boot(pom.xml),spring-boot-starters(pom.xml)和spring-boot-actuator(pom.xml)等； 5. spring-boot-starters(pom.xml)是所有具体起步依赖的父pom，其子pom有spring-boot-starter-data-jdbc(pom.xml)和spring-boot-starter-data-redis(pom.xml)等。 6. spring-boot-starter-parent(pom.xml)，是所有具体SpringBoot项目的父pom，比如SpringBoot自带的样例的spring-boot-samples(pom.xml)是继承于它的。 SpringBoot的各模块之间的pom关系有点复杂，可以打开idea的项目，逐个去捋一下。SpringBoot的父pom就是做一些版本管理，聚合模块之间的事情。 参考资料 https://github.com/spring-projects/spring-boot/tree/v2.1.0.RELEASE https://docs.spring.io/spring-boot/docs/1.5.2.RELEASE/reference/htmlsingle/#cli]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot源码分析(1)-搭建SpringBoot源码调试环境]]></title>
    <url>%2Fposts%2F2020-11-15-SpringBoot-Source-01%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录SpringBoot的源码分析过程-搭建SpringBoot源码调试环境 1.下载源码SpringBoot v2.1.0.RELEASE 的github地址： https://github.com/spring-projects/spring-boot/tree/v2.1.0.RELEASE 2.IDEA导入源码Springboot 2.1.0的版本是maven构建的，因此使用maven的方式导入IDEA。 这里建议maven配置下仓库的源。 3.编译构建源码这里Kotlin的版本过低，需要调整下Kotlin的版本，我们找到 1spring-boot-2.1.0.RELEASE\spring-boot-project\spring-boot-parent\pom.xml 将 1.1的版本改为 1.2，如下所示： 直接项目根目录下，执行以下maven命令来编译构建源码： 1mvn clean install -DskipTests -Pfast 之后就是漫长的等待，我这里等待了8分钟左右（电脑配置比较渣，手动狗头） 4.运行源码自带的sample源码中spring-boot-samples 模块中提供了很多demo，我们可以随便选一个来进行调试。 首先，把spring-boot-samples 模块加入项目pom.xml中： 然后，选择spring-boot-sample-tomcat项目进行测试： 运行 SampleTomcatApplication main方法，结果如下： 在浏览器访问 http://127.0.0.1:8080 结果如下： 总结编译过程中，还是出现了些问题，包括上面的修改Kotlin的版本，耐心点，都能解决的。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Source</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-day03]]></title>
    <url>%2Fposts%2F2020-11-04-JVM-day03%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录JVM的学习过程-类加载与字节码技术 1.类文件结构一个简单的HelloWorld.java: 12345public class HelloWorld &#123; public static void main(String[] args) &#123; System.out.println(&quot;Hello world&quot;); &#125;&#125; 执行 javac 命令： 1javac -parameters -d . HelloWorld.java 得到HelloWorld.class文件 这里使用的是Windows环境，使用UltraEdit或者WinHex工具打开class文件。如果是Linux环境，可以使用如下命令打开class文件： 1od -t xC HelloWorld.class 打开class文件结果如下： 根据JVM规范，类文件结果如下: 123456789101112131415161718ClassFile &#123; u4 magic; u2 minor_version; u2 major_version; u2 constant_pool_count; cp_info constant_pool[constant_pool_count-1]; u2 access_flags; u2 this_class; u2 super_class; u2 interfaces_count; u2 interfaces[interfaces_count]; u2 fields_count; field_info fields[fields_count]; u2 methods_count; method_info methods[methods_count]; u2 attributes_count; attribute_info attributes[attributes_count];&#125; 参考资料：Oracle官方文档 1.1 魔数1u4 magic; The magic item supplies the magic number identifying the class file format; it has the value 0xCAFEBABE. 100000000h: CA FE BA BE 00 00 00 34 00 23 0A 00 06 00 15 09 0-3字节，CA FE BA BE 表示是否是class类型的文件 1.2 版本12u2 minor_version;u2 major_version; 100000000h: CA FE BA BE 00 00 00 34 00 23 0A 00 06 00 15 09 4-7字节，00 00 00 34 表示类的版本 0x34（十进制52）表明是java8 1.3 常量池12u2 constant_pool_count;cp_info constant_pool[constant_pool_count-1]; Constant Type Value CONSTANT_Class 7 CONSTANT_Fieldref 9 CONSTANT_Methodref 10 CONSTANT_InterfaceMethodref 11 CONSTANT_String 8 CONSTANT_Integer 3 CONSTANT_Float 4 CONSTANT_Long 5 CONSTANT_Double 6 CONSTANT_NameAndType 12 CONSTANT_Utf8 1 CONSTANT_MethodHandle 15 CONSTANT_MethodType 16 CONSTANT_InvokeDynamic 18 1234567891011121314151617181920212223242526272800000000h: CA FE BA BE 00 00 00 34 00 23 0A 00 06 00 15 0900000010h: 00 16 00 17 08 00 18 0A 00 19 00 1A 07 00 1B 0700000020h: 00 1C 01 00 06 3C 69 6E 69 74 3E 01 00 03 28 2900000030h: 56 01 00 04 43 6F 64 65 01 00 0F 4C 69 6E 65 4E00000040h: 75 6D 62 65 72 54 61 62 6C 65 01 00 12 4C 6F 6300000050h: 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65 0100000060h: 00 04 74 68 69 73 01 00 24 4C 70 75 62 2F 69 7900000070h: 75 2F 73 65 2F 6A 76 6D 64 61 79 2F 64 61 79 3000000080h: 33 2F 48 65 6C 6C 6F 57 6F 72 6C 64 3B 01 00 0400000090h: 6D 61 69 6E 01 00 16 28 5B 4C 6A 61 76 61 2F 6C000000a0h: 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01 00 04000000b0h: 61 72 67 73 01 00 13 5B 4C 6A 61 76 61 2F 6C 61000000c0h: 6E 67 2F 53 74 72 69 6E 67 3B 01 00 10 4D 65 74000000d0h: 68 6F 64 50 61 72 61 6D 65 74 65 72 73 01 00 0A000000e0h: 53 6F 75 72 63 65 46 69 6C 65 01 00 0F 48 65 6C000000f0h: 6C 6F 57 6F 72 6C 64 2E 6A 61 76 61 0C 00 07 0000000100h: 08 07 00 1D 0C 00 1E 00 1F 01 00 0B 48 65 6C 6C00000110h: 6F 20 77 6F 72 6C 64 07 00 20 0C 00 21 00 22 0100000120h: 00 22 70 75 62 2F 69 79 75 2F 73 65 2F 6A 76 6D00000130h: 64 61 79 2F 64 61 79 30 33 2F 48 65 6C 6C 6F 5700000140h: 6F 72 6C 64 01 00 10 6A 61 76 61 2F 6C 61 6E 6700000150h: 2F 4F 62 6A 65 63 74 01 00 10 6A 61 76 61 2F 6C00000160h: 61 6E 67 2F 53 79 73 74 65 6D 01 00 03 6F 75 7400000170h: 01 00 15 4C 6A 61 76 61 2F 69 6F 2F 50 72 69 6E00000180h: 74 53 74 72 65 61 6D 3B 01 00 13 6A 61 76 61 2F00000190h: 69 6F 2F 50 72 69 6E 74 53 74 72 65 61 6D 01 00000001a0h: 07 70 72 69 6E 74 6C 6E 01 00 15 28 4C 6A 61 76000001b0h: 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 8-9字节，表示常量池长度，00 23（十进制35）表示常量池有#1-#34项，注意#0项不计入，也没有值 cp_info: #1-#34 第#1项 0A 00 06 00 15 0A表示一个Method信息CONSTANT_Methodref，00 06（十进制6） 和 00 15（十进制21）表示它引用了常量池中#6和#21项来获得这个方法的[所属类]和[方法名] 第#2项 09 00 16 00 17 09表示一个Field信息CONSTANT_Fieldref，00 16（十进制22） 和 00 17（十进制23）表示它引用了常量池中#22和#23项来获得这个方法的[所属类]和[成员变量名] 第#3项 08 00 18 08表示一个字符串常量名称CONSTANT_String，00 18（十进制24）表示它引用了常量池中#24项 第#4项 0A 00 19 00 1A 0A表示一个Method信息CONSTANT_Methodref，00 19（十进制25） 和 00 1A（十进制26）表示它引用了常量池中#25和#26项来获得这个方法的[所属类]和[方法名] 第#5项 07 00 1B 07表示一个Class信息CONSTANT_Class，00 1B（十进制27）表示它引用了常量池中#27项 第#6项 07 00 1C 07表示一个Class信息CONSTANT_Class，00 1C（十进制28）表示它引用了常量池中#28项 第#7项 01 00 06 3C 69 6E 69 74 3E 01表示一个Utf8串CONSTANT_Utf8，00 06（十进制6） 表示长度，3C 69 6E 69 74 3E 是【】(构造方法) 第#8项 01 00 03 28 29 56 01表示一个Utf8串CONSTANT_Utf8，00 03（十进制3）表示长度，28 29 56是【()V】其实就是表示无参，无返回值 第#9项 01 00 04 43 6F 64 65 01表示一个Utf8串CONSTANT_Utf8，00 04（十进制4）表示长度， 43 6F 64 65是【Code】 第#10项 01 00 0F 4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65 01表示一个Utf8串CONSTANT_Utf8，00 0F（十进制15）表示长度， 4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65 是【LineNumberTable】 第#11项 01 00 12 4C 6F 63 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65 01表示一个Utf8串CONSTANT_Utf8，00 12（十进制18） 表示长度， 4C 6F 63 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65是【LocalVariableTable】 第#12项 01 00 04 74 68 69 73 01表示一个Utf8串CONSTANT_Utf8，00 04（十进制4）表示长度，74 68 69 73 是【this】 第#13项 01 00 24 4C 70 75 62 2F 69 79 75 2F 73 65 2F 6A 76 6D 64 61 79 2F 64 61 79 30 33 2F 48 65 6C 6C 6F 57 6F 72 6C 64 3B 01表示一个Utf8串CONSTANT_Utf8，00 24（十进制36）表示长度，4C 70 75 62 2F 69 79 75 2F 73 65 2F 6A 76 6D 64 61 79 2F 64 61 79 30 33 2F 48 65 6C 6C 6F 57 6F 72 6C 64 3B是【Lpub/iyu/se/jvmday/day03/HelloWorld;】 第#14项 01 00 04 6D 61 69 6E 01表示一个Utf8串CONSTANT_Utf8，00 04（十进制4）表示长度，6D 61 69 6E是【main】 第#15项 01 00 16 28 5B 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01表示一个Utf8串CONSTANT_Utf8，00 16（十进制22）表示长度，5B 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 是【([Ljava/lang/String;)V】其实就是参数为字符串数组，无返回值 第#16项 01 00 04 61 72 67 73 01表示一个Utf8串CONSTANT_Utf8，00 04（十进制4）表示长度，61 72 67 73是【args】 第#17项 01 00 13 5B 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 01表示一个Utf8串CONSTANT_Utf8，00 13（十进制19）表示长度，5B 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B是【Ljava/lang/String;】 第#18项 01 00 10 4D 65 74 68 6F 64 50 61 72 61 6D 65 74 65 72 73 01表示一个Utf8串CONSTANT_Utf8，00 10（十进制16）表示长度，4D 65 74 68 6F 64 50 61 72 61 6D 65 74 65 72 73是【MethodParameters】 第#19项 01 00 0A 53 6F 75 72 63 65 46 69 6C 65 01表示一个Utf8串CONSTANT_Utf8，00 0A（十进制10）表示长度，53 6F 75 72 63 65 46 69 6C 65是【SourceFile】 第#20项 01 00 0F 48 65 6C 6C 6F 57 6F 72 6C 64 2E 6A 61 76 61 01表示一个Utf8串CONSTANT_Utf8，00 0F（十进制15）表示长度，48 65 6C 6C 6F 57 6F 72 6C 64 2E 6A 61 76 61是【HelloWorld.java】 第#21项 0C 00 07 00 08 0C表示一个【名+类型】CONSTANT_NameAndType，00 07 00 08 引用了常量池中#7和#8两项 第#22项 07 00 1D 07表示一个Class信息CONSTANT_Class，00 1D（十进制29）表示它引用了常量池中#29项 第#23项 0C 00 1E 00 1F 0C表示一个【名+类型】CONSTANT_NameAndType，00 1E （十进制30）和 00 1F（十进制31）表示它引用了常量池中#30和#31两项 第#24项 01 00 0B 48 65 6C 6C 6F 20 77 6F 72 6C 64 01表示一个Utf8串CONSTANT_Utf8，00 0B（十进制11）表示长度，48 65 6C 6C 6F 20 77 6F 72 6C 64是【Hello world】 第#25项 07 00 20 07表示一个Class信息CONSTANT_Class，00 20（十进制32） 表示它引用了常量池中#32项 第#26项 0C 00 21 00 22 0C表示一个【名+类型】CONSTANT_NameAndType，00 21（十进制33） 和 00 22（十进制34）表示它引用了常量池中#33和#34两项 第#27项 01 00 22 70 75 62 2F 69 79 75 2F 73 65 2F 6A 76 6D 64 61 79 2F 64 61 79 30 33 2F 48 65 6C 6C 6F 57 6F 72 6C 64 01表示一个Utf8串CONSTANT_Utf8，00 22（十进制34）表示长度，70 75 62 2F 69 79 75 2F 73 65 2F 6A 76 6D 64 61 79 2F 64 61 79 30 33 2F 48 65 6C 6C 6F 57 6F 72 6C 64是【pub/iyu/se/jvmday/day03/HelloWorld】 第#28项 01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74 01表示一个Utf8串CONSTANT_Utf8，00 10（十进制16）表示长度，6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74是【java/lang/Object】 第#29项 01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 53 79 73 74 65 6D 01表示一个Utf8串CONSTANT_Utf8，00 10（十进制16）表示长度，6A 61 76 61 2F 6C 61 6E 67 2F 53 79 73 74 65 6D是【java/lang/System】 第#30项 01 00 03 6F 75 74 01表示一个Utf8串CONSTANT_Utf8，00 03（十进制3）表示长度，6F 75 74是【out】 第#31项 01 00 15 4C 6A 61 76 61 2F 69 6F 2F 50 72 69 6E 74 53 74 72 65 61 6D 3B 01表示一个Utf8串CONSTANT_Utf8，00 15（十进制21）表示长度，4C 6A 61 76 61 2F 69 6F 2F 50 72 69 6E 74 53 74 72 65 61 6D 3B是【Ljava/io/PrintStream;】 第#32项 01 00 13 6A 61 76 61 2F 69 6F 2F 50 72 69 6E 74 53 74 72 65 61 6D 01表示一个Utf8串CONSTANT_Utf8，00 13（十进制19）表示长度，6A 61 76 61 2F 69 6F 2F 50 72 69 6E 74 53 74 72 65 61 6D是【java/io/PrintStream】 第#33项 01 00 07 70 72 69 6E 74 6C 6E 01表示一个Utf8串CONSTANT_Utf8，00 07（十进制7）表示长度，70 72 69 6E 74 6C 6E是【println】 第#34项 01 00 15 28 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 01表示一个Utf8串CONSTANT_Utf8，00 15（十进制21）表示长度，28 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 是【(Ljava/lang/String;)V】 1.4 访问标识与继承信息12345u2 access_flags;u2 this_class;u2 super_class;u2 interfaces_count;u2 interfaces[interfaces_count]; Field access and property flags： Flag Name Value Interpretation ACC_PUBLIC 0x0001 Declared public; may be accessed from outside its package. ACC_PRIVATE 0x0002 Declared private; usable only within the defining class. ACC_PROTECTED 0x0004 Declared protected; may be accessed within subclasses. ACC_STATIC 0x0008 Declared static. ACC_FINAL 0x0010 Declared final; never directly assigned to after object construction (JLS §17.5). ACC_VOLATILE 0x0040 Declared volatile; cannot be cached. ACC_TRANSIENT 0x0080 Declared transient; not written or read by a persistent object manager. ACC_SYNTHETIC 0x1000 Declared synthetic; not present in the source code. ACC_ENUM 0x4000 Declared as an element of an enum. 1000001c0h: 00 21 00 05 00 06 00 00 00 00 00 02 00 01 00 07 00 21 表示该class是一个类，公共的 00 05 表示根据常量池中#5找到本类全限定名 00 06 表示根据常量池中#6找到父类全限定名 00 00 表示接口的数量，本类为0 1.5 Field信息12u2 fields_count;field_info fields[fields_count]; 1000001c0h: 00 21 00 05 00 06 00 00 00 00 00 02 00 01 00 07 00 00 表示成员变量数量，本类为0 FieldType term Type Interpretation B byte signed byte C char Unicode character code point in the Basic Multilingual Plane, encoded with UTF-16 D double double-precision floating-point value F float single-precision floating-point value I int integer J long long integer L ClassName ; reference an instance of class ClassName S short signed short Z boolean true or false [ reference one array dimension 1.6 Method信息12u2 methods_count;method_info methods[methods_count]; Method access and property flags： Flag Name Value Interpretation ACC_PUBLIC 0x0001 Declared public; may be accessed from outside its package. ACC_PRIVATE 0x0002 Declared private; accessible only within the defining class. ACC_PROTECTED 0x0004 Declared protected; may be accessed within subclasses. ACC_STATIC 0x0008 Declared static. ACC_FINAL 0x0010 Declared final; must not be overridden (§5.4.5). ACC_SYNCHRONIZED 0x0020 Declared synchronized; invocation is wrapped by a monitor use. ACC_BRIDGE 0x0040 A bridge method, generated by the compiler. ACC_VARARGS 0x0080 Declared with variable number of arguments. ACC_NATIVE 0x0100 Declared native; implemented in a language other than Java. ACC_ABSTRACT 0x0400 Declared abstract; no implementation is provided. ACC_STRICT 0x0800 Declared strictfp; floating-point mode is FP-strict. ACC_SYNTHETIC 0x1000 Declared synthetic; not present in the source code. 12345000001c0h: 00 21 00 05 00 06 00 00 00 00 00 02 00 01 00 07000001d0h: 00 08 00 01 00 09 00 00 00 2F 00 01 00 01 00 00000001e0h: 00 05 2A B7 00 01 B1 00 00 00 02 00 0A 00 00 00000001f0h: 06 00 01 00 00 00 09 00 0B 00 00 00 0C 00 01 0000000200h: 00 00 05 00 0C 00 0D 00 00 00 09 00 0E 00 0F 00 00 02 表示方法数量，本类为2 一个方法由 访问修饰符 + 名称 + 参数描述 + 方法属性数量 + 方法属性 组成 00 01 代表访问修饰符（本类中是public） 00 07 代表引用了常量池#07项作为方法名称 00 08 代表引用了常量池#08项作为方法参数描述 00 01 代表方法属性数量，本方法是1 方法属性：12345678910111213141516171819201. 00 09 表示引用了常量池#09项，是【Code】属性2. 00 00 00 2F 表示此属性的长度是473. 00 01 表示【操作数栈】最大深度4. 00 01 表示【局部变量表】最大槽数（slot）5. 00 00 00 05 表示字节码长度，本例是56. 2A B7 00 01 B1 是字节码指令7. 00 00 00 02 表示方法细节属性数量，本例是28. 00 0A 表示引用了常量池#10项，是【LineNumberTable】属性 00 00 00 06 表示此属性的总长度，本例是6 00 01 表示【LineNumberTable】长度 00 00 表示【字节码】行号 00 09 表示【java源码】行号9. 00 0B 表示引用了常量池#11项，是【LocalVariableTable】属性 00 00 00 0C 表示此属性的总长度，本例是12 00 01 表示【LocalVariableTable】长度 00 00 表示局部变量生命周期开始，相当于字节码的偏移量 00 05 表示局部变量覆盖的范围长度 00 0C 表示局部变量名称，本例引用了常量池#12项，是【this】 00 0D 表示局部变量的类型，本例引用了常量池#13项，是【Lpub/iyu/se/jvmday/day03/HelloWorld;】 00 00 表示局部变量占有的槽位(slot)编号，本例是0 12345600000200h: 00 00 05 00 0C 00 0D 00 00 00 09 00 0E 00 0F 0000000210h: 02 00 09 00 00 00 37 00 02 00 01 00 00 00 09 B200000220h: 00 02 12 03 B6 00 04 B1 00 00 00 02 00 0A 00 0000000230h: 00 0A 00 02 00 00 00 0B 00 08 00 0C 00 0B 00 0000000240h: 00 0C 00 01 00 00 00 09 00 10 00 11 00 00 00 1200000250h: 00 00 00 05 01 00 10 00 00 00 01 00 13 00 00 00 00 09 代表访问修饰符（本类中是public static） 00 0E 代表引用了常量池#14项作为方法名称 00 0F 代表引用了常量池#15项作为方法参数描述 00 02 代表方法属性数量，本方法是2 方法属性1：1234567891011121314151617181920212200 09 表示引用了常量池#09项，是【Code】属性00 00 00 37 表示此属性的长度是5500 02 表示【操作数栈】最大深度00 01 表示【局部变量表】最大槽数（slot）00 00 00 09 表示字节码长度，本例是9B2 00 02 12 03 B6 00 04 B1 是字节码指令00 00 00 02 表示方法细节属性数量，本例是200 0A 表示引用了常量池#10项，是【LineNumberTable】属性 00 00 00 0A 表示此属性的总长度，本例是10 00 02 表示【LineNumberTable】长度 00 00 表示【字节码】行号 00 0B 表示【java源码】行号 00 08 表示【字节码】行号 00 0C 表示【java源码】行号00 0B 表示引用了常量池#11项，是【LocalVariableTable】属性 00 00 00 0C 表示此属性的总长度，本例是12 00 01 表示【LocalVariableTable】长度 00 00 表示局部变量生命周期开始，相当于字节码的偏移量 00 09 表示局部变量覆盖的范围长度 00 10 表示局部变量名称，本例引用了常量池#16项，是【args】 00 11 表示局部变量的类型，本例引用了常量池#17项，是【Ljava/lang/String;】 00 00 表示局部变量占有的槽位(slot)编号，本例是0 方法属性2：1234500 12 表示引用了常量池#18项，发现是【MethodParameters】属性00 00 00 05 表示此属性的总长度，本例是501 参数数量00 10 表示引用了常量池#16项，是【args】00 00 表示访问修饰符 1.7 附加属性12u2 attributes_count;attribute_info attributes[attributes_count]; 1200000250h: 00 00 00 05 01 00 10 00 00 00 01 00 13 00 00 0000000260h: 02 00 14 123400 01 表示附加属性数量00 13 表示引用了常量池#19项，即【SourceFile】00 00 00 02 表示此属性的长度00 14 表示引用了常量池#20项，即【HelloWorld.java】 参考资料：点击打开 2.字节码指令2.1 分析根据上面的分析，有两组字节码指令： (1)public pub.iyu.se.jvmday.day03.HelloWorld(); 构造方法的字节码指令 2A B7 00 01 B1 1.2A =&gt; aload_0加载slot()的局部变量，即this，作为下面的invokespecial构造方法调用的参数 2.B7 =&gt; invokespecial预备调用构造方法，哪个方法呢？ 3.00 01 =&gt; 引用常量池中#1项，即【Method java/lang/Object.&quot;&lt;init&gt;&quot;:()v】 4.B1 =&gt; 表示返回 (2)public static void main(java.lang.String[]) 主方法的字节码指令 B2 00 02 12 03 B6 00 04 B1 1.B2 =&gt; getstatic用来加载静态变量，哪个静态变量呢？ 2.00 02 =&gt; 引用常量池中#2项，即【Field java/lang/System.out:Ljava/io/PrintStream;】 3.12 =&gt; ldc加载参数，哪个参数呢？ 4.03 =&gt; 引用常量池中#3项，即【String Hello world】 5.B6 =&gt; invokevirtual预备调用成员方法，哪个方法呢？ 6.00 04 =&gt; 引用常量池中#4项，即【Method java/io/PrintStream.println:(Ljava/lang/String;)V】 7.B1 =&gt; 表示返回 参考资料：点击打开 2.2 javap工具Oracle 提供javap工具来反编译class文件 1javap -v HelloWorld.class 结果如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778Classfile /E:/HelloWorld.class Last modified 2020-11-20; size 611 bytes MD5 checksum 93d2a7c13284af1a96716e531e2f45e4 Compiled from &quot;HelloWorld.java&quot;public class pub.iyu.se.jvmday.day03.HelloWorld minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #6.#21 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Fieldref #22.#23 // java/lang/System.out:Ljava/io/PrintStream; #3 = String #24 // Hello world #4 = Methodref #25.#26 // java/io/PrintStream.println:(Ljava/lang/String;)V #5 = Class #27 // pub/iyu/se/jvmday/day03/HelloWorld #6 = Class #28 // java/lang/Object #7 = Utf8 &lt;init&gt; #8 = Utf8 ()V #9 = Utf8 Code #10 = Utf8 LineNumberTable #11 = Utf8 LocalVariableTable #12 = Utf8 this #13 = Utf8 Lpub/iyu/se/jvmday/day03/HelloWorld; #14 = Utf8 main #15 = Utf8 ([Ljava/lang/String;)V #16 = Utf8 args #17 = Utf8 [Ljava/lang/String; #18 = Utf8 MethodParameters #19 = Utf8 SourceFile #20 = Utf8 HelloWorld.java #21 = NameAndType #7:#8 // &quot;&lt;init&gt;&quot;:()V #22 = Class #29 // java/lang/System #23 = NameAndType #30:#31 // out:Ljava/io/PrintStream; #24 = Utf8 Hello world #25 = Class #32 // java/io/PrintStream #26 = NameAndType #33:#34 // println:(Ljava/lang/String;)V #27 = Utf8 pub/iyu/se/jvmday/day03/HelloWorld #28 = Utf8 java/lang/Object #29 = Utf8 java/lang/System #30 = Utf8 out #31 = Utf8 Ljava/io/PrintStream; #32 = Utf8 java/io/PrintStream #33 = Utf8 println #34 = Utf8 (Ljava/lang/String;)V&#123; public pub.iyu.se.jvmday.day03.HelloWorld(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day03/HelloWorld; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=1, args_size=1 0: getstatic #2 // Field java/lang/System.out:Ljava/io/PrintStream; 3: ldc #3 // String Hello world 5: invokevirtual #4 // Method java/io/PrintStream.println:(Ljava/lang/String;)V 8: return LineNumberTable: line 11: 0 line 12: 8 LocalVariableTable: Start Length Slot Name Signature 0 9 0 args [Ljava/lang/String; MethodParameters: Name Flags args&#125;SourceFile: &quot;HelloWorld.java&quot; 2.3 方法执行流程(1) Demo代码如下： 12345678public class TestDemo0301 &#123; public static void main(String[] args) &#123; int a = 10; int b = Short.MAX_VALUE + 1; int c = a + b; System.out.println(c); &#125;&#125; (2)编译后的字节码文件 javap -v TestDemo0301.class 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697Classfile /E:/TestDemo0301.class Last modified 2020-11-23; size 676 bytes MD5 checksum 0292b59b6c598154c1fa633b3ccb3c74 Compiled from &quot;TestDemo0301.java&quot;public class pub.iyu.se.jvmday.day03.TestDemo0301 minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #7.#26 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Class #27 // java/lang/Short #3 = Integer 32768 #4 = Fieldref #28.#29 // java/lang/System.out:Ljava/io/PrintStream; #5 = Methodref #30.#31 // java/io/PrintStream.println:(I)V #6 = Class #32 // pub/iyu/se/jvmday/day03/TestDemo0301 #7 = Class #33 // java/lang/Object #8 = Utf8 &lt;init&gt; #9 = Utf8 ()V #10 = Utf8 Code #11 = Utf8 LineNumberTable #12 = Utf8 LocalVariableTable #13 = Utf8 this #14 = Utf8 Lpub/iyu/se/jvmday/day03/TestDemo0301; #15 = Utf8 main #16 = Utf8 ([Ljava/lang/String;)V #17 = Utf8 args #18 = Utf8 [Ljava/lang/String; #19 = Utf8 a #20 = Utf8 I #21 = Utf8 b #22 = Utf8 c #23 = Utf8 MethodParameters #24 = Utf8 SourceFile #25 = Utf8 TestDemo0301.java #26 = NameAndType #8:#9 // &quot;&lt;init&gt;&quot;:()V #27 = Utf8 java/lang/Short #28 = Class #34 // java/lang/System #29 = NameAndType #35:#36 // out:Ljava/io/PrintStream; #30 = Class #37 // java/io/PrintStream #31 = NameAndType #38:#39 // println:(I)V #32 = Utf8 pub/iyu/se/jvmday/day03/TestDemo0301 #33 = Utf8 java/lang/Object #34 = Utf8 java/lang/System #35 = Utf8 out #36 = Utf8 Ljava/io/PrintStream; #37 = Utf8 java/io/PrintStream #38 = Utf8 println #39 = Utf8 (I)V&#123; public pub.iyu.se.jvmday.day03.TestDemo0301(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day03/TestDemo0301; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=4, args_size=1 0: bipush 10 2: istore_1 3: ldc #3 // int 32768 5: istore_2 6: iload_1 7: iload_2 8: iadd 9: istore_3 10: getstatic #4 // Field java/lang/System.out:Ljava/io/PrintStream; 13: iload_3 14: invokevirtual #5 // Method java/io/PrintStream.println:(I)V 17: return LineNumberTable: line 11: 0 line 12: 3 line 13: 6 line 14: 10 line 15: 17 LocalVariableTable: Start Length Slot Name Signature 0 18 0 args [Ljava/lang/String; 3 15 1 a I 6 12 2 b I 10 8 3 c I MethodParameters: Name Flags args&#125;SourceFile: &quot;TestDemo0301.java&quot; (3)常量池 载入 运行时常量池 (4)方法字节码载入方法区 (5)main线程开始运行，分配栈帧内存 stack=2(操作数栈), locals=4(局部变量表) (6)执行引擎开始执行字节码 bipush 10 将一个byte压入操作数栈（其长度会补齐4个字节） 类似的指令还有： 1. sipush 将一个short压入操作数栈（其长度会补齐4个字节） 2. ldc将一个int压入操作数栈 3. ldc2_w将一个long压入操作数栈（分两次压入，因为long是8个字节） 这里小的数字都是和字节码指令存在一起，超过short范围的数字存入了常量池 istore 1 将操作数栈顶数据弹出，存入局部变量表的slot 1 ldc #3 从常量池加载#3数据到操作数栈 注意：Short.MAX_VALUE是32767，所以32768=Short.MAX_VALUE + 1 实际是在编译期间计算好的 istore 2 iload 1 iload 2 iadd istore 3 getstatic #4 iload 3 invokevirtual #5 找到常量池#5项 定位到方法区 java/io/PrintStream.println:(I)V方法 生成新的栈帧（分配locals、stack等） 传递参数，执行新栈帧中的字节码 执行完毕，弹出栈帧 清除main操作数栈内容 return 完成main方法调用，弹出main栈帧，程序结束 2.4 分析 i++从字节码的角度分析 i++ 相关问题 源码如下： 12345678public class TestDemo0302 &#123; public static void main(String[] args) &#123; int a = 10; int b = a++ + ++a + a--; System.out.println(a); System.out.println(b); &#125;&#125; 字节码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798Classfile /E:/TestDemo0302.class Last modified 2020-11-24; size 651 bytes MD5 checksum 46b35f856d1e5581c28225b908080dc0 Compiled from &quot;TestDemo0302.java&quot;public class pub.iyu.se.jvmday.day03.TestDemo0302 minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #5.#23 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Fieldref #24.#25 // java/lang/System.out:Ljava/io/PrintStream; #3 = Methodref #26.#27 // java/io/PrintStream.println:(I)V #4 = Class #28 // pub/iyu/se/jvmday/day03/TestDemo0302 #5 = Class #29 // java/lang/Object #6 = Utf8 &lt;init&gt; #7 = Utf8 ()V #8 = Utf8 Code #9 = Utf8 LineNumberTable #10 = Utf8 LocalVariableTable #11 = Utf8 this #12 = Utf8 Lpub/iyu/se/jvmday/day03/TestDemo0302; #13 = Utf8 main #14 = Utf8 ([Ljava/lang/String;)V #15 = Utf8 args #16 = Utf8 [Ljava/lang/String; #17 = Utf8 a #18 = Utf8 I #19 = Utf8 b #20 = Utf8 MethodParameters #21 = Utf8 SourceFile #22 = Utf8 TestDemo0302.java #23 = NameAndType #6:#7 // &quot;&lt;init&gt;&quot;:()V #24 = Class #30 // java/lang/System #25 = NameAndType #31:#32 // out:Ljava/io/PrintStream; #26 = Class #33 // java/io/PrintStream #27 = NameAndType #34:#35 // println:(I)V #28 = Utf8 pub/iyu/se/jvmday/day03/TestDemo0302 #29 = Utf8 java/lang/Object #30 = Utf8 java/lang/System #31 = Utf8 out #32 = Utf8 Ljava/io/PrintStream; #33 = Utf8 java/io/PrintStream #34 = Utf8 println #35 = Utf8 (I)V&#123; public pub.iyu.se.jvmday.day03.TestDemo0302(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day03/TestDemo0302; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=3, args_size=1 0: bipush 10 2: istore_1 3: iload_1 4: iinc 1, 1 7: iinc 1, 1 10: iload_1 11: iadd 12: iload_1 13: iinc 1, -1 16: iadd 17: istore_2 18: getstatic #2 // Field java/lang/System.out:Ljava/io/PrintStream; 21: iload_1 22: invokevirtual #3 // Method java/io/PrintStream.println:(I)V 25: getstatic #2 // Field java/lang/System.out:Ljava/io/PrintStream; 28: iload_2 29: invokevirtual #3 // Method java/io/PrintStream.println:(I)V 32: return LineNumberTable: line 11: 0 line 12: 3 line 13: 18 line 14: 25 line 15: 32 LocalVariableTable: Start Length Slot Name Signature 0 33 0 args [Ljava/lang/String; 3 30 1 a I 18 15 2 b I MethodParameters: Name Flags args&#125;SourceFile: &quot;TestDemo0302.java&quot; 分析: 注意iinc指令是直接在局部变量slot上进行运算 a++ 和++a的区别是先执行iload还是先执行iinc (1)a++ 先执行iload，再执行iinc (2)++a 先执行iinc，再执行iload 2.5 条件判断指令 说明： 1. byte，short，char 都会按int比较，因为操作数栈都是4字节 2. goto 用来进行跳转到指定行号的字节码 源码： 12345678public static void main(String[] args) &#123; int a = 0; if(a == 0)&#123; a = 10; &#125;else &#123; a = 20; &#125;&#125; 字节码: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182Classfile /E:/TestDemo0303.class Last modified 2020-12-10; size 535 bytes MD5 checksum 0a17c88bcb86b283e848b2a38d73bce6 Compiled from &quot;TestDemo0303.java&quot;public class pub.iyu.se.jvmday.day03.TestDemo0303 minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #3.#21 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Class #22 // pub/iyu/se/jvmday/day03/TestDemo0303 #3 = Class #23 // java/lang/Object #4 = Utf8 &lt;init&gt; #5 = Utf8 ()V #6 = Utf8 Code #7 = Utf8 LineNumberTable #8 = Utf8 LocalVariableTable #9 = Utf8 this #10 = Utf8 Lpub/iyu/se/jvmday/day03/TestDemo0303; #11 = Utf8 main #12 = Utf8 ([Ljava/lang/String;)V #13 = Utf8 args #14 = Utf8 [Ljava/lang/String; #15 = Utf8 a #16 = Utf8 I #17 = Utf8 StackMapTable #18 = Utf8 MethodParameters #19 = Utf8 SourceFile #20 = Utf8 TestDemo0303.java #21 = NameAndType #4:#5 // &quot;&lt;init&gt;&quot;:()V #22 = Utf8 pub/iyu/se/jvmday/day03/TestDemo0303 #23 = Utf8 java/lang/Object&#123; public pub.iyu.se.jvmday.day03.TestDemo0303(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day03/TestDemo0303; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=1, locals=2, args_size=1 0: iconst_0 1: istore_1 2: iload_1 3: ifne 12 6: bipush 10 8: istore_1 9: goto 15 12: bipush 20 14: istore_1 15: return LineNumberTable: line 11: 0 line 12: 2 line 13: 6 line 15: 12 line 17: 15 LocalVariableTable: Start Length Slot Name Signature 0 16 0 args [Ljava/lang/String; 2 14 1 a I StackMapTable: number_of_entries = 2 frame_type = 252 /* append */ offset_delta = 12 locals = [ int ] frame_type = 2 /* same */ MethodParameters: Name Flags args&#125;SourceFile: &quot;TestDemo0303.java&quot; 关于比较指令中 long float double 的比较，可以参考资料 2.6 循环控制指令while循环： 123456public static void main(String[] args) &#123; int a = 0; while(a &lt; 0)&#123; a++; &#125;&#125; 字节码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879Classfile /E:/TestDemo0304.class Last modified 2020-12-10; size 530 bytes MD5 checksum 016d8b924c6a38e2d2f72ab9734593a3 Compiled from &quot;TestDemo0304.java&quot;public class pub.iyu.se.jvmday.day03.TestDemo0304 minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #3.#21 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Class #22 // pub/iyu/se/jvmday/day03/TestDemo0304 #3 = Class #23 // java/lang/Object #4 = Utf8 &lt;init&gt; #5 = Utf8 ()V #6 = Utf8 Code #7 = Utf8 LineNumberTable #8 = Utf8 LocalVariableTable #9 = Utf8 this #10 = Utf8 Lpub/iyu/se/jvmday/day03/TestDemo0304; #11 = Utf8 main #12 = Utf8 ([Ljava/lang/String;)V #13 = Utf8 args #14 = Utf8 [Ljava/lang/String; #15 = Utf8 a #16 = Utf8 I #17 = Utf8 StackMapTable #18 = Utf8 MethodParameters #19 = Utf8 SourceFile #20 = Utf8 TestDemo0304.java #21 = NameAndType #4:#5 // &quot;&lt;init&gt;&quot;:()V #22 = Utf8 pub/iyu/se/jvmday/day03/TestDemo0304 #23 = Utf8 java/lang/Object&#123; public pub.iyu.se.jvmday.day03.TestDemo0304(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day03/TestDemo0304; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=2, args_size=1 0: iconst_0 1: istore_1 2: iload_1 3: bipush 10 5: if_icmpge 14 8: iinc 1, 1 11: goto 2 14: return LineNumberTable: line 11: 0 line 12: 2 line 13: 8 line 15: 14 LocalVariableTable: Start Length Slot Name Signature 0 15 0 args [Ljava/lang/String; 2 13 1 a I StackMapTable: number_of_entries = 2 frame_type = 252 /* append */ offset_delta = 2 locals = [ int ] frame_type = 11 /* same */ MethodParameters: Name Flags args&#125;SourceFile: &quot;TestDemo0304.java&quot; do while循环： 123456public static void main(String[] args) &#123; int a = 0; do &#123; a++; &#125; while(a &lt; 10);&#125; 字节码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677Classfile /E:/TestDemo0305.class Last modified 2020-12-10; size 526 bytes MD5 checksum 100b9f049f784b67731ee8c992011082 Compiled from &quot;TestDemo0305.java&quot;public class pub.iyu.se.jvmday.day03.TestDemo0305 minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #3.#21 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Class #22 // pub/iyu/se/jvmday/day03/TestDemo0305 #3 = Class #23 // java/lang/Object #4 = Utf8 &lt;init&gt; #5 = Utf8 ()V #6 = Utf8 Code #7 = Utf8 LineNumberTable #8 = Utf8 LocalVariableTable #9 = Utf8 this #10 = Utf8 Lpub/iyu/se/jvmday/day03/TestDemo0305; #11 = Utf8 main #12 = Utf8 ([Ljava/lang/String;)V #13 = Utf8 args #14 = Utf8 [Ljava/lang/String; #15 = Utf8 a #16 = Utf8 I #17 = Utf8 StackMapTable #18 = Utf8 MethodParameters #19 = Utf8 SourceFile #20 = Utf8 TestDemo0305.java #21 = NameAndType #4:#5 // &quot;&lt;init&gt;&quot;:()V #22 = Utf8 pub/iyu/se/jvmday/day03/TestDemo0305 #23 = Utf8 java/lang/Object&#123; public pub.iyu.se.jvmday.day03.TestDemo0305(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 9: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day03/TestDemo0305; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=2, args_size=1 0: iconst_0 1: istore_1 2: iinc 1, 1 5: iload_1 6: bipush 10 8: if_icmplt 2 11: return LineNumberTable: line 11: 0 line 13: 2 line 14: 5 line 15: 11 LocalVariableTable: Start Length Slot Name Signature 0 12 0 args [Ljava/lang/String; 2 10 1 a I StackMapTable: number_of_entries = 1 frame_type = 252 /* append */ offset_delta = 2 locals = [ int ] MethodParameters: Name Flags args&#125;SourceFile: &quot;TestDemo0305.java&quot; 2.7 判断结果2.8 构造方法2.9 方法调用2.10 多态的原理2.11 异常处理2.12 finally2.13 synchronized3.编译期处理4.类加载阶段5.类加载器6.运行期优化未完待续。。。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-day02]]></title>
    <url>%2Fposts%2F2020-11-03-JVM-day02%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录JVM的学习过程-垃圾回收 1.如何判断对象可以回收1.1 引用计数法 弊端：循环引用 1.2 可达性分析算法 Java虚拟机中的垃圾回收器采用 可达性分析 来探索所有存活的对象 扫描堆中的对象，看是否能够沿着GC Root对象 为起点的引用链找到该对象，找不到则表示可以回收 哪些对象可以作为GC Root? Java堆分析器 : MAT(Eclipse Memory Analyzer) 是一个快速且功能丰富的Java堆分析器，可帮助您查找内存泄漏并减少内存消耗。使用Memory Analyzer分析具有数亿个对象的高效堆转储，快速计算对象的保留大小，查看谁阻止垃圾收集器收集对象，运行报告以自动提取泄漏嫌疑者。 下载地址：https://www.eclipse.org/mat/downloads.php 功能： 找出内存泄漏的原因 找出重复引用的类和jar 分析集合的使用 分析类加载器 演示如下： 12345678910List&lt;Object&gt; list1 = new ArrayList&lt;&gt;();list1.add(&quot;a&quot;);list1.add(&quot;b&quot;);System.out.println(1);System.in.read();list1 = null;System.out.println(2);System.in.read();System.out.println(&quot;end...&quot;); 运行以上代码，使用 jps 指令找到当前的进程ID 123451513613604 Jps1577215948 Launcher3612 TestDemo01 出现 1 时，使用如下的jmap指令 1jmap -dump:format=b,live,file=1.bin 3612 简单解释下format（转储文件的格式）的参数： b: 二进制文件 live: 只抓取存活的类型，live前会进行一次垃圾回收FullGC file: 存储文件路径 出现 2 时，使用如下的jmap指令 1jmap -dump:format=b,live,file=2.bin 3612 这样可以看到在当前目录下有两个文件，1.bin和2.bin 在MAT工具中分别打开这两个bin文件，如下图： 打开GC Roots 如下： 1.3 四种引用 + 终结器引用 强引用： 只有所有GC Roots对象都不通过 强引用 引用该对象，该对象才能被垃圾回收 软引用（SoftReference） (1)仅有 软引用 引用该对象时，在垃圾回收后，内存仍不足时会再次触发垃圾回收，回收软引用对象 (2)可以配合引用队列来释放软引用自身 软引用的案例： 1234567891011121314151617181920212223242526272829303132//打印参数： -Xmx20m -XX:+PrintGCDetails -verbose:gcpublic class TestDemo02 &#123; private static final int _4MB = 4 * 1024 * 1024; public static void main(String[] args) throws IOException &#123; //强引用 /*List&lt;byte[]&gt; list1 = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 5; i++) &#123; list1.add(new byte[_4MB]); &#125; System.in.read();*/ //软引用 soft(); &#125; private static void soft()&#123; // list --&gt; SoftReference --&gt; byte[] List&lt;SoftReference&lt;byte[]&gt;&gt; list = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 5; i++) &#123; SoftReference&lt;byte[]&gt; reference = new SoftReference&lt;&gt;(new byte[_4MB]); System.out.println(reference.get()); list.add(reference); System.out.println(list.size()); &#125; System.out.println(&quot;循环结束：&quot; + list.size()); for (SoftReference&lt;byte[]&gt; ref : list)&#123; System.out.println(ref.get()); &#125; &#125;&#125; 打印结果如下： 12345678910111213141516171819202122232425262728293031[B@7ba4f24f1[B@3b9a45b32[B@7699a5893[GC (Allocation Failure) [PSYoungGen: 2913K-&gt;504K(6144K)] 15201K-&gt;13317K(19968K), 0.0237151 secs] [Times: user=0.00 sys=0.00, real=0.02 secs] [Full GC (Ergonomics) [PSYoungGen: 504K-&gt;0K(6144K)] [ParOldGen: 12813K-&gt;13268K(13824K)] 13317K-&gt;13268K(19968K), [Metaspace: 3272K-&gt;3272K(1056768K)], 0.0235688 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] [B@58372a004[Full GC (Ergonomics) [PSYoungGen: 4208K-&gt;4096K(6144K)] [ParOldGen: 13268K-&gt;13117K(13824K)] 17477K-&gt;17213K(19968K), [Metaspace: 3274K-&gt;3274K(1056768K)], 0.0060131 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] [Full GC (Allocation Failure) [PSYoungGen: 4096K-&gt;0K(6144K)] [ParOldGen: 13117K-&gt;811K(7680K)] 17213K-&gt;811K(13824K), [Metaspace: 3274K-&gt;3274K(1056768K)], 0.0081056 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] [B@4dd8dc35循环结束：5nullnullnullnull[B@4dd8dc3Heap PSYoungGen total 6144K, used 4377K [0x00000000ff980000, 0x0000000100000000, 0x0000000100000000) eden space 5632K, 77% used [0x00000000ff980000,0x00000000ffdc6400,0x00000000fff00000) from space 512K, 0% used [0x00000000fff00000,0x00000000fff00000,0x00000000fff80000) to space 512K, 0% used [0x00000000fff80000,0x00000000fff80000,0x0000000100000000) ParOldGen total 7680K, used 811K [0x00000000fec00000, 0x00000000ff380000, 0x00000000ff980000) object space 7680K, 10% used [0x00000000fec00000,0x00000000feccac50,0x00000000ff380000) Metaspace used 3280K, capacity 4500K, committed 4864K, reserved 1056768K class space used 355K, capacity 388K, committed 512K, reserved 1048576KProcess finished with exit code 0 加入引用队列ReferenceQueue：移除无用的软引用对象 以上的代码修改如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344public class TestDemo02 &#123; //打印参数： -Xmx20m -XX:+PrintGCDetails -verbose:gc private static final int _4MB = 4 * 1024 * 1024; public static void main(String[] args) throws IOException &#123; //强引用 /*List&lt;byte[]&gt; list1 = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 5; i++) &#123; list1.add(new byte[_4MB]); &#125; System.in.read();*/ //软引用 soft(); &#125; private static void soft()&#123; // list --&gt; SoftReference --&gt; byte[] List&lt;SoftReference&lt;byte[]&gt;&gt; list = new ArrayList&lt;&gt;(); //引用队列 ReferenceQueue&lt;byte[]&gt; queue = new ReferenceQueue&lt;&gt;(); for (int i = 0; i &lt; 5; i++) &#123; //关联引用队列: 当软引用所关联的byte[]被回收时，软引用自己会加入到queue中去 SoftReference&lt;byte[]&gt; reference = new SoftReference&lt;&gt;(new byte[_4MB],queue); System.out.println(reference.get()); list.add(reference); System.out.println(list.size()); &#125; //从引用队列中获取无用的软引用对象 并移除 Reference&lt;? extends byte[]&gt; poll = queue.poll(); while (poll != null)&#123; list.remove(poll); poll = queue.poll(); &#125; System.out.println(&quot;===================================&quot;); for (SoftReference&lt;byte[]&gt; ref : list)&#123; System.out.println(ref.get()); &#125; &#125;&#125; 打印结果： 123456789101112131415161718192021222324252627[B@7ba4f24f1[B@3b9a45b32[B@7699a5893[GC (Allocation Failure) [PSYoungGen: 2913K-&gt;504K(6144K)] 15201K-&gt;13329K(19968K), 0.0018256 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [Full GC (Ergonomics) [PSYoungGen: 504K-&gt;0K(6144K)] [ParOldGen: 12825K-&gt;13268K(13824K)] 13329K-&gt;13268K(19968K), [Metaspace: 3274K-&gt;3274K(1056768K)], 0.0057513 secs] [Times: user=0.02 sys=0.00, real=0.01 secs] [B@58372a004[Full GC (Ergonomics) [PSYoungGen: 4208K-&gt;4096K(6144K)] [ParOldGen: 13268K-&gt;13117K(13824K)] 17477K-&gt;17213K(19968K), [Metaspace: 3274K-&gt;3274K(1056768K)], 0.0078122 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] [Full GC (Allocation Failure) [PSYoungGen: 4096K-&gt;0K(6144K)] [ParOldGen: 13117K-&gt;811K(7680K)] 17213K-&gt;811K(13824K), [Metaspace: 3274K-&gt;3274K(1056768K)], 0.0058282 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] [B@4dd8dc35===================================[B@4dd8dc3Heap PSYoungGen total 6144K, used 4377K [0x00000000ff980000, 0x0000000100000000, 0x0000000100000000) eden space 5632K, 77% used [0x00000000ff980000,0x00000000ffdc6400,0x00000000fff00000) from space 512K, 0% used [0x00000000fff00000,0x00000000fff00000,0x00000000fff80000) to space 512K, 0% used [0x00000000fff80000,0x00000000fff80000,0x0000000100000000) ParOldGen total 7680K, used 811K [0x00000000fec00000, 0x00000000ff380000, 0x00000000ff980000) object space 7680K, 10% used [0x00000000fec00000,0x00000000feccad40,0x00000000ff380000) Metaspace used 3281K, capacity 4500K, committed 4864K, reserved 1056768K class space used 355K, capacity 388K, committed 512K, reserved 1048576KProcess finished with exit code 0 弱引用（WeakReference） (1)仅有 弱引用 引用该对象时，在垃圾回收时，无论内存是否充足，都会回收弱引用对象 (2)可以配合引用队列来释放弱引用自身 弱引用案例： 123456789101112131415161718//打印参数： -Xmx20m -XX:+PrintGCDetails -verbose:gcpublic class TestDemo03 &#123; private static final int _4MB = 4 * 1024 * 1024; public static void main(String[] args) throws IOException &#123; // list --&gt; WeakReference --&gt; byte[] List&lt;WeakReference&lt;byte[]&gt;&gt; list = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 5; i++) &#123; WeakReference&lt;byte[]&gt; reference = new WeakReference&lt;&gt;(new byte[_4MB]); list.add(reference); for (WeakReference&lt;byte[]&gt; w : list)&#123; System.out.println(w.get()+&quot; &quot;); &#125; System.out.println(); &#125; System.out.println(&quot;循环结束：&quot;+list.size()); &#125;&#125; 打印结果如下： 1234567891011121314151617181920212223242526272829303132[B@7ba4f24f [B@7ba4f24f [B@3b9a45b3 [B@7ba4f24f [B@3b9a45b3 [B@7699a589 [GC (Allocation Failure) [PSYoungGen: 2913K-&gt;488K(6144K)] 15201K-&gt;13301K(19968K), 0.0018384 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [Full GC (Ergonomics) [PSYoungGen: 488K-&gt;0K(6144K)] [ParOldGen: 12813K-&gt;980K(11776K)] 13301K-&gt;980K(17920K), [Metaspace: 3274K-&gt;3274K(1056768K)], 0.0049699 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] null null null [B@58372a00 null null null [B@58372a00 [B@4dd8dc3 循环结束：5Heap PSYoungGen total 6144K, used 4265K [0x00000000ff980000, 0x0000000100000000, 0x0000000100000000) eden space 5632K, 75% used [0x00000000ff980000,0x00000000ffdaa5b8,0x00000000fff00000) from space 512K, 0% used [0x00000000fff00000,0x00000000fff00000,0x00000000fff80000) to space 512K, 0% used [0x00000000fff80000,0x00000000fff80000,0x0000000100000000) ParOldGen total 11776K, used 5076K [0x00000000fec00000, 0x00000000ff780000, 0x00000000ff980000) object space 11776K, 43% used [0x00000000fec00000,0x00000000ff0f53b0,0x00000000ff780000) Metaspace used 3281K, capacity 4500K, committed 4864K, reserved 1056768K class space used 355K, capacity 388K, committed 512K, reserved 1048576K 虚引用（PhantomReference） 必须配合引用队列来使用，主要配合ByteBuffer使用，被引用对象回收时，会将虚引用入队列，由ReferenceHandler线程调用虚引用相关方法释放直接内存 终结器引用（FinalReference） 无需手动编码，但其内部配合引用队列使用，在垃圾回收时，终结器引用入队列（被引用对象暂时没有被回收），再由Finalizer线程通过终结器引用找到被引用对象并调用它的finalize方法，第二次GC时才能回收被引用对象 2.垃圾回收算法2.1 标记清除 定义： Mark Sweep 优点： 速度较快 缺点： 容易产生内存碎片 2.2 标记整理 定义： Mark Compact 优点： 没有内存碎片 缺点： 速度慢 2.3 复制 定义： Copy 优点： 没有内存碎片 缺点： 需要占用双倍的内存空间 3.分代垃圾回收 MinorGC：新生代垃圾回收，包括Eden和SurvivorFrom以及SurvivorTo MajorGC：老年代垃圾回收 FullGC：整个堆空间的垃圾回收，包括新生代和老年代 对象首先分配在Eden区域 新生代空间不足时，触发MinorGC，Eden和From存活的对象使用copy复制到To中，存活的对象年龄加1并且交换From和To MinorGC会引发stop the world，暂停其他用户的线程，等垃圾回收结束，用户线程才恢复运行 当对象寿命超过阈值时，会晋升至老年代，最大寿命是15（4bit） 当老年代空间不足，会先尝试触发MinorGC，如果之后空间仍不足，那么触发FullGC，STW的时间更长 3.1 相关JVM参数 含义 参数 堆初始大小 -Xms 堆最大大小 -Xmx或者-XX:MaxHeapSize=size 新生代大小 -Xmn或者-XX:NewSize=size和-XX:MaxNewSize=size 幸存区Survivor比例(动态) -XX:InitialSurvivorRatio=ratio和-XX:+UseAdaptiveSizePolicy 幸存区Survivor比例 -XX:SurvivorRatio=ratio 晋升阈值 -XX:MaxTenuringThreshold=threshold 晋升详情 -XX:+PrintTenuringDistribution GC详情 -XX:+PrintGCDetails -verbose:gc FullGC前MinorGC -XX:+ScavengeBeforeFullGC 3.2 GC分析分析代码如下： 123456789101112//参数： -Xms20m -Xmx20m -Xmn10m -XX:+UseSerialGC -XX:+PrintGCDetails -verbose:gcpublic class TestDemo04 &#123; private static final int _512KB = 512 * 1024; private static final int _1MB = 1 * 1024 * 1024; private static final int _6MB = 6 * 1024 * 1024; private static final int _7MB = 7 * 1024 * 1024; private static final int _8MB = 8 * 1024 * 1024; public static void main(String[] args) &#123; &#125;&#125; 打印结果如下： 123456789Heap def new generation total 9216K, used 2982K [0x00000000fec00000, 0x00000000ff600000, 0x00000000ff600000) eden space 8192K, 36% used [0x00000000fec00000, 0x00000000feee9818, 0x00000000ff400000) from space 1024K, 0% used [0x00000000ff400000, 0x00000000ff400000, 0x00000000ff500000) to space 1024K, 0% used [0x00000000ff500000, 0x00000000ff500000, 0x00000000ff600000) tenured generation total 10240K, used 0K [0x00000000ff600000, 0x0000000100000000, 0x0000000100000000) the space 10240K, 0% used [0x00000000ff600000, 0x00000000ff600000, 0x00000000ff600200, 0x0000000100000000) Metaspace used 3273K, capacity 4496K, committed 4864K, reserved 1056768K class space used 354K, capacity 388K, committed 512K, reserved 1048576K 由以上的结果分析，并未发生GC 这里继续分析： 12345678910111213//参数： -Xms20m -Xmx20m -Xmn10m -XX:+UseSerialGC -XX:+PrintGCDetails -verbose:gcpublic class TestDemo04 &#123; private static final int _512KB = 512 * 1024; private static final int _1MB = 1 * 1024 * 1024; private static final int _6MB = 6 * 1024 * 1024; private static final int _7MB = 7 * 1024 * 1024; private static final int _8MB = 8 * 1024 * 1024; public static void main(String[] args) &#123; ArrayList&lt;byte[]&gt; list = new ArrayList&lt;&gt;(); list.add(new byte[_7MB]); &#125;&#125; 打印结果如下： 12345678910[GC (Allocation Failure) [DefNew: 2981K-&gt;980K(9216K), 0.0017746 secs] 2981K-&gt;980K(19456K), 0.0018187 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] Heap def new generation total 9216K, used 8394K [0x00000000fec00000, 0x00000000ff600000, 0x00000000ff600000) eden space 8192K, 90% used [0x00000000fec00000, 0x00000000ff33d8c0, 0x00000000ff400000) from space 1024K, 95% used [0x00000000ff500000, 0x00000000ff5f5228, 0x00000000ff600000) to space 1024K, 0% used [0x00000000ff400000, 0x00000000ff400000, 0x00000000ff500000) tenured generation total 10240K, used 0K [0x00000000ff600000, 0x0000000100000000, 0x0000000100000000) the space 10240K, 0% used [0x00000000ff600000, 0x00000000ff600000, 0x00000000ff600200, 0x0000000100000000) Metaspace used 3274K, capacity 4496K, committed 4864K, reserved 1056768K class space used 354K, capacity 388K, committed 512K, reserved 1048576K 从结果第一行来看，JVM发生了一次MinorGC，跟第一次的结果有明显的变化。 依次放入不同大小的byte[]，逐步分析… 3.3 大对象直接晋升老年代12345678910111213//参数： -Xms20m -Xmx20m -Xmn10m -XX:+UseSerialGC -XX:+PrintGCDetails -verbose:gcpublic class TestDemo04 &#123; private static final int _512KB = 512 * 1024; private static final int _1MB = 1 * 1024 * 1024; private static final int _6MB = 6 * 1024 * 1024; private static final int _7MB = 7 * 1024 * 1024; private static final int _8MB = 8 * 1024 * 1024; public static void main(String[] args) &#123; ArrayList&lt;byte[]&gt; list = new ArrayList&lt;&gt;(); list.add(new byte[_8MB]); &#125;&#125; 打印结果： 123456789Heap def new generation total 9216K, used 3145K [0x00000000fec00000, 0x00000000ff600000, 0x00000000ff600000) eden space 8192K, 38% used [0x00000000fec00000, 0x00000000fef127b8, 0x00000000ff400000) from space 1024K, 0% used [0x00000000ff400000, 0x00000000ff400000, 0x00000000ff500000) to space 1024K, 0% used [0x00000000ff500000, 0x00000000ff500000, 0x00000000ff600000) tenured generation total 10240K, used 8192K [0x00000000ff600000, 0x0000000100000000, 0x0000000100000000) the space 10240K, 80% used [0x00000000ff600000, 0x00000000ffe00010, 0x00000000ffe00200, 0x0000000100000000) Metaspace used 3274K, capacity 4496K, committed 4864K, reserved 1056768K class space used 354K, capacity 388K, committed 512K, reserved 1048576K 4.垃圾回收器4.1 串行 单线程 堆内存较小，适合个人电脑 -XX:+UseSerialGC=Serial(新生代 复制算法) + SerialOld(老年代 标记整理算法) 4.2 吞吐量优先 多线程 堆内存较大，多核CPU 让单位时间内，STW的时间最短 0.2 0.2 = 0.4 垃圾回收时间占比最低，这样就称为吞吐量高 -XX:+UseParallelGC ~ -XX:+UseParallelOlgGC -XX:+UseAdaptiveSizePolicy (动态调整Eden和survivor的比例) -XX:GCTimeRatio=ratio -XX:MaxGCPauseMillis=ms -XX:ParallelGCThreads=n 4.3 响应时间优先 多线程 堆内存较大，多核CPU 尽可能让单次STW的时间最短 0.1 0.1 0.1 0.1 0.1 = 0.5 -XX:+UseConcMarkSweepGC(CMS concurrent 并发) ~ -XX:+UseParNewGC(新生代) ~ SerialOld -XX:ParallelGCThreads=n ~ -XX:ConcGCThreads=threads(CPU核数的1/4) -XX:CMSInitiatingOccupancyFraction=percent(默认65%) -XX:+CMSScavengeBeforeRemark 4.4 G1定义：Garbage First 2004 论文发布 2009 JDK 6u14体验 2012 JDK 7u4官方支持 2017 JDK 9 默认 适用场景： 同时注重吞吐量（Throughput）和低延迟（Low Latency），默认的暂停目标是200ms 超大堆内存，会将堆划分为多个大小相等的Region 整体上是 标记+整理 算法，两个区域之间是 复制 算法 相关JVM参数： -XX:+UseG1GC -XX:G1HeapRegionSize=size -XX:MaxGCPauseMillis=time 4.4.1 G1垃圾回收阶段 4.4.2 Young Collection会发生STW 4.4.3 Young Collection + CM 在Young GC时会进行GC Root 的初始标记 老年代占用堆空间比例达到阈值时，进行并发标记（不会STW），由下面的JVM参数决定 -XX:InitiatingHeapOccupancyPercent=percent(默认45%) 4.4.4 Mixed Collection 混合回收会对Eden,Survivor,Old进行全面垃圾回收 最终标记（Remark）会STW 拷贝存活（Evacuation）会STW -XX:MaxGCPauseMillis=ms 4.4.5 Full GC SerialGC (1)新生代内存不足发生的垃圾回收 - MinorGC (2)老年代内存不足发生的垃圾回收 - FullGC ParallelGC (1)新生代内存不足发生的垃圾回收 - MinorGC (2)老年代内存不足发生的垃圾回收 - FullGC CMS (1)新生代内存不足发生的垃圾回收 - MinorGC (2)老年代内存不足 G1 (1)新生代内存不足发生的垃圾回收 - MinorGC (2)老年代内存不足(根据阈值判断) 4.4.6 Young Collection 跨代引用新生代回收的跨代引用（老年代引用新生代）问题 卡表与Remembered Set 在引用变更时通过post-write barrier + dirty card queue concurrent refinement threads 更新 Remembered Set 4.4.7 Remarkpre-write barrier(写屏障) + satb_mark_queue 4.4.8 JDK 8u20 字符串去重优点：节省大量内存 缺点：略微多占用了CPU时间，新生代回收时间略微增加 -XX:+UseStringDeduplication 如下： String s1 = new String(&quot;hello&quot;);//char[]&#123;&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;0&#39;&#125; String s2 = new String(&quot;hello&quot;);//char[]&#123;&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;0&#39;&#125; 将所有新分配的字符串放入一个队列 当新生代回收时，G1并发检查是否有字符串重复 如果他们值一样，让他们引用同一个char[] 注意：与String.intern()不一样 (1)String.intern()关注的是字符串对象 (2)而字符串去重关注的是char[] (3)在JVM内部，使用了不同的字符串表 4.4.9 JDK 8u40 并发标记类卸载所有对象都经过并发标记后，就能知道哪些类不再被使用，当一个类加载器的所有类都不再使用，则卸载它所加载的所有类 -XX:+ClassUnloadingWithConcurrentMark 默认启用 4.4.10 JDK 8u60 回收巨型对象 一个对象大于region的一半时，称之为巨型对象 G1不会对巨型对象进行拷贝 回收时被优先考虑 G1会跟踪老年代所有incoming引用，这样老年代incoming引用为0的巨型对象就可以在新生代垃圾回收时被处理掉 4.4.11 JDK 9 并发标记起始时间的调整（动态调整阈值） 并发标记必须在堆空间占满前完成，否则退化为FullGC JDK9 之前需要使用 -XX:InitiatingHeapOccupancyPercent JDK9 可以动态调整 (1)-XX:InitiatingHeapOccupancyPercent 用来设置初始值 (2)进行数据采样并动态调整 (3)总会添加一个安全的空档空间 4.4.12 JDK 9 更高效的回收 250+增强 180+bug修复 参考资料： JDK12 JDK15 5.垃圾回收调优 掌握GC相关的JVM参数参考Oracle官网介绍，会基本的空间调整 掌握相关工具 调优跟应用、环境有关，没有放之四海而皆准的法则 5.1 调优领域 内存 锁竞争 CPU占用 IO 5.2 确定目标【低延迟】还是【高吞吐量】，选择合适的回收器 CMS, G1, ZGC ParallelGC Zing 5.3 最快的GC 是不发生GC查看FullGC前后的内存占用，考虑下面几个问题： 数据是不是太多？ resultSet = statement.executeQuery(“select * from 大表 limit n”); 数据表示是否太臃肿？ (1)对象图 (2)对象大小 Object(16Byte) Integer(24Byte 包装类型) int(4Byte) 是否存在内存泄露？ (1)static Map map (2)软 (3)弱 (4)第三方缓存实现 5.4 新生代调优新生代特点 所有的new操作的内存分配非常廉价 TLAB thread-local allocation buffer 死亡对象的回收代价是零 大部分对象用过即销毁 MinorGC的时间远远低于FullGC 问题：越大越好吗？ -Xmn的官方解释：参考链接 Sets the initial and maximum size (in bytes) of the heap for the young generation (nursery). Append the letter k or K to indicate kilobytes, m or M to indicate megabytes, or g or G to indicate gigabytes. The young generation region of the heap is used for new objects. GC is performed in this region more often than in other regions. If the size for the young generation is too small, then a lot of minor garbage collections are performed. If the size is too large, then only full garbage collections are performed, which can take a long time to complete. Oracle recommends that you keep the size for the young generation greater than 25% and less than 50% of the overall heap size. 新生代能容纳所有【并发量*（请求-响应）】的数据 幸存区大到能保留【当前活跃对象+需要晋升对象】 晋升阈值配置得当，让长时间存活对象尽快晋升 -XX:MaxTenuringThreshold=threshold -XX:+PrintTenuringDistribution 5.5 老年代调优以CMS为例： CMS的老年代内存越大越好 先尝试不做调优，如果没有FullGC则无需调优，否则先尝试调优新生代 观察发生FullGC时老年代内存占用，将老年代内存预设调大1/4~1/3 -XX:CMSInitiatingOccupancyFraction=percent Twitter工程师建议设置为0，表示老年代一旦有垃圾就回收，但是这种极端做法对CPU的要求特别高。 一般设置75%到80%之间。 5.6 案例 案例1：FullGC和MinorGC频繁 增大新生代的内存，gc频次相应降低 案例2：请求高峰期发生FullGC，单次暂停时间特别长（CMS） 案例3：老年代充裕情况下，发生FullGC（CMS jdk7） jdk7 堆中的永久代空间不足 导致FullGC]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-day01]]></title>
    <url>%2Fposts%2F2020-11-02-JVM-day01%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录JVM的学习过程-内存结构 内存结构1.程序计数器： 1.1 定义Program Counter Register 程序计数器（寄存器） 作用是记住下一条jvm指令的执行地址 特点: 1 线程私有 2 不会存在内存溢出 1.2 作用 2.虚拟机栈： 2.1 定义Java Virtual Machine Stacks (Java虚拟机栈) 每个线程运行时所需要的内存，称为虚拟机栈 每个栈由多个栈帧（Frame）组成，对应着每次方法调用时所占用的内存 每个线程只能有一个活动栈帧，对应着当前正在执行的那个方法 问题思考： 垃圾回收是否涉及栈内存？ 不需要，每次方法调用产生栈帧内存，方法执行完成后，都会被弹出栈，被自动回收掉。 栈内存分配越大越好吗？ -Xss size: 默认1024KB。栈内存越大，线程数越少。 方法内的局部变量是否线程安全？ 3.1 如果方法内局部变量没有逃离方法的作用访问，它是线程安全的 3.2 如果是局部变量引用了对象，并逃离方法的作用范围，需要考虑线程安全 2.2 栈内存溢出 StackOverflowError 栈帧过多导致栈内存溢出 栈帧过大导致栈内存溢出 2.3 线程运行诊断 CPU占用过多 程序运行很长时间没有结果 定位： 用top定位哪个进程对CPU的占用过高 ps H -eo pid,tid,%cpu | grep 进程id (用ps命令进一步定位是哪个线程引起的CPU占用过高) jstack 进程id (可以根据线程id找到有问题的线程，10进制的进程id转成16进制，进一步定位到问题代码的源码行号) 3.本地方法栈 4.堆 4.1 定义Heap 堆 ： 通过new关键字，创建对象都会使用堆内存 特点： 线程共享，堆中对象都需要考虑线程安全的问题 有垃圾回收机制 4.2 堆内存溢出 OutofMemoryError123456789101112131415public static void main(String[] args) &#123; int i = 0; try &#123; List&lt;String&gt; list = new ArrayList&lt;&gt;(); String a = &quot;hello&quot;; while (true)&#123; list.add(a); a = a + a; i++; &#125; &#125;catch (Throwable throwable)&#123; throwable.printStackTrace(); System.out.println(i); &#125;&#125; 运行结果： 1234567java.lang.OutOfMemoryError: Java heap space at java.util.Arrays.copyOf(Arrays.java:3332) at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) at java.lang.StringBuilder.append(StringBuilder.java:136) at pub.iyu.se.jvmday.day01.TestDemo01.main(TestDemo01.java:20)26 4.3 堆内存诊断 jps工具：查看当前系统中有哪些java进程 jmap工具：查看堆内存占用情况 jmap -heap 进程id jconsole工具：图形界面，多功能的监测工具，可以连续监测 jvisualvm工具：更强大的图形界面 1234567891011public static void main(String[] args) throws InterruptedException &#123; System.out.println(&quot;1...&quot;); Thread.sleep(30000); byte[] array = new byte[1024*1024*10]; System.out.println(&quot;2...&quot;); Thread.sleep(30000); array = null; System.gc(); System.out.println(&quot;3...&quot;); Thread.sleep(1000000L); &#125; 运行方法后，在控制台输入 1jps 显示如下结果： 12312140 Jps14380 Launcher7644 TestDemo02 之后当输出如下内容时： 11... 在控制台输入 1jmap -heap 7644 这时候可以看到显示的结果： 12345678910111213141516171819202122Heap Usage:PS Young GenerationEden Space: capacity = 67108864 (64.0MB) used = 6718152 (6.406929016113281MB) free = 60390712 (57.59307098388672MB) 10.010826587677002% usedFrom Space: capacity = 11010048 (10.5MB) used = 0 (0.0MB) free = 11010048 (10.5MB) 0.0% usedTo Space: capacity = 11010048 (10.5MB) used = 0 (0.0MB) free = 11010048 (10.5MB) 0.0% usedPS Old Generation capacity = 179306496 (171.0MB) used = 0 (0.0MB) free = 179306496 (171.0MB) 0.0% used 当输出如下内容时： 12... 在控制台输入 1jmap -heap 7644 这时候可以看到显示的结果： 12345678910111213141516171819202122Heap Usage:PS Young GenerationEden Space: capacity = 67108864 (64.0MB) used = 17203928 (16.406944274902344MB) free = 49904936 (47.593055725097656MB) 25.635850429534912% usedFrom Space: capacity = 11010048 (10.5MB) used = 0 (0.0MB) free = 11010048 (10.5MB) 0.0% usedTo Space: capacity = 11010048 (10.5MB) used = 0 (0.0MB) free = 11010048 (10.5MB) 0.0% usedPS Old Generation capacity = 179306496 (171.0MB) used = 0 (0.0MB) free = 179306496 (171.0MB) 0.0% used 当输出如下内容时： 13... 在控制台输入 1jmap -heap 7644 这时候可以看到显示的结果： 12345678910111213141516171819202122Heap Usage:PS Young GenerationEden Space: capacity = 67108864 (64.0MB) used = 1342200 (1.2800216674804688MB) free = 65766664 (62.71997833251953MB) 2.0000338554382324% usedFrom Space: capacity = 11010048 (10.5MB) used = 0 (0.0MB) free = 11010048 (10.5MB) 0.0% usedTo Space: capacity = 11010048 (10.5MB) used = 0 (0.0MB) free = 11010048 (10.5MB) 0.0% usedPS Old Generation capacity = 179306496 (171.0MB) used = 1345272 (1.2829513549804688MB) free = 177961224 (169.71704864501953MB) 0.7502639502809759% used 对照上面的代码，可以看到堆中内存的占用和回收情况。 重新运行代码，并在终端上输入 1jconsole 这时候，会打开jconsole的图形界面，观察一段时间，可以看到如下的结果： 问题：垃圾回收后，内存占用仍然很高 5.方法区 5.1 定义 参考资料：JVM规范-方法区定义 5.2 组成 5.3 方法区内存溢出代码如下： 123456789101112131415161718192021//继承ClassLoader 可以用来加载类的二进制字节码public class TestDemo03 extends ClassLoader&#123; public static void main(String[] args) &#123; int j = 0; try &#123; TestDemo03 testDemo03 = new TestDemo03(); for (int i = 0; i &lt; 10000; i++,j++) &#123; //ClassWriter 作用是生成类的二进制字节码 ClassWriter classWriter = new ClassWriter(0); // visit方法 （版本号，方法修饰符public，类名，包名，类的父类，实现的接口名称） classWriter.visit(Opcodes.V1_8,Opcodes.ACC_PUBLIC,&quot;Class&quot;+i,null,&quot;java/lang/Object&quot;,null); byte[] code = classWriter.toByteArray(); testDemo03.defineClass(&quot;Class&quot;+i,code,0,code.length); &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125;finally &#123; System.out.println(j); &#125; &#125;&#125; java8以前会导致永久代内存溢出 演示永久代内存溢出java.lang.OutofMemoryError: PermGen space 1-XX:MaxPermSize=10m java8以后会导致元空间内存溢出 由于java8后元空间在物理内存中，这里演示元空间内存溢出java.lang.OutofMemoryError: Metaspace 1-XX:MaxMetaspaceSize=10m 结果如下： 1234563331Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Compressed class space at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at pub.iyu.se.jvmday.day01.TestDemo03.main(TestDemo03.java:25) 实际场景动态产生class并加载的场景很多：spring，mybatis… cglib 5.4 运行时常量池 常量池，就是一张表，虚拟机指令根据这张常量表找到要执行的类名，方法名，参数类型，字面量等信息 运行时常量池，常量池是*.class文件中的，当该类被加载，它的常量池信息就会放入运行时常量池，并把里面的符号地址变为真实地址 123456//二进制字节码（类基本信息，常量池，类方法定义，包含了虚拟机指令）public class TestDemo04 &#123; public static void main(String[] args) &#123; System.out.println(&quot;hello niko&quot;); &#125;&#125; 使用javap指令（javap能对给定的class文件提供的字节代码进行反编译） 1javap -v TestDemo04.class 输出结果如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879Classfile /E:/TestJava/target/classes/pub/iyu/se/jvmday/day01/TestDemo04.class Last modified 2020-11-02; size 610 bytes MD5 checksum 98f958bafd4c5329e4a8734cac14cf8a Compiled from &quot;TestDemo04.java&quot;public class pub.iyu.se.jvmday.day01.TestDemo04 minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #6.#21 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Fieldref #22.#23 // java/lang/System.out:Ljava/io/PrintStream; #3 = String #24 // hello niko #4 = Methodref #25.#26 // java/io/PrintStream.println:(Ljava/lang/String;)V #5 = Class #27 // pub/iyu/se/jvmday/day01/TestDemo04 #6 = Class #28 // java/lang/Object #7 = Utf8 &lt;init&gt; #8 = Utf8 ()V #9 = Utf8 Code #10 = Utf8 LineNumberTable #11 = Utf8 LocalVariableTable #12 = Utf8 this #13 = Utf8 Lpub/iyu/se/jvmday/day01/TestDemo04; #14 = Utf8 main #15 = Utf8 ([Ljava/lang/String;)V #16 = Utf8 args #17 = Utf8 [Ljava/lang/String; #18 = Utf8 MethodParameters #19 = Utf8 SourceFile #20 = Utf8 TestDemo04.java #21 = NameAndType #7:#8 // &quot;&lt;init&gt;&quot;:()V #22 = Class #29 // java/lang/System #23 = NameAndType #30:#31 // out:Ljava/io/PrintStream; #24 = Utf8 hello niko #25 = Class #32 // java/io/PrintStream #26 = NameAndType #33:#34 // println:(Ljava/lang/String;)V #27 = Utf8 pub/iyu/se/jvmday/day01/TestDemo04 #28 = Utf8 java/lang/Object #29 = Utf8 java/lang/System #30 = Utf8 out #31 = Utf8 Ljava/io/PrintStream; #32 = Utf8 java/io/PrintStream #33 = Utf8 println #34 = Utf8 (Ljava/lang/String;)V&#123; public pub.iyu.se.jvmday.day01.TestDemo04(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 11: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Lpub/iyu/se/jvmday/day01/TestDemo04; public static void main(java.lang.String[]); descriptor: ([Ljava/lang/String;)V flags: ACC_PUBLIC, ACC_STATIC Code: stack=2, locals=1, args_size=1 0: getstatic #2 // Field java/lang/System.out:Ljava/io/PrintStream; 3: ldc #3 // String hello niko 5: invokevirtual #4 // Method java/io/PrintStream.println:(Ljava/lang/String;)V 8: return LineNumberTable: line 13: 0 line 14: 8 LocalVariableTable: Start Length Slot Name Signature 0 9 0 args [Ljava/lang/String; MethodParameters: Name Flags args&#125;SourceFile: &quot;TestDemo04.java&quot; 5.5 String Table思考如下代码的打印结果： 12345678910111213141516String s1 = &quot;a&quot;;String s2 = &quot;b&quot;;String s3 = &quot;a&quot; + &quot;b&quot;;String s4 = s1 + s2;String s5 = &quot;ab&quot;;String s6 = s4.intern();System.out.println(s3 == s4);System.out.println(s3 == s5);System.out.println(s3 == s6);String x2 = new String(&quot;c&quot;) + new String(&quot;d&quot;);String x1 = &quot;cd&quot;;x2.intern();System.out.println(x1 == x2); 运行结果如下： 1234falsetruetruefalse 1 String Table 特性 常量池中的字符串仅是符号，第一次用到时才变为对象 利用串池的机制，来避免重复创建字符串对象 字符串变量拼接的原理是StringBuilder(1.8) 字符串常量拼接的原理是编译期优化 可以使用intern方法，主动将串池中还没有的字符串对象放入串池 java8将这个字符串对象尝试放入串池，如果有则并不会放入，如果没有则放入串池，会把串池中的对象返回 java6将这个字符串对象尝试放入串池，如果有则并不会放入，如果没有会把此对象复制一份放入串池，会把串池中的对象返回 2 String Table 位置 java6 String Table在永久代PermGen中 java8 String Table在堆Heap中 3 String Table 垃圾回收4 String Table 性能调优 调整 -XX:StringTableSize=桶个数 考虑将字符串对象是否入池（串池） 6.直接内存6.1 定义Direct Memory 属于操作系统内存 常见于NIO操作时，用于数据缓冲区 分配回收成本较高，但读写性能高 不受JVM内存回收管理 6.2 分配和回收原理 使用了Unsafe对象完成直接内存的分配回收，并且回收需要主动调用freeMemory方法 ByteBuffer的实现类内部，使用了Cleaner（虚引用）来监测ByteBuffer对象，一旦ByteBuffer对象被垃圾回收，那么就会由ReferenceHandler线程通过Cleaner的clean方法调用freeMemory来释放直接内存]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-day00]]></title>
    <url>%2Fposts%2F2020-11-01-JVM-day00%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp; 记录JVM的学习过程-开始 什么是JVM？定义：JVM（Java Virtual Machine）即Java程序的运行环境（Java二进制字节码的运行环境） 优点： 一次编写，到处运行 自动内存管理，垃圾回收功能 数组下标越界检查 多态 比较 JVM/JRE/JDK 学习JVM有什么用？ 面试 理解底层的实现原理 中高级程序员的必备技能 常见的JVM 维基百科 Version information 学习路线 参考资料]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[秋风瑟瑟，大浪向前推]]></title>
    <url>%2F%2Fposts%2F202010301.html</url>
    <content type="text"><![CDATA[窝在宿舍一天了，傍晚，脱掉身上的袄去买饭，走到宿舍楼下，阵阵风吹来，带些寒意，地下落叶一片，抬头看，树上的叶子也黄了一些，原来是秋天来了。 随着一件件等待着的事开始做，我也快要离开学校了，同样也很着急，工作还没有着落。 这个月17号参加的蓝桥杯，曾是我最想参加的，随着时间，以及对自己的认知，我知道算法这条路，并不适合我。水了一个二等奖了，比完赛，我自认拿不到奖，未知原因，两道基础题丢分，我很懊恼，但是最后，竟然能够拿奖，的确是”水杯”。看了A组的成绩，河南也就南阳理工能在郑大碗里分一杯羹。 宿舍也越来越空了，即使以前打游戏让我很烦，现在恍然一天就过去了，也并未做些什么。看到每一位同学离校，找到自己满意的工作，我很羡慕，也很慌张，我该何去何从。 今天，我来到了息县，准备参加明天的教师资格证考试。去息县的车上，父亲给我打视频，不方便接，下车天已黑，走在路上就打了回去，这学期，他们打给我的要多一点。听说我来到息县参加考试，叮嘱我注意安全，不要在外面逗留，是否还有钱（我每次回答都是还有，他总不信，今天听说我在外面，立马打了1000），好好休息，考个好成绩。 说来惭愧，教资真的备考不多，听到考个好成绩，我不知该怎么回答。自从这学期确定拿了励志奖学金，我有了一个想法，就是我自觉经济已经独立，我已经不需要家里面的经济支持了，这笔钱，足以我找到工作。 接下来聊聊我的小小自豪。我的BilibiliTask项目，目前有400+star，350+fork，就是这两天增长的很多，很感谢HelloGitHub的收录与推广。其实远不如以前获得很少的fork和star开心，以前我甚至会发到朋友圈^_^。不过我已经退圈有段时间了。 考完教资，我就要一边找工作（真的要开始找了），一边着手软考了。如同波浪一样，从九月将我推到了11月，推离学校。愿一切安好。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BilibiliTask帮助文档]]></title>
    <url>%2F%2Fposts%2F202010191.html</url>
    <content type="text"><![CDATA[Bilibili助手 简介👯✨😄📫 哔哩哔哩(B站)自动完成每日任务，投币，点赞，直播签到，自动兑换银瓜子为硬币，自动送出即将过期礼物，漫画App签到，大会员领取B币卷等。每天获得65点经验，助你快速升级到Lv6。 开源不易，如果本项目对你有帮助，那么就请给个star吧。😄 功能 自动获取经验(投币、点赞、分享视频) 直播辅助(直播签到，自动送出即将过期的礼物) 自动兑换银瓜子为硬币 自动领取年度大会员每月权益(每月1号领取B币劵、权益礼包) 月底自动用B币卷给自己充电(每月28号) 月底自动用B币卷兑换金瓜子(每月28号) 漫画辅助脚本(漫画APP签到) 支持功能自定义(自定义投币数量，银瓜子兑换硬币开关等) 账户失效提醒(发送到你的微信或者钉钉) 增加用server酱推送运行结果到微信 增加推送运行结果到钉钉 关于日志中的 ✔ 和 ❌ 说明 符号 说明 ✔ 本次程序运行，成功的执行了代码，并完成了任务(例如，分享视频，今日未分享过，那么程序就应该请求分享视频的接口，协助完成分享视频的任务)。 ❌ 可能两种操作会出现这个符号。1.程序成功的执行了，尝试去完成任务，但是中途遇到了未知的失败。2.程序成功的执行了，检测到此类任务已经完成(例如，分享视频，今日已经分享过，那么程序不应该请求分享视频的接口，无需协助完成分享视频的任务)，就无需再去完成。可以理解为跳过或遇到错误。 使用方法1.fork本项目github配置教程是最新的。 项目地址：srcrs/BilibiliTask 2.准备需要的参数本项目成功运行需要三个参数，分别是SESSDATA，bili_jct，DedeUserID 打开b站首页（任意一个页面都行）–&gt; 按下F12 –&gt; Application –&gt; Cookies –&gt; https://www.bilibili.com 找到所需要参数对应的数据，找不到可能是你的账号没有登录。 3.将获取到参数填到Secrets在Secrets中的Name和Value格式如下： Name Value BILI_JCT xxxxx DEDEUSERID xxxxx SESSDATA xxxxx 将上一步获取的参数，替换对应的xxxxx，一共需要添加三个键值对。 4.开启actions默认actions处于禁止状态，在Actions选项中开启Actions功能，把那个绿色的长按钮点一下。 5.进行一次push操作发现有部分朋友的定时任务，在第二天没有正常执行。解决办法就是进行一次push操作。 打开README.md，将里面的 😄 删除一个即可。 6.运行一次工作流项目创建Wiki则会触发一次工作流。 Wiki –&gt; Create the first –&gt; Save Page 查看actions，显示对勾就说明运行成功了。以后会在每天的10：30执行，自动完成每日任务。 进阶使用配置文件说明配置文件的位置在src/main/resource/config.yml。 符号 说明 coin 代表投币的数量 [0,5] gift 是否需要送出即将过期礼物 [true,false] s2c 是否需要将银瓜子兑换硬币 [true,false] autoBCoin 月底自动使用B币卷 [{0,自己有其他用途},{1,给自己充电},{2,兑换成金瓜子}] 12345678910111213141516171819202122232425262728293031323334coin: 5 #每天需要投币的数量。[0,5]。gift: true #送出即将过期礼物。[true,false]s2c: true #银瓜子兑换为硬币。[true,false]autoBCoin: 1 #月底自动使用B币卷。[&#123;0,自己会使用&#125;,&#123;1,给自己充电&#125;,&#123;2,兑换成金瓜子&#125;]``` ### 推送运行结果到微信使用`server`酱将程序运行结果推送到微信。`server`酱官网：http://sc.ftqq.com+ 按照`server`酱官网使用教程，用`github`登录并绑定微信。+ 获得`SCKEY`并将其填入到`Secrets`中。在`Secrets`中的`Name`和`Value`格式如下：Name | Value-|-SCKEY | xxxxx这样就可以在微信接收到运行结果了。## 如何拉取最新代码1、查看是否有源头仓库的别名和地址```sh$ git remote -vorigin https://github.com/cmdcs/BilibiliTask.git (fetch)origin https://github.com/cmdcs/BilibiliTask.git (push)upstream https://github.com/srcrs/BilibiliTask (fetch)upstream https://github.com/srcrs/BilibiliTask (push) origin是你的仓库地址，upstream是你fork的源头仓库。通常第一次是没有upstream的。 2、添加源头仓库 1git remote add upstream https://github.com/srcrs/BilibiliTask 3、把上游仓库main分支的更新拉取到本地 1git pull upstream main 4、将更新后的代码推送到你的仓库 1git push origin main 由于添加有配置文件config.yml，有可能会覆盖你自定义的config.yml，需要注意。 参考项目happy888888/BiliExp]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[项目部署到tomcat无法显示验证码]]></title>
    <url>%2F%2Fposts%2F202010091.html</url>
    <content type="text"><![CDATA[起因记得在今年六月份做的安卓作业，后端使用的是SSM+Spring Security，并且添加了验证码，服务器的环境是ubuntu，web服务器是tomcat，当我把项目部署上去的时候，验证码却不能显示，但是在本地却是可以的。 前两天，我再次将web项目部署到服务器中，仍旧出现了这样的问题。 遇到的问题在linux服务器上使用tomcat部署web项目时，发现验证码刷新不出来，但是我在windows部署到tomcat却是正常的，令我很疑惑。 解决办法在tomcat里面的catalina.sh文件中，增加以下代码： 1JAVA_OPTS=&quot;$JAVA_OPTS -Djava.awt.headless=true&quot; 问题原因据说是因为Xsecurity的问题。我就在网上找关于Xsecurity是什么，一直也没有找到。等找到的时候再记录下来吧。 参考链接tomcat部署web服务，验证码刷新不出来]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生无极限]]></title>
    <url>%2F%2Fposts%2F202010011.html</url>
    <content type="text"><![CDATA[大学，貌似真的结束了。 今天是10月1号，国庆，中秋，一个平常的一天。再也不会那么正式的去上课，再也不用担心错过了清早的第一节课。 校内实习，录课已经完成了，就差教案还没写了。原本以为能讲一讲大学里的专业课，但是中小学，我实在是不知该讲什么，讲的是关于计算机基础，有很认真的准备，但是我，口齿不伶俐，讲的也不是多好。 有力的大巴，冲进了校园，原来大学的路这样宽，风景好。清晨，漫步，路上人很少，后来，自己也很少早起，常常晚睡。一晃一晃，又将要离去，何去何从。 将上次还未完成的日志框架笔记，又完善了一下，差不多就是这个点了，今天貌似就干了这件事，但沉下了心，希望明天能够继续，未来一两个月还有很多事要干，一定要沉下心。 今天有的同学就已经离校了，也许再见面的时候，就是毕业的时候了吧。八仙过海，各自展现神通，可是我，没有神通，希望自己能找个好路吧。 前段时间参加了一个网络安全竞赛，可是都不会，最让我可恨的是，明知道那道题的解法，当时却写不出来代码，久久不能忘怀。这是那场比赛唯一的遗憾。 没想到，大学还能拿一个励志奖学金，真是本年度到目前最大的惊喜，一方面含金量高，另一方面，也能解决我的经济问题，希望能坚持到我找到工作吧。还有一个惊喜就是我的开源项目（体量级算不上项目吧，就是一个脚本），目前有15个star，28个fork，我也很高兴了，以前开源的东西，虽然说也没什么，但是从未受到过关注。这是从0到1的一个过程。继续加油。 有时候，总是在想，人活这一辈子到底要做些什么，答案变了又变，日子就这样过去了，愿一切向好吧。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java日志框架（下）]]></title>
    <url>%2F%2Fposts%2F202009231.html</url>
    <content type="text"><![CDATA[学习目标 日志门面和日志实现的关系 SLF4J logback的使用 log4j2的使用 SpringBoot的日志使用 日志门面和日志实现的关系用户用户Commons-loggingSlf4jCommons-logging…Log4jJava.loggingSlf4j-nopSlf4j-simpleLogbackLog4j…日志门面日志门面…日志实现日志实现…Viewer does not support full SVG 1.1 日志框架出现的历史顺序： log4j –&gt; JUL –&gt; JCL –&gt; slf4j –&gt; logback –&gt; log4j2 Slf4j简单日志门面，对应的英文名叫做Simple Logging Facade，是存取日志的标准接口，包括slf4j、log4j、jdk logging api和apache common-log等具体实现。 slf4j日志门面主要提供两大功能： 日志框架的绑定 日志框架的桥接 slf4j只能绑定一个日志实现框架。 项目初始化导入相应的jar包 123456&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt; slf4j的日志级别error –&gt; wring –&gt; info –&gt; debug –&gt; trace slf4j绑定内置简单实现123456789101112&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- slf4j 内置简单实现 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt; 示例代码1234567891011121314151617181920212223242526272829303132package org.example;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class App&#123; // 获取日志记录对象 public static final Logger LOGGER = LoggerFactory.getLogger(App.class); public static void main( String[] args ) &#123; // 日志输出 LOGGER.error(&quot;error&quot;); LOGGER.warn(&quot;wring&quot;); LOGGER.info(&quot;info&quot;); LOGGER.debug(&quot;debug&quot;); LOGGER.trace(&quot;trace&quot;); // 使用占位符输出日志信息 String name = &quot;srcrs&quot;; Integer age = 14; LOGGER.info(&quot;用户，&#123;&#125; 年龄，&#123;&#125;&quot;,name,age); // 将系统的异常信息输出 try &#123; int i = 1/0; &#125; catch (Exception e) &#123; LOGGER.error(&quot;异常出现：&quot;,e); &#125; &#125;&#125; 上述代码我们就可以使用slf4j的内置简单实现输出日志。从而也可直到，slf4j的默认日志级别为info。 slf4j的绑定日志实现绑定的流程： 添加slf4j-api的依赖 使用slf4j的API在项目中进行统一的日志记录 绑定具体的日志实现框架 绑定已经实现了slf4j的日志框架，直接添加对应的依赖。 绑定没有实现slf4j的日志框架，先添加日志的适配器，在添加实现类的依赖 slf4j有且仅有一个日志实现框架的绑定（如出现多个默认使用第一个依赖日志实现） 实现原理 slf4j绑定logback导入logback的jar包 1234567891011&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-classic&lt;/artifactId&gt; &lt;version&gt;1.2.3&lt;/version&gt;&lt;/dependency&gt; slf4j日志开关1234567891011&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt; slf4j绑定log4j123456789101112131415161718&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- slf4j-log4j 适配器 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- log4j 日志实现 --&gt;&lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt; 绑定JUL123456789101112&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- slf4j-jul 适配器--&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-jdk14&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt; slf4j桥接器假设你正在使用slf4j以外的日志记录API，在不久的将来将不会切换到slf4j。桥接器就是为了解决这种情况。slf4j附带了几个桥接模块，这些模块将对log4j，jcl和java.util.logging API的调用重定向，就好像是使用slf4j api一样。 具体实现的步骤： 去除之前老的日志框架依赖 添加slf4j提供的桥接组件 为项目添加slf4j的具体实现 实现原理 测试桥接器开始时，项目使用的是log4j接口，现在需要换成slf4j+logback方式。 开始时项目 12345&lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt; 12345678910111213141516package org.example;import org.apache.log4j.BasicConfigurator;import org.apache.log4j.Logger;public class App&#123; // 定义 log4j 日志记录器 public static final Logger LOGGER = Logger.getLogger(App.class); public static void main(String[] args) &#123; // 初始化配置信息，暂不使用配置文件 BasicConfigurator.configure(); LOGGER.info(&quot;hello log4j&quot;); &#125;&#125; 升级为slf4j+logback 去除log4j的依赖。 123456789101112131415161718&lt;!-- slf4j 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- log4j-slf4j 桥接器 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- loback 日志实现 --&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-classic&lt;/artifactId&gt; &lt;version&gt;1.2.3&lt;/version&gt;&lt;/dependency&gt; log4j就已经成功转到了slf4j+logback。以上就是slf4j的桥接器使用的方法。 LogbackLogback是由log4j创始人设计的又一个开源日志组件。 Logback主要分为三个模块： logback-core：其它两个模块的基础模块 logback-classic：它是log4j的一个改良版本，同时它完整实现了slf4j API。 logback-access：访问模块与servlet容器集成提供通过Http来访问日志的功能。 logback日志级别error–&gt;warn–&gt;info–&gt;debug–&gt;trace 默认的日志级别为info。 logback入门程序123456789101112&lt;!-- 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 日志实现 --&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-classic&lt;/artifactId&gt; &lt;version&gt;1.2.3&lt;/version&gt;&lt;/dependency&gt; 1234567891011121314151617181920package org.example;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class App&#123; // 定义日志记录器对象 public static final Logger LOGGER = LoggerFactory.getLogger(App.class); public static void main( String[] args ) &#123; // 日志输出 LOGGER.error(&quot;error&quot;); LOGGER.warn(&quot;warn&quot;); LOGGER.info(&quot;info&quot;); LOGGER.debug(&quot;debug&quot;); LOGGER.trace(&quot;trace&quot;); &#125;&#125; logback基础配置logback会依次读取以下类型配置文件： logback.groovy logback-test.xml logback.xml 如果以上配置文件均不存在，就会采用默认的配置文件。 logback组件之间的关系。 logger：日志的记录器，把它关联到应用的对应的context上后，主要用于存放日志对象，也可以定义日志类型、级别。 Appender：用于指定日志输出的目的地，目的地可以是控制台、文件、数据库等等。 Loyout：负责把时间转换成字符串，格式化日志信息的输出。logback中Layout对象被封装在encoder中。 基本配置 在resource目录中创建logback.xml文件，填写如下的代码内容。 123456789101112131415161718192021222324252627282930313233343536&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;configuration&gt; &lt;!-- 配置集中管理属性 说白了就是设置静态属性， 后面使用的时候直接用$&#123;name&#125;即可。 --&gt; &lt;property name=&quot;pattern&quot; value=&quot;[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %c %M %L %thread %m%n&quot;&gt; &lt;!-- 日志输出格式： %-5level 日志级别 %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; 日期 %c 类的完整名称 %M method方法名 %L 行号 %thread 线程名 %m或者%msg 日志信息 %n 换行 --&gt; &lt;/property&gt; &lt;!-- 控制台日志输出的 appender --&gt; &lt;appender name=&quot;console&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt; &lt;!-- 控制输出流对象 默认 System.out 改为 System.err --&gt; &lt;target&gt;System.err&lt;/target&gt; &lt;!-- 日志消息格式配置 --&gt; &lt;encoder class=&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt; &lt;pattern&gt;$&#123;pattern&#125;&lt;/pattern&gt; &lt;/encoder&gt; &lt;/appender&gt; &lt;!-- root logger配置 --&gt; &lt;root level=&quot;ALL&quot;&gt; &lt;appender-ref ref=&quot;console&quot;&gt;&lt;/appender-ref&gt; &lt;/root&gt;&lt;/configuration&gt; 输出到文件 1234567891011121314151617&lt;!-- 定义日志文件的保存路径 --&gt;&lt;property name=&quot;log_dir&quot; value=&quot;D:/logs&quot;&gt;&lt;/property&gt;&lt;!-- 日志文件输出的 appender --&gt;&lt;appender name=&quot;file&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;&gt; &lt;!-- 日志文件的保存路径 --&gt; &lt;file&gt;$&#123;log_dir&#125;/logback.log&lt;/file&gt; &lt;!-- 日志消息格式配置 --&gt; &lt;encoder class=&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt; &lt;pattern&gt;$&#123;pattern&#125;&lt;/pattern&gt; &lt;/encoder&gt;&lt;/appender&gt;&lt;!-- root logger配置 --&gt;&lt;root level=&quot;ALL&quot;&gt; &lt;appender-ref ref=&quot;file&quot;/&gt;&lt;/root&gt; html格式输出到文件 12345678910111213141516171819&lt;!-- 定义日志文件的保存路径 --&gt;&lt;property name=&quot;log_dir&quot; value=&quot;D:/logs&quot;&gt;&lt;/property&gt;&lt;!-- html格式日志文件输出 appender --&gt;&lt;appender name=&quot;htmlFile&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;&gt; &lt;!-- 日志文件保存路径 --&gt; &lt;file&gt;$&#123;log_dir&#125;/logback.html&lt;/file&gt; &lt;!-- html 消息格式配置 --&gt; &lt;encoder class=&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;&gt; &lt;layout class=&quot;ch.qos.logback.classic.html.HTMLLayout&quot;&gt; &lt;pattern&gt;%-5level%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;%c%M%L%thread%m&lt;/pattern&gt; &lt;/layout&gt; &lt;/encoder&gt;&lt;/appender&gt;&lt;!-- root logger配置 --&gt;&lt;root level=&quot;ALL&quot;&gt; &lt;appender-ref ref=&quot;htmlFile&quot;/&gt;&lt;/root&gt; 日志拆分和归档压缩1234567891011121314151617181920&lt;!-- 定义日志文件的保存路径 --&gt;&lt;property name=&quot;log_dir&quot; value=&quot;D:/logs&quot;&gt;&lt;/property&gt;&lt;!-- 日志拆分和归档压缩 --&gt;&lt;appender name=&quot;rollFile&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt; &lt;!-- 日志消息格式配置 --&gt; &lt;encoder class=&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt; &lt;pattern&gt;$&#123;pattern&#125;&lt;/pattern&gt; &lt;/encoder&gt; &lt;!-- 拆分规则 --&gt; &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&gt; &lt;!-- 按照时间和压缩格式声明拆分的文件名 --&gt; &lt;fileNamePattern&gt;$&#123;log_dir&#125;/rolling.%d&#123;yyyy-MM-dd-HH-mm-ss&#125;.log%i.gz&lt;/fileNamePattern&gt; &lt;!-- 按照文件大小拆分 --&gt; &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt; &lt;/rollingPolicy&gt;&lt;/appender&gt;&lt;!-- root logger配置 --&gt;&lt;root level=&quot;ALL&quot;&gt; &lt;appender-ref ref=&quot;rollFile&quot;/&gt;&lt;/root&gt; 日志级别过滤器通常是写在appender中。 1234567891011&lt;appender&gt; &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt; &lt;!-- 日志过滤规则 --&gt; &lt;!-- 日志级别 --&gt; &lt;level&gt;ERROR&lt;/level&gt; &lt;!-- 超过规定日志级别则放行 --&gt; &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt; &lt;!-- 未超过日志级别则拦截 --&gt; &lt;onMismatch&gt;DENY&lt;/onMismatch&gt; &lt;/filter&gt;&lt;/appender&gt; 异步日志需要手动指定appender。 123456789&lt;!-- 异步日志 --&gt;&lt;appender name=&quot;async&quot; class=&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt; &lt;!-- 指定 appender --&gt; &lt;appender-ref ref=&quot;rollFile&quot;/&gt;&lt;/appender&gt;&lt;!-- root logger配置 --&gt;&lt;root level=&quot;ALL&quot;&gt; &lt;appender-ref ref=&quot;async&quot;/&gt;&lt;/root&gt; 自定义logger对象name设置logger对象的包，level设置日志级别，additivity这个值代表是否继承rootlogger，默认为true继承父对象，改为false则不继承了。 1234&lt;!-- 自定义logger对象 --&gt;&lt;logger name=&quot;org.example&quot; level=&quot;info&quot; additivity=&quot;false&quot;&gt; &lt;appender-ref ref=&quot;console&quot;/&gt;&lt;/logger&gt; logback.xml配置文件转换器当有一天，log4j的用户，想把日志转换为logback，还需要将配置文件也进行修改，logback官网有一个转换器，可以做这件事。 转递地址在这：log4j转logback 需要注意的是，log4j的输出字符串格式和logback有所区别，这个需要自己手动转换。例如%l在logback中是没有的。 记录tomcat日志这个暂时先放着。 log4j2Apache Log4j2 是对log4j的升级，同时参考了logback的一些优秀设计，主要有以下几点： 异常处理，logback中，Appender中的异常不会被应用感知到，但是在log4j2中，提供了一些异常处理机制。 性能提升，log4j2相较于log4j和logback都具有很明显的性能提升，后面会有官方的测试数据。 自动重载配置，参考了logback的设计，自动刷新参数配置，最实用的就是我们在生产上可以动态的修改日志的级别而无需重启应用。 无垃圾机制，log4j2在大部分情况加，都可以使用其设计的一套无垃圾机制，避免频繁的日志收集导致垃圾回收。 Log4j2也是日志门面，但是因为它的日志实现功能很强大，性能优越，所以一般当作日志实现。（不解） log4j2的日志级别fatal–&gt;error–&gt;warn–&gt;info–&gt;debug–&gt;trace 默认的日志级别为error。 log4j2入门程序单独使用log4j2实现 12345678910111213&lt;!-- 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-api&lt;/artifactId&gt; &lt;version&gt;2.12.1&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 日志实现 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-core&lt;/artifactId&gt; &lt;version&gt;2.12.1&lt;/version&gt;&lt;/dependency&gt; 123456789101112131415161718192021package org.example;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;public class App&#123; // 定义日志记录器对象 public static final Logger LOGGER = LogManager.getLogger(App.class); public static void main( String[] args ) &#123; // 日志消息输出 LOGGER.fatal(&quot;fatal&quot;); LOGGER.error(&quot;error&quot;); LOGGER.warn(&quot;warn&quot;); LOGGER.info(&quot;info&quot;); LOGGER.debug(&quot;debug&quot;); LOGGER.trace(&quot;trace&quot;); &#125;&#125; 一般单独使用log4j2比较少，更多的是使用下面一种方式。 使用slf4j+log4j2方式 这样貌似有点南辕北辙了。 12345678910111213141516171819202122&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.25&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-slf4j-impl&lt;/artifactId&gt; &lt;version&gt;2.12.1&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 日志门面 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-api&lt;/artifactId&gt; &lt;version&gt;2.12.1&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 日志实现 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-core&lt;/artifactId&gt; &lt;version&gt;2.12.1&lt;/version&gt;&lt;/dependency&gt; 1234567891011121314151617181920package org.example;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class App&#123; // 定义日志记录器对象 public static final Logger LOGGER = LoggerFactory.getLogger(App.class); public static void main( String[] args ) &#123; // 日志输出 LOGGER.error(&quot;error&quot;); LOGGER.warn(&quot;warn&quot;); LOGGER.info(&quot;info&quot;); LOGGER.debug(&quot;debug&quot;); LOGGER.trace(&quot;trace&quot;); &#125;&#125; log4j2配置在resource目录中创建log4j2.xml，日志的书写示例如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!-- status 日志框架本身的输出日志级别 --&gt;&lt;!-- monitorInterval 自动加载配置文件的间隔时间 --&gt;&lt;Configuration status=&quot;debug&quot; monitorInterval=&quot;5&quot;&gt; &lt;!-- 配置静态属性 通过$&#123;name&#125;来使用 --&gt; &lt;properties&gt; &lt;property name=&quot;LOG_HOME&quot;&gt;D:/logs&lt;/property&gt; &lt;/properties&gt; &lt;!-- 日志处理 --&gt; &lt;Appenders&gt; &lt;!-- 控制台输出 appender --&gt; &lt;Console name=&quot;Console&quot; target=&quot;SYSTEM_OUT&quot;&gt; &lt;PatternLayout pattern=&quot;%d&#123;HH:mm:ss.SSS&#125; [%t] [%-5level] %c&#123;36&#125;:%L --- %m%n&quot;/&gt; &lt;/Console&gt; &lt;!-- 文件输出 appender --&gt; &lt;File name=&quot;file&quot; fileName=&quot;$&#123;LOG_HOME&#125;/myfile.log&quot;&gt; &lt;PatternLayout pattern=&quot;[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l %c&#123;36&#125; - %m%n&quot;/&gt; &lt;/File&gt; &lt;!-- 使用随机读写流输出 appender --&gt; &lt;RandomAccessFile name=&quot;accessFile&quot; fileName=&quot;$&#123;LOG_HOME&#125;/myacclog.log&quot;&gt; &lt;PatternLayout pattern=&quot;[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l %c&#123;36&#125; - %m%n&quot;/&gt; &lt;/RandomAccessFile&gt; &lt;!-- 按一定的规则拆问日志文件输出 appender --&gt; &lt;RollingFile name=&quot;rollingFile&quot; filePattern=&quot;/Logs/$$&#123;date:yyyy-MM-dd&#125;/myrollog-%d&#123;yyyy-MM-dd-HH-mm&#125;-%i.log&quot; fileName=&quot;$&#123;LOG_HOME&#125;/myrollog.log&quot;&gt; &lt;!-- 日志级别过滤器 --&gt; &lt;ThresholdFilter level=&quot;debug&quot; onMatch=&quot;ACCEPT&quot; onMismatch=&quot;DENY&quot;/&gt; &lt;!-- 日志消息格式 --&gt; &lt;PatternLayout pattern=&quot;[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l %c&#123;36&#125; - %m%n&quot;/&gt; &lt;Policies&gt; &lt;!-- 在系统启动时，触发拆分规则，产生一个新的日志文件 --&gt; &lt;OnStartupTriggeringPolicy/&gt; &lt;!-- 按照文件的大小拆分，10MB --&gt; &lt;SizeBasedTriggeringPolicy size=&quot;10 MB&quot;/&gt; &lt;!-- 按照时间节点拆分，规则根据filePattern定义的 --&gt; &lt;TimeBasedTriggeringPolicy/&gt; &lt;/Policies&gt; &lt;!-- 在同一个目录下，文件的个数限定为 30 个，超过进行覆盖 --&gt; &lt;DefaultRolloverStrategy max=&quot;30&quot;/&gt; &lt;/RollingFile&gt; &lt;/Appenders&gt; &lt;!-- 使用 rootLogger 配置日志级别 level=“trace” --&gt; &lt;Loggers&gt; &lt;Root level=&quot;trace&quot;&gt; &lt;!-- 指定日志使用的处理器 --&gt; &lt;AppenderRef ref=&quot;Console&quot;/&gt; &lt;/Root&gt; &lt;/Loggers&gt;&lt;/Configuration&gt; log4j2异步日志通常是将Logger进行异步，Appender异步对于性能的提升并不明显。 异步日志需要先添加一个实现异步的jar包。 123456&lt;!-- 异步日志依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;com.lmax&lt;/groupId&gt; &lt;artifactId&gt;disruptor&lt;/artifactId&gt; &lt;version&gt;3.3.4&lt;/version&gt;&lt;/dependency&gt; AsyncAppender方式 12345678910111213&lt;Appenders&gt; &lt;File name=&quot;file&quot; fileName=&quot;$&#123;LOG_HOME&#125;/myfile.log&quot;&gt; &lt;PatternLayout pattern=&quot;[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l %c&#123;36&#125; - %m%n&quot;/&gt; &lt;/File&gt; &lt;Async name=Async&gt; &lt;AppenderRef ref=&quot;file&quot;&gt; &lt;/Async&gt;&lt;/Appenders&gt;&lt;Loggers&gt; &lt;Root level=&quot;trace&quot;&gt; &lt;!-- 使用异步 appender --&gt; &lt;AppenderRef ref=&quot;Async&quot;&gt;&lt;/Loggers&gt; AsyncLogger全局方式 在resource目录中创建log4j2.component.properties，里面内容如下。 1Log4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector AsyncLogger混合异步 1234567891011121314&lt;Appenders&gt; &lt;File name=&quot;file&quot; fileName=&quot;$&#123;LOG_HOME&#125;/myfile.log&quot;&gt; &lt;PatternLayout pattern=&quot;[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] %l %c&#123;36&#125; - %m%n&quot;/&gt; &lt;/File&gt;&lt;/Appenders&gt;&lt;Loggers&gt; &lt;!-- includeLocation 关闭日志的行号信息，防止降低性能 --&gt; &lt;!-- additivity 不再继承rootLogger --&gt; &lt;AsyncLogger name=&quot;org.example&quot; level=&quot;trace&quot; includeLocation=&quot;false&quot; additivity=&quot;false&quot;&gt; &lt;AppenderRef ref=&quot;file&quot;&gt; &lt;/AsyncLogger&gt; &lt;Root level=&quot;trace&quot;&gt; &lt;AppenderRef ref=&quot;file&quot;&gt;&lt;/Loggers&gt; SpringBoot中日志的使用springboot中默认是使用slf4j+logback的方式日志记录。 使用方法与上面类似，配置文件方式有些区别。 在application.properties添加如下配置信息。 12345678910# 指定自定义 logger 对象日志级别logging.level.com.example=trace# 指定控制台输出消息格式logging.pattern.console=[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %c %M %L %thread %m%n# 指定存放日志的具体路径#logging.file=D:/logs/springboot.log# logging.file已经过时，以后会使用下面一种方式，生成文件名spring.loglogging.file.path=D:/logs/springboot/# 指定日志文件消息格式logging.pattern.file=[%-5level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %c %M %L %thread %m%n 同时也可使用外带的日志配置文件，使用哪种日志实现，直接将其配置文件导进来即可。 将日志切换为log4j212345678910111213141516&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;exclusions&gt; &lt;!-- 排除logback --&gt; &lt;exclusion&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt;&lt;!-- 添加log4j2 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-log4j2&lt;/artifactId&gt;&lt;/dependency&gt;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从问问题方式看专业]]></title>
    <url>%2F%2Fposts%2F202009221.html</url>
    <content type="text"><![CDATA[最近有几个从b站来的好友加我微信，说来也上不了台面，是关于免流的问题，这也是我一直热衷于的，白嫖很爽，就是这样。乐于分享，让更多的人享受到白嫖的乐趣。 如何让热点免流，也曾让我久久不知其法，但最终我找到了那一条路。 你的热点具体要分享到哪里你的热点具体要分享到哪里不对，开代理应该没得办法，在同一局域网下才可以操作不对，开代理应该没得办法，在同一局域网&#xa;下才可以操作我描述一下我的使用场景我描述一下我的使用场景好好安卓，开了免流，然后 IOS 开飞行模式使用，开 WiFi 连接到安卓的热点上，IOS 查到的 IP 地址就是运营商的了，而不是免流的 IP安卓，开了免流，然后 IOS 开飞行模式使…有好的解决办法吗？有好的解决办法吗？ip：192.168.43.1端口：8080ip：192.168.43.1…把ios连接的wifi，到高级设置，设置这个代理把ios连接的wifi，到高级设置，设置这个代理解决了解决了Viewer does not support full SVG 1.1 之前有一个朋友，问过我关于热点免流的问题，又是画图，又是打比方，还是讲不通，可能是我表述的问题吧，结果就不了了之。今天又有一个朋友问我，场景这个词，我感觉非同寻常，我可能碰到一个行家。 客户端A客户端A运营商运营商不计费通道不计费通道TinyProxyTinyProxy开放热点开放热点客户端B客户端BTinyProxyTinyProxy不计费通道不计费通道使用使用付费通道付费通道开启开启连接连接使用使用Viewer does not support full SVG 1.1 还有一种可能当B客户端是IOS，或者是电脑，就要换一种思路了。同一个ip有着很多的端口，例如服务器的公网ip，8080代表着tomcat端口，3306是Mysql数据库连接的端口等，上网也同样是如此，B手机可以通过指定wifi的ip和端口，可以找到A手机的不计费流量通道。这个应该是TinyProxy的流量出口。 客户端A客户端A运营商运营商不计费通道不计费通道TinyProxyTinyProxy开放热点开放热点客户端B客户端B内网ip,端口内网ip,端口指定ip端口指定ip…通过通&#xa;过使用使用开启开启连接连接付费通道付费通道Viewer does not support full SVG 1.1]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java日志框架（上）]]></title>
    <url>%2F%2Fposts%2F202009191.html</url>
    <content type="text"><![CDATA[学习目标 日志的作用和目的 日志的框架 JUL的使用 log4j的使用 JCL的使用 日志文件日志文件是用于记录系统操作事件的记录文件或文件集合，具有处理历史数据、诊断问题的追踪以及理解系统的活动等重要作用。 在编写代码的时候，通常需要通过日志信息程序运行是否正常，出错时，根据日志信息能快速定位到错误地点。对于软件系统的开发，以及日后的维护工作，都有极其重要的作用。 日志框架问题日志框架需要考虑的问题： 控制日志输出的内容和格式 控制日志输出的位置 日志优化：一部日志，日志文件的归档和压缩 日志系统的维护 面向接口开发——日志门面 现有的日志框架日志分为两个大的部分，日志实现与日志门面。所谓日志门面，就是为各种日志API提供一个统一的接口，类似于操作数据库的JDBC，针对不同的数据库，都是操作同一套API接口。 日志门面： JCL slf4j 日志实现 JUL logback log4j log4j2 JULJUL全称Java util Logging是java原生的日志框架，使用时，不需要引用第三方类库，方便、简单、灵活。 LoggerLoggerHandlerHandlerApplicationApplicationOutside WorldOutside WorldFilterFilterFilterViewer does not support full SVG 1.1 Loggers：被称为日志记录器，应用程序通过获取Logger对象，调用其API来发布日志信息。Logger通常时应用系统访问日志系统的入口程序。 Appenders：也被称为Handlers，每个Logger都会关联一组Handlers，Logger会将日志交给关联Handlers处理，由Handlers负责将日志做记录。Handlers在此是一个抽象，其具体的实现决定了日志记录的位置可以是控制台、文件、网络上的其他日志服务或操作系统日志等。 Layouts：也被称为Formatters，它负责对日志事件中的数据进行转换和格式化。Layouts决定了数据在一条日志记录中的最终形式。 Level：每条日志消息都有一个关联的日志级别。该级别展现日志消息的重要性和紧迫性，不同的日志框架该级别会有细微差别。 Filters：过滤器，根据需要定制哪些信息会被记录，哪些信息会被放行。 日志级别severe 当程序运行错误的时候，就可以用severe来记录错误信息。 warning 记录程序运行遇到的问题，一般不会造成程序中止运行，但是也需要注意。 info 记录程序运行中的一些消息，例如数据库连接信息，io的传递信息等等。 config 记录配置信息。 fine finer finest 这三者都是记录debug信息。使用时用其中一个就行了。 除上述外，还有两个特殊级别，off（用来关闭日志记录），all（用来开启日志记录）。 示例代码基础类 123456package org.example.test;public class JULTest &#123; public static void main(String[] args) throws IOException &#123; &#125;&#125; 基本使用 123456789// 获取日志记录器对象Logger logger = Logger.getLogger(&quot;org.example.test.JULTest&quot;);// 日志输出logger.info(&quot;hello jul&quot;);// 通用方法进行日记记录logger.log(Level.INFO,&quot;info msg&quot;);String name = &quot;小明&quot;;String age = 12;logger.log(Level.INFO,&quot;用户信息：&#123;0&#125; &#123;1&#125;&quot;,new Object[]&#123;name,age&#125;); 日志级别 1234567891011// 获取日志记录器对象Logger logger = Logger.getLogger(&quot;org.example.test.JULTest&quot;);// 日志记录输出// jul默认的日志级别是infologger.severe(&quot;severe&quot;);logger.warning(&quot;warning&quot;);logger.info(&quot;info&quot;);logger.config(&quot;config&quot;);logger.fine(&quot;fine&quot;);logger.finer(&quot;finer&quot;);logger.finest(&quot;finest&quot;); JUL的默认级别时info，因此上述代码只会输出到info。 自定义配置日志级别 1234567891011121314151617181920212223242526272829// 获取日志记录器对象Logger logger = Logger.getLogger(&quot;org.example.test.JULTest&quot;);// 自定义日志级别// 关闭JUL默认的日志级别logger.setUseParentHandlers(false);//创建ConsoleHandlerConsoleHandler consoleHandler = new ConsoleHandler();// 创建格式转换对象SimpleFormatter simpleFormatter = new SimpleFormatter();// 进行关联consoleHandler.setFormatter(simpleFormatter);logger.addHandler(consoleHandler);// 配置自定义的日志级别logger.setLevel(Level.ALL);consoleHandler.setLevel(Level.ALL);// 日志记录输出logger.severe(&quot;severe&quot;);logger.warning(&quot;warning&quot;);logger.info(&quot;info&quot;);logger.config(&quot;config&quot;);logger.fine(&quot;fine&quot;);logger.finer(&quot;finer&quot;);logger.finest(&quot;finest&quot;); 在上述代码中，关闭JUL的默认配置，将日志的输出级别设置为ALL，所有的日志信息都将会输出。 日志输出到文件 12345678910111213141516171819202122232425262728// 获取日志记录器对象Logger logger = Logger.getLogger(&quot;org.example.test.JULTest&quot;);// 关闭JUL默认的日志级别logger.setUseParentHandlers(false);// 创建FileHandler，这里写日志文件的位置FileHandler fileHandler = new FileHandler(&quot;D:\\jul.log&quot;);// 创建格式转换对象SimpleFormatter simpleFormatter = new SimpleFormatter();// 进行关联fileHandler.setFormatter(simpleFormatter);logger.addHandler(fileHandler);// 配置自定义的日志级别logger.setLevel(Level.ALL);fileHandler.setLevel(Level.ALL);// 日志记录输出logger.severe(&quot;severe&quot;);logger.warning(&quot;warning&quot;);logger.info(&quot;info&quot;);logger.config(&quot;config&quot;);logger.fine(&quot;fine&quot;);logger.finer(&quot;finer&quot;);logger.finest(&quot;finest&quot;); 上述代码将日志信息输出到了文件中，日志级别同样是ALL。 logger对象父子关系 12345678910111213141516171819202122232425262728293031323334// 获取日志记录器对象Logger logger1 = Logger.getLogger(&quot;org.example.test.JULTest&quot;);// 获取日志记录器对象Logger logger2 = Logger.getLogger(&quot;org.example.test&quot;);// 测试是否是父子关系System.out.println(logger1.getParent() == logger2);// 所有日志记录器的顶级父元素 LogManager$RootLoggerSystem.out.println(&quot;Logger2 Parent:&quot;+logger2.getParent()+&quot;,name:&quot;+logger2.getParent().getName());// 关闭JUL默认的日志级别logger2.setUseParentHandlers(false);//创建ConsoleHandlerConsoleHandler consoleHandler = new ConsoleHandler();// 创建格式转换对象SimpleFormatter simpleFormatter = new SimpleFormatter();// 进行关联consoleHandler.setFormatter(simpleFormatter);logger2.addHandler(consoleHandler);// 配置自定义的日志级别logger2.setLevel(Level.ALL);consoleHandler.setLevel(Level.ALL);// 日志记录输出logger1.severe(&quot;severe&quot;);logger1.warning(&quot;warning&quot;);logger1.info(&quot;info&quot;);logger1.config(&quot;config&quot;);logger1.fine(&quot;fine&quot;);logger1.finer(&quot;finer&quot;);logger1.finest(&quot;finest&quot;); 上述代码展现了父子对象Logger对象关系，子承父业，父对象logger2设置日志级别为ALL，子对象的默认日志级别也变成了ALL。 日志配置在resource目录下创建logging.properties文件 1234567891011121314151617181920212223242526272829303132# RootLogger 顶级父元素制定的默认处理器为： ConsoleHandlerhandlers= java.util.logging.ConsoleHandler,java.util.logging.FileHandler# RootLogger 顶级父元素默认的日志级别为：ALL.level= ALL# 自定义 Logger 使用org.example.handlers = java.util.logging.ConsoleHandlerorg.example.level = CONFIGorg.example.userParentHandlers = false# 向日志文件文件输出 handler 对象# 指定日志文件的路径java.util.logging.FileHandler.pattern= D:/logs/java%u.log# 指定日志文件内容大小java.util.logging.FileHandler.limit= 50000# 指定日志文件级别java.util.logging.FileHandler.level= ALL# 指定日志文件数量java.util.logging.FileHandler.count= 1# 指定日志文件的输出格式java.util.logging.FileHandler.formatter= java.util.logging.SimpleFormatter# 指定文件输出以追加的方式java.util.logging.FileHandler.append= false# 向控制台输出的 handler 对象# 指定 handler 对象的日志级别java.util.logging.ConsoleHandler.level= ALL# 指定 handler 对象的日志消息信息格式对象java.util.logging.ConsoleHandler.formatter= java.util.logging.SimpleFormatter# 指定 handler 对象的字符集java.util.logging.ConsoleHandler.encoding= UTF-8 日志实现原理web应用web应用LoggerLoggerLogRecordLogRecordHandlerHandler输出输出LogManagerLogManagerLevelLevelFilterFilterFormatterFormatterViewer does not support full SVG 1.1 1 初始化LogManager 1.1 LogManager加载logging.properties配置1.2 添加Logger到LogManager 2 从单例LogManager获取Logger 3 设置级别Level，并指定日志记录LogRecord 4 Filter提供了日志级别之外更细粒度的控制 5 Handler是用来处理日志输出位置 6 Formatter是用来格式化LogRecord的 Log4jLog4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件等，可以定制每一条日志输出的格式，控制日志输出的级别，完成这些操作，仅仅只需要修改配置文件，并不用修改业务逻辑代码。 使用Log4j，首先需要导入Log4j的jar包，在maven项目中，只需引用相应坐标即可： 12345&lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt; 日志级别Log4j一共提供有六个日志级别： fatal 表示严重错误，通常会造成系统崩溃中止运行。 error 表示错误信息，不会影响系统运行。 warn 表示警告信息，可能会发生的问题。 info 程序运行中的信息，数据库连接，io操作等等。 debug 表示调试信息，一般在开发中使用。 trace 表示追踪信息，记录所有的流程信息。 Log4j的默认级别为debug。 示例代码基础类 123456package org.example;public class App&#123; public static void main(String[] args)&#123; &#125;&#125; 入门代码 12345678910111213141516// 初始化配置信息，暂不使用配置文件BasicConfigurator.configure();// 获取日志记录器对象Logger logger = Logger.getLogger(App.class);// 严重错误，一般会造成系统崩溃，或者不能运行logger.fatal(&quot;fatal&quot;);// 错误信息，不会影响系统的运行logger.error(&quot;error&quot;);// 警告信息，可能会发生问题logger.warn(&quot;warn&quot;);// 运行信息，数据连接，网络连接，IO操作等等logger.info(&quot;info&quot;);// 调试信息，一般在开发中使用，记录程序变化logger.debug(&quot;debug&quot;);// 追踪信息，记录程序所有的流程信息logger.trace(&quot;trace&quot;); 基本使用 一般Log4j的配置信息主要就是通过配置文件，因此代码一般不做过多的改动，只需要将上面的默认配置文件注释掉或者删掉，在resource目录下添加配置文件log4j.properties即可。 1234567891011121314// 获取日志记录器对象Logger logger = Logger.getLogger(App.class);// 严重错误，一般会造成系统崩溃，或者不能运行logger.fatal(&quot;fatal&quot;);// 错误信息，不会影响系统的运行logger.error(&quot;error&quot;);// 警告信息，可能会发生问题logger.warn(&quot;warn&quot;);// 运行信息，数据连接，网络连接，IO操作等等logger.info(&quot;info&quot;);// 调试信息，一般在开发中使用，记录程序变化logger.debug(&quot;debug&quot;);// 追踪信息，记录程序所有的流程信息logger.trace(&quot;trace&quot;); 日志配置在resource目录中创建log4j.properties文件 基本配置 最简单的配置，仅仅只配置了，日志级别，输出位置，输出格式。 1234567# 指定 RootLogger 顶级父元素默认配置# 指定日志级别=trace，使用的 appender 为consolelog4j.rootLogger = trace,console# 指定控制台日志输出的位置log4j.appender.console = org.apache.log4j.ConsoleAppender# 指定日志的输出格式 layoutlog4j.appender.console.layout = org.apache.log4j.SimpleLayout 开启log4j内置日志记录 在要记录的类代码中添加如下代码。 12// 开启 log4j 内置日志记录LogLog.setInternalDebugging(true); 开启后可以观察到log4j自身执行的日志信息。 日志输出格式 日志输出的格式，log4j提供了以下几种。 日志输出格式 作用 HTMLLayout 以html表格形式布局 PatternLayout 灵活指定布局模式 SimpleLayout 简单日志布局 TTCCLayout 包含产生时间、线程、类别等 通过修改，以下配置信息，就可实现简单的日志输出格式。 12# 指定日志的输出格式 layoutlog4j.appender.console.layout = org.apache.log4j.SimpleLayout 若是想实现自定义的日志输出格式，则需要指定日志的布局为PatternLayout，然后添加以下代码，就实现了自定义日志格式。 12# 指定日志格式的内容log4j.appender.console.layout.conversionPattern = [%-5p] %r %l %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %m%n 上述的一些代码定制日志输出格式，可在下面表格查找其含义。 符号 作用 %m 输出代码中指定的日志信息 %p 输出优先级，及 DEBUG、INFO 等 %n 换行符（windows平台的换行符为”\n”，Unix平台为”\n”） %r 输出自应用启动到输出该 log 信息耗费的毫秒数 %c 输出打印语句所属类的全名 %t 输出产生该日志的线程全名 %d 输出服务器的当前时间，默认为 ISO8601，也可以指定格式，如：%d{yyyy年MM月dd日 HH:mm:ss} %l 输出日志时间发生的位置，包括类名、线程、及在代码中的行数。如：Test.main(Test.java:10) %F 输出日志消息产生时所在的文件名称 %L 输出代码中的行号 %% 输出一个”%”字符 日志输出到文件 12345678910# 日志文件输出的 appender 对象log4j.appender.file = org.apache.log4j.FileAppender# 指定日志的的格式 layoutlog4j.appender.file.layout = org.apache.log4j.PatternLayout# 指定日志格式的内容log4j.appender.file.layout.conversionPattern = [%-5p] %r %l %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %m%n# 指定日志文件的保存路径log4j.appender.file.file = D:/logs/log4j.log# 指定日志文件的字符集log4j.appender.file.encoding = UTF-8 同时需要更改rootLogger 12# 指定日志级别=trace，使用的 appender 为console和filelog4j.rootLogger = trace,console,file 按大小日志文件拆分 当日志输出到文件的时候，需要考虑到一个问题，能否将所有的日志记录都输出到一个文件中，这是不友好的，当日志记录众多，查找起来相当复杂，所以要使用到文件拆分。 123456789101112131415# 按照文件大小拆分的 appender 对象# 日志文件输出的 appender 对象log4j.appender.rollingFile = org.apache.log4j.RollingFileAppender# 指定日志的的格式 layoutlog4j.appender.rollingFile.layout = org.apache.log4j.PatternLayout# 指定日志格式的内容log4j.appender.rollingFile.layout.conversionPattern = [%-5p] %r %l %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %m%n# 指定日志文件的保存路径log4j.appender.rollingFile.file = D:/logs/log4j.log# 指定日志文件的字符集log4j.appender.rollingFile.encode = UTF-8# 指定日志文件内容的大小log4j.appender.rollingFile.maxFileSize = 1MB# 指定日志文件的数量log4j.appender.rollingFile.maxBackupIndex = 10 同业需要修改rootLogger 1log4j.rootLogger = trace,rollingFile 按时间拆分日志文件 123456789101112# 按照时间规则拆分的 appender 对象log4j.appender.dailyFile = org.apache.log4j.DailyRollingFileAppender# 指定日志的的格式 layoutlog4j.appender.dailyFile.layout = org.apache.log4j.PatternLayout# 指定日志格式的内容log4j.appender.dailyFile.layout.conversionPattern = [%-5p] %r %l %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %m%n# 指定日志文件的保存路径log4j.appender.dailyFile.file = D:/logs/log4j.log# 指定日志文件的字符集log4j.appender.dailyFile.encode = UTF-8# 指定日期拆分规则log4j.appender.dailyFile.datePattern = &#x27;.&#x27;yyyy-MM-dd-HH-mm-ss 修改rootLogger 1log4j.rootLogger = trace,dailyFile 将日志文件输出到数据库 首先需要在数据库中创建一个表 12345678910111213CREATE TABLE `log` ( `log_id` int(11) NOT NULL AUTO_INCREMENT, `project_name` varchar(255) DEFAULT NULL COMMENT &#x27;项目名&#x27;, `create_date` varchar(255) DEFAULT NULL COMMENT &#x27;创建时间&#x27;, `level` varchar(255) DEFAULT NULL COMMENT &#x27;优先级&#x27;, `category` varchar(255) DEFAULT NULL COMMENT &#x27;所在类的全类名&#x27;, `file_name` varchar(255) DEFAULT NULL COMMENT &#x27;输出日志消息产生时所在的文件名称&#x27;, `thread_name` varchar(255) DEFAULT NULL COMMENT &#x27;日志事件的线程名&#x27;, `line` varchar(255) NOT NULL COMMENT &#x27;行号&#x27;, `all_category` varchar(255) DEFAULT NULL COMMENT &#x27;日志事件的发生位置&#x27;, `message` varchar(255) DEFAULT NULL COMMENT &#x27;输出代码中指定的消息&#x27;, PRIMARY KEY (`log_id`)) ENGINE=InnoDB AUTO_INCREMENT=6005 DEFAULT CHARSET=utf8; 在pom.xml中添加mysql数据库的连接器。 12345&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.19&lt;/version&gt;&lt;/dependency&gt; 然后在配置文件中添加数据库的信息。针对不同的数据库有不同的实现，这里使用的是mysql。 12345678# mysqllog4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppenderlog4j.appender.logDB.layout = org.apache.log4j.PatternLayoutlog4j.appender.logDB.Driver = com.mysql.jdbc.Driverlog4j.appender.logDB.URL = jdbc:mysql://localhost:3306/srcrs?useSSL=false&amp;amp;serverTimezone=UTClog4j.appender.logDB.User = rootlog4j.appender.logDB.Password = 123456log4j.appender.logDB.Sql = INSERT INTO log(project_name,create_date,level,category,file_name,thread_name,line,all_category,message) values(&#x27;itcast&#x27;,&#x27;%d&#123;yyyy-MM-dd HH:mm:ss&#125;&#x27;,&#x27;%p&#x27;,&#x27;%c&#x27;,&#x27;%F&#x27;,&#x27;%t&#x27;,&#x27;%L&#x27;,&#x27;%l&#x27;,&#x27;%m&#x27;) 更改rootLogger 1log4j.rootLogger = trace,logDB 自定义logger配置 这个是仅仅针对这个org.example包下的类文件有用 1log4j.logger.org.example = info,file 对于父对象rootLogger，则会进行继承，日志的级别将进行覆盖，日志输出的位置将进行合并。 1log4j.rootLogger = trace,console 日志实现原理Log4j主要由Loggers（日志记录器）、Appenders（输出端）和Layout（日志格式化器）组成。其中Loggers控制日志的输出级别与日志是否输出；Appenders指定日志的输出方式（输出到控制台、文件等）；Layout控制日志信息的输出格式。 日志输出位置 作用 ConsoleAppender 输出到控制台 FileAppender 输出到文件 DailyRollingFileAppender 按时间产生日志文件 RollingFileAppender 按文件大小产生新文件 WriterAppender 将日志按流的方式输出到任何位置 JCL全名叫做Jakarta Commons Logging，是Apache提供的一个通用日志API。JCL为日志门面，为所有的java日志实现提供一个统一的接口，自身也提供了一个日志实现SimpleLog，允许开发人员使用Log4j，JUL日志实现。 JCL有两个基本的抽象类，Log（基本记录器）和LogFactory（创建Log对象）。 App(Java应用)App(Java应用)JCLJCLLog4jLog4jJULJULSimpleLogSimpleLogViewer does not support full SVG 1.1 项目初始化在pom.xml中导入JCL的相应的坐标。 12345&lt;dependency&gt; &lt;groupId&gt;commons-logging&lt;/groupId&gt; &lt;artifactId&gt;commons-logging&lt;/artifactId&gt; &lt;version&gt;1.2&lt;/version&gt;&lt;/dependency&gt; 基础类 1234567package org.example;public class App&#123; public static void main( String[] args )&#123; &#125;&#125; JUL实现入门代码 1234// 获取 log 日志记录器对象Log log = LogFactory.getLog(App.class);// 日志记录输出log.info(&quot;hello jcl&quot;); Log4j实现在pom.xml中插入log4j的坐标 12345&lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt; 在resource目录中创建log4j.properties文件，写入如下内容。 1234567# 指定 RootLogger 顶级父元素默认配置# 指定日志级别=trace，使用的 appender 为consolelog4j.rootLogger = trace,console# 指定控制台日志输出的位置log4j.appender.console = org.apache.log4j.ConsoleAppender# 指定日志的输出格式 layoutlog4j.appender.console.layout = org.apache.log4j.SimpleLayout JCL原理内置有日志实现的一个顺序，优先级高的执行了，优先级低的就会被屏蔽。 123456private static final String[] classesToDiscover = new String[]&#123; &quot;org.apache.commons.logging.impl.Log4JLogger&quot;, &quot;org.apache.commons.logging.impl.Jdk14Logger&quot;, &quot;org.apache.commons.logging.impl.Jdk13LumberjackLogger&quot;, &quot;org.apache.commons.logging.impl.SimpleLog&quot;&#125;; «interface»Log«interface»…Jdk14LoggerJdk14LoggerLog4JLoggerLog4JLoggerSimpleLogSimpleLogJdk13LumberjackLoggerJdk13LumberjackLoggerViewer does not support full SVG 1.1 灵魂拷问，优先级低的如何让它实现呢？ 参考链接全面学习多种日志框架]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[轮回]]></title>
    <url>%2F%2Fposts%2F202009131.html</url>
    <content type="text"><![CDATA[不知不觉，大学四年悄然过去，耳边仍回荡着”四年很长，但也很短。”，即将又要开始新的生活，焦虑，不安。 今天在澡堂洗澡，大概是个新生，问我如何放出水来，解答。记得我初次来澡堂洗澡，何尝不是一样，不知如何放水，请教别人，现在我已大四。 从不熟悉到熟悉，不需很久。久了便会腻。 在大学的第一天早晨，我很早就起床了，到校园转了一下，发现人并不多，走在操场边上，看到有人在跑步，我就很羡慕，暗暗鼓励我也要早起跑步，然后几年大概只坚持了很小一段时间，稀稀散散，记不清了。 千千万万的我们在走着前人走过的路，多少不一样的人在演绎者一样的故事，高考不好，并不只是你自己难过，还有伪装着的人。同一片天空下，阳光普照大地，他们都在活着，眼里有光。 12年的一部纪录片，让我知道(即使已明白)生活并不如意识形态展现的那样好，全面建成小康社会，共富裕，不过是个口号。龙生龙，凤生凤，老鼠的儿子会打洞。咱们的社会，更多的还是子承父业，普通人的出路，并不比十年前简单。 我永远不会那么洒脱一点，我永远会想的太多。认真做事，真心待人。这是我的准则。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[设计模式之原型模式]]></title>
    <url>%2F%2Fposts%2F202009091.html</url>
    <content type="text"><![CDATA[闲聊最近看到原型模式，老师最先开始举了一个例子，假如每个对象的内容都是一样的，这样的对象需要十个，你要怎么去创建这十个对象？我首先想到的就是我要去new十个，但这绝不是最好的方法。记得以前通过java四大接口之一Cloneable的clone方法创建过对象，原型模式就是用这种方法实现的。 我有一个疑问，当创建一个对象足够简单，原型模式存在的意义是什么？可能写完这个我就明白了。学原型模式必不可少接触深克隆和浅克隆，有区别是因为类的成员变量中包含引用数据（即对象），浅克隆引用数据类型的地址不会改变，深克隆引用数据类型的地址会重新分配。 克隆的两个对象地址是一样的吗？ 什么是原型模式原型模式是一种创建型设计模式，Prototype模式允许一个对象再创建另外一个可定制的对象，根本无需知道任何如何创建的细节，工作原理是：通过将一个原型对象传给那个要发动创建的对象，这个要发动创建的对象通过请求原型对象拷贝它们自己来实施创建。 原型模式能解决什么问题某些结构复杂的对象的创建工作（这个是确实，假如创建一个对象很复杂，但是对象的内容是一致的，通过原型模式确实很方便）；由于需求的变化，对象经常面临着剧烈的变化，但是它们却拥有比较稳定的接口（这个概念搞不清楚）。 我觉得能用到的时候，也就是当创建这个对象比较复杂的时候。 浅克隆与深克隆浅克隆：创建一个新对象，新对象的属性和原来对象完全相同，对于非基本类型属性，仍指向原有属性所指向的对象的内存地址。 深克隆：创建一个新对象，属性中引用的其他对象也会被克隆，不在指向原有对象地址。 原型模式的UML图&lt;&lt;Interface&gt;&gt;Prototype+ clone(): Prototype&lt;&lt;Interface&gt;&gt;…ConcretePrototype2+ clone(): PrototypeConcretePrototype1+ clone(): PrototypeClient+ prototype: Prototype+ Client()+ operation(): voidViewer does not support full SVG 1.1 一共有三个角色，客户角色，抽象原型角色，具体原型角色，居于此就可以构建一个很好的原型模式。 浅克隆接下来用代码实现一下浅克隆与深克隆。 123456789101112131415161718192021222324252627282930313233package org.example.sheep;public class ShallowClone &#123; public static void main(String[] args) throws CloneNotSupportedException &#123; Person person1 = new Person(&quot;小黑&quot;,20); person1.head = new Head(); Person person2 = (Person) person1.clone(); System.out.println(person1); System.out.println(person2); System.out.println(person1.head == person2.head); &#125;&#125;class Person implements Cloneable&#123; String name; Integer age; Head head; public Person(String name, Integer age) &#123; this.name = name; this.age = age; &#125; @Override protected Object clone() throws CloneNotSupportedException &#123; return super.clone(); &#125;&#125;class Head implements Cloneable&#123; @Override protected Object clone() throws CloneNotSupportedException &#123; return super.clone(); &#125;&#125; 输出结果为： 123org.example.sheep.Person@677327b6org.example.sheep.Person@14ae5a5true true代表引用数据相同，这个就是浅克隆。 深克隆1234567891011121314151617181920212223242526272829303132333435package org.example.sheep;public class DeepClone &#123; public static void main(String[] args) throws CloneNotSupportedException &#123; Person person1 = new Person(&quot;小黑&quot;,20); person1.head = new Head(); Person person2 = (Person) person1.clone(); System.out.println(person1); System.out.println(person2); System.out.println(person1.head == person2.head); &#125;&#125;class Person implements Cloneable&#123; String name; Integer age; Head head; public Person(String name, Integer age) &#123; this.name = name; this.age = age; &#125; @Override protected Object clone() throws CloneNotSupportedException &#123; Person person = (Person) super.clone(); person.head = (Head) head.clone(); return person; &#125;&#125;class Head implements Cloneable&#123; @Override protected Object clone() throws CloneNotSupportedException &#123; return super.clone(); &#125;&#125; 输出结果为： 123org.example.sheep.Person@677327b6org.example.sheep.Person@14ae5a5false false代表引用数据不相同，这个就是深克隆。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[类初始化和实例初始化]]></title>
    <url>%2F%2Fposts%2F202009061.html</url>
    <content type="text"><![CDATA[一道题测试java学的咋样。此前就已经看过这道题，但是刚看了一下还是不会，走马观花，不得其理。 题目这道题涉及到两个部分，一个是类初始化的过程，一个是实例初始化的过程，如果没有搞清楚这两个问题，这题还是有点难度的。 题目的代码是这样的，有一个父类有一个子类，求执行代码输出的结果。 123456789101112131415161718192021222324package org.example;public class Father &#123; private int i = test(); private static int j = method(); static &#123; System.out.print(&quot;(1)&quot;); &#125; Father()&#123; System.out.print(&quot;(2)&quot;); &#125; &#123; System.out.print(&quot;(3)&quot;); &#125; public int test()&#123; System.out.print(&quot;(4)&quot;); return 1; &#125; public static int method()&#123; System.out.print(&quot;(5)&quot;); return 1; &#125;&#125; 1234567891011121314151617181920212223242526272829package org.example;public class Son extends Father&#123; private int i = test(); private static int j = method(); static &#123; System.out.print(&quot;(6)&quot;); &#125; Son()&#123; System.out.print(&quot;(7)&quot;); &#125; &#123; System.out.print(&quot;(8)&quot;); &#125; public int test()&#123; System.out.print(&quot;(9)&quot;); return 1; &#125; public static int method()&#123; System.out.print(&quot;(10)&quot;); return 1; &#125; public static void main(String[] args) &#123; Son s1 = new Son(); System.out.println(); Son s2 = new Son(); &#125;&#125; 分析不妨思考几分钟，结果是什么，也许会出乎意料。 代码中涉及了好几个部分例如静态属性，静态方法，静态代码块，代码块等等，要搞明白各部分哪些应该在类初始化执行，哪些应该在实例初始化执行。 假如现在先把子类主函数中的代码删掉,这就相当于类的初始化了。 123Son s1 = new Son();System.out.println();Son s2 = new Son(); 然后运行代码，结果为 (5)(1)(10)(6)。 说明这部分就是进行了类初始化，类初始化执行了&lt;clinit&gt;()方法，那么它执行了哪些方法？由静态类变量显示赋值代码和静态代码块组成。 并且类变量显示赋值代码和静态代码块从上到下顺序执行，需要注意&lt;clinit&gt;()方法只执行一次。 子类初始化，父类要先于子类初始化。回归到代码中，父类要先开始初始化，执行循序如下： 12(1) j = method();(2) 父类的静态代码块 然后再进行子类初始化： 12(1) j = method();(2) 子类静态代码块 这样正好可以得到结果(5)(1)(10)(6)。 然后再把刚才主函数中删除的代码添加回来，下一步就要进行实例的初始化了。实例初始化实际上就是执行了&lt;init&gt;()方法，实例初始化又执行了哪些方法呢？实例初始化可以执行多次，创建一个实例则执行一次，而类初始化仅在程序运行开始时执行一次。 &lt;init&gt;()方法由非静态实例变量显示赋值代码和非静态代码块、对应构造器代码组成，子类实例化，父类同样也要先于子类，在子类的构造方法的第一行代码默认有一个super()，简单来说，就是先要执行父类的构造方法。其中，super（）最先开始执行，非静态实例变量显示赋值代码和非静态代码块代码从上到下顺序执行，而对应构造器的代码最后执行。 按照这个方法，在回归到代码中。子类实例化的顺序： 1234(1) super();(2) i = test();(3) 子类的非静态代码块(4) 子类的无参构造 父类实例化的过程： 1234(1) super();(2) i = test();(3) 父类的非静态代码块(4) 父类的无参构造 这里还是会涉及到方法重写的一个问题，其实父类i = test()执行的是子类重写过的test()方法，神奇。 要搞清楚这个问题，首先要补充一个概念，什么叫对象的多态性。 所谓对象多态性指的是，非静态方法前面实际上有一个默认的对象this，this在构造器它表示的是正在创建的对象，因为此时正在创建子类Son的实例对象，因此这个this便代表的是子类Son。 所以就能够解释为什么父类执行的是子类重写过的test()方法了。 这样分析下来结果也就显而易见了。 12(5)(1)(10)(6)(9)(3)(2)(9)(8)(7)(9)(3)(2)(9)(8)(7) 参考连接java经典面试题之类初始化和实例初始化]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[铁打的学校，流水的学生]]></title>
    <url>%2F%2Fposts%2F202009021.html</url>
    <content type="text"><![CDATA[或许明日太阳西下倦鸟已归时，你将已经踏上旧时的归途，人生难得再次寻觅相知的伴侣，生命终究难舍蓝蓝的白云天。 今天再次回到高中校园，三年过去了，以前的一切还是那么熟悉。 一位老师曾说过，铁打的学校，流水的学生，现在感来确实如此，学生换了一波又一波，然而学校一直都在那，老师仍在一遍又一遍的传道受业，只是一个小小的轮回。 高中三年，对于新生来说是一个崭新的开始，人生道路从此启航，望加油。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[贴吧自动签到]]></title>
    <url>%2F%2Fposts%2F202008281.html</url>
    <content type="text"><![CDATA[:::tip又在琢磨爬虫，我本以为像以前一样，没想到又不知道踩什么坑进去了。::: 这一次也是主要利用了三个接口，只需要一个BDUSS就可以了，到期时间在2028年，挺长的。一个是类似于登录的接口，用于拿到tbs，使用签到接口的时候需要用到这个参数，还有一个接口是用于获取贴吧列表的，万事必备。 HttpUrlConnection在安卓网络开发中曾经使用过，仍旧记得volley的post请求携带参数，总是返回参数错误信息，这次仍然使用的是HttpUrlConnection。get请求不必多说，借于前面的经验，我仍然像以前那么携带参数，如下代码所示。 1234567891011121314151617181920212223242526URL url = new URL(SIGN_URL); HttpURLConnection connection = (HttpURLConnection) url.openConnection(); connection.setRequestMethod(&quot;POST&quot;); connection.setDoOutput(true); connection.setDoInput(true); connection.setUseCaches(false); connection.setRequestProperty(&quot;connection&quot;,&quot;keep-alive&quot;); connection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;); connection.setRequestProperty(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&quot;); connection.setRequestProperty(&quot;Cookie&quot;, &quot;BDUSS=&quot;+BDUSS);//设置请求头 connection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;);//设置参数类型是json格式 connection.connect(); String body = &quot;kw=&quot;+name+&quot;&amp;tbs=&quot;+tbs+&quot;&amp;sign=&quot;+enCodeMd5(&quot;kw=&quot;+name+&quot;tbs=&quot;+tbs+&quot;tiebaclient!!!&quot;); /** * 说起来都是泪，为什么这种方式不行，还非得弄成get添加参数的形式，唉。 */// String body = &quot;&#123;\n&quot; +// &quot; \&quot;kw\&quot;: \&quot;&quot;+name+&quot;\&quot;\n&quot; +// &quot; \&quot;tbs\&quot;: \&quot;&quot;+tbs+&quot;\&quot;\n&quot; +// &quot; \&quot;sign\&quot;: \&quot;&quot;+enCodeMd5(&quot;kw=&quot;+name+&quot;tbs=&quot;+tbs+&quot;tiebaclient!!!&quot;)+&quot;\&quot;\n&quot; +// &quot;&#125;&quot;; BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(connection.getOutputStream(), &quot;UTF-8&quot;)); writer.write(body); writer.close(); 注释的部分就是以前在安卓中post请求携带参数的格式，我满怀信心的这样写，结果就失败了，总是爆出一个参数错误，找了很久也没有怀疑是这个地方的问题。爬虫仍然是python和php比较多一点，因此，大多数参考他们的经验，python不得不说是真的好，请求参数就像是axios中那么清晰，php写的也很简洁，不过我不太熟悉。 python携带的参数是这样的 1234567891011121314data = &#123; &#x27;BDUSS&#x27;: bduss, &#x27;_client_type&#x27;: &#x27;2&#x27;, &#x27;_client_id&#x27;: &#x27;wappc_1534235498291_488&#x27;, &#x27;_client_version&#x27;: &#x27;9.7.8.0&#x27;, &#x27;_phone_imei&#x27;: &#x27;000000000000000&#x27;, &#x27;from&#x27;: &#x27;1008621y&#x27;, &#x27;page_no&#x27;: &#x27;1&#x27;, &#x27;page_size&#x27;: &#x27;200&#x27;, &#x27;model&#x27;: &#x27;MI+5&#x27;, &#x27;net_type&#x27;: &#x27;1&#x27;, &#x27;timestamp&#x27;: str(int(time.time())), &#x27;vcode_tag&#x27;: &#x27;11&#x27;,&#125; php携带参数是这样的 1$postdata=&#x27;BDUSS=&#x27;.urlencode($bduss).&#x27;&amp;_client_version=8.1.0.4&#x27;.&#x27;&amp;page_no=&#x27; . $pageno.&#x27;&amp;page_size=100&#x27;.&#x27;&amp;sign=&#x27;.md5(&#x27;BDUSS=&#x27;.$bduss.&#x27;_client_version=8.1.0.4&#x27;.&#x27;page_no=&#x27;.$pageno.&#x27;page_size=100&#x27;.&#x27;tiebaclient!!!&#x27;); 两个都是post请求，可是php的却像是get请求，我以为只是php特有，没想到java也得那样写才行。我很不明白为什么不行，难道是后端识别的问题？以前明明用着好好的，可是还是出了问题。 1String body = &quot;kw=&quot;+name+&quot;&amp;tbs=&quot;+tbs+&quot;&amp;sign=&quot;+enCodeMd5(&quot;kw=&quot;+name+&quot;tbs=&quot;+tbs+&quot;tiebaclient!!!&quot;); 不过，最后还是想说，自动签到还是挺爽的。自动签到地址，欢迎fork。 参考链接httpUrlConnection参数详解 HttpUrlConnection使用详解–转]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络的好]]></title>
    <url>%2F%2Fposts%2F202008231.html</url>
    <content type="text"><![CDATA[今天收到父亲的指示，让我把他的车年检一下，需要把车开到县城的行政大厅。说实话，我这技术，还真的很慌，县城车乱的很。 我就开始在网上收集信息，关于年检需要的材料，代办理又是如何规定的，偶然看到一个人说，六年免检车辆可以在网上办理，大喜，立马转换了思路。查到了网上办理，需要到交管12123APP，或者网站申请提交相关的资料凭证就可以了。部分地区已经实现了电子版年检不需要纸质，如果需要纸质可以指定邮寄的地址，付邮费即可。 这真是太方便了，如果自己开车去怎么着也得一上午，来回还要耗油，省时省钱。上次是我妈去办的，里面工作的人以没开车为由，忽悠了500块。六年免检车在不在其实都无所谓，更重要的是是免费的，只要相关的材料带齐全了就行了，可恶啊。也不知道向别人要发票。所以我对里面工作的人也都没有好感。 不过我上次办理续贷的时候，年轻一代又让我看到了光芒。一位中年大叔独自一人来给他孩子办理贷款，可能不是太熟悉，细心教导，很是温暖，这里工作也很好啊。里面老一点的人我就不敢恭维了。 很早之前我妈就说给我办理社保卡了，但是一直都没下来，大概我们这的人力资源没有办卡的权限吧，一直也都没有办理下来。支付宝可以在线的办理，简单方便，9天，10块钱邮费就可以搞定了。 那天在家听到窗外的人说，办理的社保卡很久也没有下来，准备去人力资源问一下，我真想告诉她，在手机上就可以自己办理。 时代在不断进步，我g在开疆扩土，一个新的风口已经到来，也许有很多的人已经站在了风口上吧。未来，我觉的行政人员会大量的减少，工作简单机械，现场办理无非三个要素，办理人身份，凭证资料，办理或不办理。如今的信息化社会，云端完全有能力胜任。无需排着长队，奔赴十几二十公里外，花时间办理业务。 突然，想到以前看过的一个视频，大概讲的是qq业务都需要到现场办理，工作人员坐了一排，每个人前面都排起了长长的队伍，改个网名，个性签名，发个空间，改个密码等等，很是与如今行政人员工作类似。 未来网络会如何改变我们的生活？拭目以待吧。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[时间的痕迹]]></title>
    <url>%2F%2Fposts%2F202008201.html</url>
    <content type="text"><![CDATA[都不容易，我活，也要让别人活。 今天看了一席的一场演讲，是一位服装设计师，名字叫做uma wang，中文名王汁，平平静静的就站在那讲，很有逻辑，会让人很愿意听，声音很美。那些衣服说实话我也看不出来有多漂亮，美学教育欠缺吧，让我佩服的是，她每一件衣服，一个系列，都会跟生活有关，看见一片落叶，看了一场电影，参观几千年的壁画，同样是一双眼睛，获得的信息却是不一样的。 还有一位女博士，也是在一席演讲看到的，名字叫黄盈盈。题目很惊奇，叫研究小姐二十年，半个小时的娓娓道来，博士真不是开玩笑的，是真正是在做研究的学者。要研究就要融入到那个圈子，与她们做朋友，每个人都有着很大的理想，除了工作不太见光，似乎没什么特别，有血有肉，一些观点也很认同，但是职业仍旧抵触，生而为人，就是要靠双手去创造，身发之肤受之父母。最后博士说了一句，都不容易，我活，也要让别人活。 今天很凉快，整天都是灰蒙蒙的，晚上又下了雨，正是学习的好天气。上次看的设计模式就没有坚持看完，为了以后能盖高楼，设计模式还是有了解一下的必要。一想什么是里氏替换，依赖倒转等等，仍不能第一时间很好的解释清楚，看来以前学的一点都忘掉了，捡起来从头开始看。 看了网上一些记录下来的面试，也不知道真的假的，发现绝大多数自己都没有听说过，或者也没有仔细研究过，看来还是要平常心对待人与人之间的差距，总有一些特别优秀的人。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[备战面试]]></title>
    <url>%2F%2Fposts%2F202008191.html</url>
    <content type="text"><![CDATA[什么是应届生？应届毕业生指在应该毕业的年份即将毕业或者已经毕业学生。简单地说，学生在大学的最后一年，就是应届毕业生。也就是处于大三升大四的时候，就已经叫做应届生了。 校招顾名思义，校园招聘，需要注意的是，校招只招聘应届生。校招分为秋招和春招，春招在每年7月到来年的1月（主要是在7月到10月），春招是在每年春节到6月（主要是在3月到4月），秋招最为核心，招取得人数最多，春招人数就要少一点，有这么个说法，春招是相对于秋招得补录。 招聘流程网申通过公司官方网站，或第三方招聘网站开设的专门投递简历的页面。通过公司官方网站，或第三方招聘网站开设的专门投递简历的页面。…笔试网申通过后，公司通过筛选，通知笔试，考察一些基础专业知识。网申通过后，公司通过筛选，通知笔试，考察一些基础专业知识。…面试面试是面对面的考察应聘者的能力，能够较全面的了解应聘者状况，通常大公司有2-3轮。面试是面对面的考察应聘者的能力，能够较全面的了解应聘者状况，通常大公司有2-3轮。…录取通知简称offer，代表这个公司愿意录取你了，但是你还有权选择去与不去。简称offer，代表这个公司愿意…体检在指定挥着自己选择医院。在指定挥着自己选择医院。&#xa;签三方三方协议，它明确毕业生、用人单位和学校三方在毕业生就业工作权力与义务书面表示。三方协议，它明确毕业生、用人单位和学校三方在毕业生就业工作权力与义务书面表示。…毕业拿到毕业证书。拿到毕业证书。上班接受社会毒打吧，少年。接受社会毒打吧，少年。Viewer does not support full SVG 1.1 宣讲会宣讲会一般是指企事业单位在社会公开场合、校园等场所开设与宣传、拓展及招聘相关的主题讲座，主要向招聘对象传达相关组织、团体或企业的情况、文化价值观、人力资源政策、校园招聘的程序和职位介绍等信息。 公司HR、技术人员讲解公司的内容、岗位、待遇和问答。 招聘会招聘会是一般是由政府所辖人才机构及高校就业中心举办，主要服务于待就业群体及用人单位。 社招即社会招聘，目标人群是已经毕业的，有经验人士，录取之后，直接工作，没有校招录取还有培训和老员工带着。 准备 一段自我介绍 简历 了解要应聘的公司 扎实的技术]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手机也能写博客了]]></title>
    <url>%2F%2Fposts%2F202008131.html</url>
    <content type="text"><![CDATA[:::tip天空不会永远黑暗，当乌云退却的时候，蓝天上灿烂的阳光就会照亮大地。::: 很早以来都有这样的想法，有一天，能够在手机上写博客，github作为我的后台。虽然手机上通过浏览器也可以写，但是一方面得忍受网速，另一方面格式比较复杂，手机上不好操作。 曾在网络上找过类似的编辑器，没找到，倒是有个在线的，大概也是通过类似的token授权的方式commit，有很大的bug每隔几分钟就会commit一次，编码格式也有点小问题，果断丢弃。很早就知道github有官方的API接口，以前可能也看到过创建新文件的API接口，但是那时候也不知道怎么用，就想找个现成的。 github官方也出了app，但是可能因为定位的原因，功能并不是那么完善，一直想的commit也没有，不过我很喜欢它的界面风格。 接口文档有了，其实做起来用不难，首先需要在仓库申请一个token，知道用户名，仓库名，分支，文件要保存的路径信息，要明确定位到这个commit的位置。需要将上面的信息保存在本地，以备每次请求时使用。文章分为头和内容，每次写这个头比较麻烦，其实每次修改就那几个地方，获取到之后，后面业务代码再拼装成合乎规范的格式。 发送网络请求也很难受，完全没有在浏览器端那么方便，不能查看错误请求的参数信息。Android发送网络请求我还不是很熟，就寻求一个网络框架，找到了volley，使用非常的简单，创建一个请求队列，创建请求，将请求添加到请求队列中，只需要简简单单的三步，get请求还没什么问题，还很舒服，到了post请求的时候，就黑暗了，一直报一个400错误，参数错误，百般修改，查，无解。 无奈换成HttpsURLConnect，这个相比较就复杂一点，但是只适用于post，get请求仍然用volley。我觉得就是复杂在多线程，Android3.0开始，就不能在主线程进行网络请求，意味着每个网络请求得多开一个子线程，一些控件还不可以在子线程出现，Toast，Adapter等等，意味着不能很好的提示，莫名的错误，很奇怪的一些原因，简简单单两个请求get，put，使用两种方式实现。 还有就是页面的自适应问题，看着手机里定位备忘录，滑动非常流畅，操作舒服，在一看自己的，输着输着，焦点已经跑到了软键盘的下面，键盘弹起和收缩需要做自适应，疯狂百度中，只是把布局往上顶，中间文本区的滑动仍有些小问题，键盘弹起，滑不到底部。不过在忍受范围内。 总体来说我也比较满意，解决了自己的需求，完成了一个愿望。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小别离]]></title>
    <url>%2F%2Fposts%2F202008091.html</url>
    <content type="text"><![CDATA[好久都没打开电脑了，实在是太热了，没有一点心思。 擦擦鼠标上的灰，敲打着键盘，看着大大的屏幕，还是以前那么舒服。 再次读一遍平凡的世界，发现又有不同的感受，常常被那些文字打动，不能自已。孙田的再次相遇这也太美好了吧，想想最后也是一段孽缘就觉得可惜，有点不敢往下读了^_^。 很久没写东西是什么感觉？时间过的好快啊，连点痕迹都没有，只觉镜子里的他越来越陌生。 水下一篇。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[落幕之后]]></title>
    <url>%2F%2Fposts%2F202007281.html</url>
    <content type="text"><![CDATA[又是一年毕业季，高中、中考对于我来说已经是几年前的事了，原来不过是从面前、身后，再到回忆。 今年关注的要多一点，身边有几个要参加这两场考试的人，可能是对于一个人来说具有决定意义的考试，但是考的却都不太理想，意外的是，我弟弟整天看不到他在学习，中考考的比我以前都好，另外一个小老表，可能面临着没有学籍，高考的表妹，只能选择专科。 看来，那些别人家的孩子，距离我还很远。记得高中老师曾推荐我们看《青春派》，讲的是主角为爱高考失利，复习一年再次参加高考的故事。我仍清楚记得，过年，主角打完电话，就站在门口，看着烟花，烟火绚烂一时，可落下来的灰才是决定未来的分。 落幕以后，天南地北，仗剑走天涯，又要登上陌生的舞台，开始新的表演了，你身处在哪，舞台就在哪。 现代人谋生资源图解。 abilityabilitywealthwealthpowerpowercontactscontactsViewer does not support full SVG 1.1]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring Security整合Jwt]]></title>
    <url>%2F%2Fposts%2F202007241.html</url>
    <content type="text"><![CDATA[本次基于Spring Boot整合了Spring Security和Jwt，可以解决前后端分离之后用户认证与授权的问题。在前后端还未分离的时候，对用户进行身份认证大约是这样的。 客户端客户端…服务端服务端…用户登录用户登录登录成功，用户信息存储session登录成功，用户信息存储session返回登录状态，并发送cookie返回登录状态，并发送cookie将服务端发来的cookie存储将服务端发来的cookie存储携带cookie，发送请求携带cookie，发送请求Viewer does not support full SVG 1.1 这种缺点就是身份信息需要客户端和服务器同时存储，当用户基数很大的时候，需要大量的内存来解决这个问题。 在前后端分离之后，基于token的用户身份认证大约是这样的。 客户端客户端…服务端服务端…用户登录用户登录登录成功，颁发token登录成功，颁发token将服务端发来的token存储将服务端发来的token存储携带token，发送请求携带token，发送请求Viewer does not support full SVG 1.1 这种好处是token只需要存储到客户端，服务端只需要对发来的请求中验证token的有效性。 本次便使用基于token的方式，结合spring security进行一次简单的身份认证与授权。 相关版本信息 名称 版本 IDEA商业版 2020.1 JDK JDK1.8 Maven 3.5.4 Windows 家庭版1903 项目结构1234567891011121314151617181920212223242526.├── .idea├── src│ └── main| ├── java| | └── com| | └── example| | ├── controller| | | └── HelloResource.java| | ├── filters| | | └── JwtRequestFilter.java| | ├── model| | | ├── AuthenticationRequest.java| | | └── AuthenticationResponse.java| | ├── security| | | ├── MyUserDetailsService.java| | | └── SecurityConfigurer.java| | ├── utils| | | └── JwtUtil.java | | └── Application.java│ └── resources│ └── application.properties├── test├── target├── pom.xml└── security-jwt.iml 在pom.xml添加相关jar包12345678910111213&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt; &lt;artifactId&gt;jjwt&lt;/artifactId&gt; &lt;version&gt;0.9.0&lt;/version&gt;&lt;/dependency&gt; 创建Application.java这个其实就是Spring Boot的入口文件，名称不一样也没事，内容也没有改动。 12345678910package com.example;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class Application &#123; public static void main(String[] args) &#123; SpringApplication.run(Application.class, args); &#125;&#125; 创建SecurityConfigurer.java这个类是Spring Security的配置类，Spring Boot提倡去掉配置文件，用配置类来代替，道理都差不多，我还是熟悉xml一些。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253package com.example.security;import com.example.filters.JwtRequestFilter;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Bean;import org.springframework.security.authentication.AuthenticationManager;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;import org.springframework.security.config.http.SessionCreationPolicy;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;@EnableWebSecuritypublic class SecurityConfigurer extends WebSecurityConfigurerAdapter &#123; @Autowired private MyUserDetailsService myUserDetailsService; @Autowired JwtRequestFilter jwtRequestFilter; @Override protected void configure(AuthenticationManagerBuilder auth) throws Exception &#123; auth.userDetailsService(myUserDetailsService).passwordEncoder(bCryptpasswordEncoder()); &#125; @Override protected void configure(HttpSecurity http) throws Exception &#123; http.csrf().disable() .authorizeRequests() .antMatchers(&quot;/authenticate&quot;) .permitAll() .anyRequest() .authenticated() .and() .sessionManagement() .sessionCreationPolicy(SessionCreationPolicy.STATELESS); http.addFilterBefore(jwtRequestFilter, UsernamePasswordAuthenticationFilter.class); &#125; @Override @Bean public AuthenticationManager authenticationManagerBean() throws Exception &#123; return super.authenticationManagerBean(); &#125; @Bean public BCryptPasswordEncoder bCryptpasswordEncoder() &#123; return new BCryptPasswordEncoder(); &#125;&#125; 创建MyUserDetailsService.java这个类是通过传来用户的username，返回一个用户对象，这里为了简便没有从数据库进行查询，以后改成从数据库访问用户信息，直接在这里查询并返回一个用户就行了。 这里密码采用了BCR加密。 123456789101112131415161718package com.example.security;import org.springframework.security.core.userdetails.User;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.stereotype.Service;import java.util.ArrayList;@Servicepublic class MyUserDetailsService implements UserDetailsService &#123; @Override public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException &#123; return new User(&quot;foo&quot;,new BCryptPasswordEncoder().encode(&quot;foo&quot;),new ArrayList&lt;&gt;()); &#125;&#125; 创建JwtUtil.java这个是Jwt的配置类，可以配置token的SECRET_KEY，到期时间等等，更重要的作用是可以生成一个token。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162package com.example.utils;import io.jsonwebtoken.Claims;import io.jsonwebtoken.Jwts;import io.jsonwebtoken.SignatureAlgorithm;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.stereotype.Component;import java.util.Date;import java.util.HashMap;import java.util.Map;import java.util.function.Function;@Componentpublic class JwtUtil &#123; private String SECRET_KEY = &quot;secret&quot;; public String extractUsername(String token)&#123; return extractClaim(token, Claims::getSubject); &#125; public Date extractExpiration(String token)&#123; return extractClaim(token,Claims::getExpiration); &#125; public &lt;T&gt; T extractClaim(String token, Function&lt;Claims,T&gt; claimsResolver)&#123; final Claims claims = extractAllClaims(token); return claimsResolver.apply(claims); &#125; public Claims extractAllClaims(String token)&#123; return Jwts.parser() .setSigningKey(SECRET_KEY) .parseClaimsJws(token) .getBody(); &#125; public Boolean isTokenExpired(String token)&#123; return extractExpiration(token).before(new Date()); &#125; public String generateToken(UserDetails userDetails)&#123; Map&lt;String,Object&gt; claims = new HashMap&lt;&gt;(); return createToken(claims,userDetails.getUsername()); &#125; private String createToken(Map&lt;String,Object&gt; claims,String subject)&#123; return Jwts.builder() .setClaims(claims) .setSubject(subject) .setIssuedAt(new Date(System.currentTimeMillis())) .setExpiration(new Date(System.currentTimeMillis()+100*60*60*10)) .signWith(SignatureAlgorithm.HS256,SECRET_KEY) .compact(); &#125; public Boolean validateToken(String token,UserDetails userDetails)&#123; final String username = extractUsername(token); return (username.equals(userDetails.getUsername())) &amp;&amp; (!isTokenExpired(token)); &#125;&#125; 创建AuthenticationRequest.java这个类的作用是将登录请求信息封装成一个对象，登录的对象是用户，日后添加访问数据库便有了用户类，就不再需要这个类了。 123456789101112131415161718192021222324252627282930package com.example.model;public class AuthenticationRequest &#123; private String username; private String password; public AuthenticationRequest() &#123; &#125; public AuthenticationRequest(String username, String password) &#123; this.username = username; this.password = password; &#125; public String getUsername() &#123; return username; &#125; public void setUsername(String username) &#123; this.username = username; &#125; public String getPassword() &#123; return password; &#125; public void setPassword(String password) &#123; this.password = password; &#125;&#125; 创建AuthenticationResponse.java这个类的作用同样是将信息封装成类，只不过这次是发送出去，即响应请求，我觉得封装成一个Map要更好一点，省的多创建一个类。 12345678910111213package com.example.model;public class AuthenticationResponse &#123; private final String jwt; public AuthenticationResponse(String jwt) &#123; this.jwt = jwt; &#125; public String getJwt() &#123; return jwt; &#125;&#125; 创建JwtRequestFilter.java这个类检查token是否有效，继承了OncePerRequestFilter类，简单翻译为一次请求的过滤链，也就是说，每次请求都需要这条过滤链的验证，通过了就可以放行，不通过就干掉。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152package com.example.filters;import com.example.security.MyUserDetailsService;import com.example.utils.JwtUtil;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;import org.springframework.stereotype.Component;import org.springframework.web.filter.OncePerRequestFilter;import javax.servlet.FilterChain;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@Componentpublic class JwtRequestFilter extends OncePerRequestFilter &#123; @Autowired private JwtUtil jwtUtil; @Autowired MyUserDetailsService userDetailsService; @Override protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws ServletException, IOException &#123; final String authorizationHeader = request.getHeader(&quot;Authorization&quot;); String username = null; String jwt = null; if(authorizationHeader != null &amp;&amp; authorizationHeader.startsWith(&quot;Bearer &quot;)) &#123; jwt = authorizationHeader.substring(7); username = jwtUtil.extractUsername(jwt); &#125; if(username != null &amp;&amp; SecurityContextHolder.getContext().getAuthentication() == null)&#123; UserDetails userDetails = this.userDetailsService.loadUserByUsername(username); if(jwtUtil.validateToken(jwt,userDetails)) &#123; UsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken = new UsernamePasswordAuthenticationToken( userDetails,null,userDetails.getAuthorities()); usernamePasswordAuthenticationToken .setDetails(new WebAuthenticationDetailsSource().buildDetails(request)); SecurityContextHolder.getContext().setAuthentication(usernamePasswordAuthenticationToken); &#125; &#125; chain.doFilter(request,response); &#125;&#125; 仅仅写此类还是没有作用的，还需要添加到Spring Security的过滤链中，具体是这个方法http.addFilterBefore()，这个应该改是在Security之前，也有添加到之后的方法，具体有四个相应的方法。我知道自己写的过滤链需要添加上，为什么后面要加一个class类，不太明白。 1http.addFilterBefore(jwtRequestFilter, UsernamePasswordAuthenticationFilter.class); 创建HelloResource.java这个类就没啥说的了，接收和响应用户的请求。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051package com.example.controller;import com.example.security.MyUserDetailsService;import com.example.model.AuthenticationRequest;import com.example.model.AuthenticationResponse;import com.example.utils.JwtUtil;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.security.authentication.AuthenticationManager;import org.springframework.security.authentication.BadCredentialsException;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.web.bind.annotation.*;@RestControllerpublic class HelloResource &#123; @Autowired private AuthenticationManager authenticationManager; @Autowired private MyUserDetailsService myUserDetailsService; @Autowired private JwtUtil jwtTokenUtil; @RequestMapping(&quot;/hello&quot;) public String hello() &#123; return &quot;Hello World&quot;; &#125; @PostMapping(&quot;/authenticate&quot;) public ResponseEntity&lt;?&gt; createAuthenticationToken(@RequestBody AuthenticationRequest authenticationRequest) throws Exception &#123; try&#123; authenticationManager.authenticate( new UsernamePasswordAuthenticationToken( authenticationRequest.getUsername(), authenticationRequest.getPassword() ) ); &#125; catch (BadCredentialsException e) &#123; throw new Exception(&quot;Incorrect username or password&quot;,e); &#125; final UserDetails userDetails = myUserDetailsService .loadUserByUsername(authenticationRequest.getUsername()); final String jwt = jwtTokenUtil.generateToken(userDetails); return ResponseEntity.ok(new AuthenticationResponse(jwt)); &#125;&#125; 测试至此，已经完成了完成了所有的代码，现在进行测试。推荐使用postman。 首先访问/authenticate接口，获取到token，然后携带token访问/hello获取到正确的信息。 注意一下，下面的接口路径需要自己添加前缀http://localhost:8080/，根据自己实际情况修改。 登录验证接口 请求路径：authenticate 请求方法：post 请求参数 参数名 参数说明 备注 username 用户名 不能为空 password 密码 不能为空 请求头 参数名 值 备注 content-type application/json header 响应参数 参数名 参数说明 备注 jwt 令牌 基于 jwt 的令牌 响应数据 123&#123; &quot;jwt&quot;: &quot;eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJmb28iLCJleHAiOjE1OTU2MDQ5NTIsImlhdCI6MTU5NTYwMTM1Mn0.Lk1v9FUCNLlnYmZzEFIcMB9nYPcQgYCoxv2Mg_jklpo&quot;&#125; 携带token获取信息 请求路径：hello 请求方法：get 请求参数 请求头 参数名 值 备注 content-type application/json header Authorization Bearer + 获取到的token header Bearer和token之间有空格。获取到的token也就是上面获取到的jwt的值。 响应参数 响应数据 1Hello World 项目源码项目源码地址：https://github.com/srcrs/security-jwt ，或者点我 参考链接security-jwt整合视频教程 token与cookie的比较]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于springboot+vue cli遇到的问题]]></title>
    <url>%2F%2Fposts%2F202007221.html</url>
    <content type="text"><![CDATA[:::tip做了一个简单的图书管理系统，也就是实现了CRUD，记录一下中间遇到的问题，以及解决的办法。::: 前后端分离，但是还没有加入权限认证，也是为加入权限认证做准备吧。 vue组件之间如何嵌套在以前的html中，一个页面显示的就是一个页面的内容，例如如果只是改变其中一部分内容，也是要重新写一个页面，引入了vue之后就不是这样了，页面还是那个页面，只是页面中出现的vue组件不同，因而渲染出不同的效果，同一个页面可由多个或者一个vue组件构成。 在路由index.js加入如下内容 1234567&#123;path: &#x27;/home&#x27;, name: &#x27;图书管理&#x27; , component: Home,redirect: &#x27;/viewBook&#x27;, children: [ &#123;path: &#x27;/viewBook&#x27;, name: &#x27;查看图书&#x27; ,component: ViewBook&#125;, &#123;path: &#x27;/addBook&#x27;, name: &#x27;添加图书&#x27; ,component: AddBook&#125;, &#123;path: &#x27;/updateBook&#x27;, name: &#x27;修改图书&#x27; ,component: UpdateBook&#125;, ]&#125;, path便代表访问这个页面的路径，component代表父组件的名字，redirect代表重定向，当用户访问这个路径，重定向到viewBook页面，children定义子组件，为数组类型，将在父组件中部分区域出现，其实也就是在父组件中&lt;router-view/&gt;位置出现。 如何动态读取路由以列表形式展示并进行路由跳转有这样一个需求，用了element ui的布局，侧边栏有一级目录，二级目录等等，希望父组件自动添加在一级目录，它的子组件，添加到它的二级目录，其实用手写也是可以的，但是当组件多的时候，这是不方便的，还有就是点侧边栏的目录如何进行页面切换，我也没有搞明白。 这里用到了vue的v-for感觉很好用啊，记得那时候自己纯原生用jsp和jquery可难受，列表可以展示，但是如何选择并请求后端接口，太麻烦。 12345678&lt;el-aside width=&quot;200px&quot; style=&quot;background-color: rgb(238, 241, 246)&quot;&gt; &lt;el-menu router :default-openeds=&quot;[&#x27;0&#x27;,&#x27;1&#x27;]&quot;&gt; &lt;el-submenu v-for=&quot;(item,index1) in $router.options.routes&quot; v-if=&quot;item.path !== &#x27;/&#x27;&quot; :index=&quot;&#x27;&#x27;+index1&quot;&gt; &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-message&quot;&gt;&lt;/i&gt;&#123;&#123;item.name&#125;&#125;&lt;/template&gt; &lt;el-menu-item v-for=&quot;(items,index2) in item.children&quot; :index=&quot;items.path&quot;&gt;&#123;&#123;items.name&#125;&#125;&lt;/el-menu-item&gt; &lt;/el-submenu&gt; &lt;/el-menu&gt;&lt;/el-aside&gt; v-for类似c，java的for循环，$router.options.routes取的是路由的列表，但是都是一级目录，v-xxx等等都是写在标签之中，:index是唯一标识一个标签，当用户点击就会跳转到:index的值，如果它是一个路径的话，这也因此就能实现点击进行页面的切换，实际上是vue组件的切换。 (item,index1)第一个值item代表每次循环所取得的数组元素，index1代表数组得下标。 前端分页，后端如何分页查询分页在此之前我也没有个概念，只知道把数据库数据部分查出来，或者全部查出来，其实，在此之前老师上课也讲过分页查询，只不过那时候不知道分页查询有什么用。 在前端需要分页的页面中，需要添加如下内容： 1234567&lt;el-pagination background layout=&quot;prev, pager, next&quot; :page-size=&quot;pageSize&quot; @current-change=&quot;page&quot; :total=&quot;total&quot;&gt;&lt;/el-pagination&gt; page-size代表每一页有多少个元素，total代表一共有多少个元素，前边的:代表与元素进行绑定，@current-change=&quot;page&quot;代表当分页页面发生变化时，也就是用户点击发生跳转页面，将会触发page方法，可以对里面进行传参，代表跳转到了哪一页，这个很方面。 page方法是这样的。currentPage便是代表跳转到了哪一页，使用_this原因是因为在axios.get内部有回调函数，如果还是使用this的话，这个this将会指向回调函数，会取不到值。 123456789101112page(currentPage)&#123; const _this = this; if(currentPage==1)&#123; _this.pages = 0; &#125; else&#123; _this.pages = (currentPage-1) * _this.pageSize; &#125; axios.get(&#x27;http://47.92.23.236:9090/book/findByPage/&#x27;+_this.pages+&#x27;/&#x27;+_this.pageSize).then(function (resp) &#123; _this.tableData = resp.data; &#125;)&#125; 这里的axios请求传入了两个参数一个是，需要跳转到哪个页面，页面的大小是多少，只需要进行简单计算起始位置，正好对应了后端limit，起始位置，元素个数。 后端应该怎么做，接收到请求，拿到两个参数，查询数据库，返回结果，简单写下sql分页查询。这里start便代表开始的位置，size代表页面元素的个数。 123&lt;select id=&quot;findByPage&quot; parameterType=&quot;map&quot; resultType=&quot;book&quot;&gt; select * from book limit #&#123;start&#125;,#&#123;size&#125;&lt;/select&gt; 前后端分离解决跨域问题也可以在每个controller类上添加注解去解决，但是不如添加一个配置类来的方便。在你的springboot项目中添加如下类。 12345678910111213@Configurationpublic class CorsConfig implements WebMvcConfigurer &#123; @Override public void addCorsMappings(CorsRegistry registry)&#123; registry.addMapping(&quot;/**&quot;) .allowedOrigins(&quot;*&quot;) .allowedMethods(&quot;GET&quot;,&quot;HEAD&quot;,&quot;POST&quot;,&quot;PUT&quot;,&quot;DELETE&quot;) .allowCredentials(true) .maxAge(3600) .allowedHeaders(&quot;*&quot;); &#125;&#125;]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring Boot+Vue cli项目部署问题]]></title>
    <url>%2F%2Fposts%2F202007191.html</url>
    <content type="text"><![CDATA[:::tip今天把写好的前后端分离小项目部署到服务器，没有想象的那么顺利，记录一下中间遇到的问题，以及解决的办法。::: 后端使用Spring Boot + Mybatis 后端部署到好弄的很，这次使用的内嵌的tomcat，相当于自己不用配置tomcat环境了，其实我以前也配置好了。 jar包，每次只需要上传，然后执行一条命令就可以让项目跑起来；war包，前期自己需要配置好tomcat环境，然后将war包复制到webapps文件夹即可。 这里简单记录下如何使用jar包部署。 项目运行1nohub java -jar xx.jar &amp; xx为你的jar包名，&amp;代表程序在后台运行。 项目停止1lsof -i:9090 9090为你的项目端口号，这条命令包含pid，使用kill pid号即可停止这个程序。 前端使用vue cli 4.4.6 + element ui 前端项目部署的时候，其实还是遇到了很多的问题的，例如生成项目静态文件夹后，复制到到web服务器中并不能访问404，访问路径中包含#的问题，查了很多资料不知道是服务器的原因还是什么原因，#号问题一直都不能解决_ web服务器的选择有很多种，可以选择tomcat，apache2，nginx，这里我使用的是apache2和tomcat都不能解决#号问题，我感觉是vue cli的问题了。 那就先记录下访问路径404的问题吧。 解决vue项目部署静态资源404问题在vue cli项目的根目录创建vue.config.js文件，里面内容如下 123module.exports = &#123; publicPath: &#x27;./&#x27;&#125; 默认的是/会出现404问题，前面加上一个点就是当前路径了，或者也可以写成/root等等，这个root就是就是你放在web服务器的项目名了。 添加完这个文件之后再打包部署就能解决这个问题了，#号问题先放着。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[纯div+css优雅友链样式]]></title>
    <url>%2F%2Fposts%2F202007161.html</url>
    <content type="text"><![CDATA[:::tip偷了别人的一个友链样式，感觉挺不错的，分享一下。::: 正文因为使用的环境不一样，做了一些改动。我是直接拿出一个页面作为分享链接页面，写在markdown文档中即可生效。使用的时候可能不同的主题显示略微差别，自己修改下就好了。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;div class=&quot;page-friends page-common&quot;&gt;&lt;div class=&quot;link-title wow rollIn animated&quot; style=&quot;visibility: visible; animation-name: rollIn;&quot;&gt;博客友链&lt;/div&gt;&lt;ul class=&quot;readers-list clearfix&quot;&gt;&lt;li class=&quot;wow slideInUp animated&quot; style=&quot;visibility: visible; animation-name: slideInUp;&quot;&gt;&lt;a rel=&quot;colleague&quot; title=&quot;Happy Coding , Happy Life&quot; target=&quot;_blank&quot; href=&quot;https://liujunzhou.top/&quot;&gt;&lt;div&gt;Junzhou Liu&lt;/div&gt;&lt;div&gt;Happy Coding , Happy Life&lt;/div&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;link-title wow rollIn animated&quot; style=&quot;visibility: visible; animation-name: rollIn;&quot;&gt;学习教程&lt;/div&gt;&lt;ul class=&quot;readers-list clearfix&quot;&gt;&lt;li class=&quot;wow slideInUp animated&quot; style=&quot;visibility: visible; animation-name: slideInUp;&quot;&gt;&lt;a rel=&quot;&quot; title=&quot;学的不仅是技术，更是梦想&quot; target=&quot;_blank&quot; href=&quot;http://www.runoob.com/&quot;&gt;&lt;div&gt;菜鸟教程&lt;/div&gt;&lt;div&gt;学的不仅是技术，更是梦想&lt;/div&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;wow slideInUp animated&quot; style=&quot;visibility: visible; animation-name: slideInUp;&quot;&gt;&lt;a rel=&quot;&quot; title=&quot;经典模块化前端框架&quot; target=&quot;_blank&quot; href=&quot;http://www.layui.com/&quot;&gt;&lt;div&gt;Layui&lt;/div&gt;&lt;div&gt;经典模块化前端框架&lt;/div&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;wow slideInUp animated&quot; style=&quot;visibility: visible; animation-name: slideInUp;&quot;&gt;&lt;a rel=&quot;&quot; title=&quot;在线学习教程&quot; target=&quot;_blank&quot; href=&quot;http://www.w3school.com.cn/&quot;&gt;&lt;div&gt;w3school&lt;/div&gt;&lt;div&gt;在线学习教程&lt;/div&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;wow slideInUp animated&quot; style=&quot;visibility: visible; animation-name: slideInUp;&quot;&gt;&lt;a rel=&quot;&quot; title=&quot;有编程实战训练&quot; target=&quot;_blank&quot; href=&quot;https://www.w3cschool.cn/&quot;&gt;&lt;div&gt;w3cschool&lt;/div&gt;&lt;div&gt;有编程实战训练&lt;/div&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;style&gt; .clearfix &#123;zoom:1;&#125; .clearfix:after &#123;content:&#x27;.&#x27;;display:block;visibility:hidden;height:0;clear:both;&#125; .readers-list &#123;list-style:none;&#125; .readers-list *&#123;margin:0;padding:0;&#125; .readers-list li&#123;position:relative;float:left;margin-top:20px!important;padding:0 10px;&#125; .readers-list li a&#123;display:block;border:1px solid #eee;border-left: 3px solid #FF002B;border-radius:7px;padding-left:15px;transition:all .3s;color: white;&#125; .readers-list li:nth-of-type(6n+1) a&#123;border-left-color:#FF002B;&#125; .readers-list li:nth-of-type(6n+2) a&#123;border-left-color:#FFA900;&#125; .readers-list li:nth-of-type(6n+3) a&#123;border-left-color:#00CC00;&#125; .readers-list li:nth-of-type(6n+4) a&#123;border-left-color:#00CCFF;&#125; .readers-list li:nth-of-type(6n+5) a&#123;border-left-color:#0089FA;&#125; .readers-list li:nth-of-type(6n+6) a&#123;border-left-color:#404040;&#125; .readers-list li a div&#123;padding:12px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#999;&#125; .readers-list li a div:first-child&#123;border-bottom:1px dashed #eee;font-size:1.3em;color:#666;&#125; .readers-list li a:hover &#123; -webkit-transform: translateY(-6px); transform: translateY(-6px); box-shadow: 0 26px 40px -24px rgba(0,0,0,0.3);&#125; .link-title &#123; position: relative; left: -19px; display: inline-block; margin: 20px 0; font-size: 15px; padding: 0 30px 0 25px; height: 45px; line-height: 45px; border-radius: 0 35px 35px 0; background: #404040; color: #fff; &#125; @media(min-width:768px)&#123; .readers-list li&#123;width:50%;&#125; &#125; @media(max-width:767px)&#123; .readers-list li&#123;width:100%;&#125; &#125; .page-common ul li, .page-common ol li &#123; margin-bottom: 12px; &#125; .page-friends ul &#123; padding: 0; margin: 0; &#125;&lt;/style&gt; 添加完之后就是这个效果，点击我查看 参考链接友情链接参考页面]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>友链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[摆摊]]></title>
    <url>%2F%2Fposts%2F202007111.html</url>
    <content type="text"><![CDATA[:::tip当我们再车水马龙的夜里，突然觉得自己狼狈不堪，当我们再众目睽睽之下，突然自卑来袭，当我们突然来到一座陌生的城市，突然想家。::: 凌晨4:40，我朦胧睡眼，被姥姥叫起了床，今天要和她一起去县城摆摊卖菜，以前都是在街上卖，去县城价钱能多不少，两个老人家也很恨财，六七十岁仍然种有地，想办法赚钱，我一个青年都佩服。 10分钟洗漱，4:50天蒙亮，我们便出发，路途我还不是很熟悉，打开导航，一路上也有不少人，大概都是做生意卖菜吧，正常这个时候我还在哈哈睡大觉呢。 半个小时后，5:20就已经到了停车的地方，对这边的路还不是太熟悉，还需要步行十来分钟才到。那里是我们县城的老街，早上有一两个小时的早市，到城管上班就要撵光了。 5:35我们就到老街了，找个空地，就摆在边上，“哎，大爷，大妈，这个地是我卖豆芽的地方，我一直都在这，他们都知道的。”，好吧，换一个地方。 你这是什么啊，这个李子咋卖的，你这甜不甜，你这太熟了吧。有的人精挑细选，有的挑也不挑，一二十斤一桶，直接买一桶。街上卖一块别人都嫌贵，而县城两块虽算不上疯抢，也算是好卖。 来来，给我两块钱，一位有点彪悍的妇女说道，咦，难道遇到痞子要钱的？“为什么给你钱啊”，“你在这卖菜，就要给我两块钱”，我姥姥说，“你看我这还没开张，等卖出去了，再给你钱”，“好，我等着”。后来我们才知道是市场管理员，不过要是我，肯定就不会说那么多，就给了吧。后来，也在这里买了很多次，我姥姥总是百般不交，逃过好几次^_^。 你这野蘑菇咋卖，咋这么大，便宜点吧，够秤吗？好点的野蘑菇，一斤要卖上好二三十呢，一个餐馆的人，90块钱买了六斤。 一个老头，来的比较晚，卖点菜，就是一点，顶多占五六十厘米的长度，一位在卖鸡蛋的中年妇女，把两个篮子的鸡蛋放的可开，老头也不知道问没问，就把她的一个篮子，往那边挪了一点，立马火了，两个人就吵了起来，老头最后灰灰的走掉了，又找了一块地。我不知他们之间有什么过节没有，不好评价。不知他人苦，莫劝他人善。与人方便。 7:00城管来了，凶神恶煞般大声叫着，看到周围的人都麻溜的收拾东西，大概他们早就见识过城管的厉害了，不收拾一会都要掀了。百米长的摊位，，一会就要人走楼空了。不过说实话，在马路边摆摊确实不太好，交通太乱了。我们还剩一点，又找一个地，便宜卖了。 7:30已经卖完了，就往回走了。姥姥对我和我家都很好，大概是最不争气的孩子吧，总受父母的爱护，这些年多有照顾，就像我母亲说的，吃了这么多年她种的菜，还不知道她的地在哪，说起来也很心酸。 过年给钱，得奖状给钱，学驾照给钱······，说实话，那么大年纪，我真不想收她的钱，用她的钱，我厌她恨财如命，不论天气，不论时节，都去找些能卖钱的，能挣钱的路子，有时候一个人进那种没有路的深山老林摘野蘑菇，今天下着雨，两个人仍来卖菜，雨淋得像个落汤鸡，每次说再也不去了，回去了立马又去做。 摆摊，原来我们并不是电影的主角，只是还未找到路的赶路人。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第十一届蓝桥杯省赛第一场原题]]></title>
    <url>%2F%2Fposts%2F202007061.html</url>
    <content type="text"><![CDATA[A：指数计算(5分)【问题描述】 7月1日是建党日，从1921年到2020年，中国共产党已经带领中国人民走过了99年。请计算：7^2020 mod 1921，其中A mod B 表示 A 除以 B 的余数。 【答案提交】 这是一道结果填空题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。 【解题思路】 拿到这道题，我还想着用写程序的方式去解决，写程序咋写呢，最开始想的就是在7乘的中间进行取余，为此我还找个小数手稿验证了一下，但是结果是不对的，事后想想这样确实不对。最后想到了以前用过分治的方式写过阶层求值，在合并的时候正好可以进行取余运算，正好求解了此问题。其实还有更简单的，使用电脑的计算器就行，考试的时候还是要怎么简单怎么做。 123456789101112131415161718#include&lt;iostream&gt;using namespace std;int dfs(int n)&#123; if(n==1)&#123; return 7; &#125; if(n%2==0)&#123; return (dfs(n/2)*dfs(n/2))%1921; &#125; else if(n%2!=0)&#123; return (dfs(n/2)*dfs(n/2)*7)%1921; &#125;&#125;int main()&#123; cout &lt;&lt; dfs(2020); return 0;&#125; 【答案】 480 B：解密(5分)【问题描述】 小明设计了一种文章加密的方法：对于每个字母 c，将它变成某个另外的字符 Tc。下表给出了字符变换的规则： 字母c Tc 字母c Tc 字母c Tc 字母c Tc a y n l A Y N L b x o g B X O G c m p o C M P O d d q u D D Q U e a r f E A R F f c s s F C S S g i t z G I T Z h k u p H K U P i n v w I N V W j t w b J T W B k j x r K J X R l h y e L H Y E m q z v M Q Z V 例如，将字符串 YeRi 加密可得字符串 EaFn。小明有一个随机的字符串，加密后为EaFnjISplhFviDhwFbEjRjfIBBkRyY（由 30 个大小写英文字母组成，不包含换行符），请问原字符串是多少？（如果你把以上字符串和表格复制到文本文件中，请务必检查复制的内容是否与文档中的一致。在试题目录下有一个文件 str.txt，第一行为上面的字符串，后面 52 行依次为表格中的内容。） 【答案提交】 这是一道结果填空题，你只需要算出结果后提交即可。本题的结果为一个只包含 30 个大小写英文字母的字符串，在提交答案时只填写这个字符串，填写多余的内容将无法得分 【解题思路】 这个问题就比较简单了，就是简单的字符串转换，主要就是搞清楚字符的对应的关系。 123456789101112131415#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;int main()&#123; //加密后字符串 string str=&quot;EaFnjISplhFviDhwFbEjRjfIBBkRyY&quot;; string s1=&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;; string s2=&quot;yxmdacikntjhqlgoufszpwbrevYXMDACIKNTJHQLGOUFSZPWBREV&quot;; for(int i=0;i&lt;str.size();i++)&#123; int index = s2.find(str[i]); cout &lt;&lt; s1[index]; &#125; return 0;&#125; 【答案】 YeRikGSunlRzgDlvRwYkXkrGWWhXaA C：跑步训练(10分)【问题描述】 小明要做一个跑步训练。初始时，小明充满体力，体力值计为 10000。如果小明跑步，每分钟损耗600 的体力。如果小明休息，每分钟增加 300 的体力。体力的损耗和增加都是均匀变化的。小明打算跑一分钟、休息一分钟、再跑一分钟、再休息一分钟……如此循环。如果某个时刻小明的体力到达 0，他就停止锻炼。请问小明在多久后停止锻炼。为了使答案为整数，请以秒为单位输出答案。答案中只填写数，不填写单位。 【答案提交】 这是一道结果填空题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。 【解题思路】 这题以前也接触过类似的题，思路不难，将速度的单位化为秒，然后一秒钟的走或者休息，直到体力达到0停止。 123456789101112131415161718192021#include&lt;iostream&gt;using namespace std;int main()&#123; int sum=0; int n=10000; while(n&gt;0)&#123; int t1=60; while(t1--&amp;&amp;n&gt;0)&#123; n -= 10; sum++; &#125; int t2=60; while(t2--&amp;&amp;n&gt;0)&#123; n += 5; sum++; &#125; &#125; cout &lt;&lt; sum; return 0;&#125; 【答案】 3880 D：合并检测(10分)【问题描述】 新冠疫情由新冠病毒引起，最近在 A 国蔓延，为了尽快控制疫情，A 国准 备给大量民众进病毒核酸检测。 然而，用于检测的试剂盒紧缺。 为了解决这一困难，科学家想了一个办法：合并检测。即将从多个人（k 个）采集的标本放到同一个试剂盒中进行检测。如果结果为阴性，则说明这 k 个人都是阴性，用一个试剂盒完成了 k 个人的检测。如果结果为阳性，则说明 至少有一个人为阳性，需要将这 k 个人的样本全部重新独立检测（从理论上看， 如果检测前 k-1 个人都是阴性可以推断出第 k 个人是阳性，但是在实际操作中 不会利用此推断，而是将 k 个人独立检测），加上最开始的合并检测，一共使用 了 k + 1 个试剂盒完成了 k 个人的检测。 A 国估计被测的民众的感染率大概是 1%，呈均匀分布。请问 k 取多少能 最节省试剂盒？ 【答案提交】 这是一道结果填空题，你只需要算出结果后提交即可。本题的结果为一个 整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。 【解题思路】 这题实际上就是一道数学应用题，主要就是列出解题方程，题意说，A国有1%人感染，也就是说一个人患病的概率是1%，未患病的概率是99%，假如说说k=1时，那么必然消耗1个试剂盒，当k=2时，消耗(0.990.99)1+(0.990.01+0.010.99+0.01*0.01)*3，那么规律也就出来了，k个人全部未患病概率为0.99k，存在患病概率为(1-0.99k)，设k个人需要消耗w个试剂盒，可以列出如下的方程, w=0.99k+(1-0.99k)*(k+1) 那么当不使用此方案时，需要使用k个试剂盒，最省试剂盒也就是w和k值之比最小。 w/k = 1-0.99k+1/k 可是这个k该咋算呢？ 当1-0.99k和1/k相等时取最小值。 拿计算器大约算出一个k=11，不知道对不对。 【答案】 11 E：REPEAT程序(15分)【问题描述】 附件 prog.txt 中是一个用某种语言写的程序。下载地址 ：附件 prog.txt其中 REPEAT k 表示一个次数为 k 的循环。循环控制的范围由缩进表达，从次行开始连续的缩进比该行多的（前面的空白更长的）为循环包含的内容。例如如下片段： 12345678REPEAT 2: A = A + 4 REPEAT 5: REPEAT 6: A = A + 5 A = A + 7 A = A + 8A = A + 9 A = A + 4 所在的行到 A = A + 8 所在的行都在第一行的循环两次中。REPEAT 6: 所在的行到 A = A + 7 所在的行都在 REPEAT 5: 循环中。A = A + 5 实际总共的循环次数是 2 × 5 × 6 = 60 次。请问该程序执行完毕之后，A 的值是多少？ 【答案提交】 这是一道结果填空题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。 【解题思路】 这题暂时还不知道如何做，类似yaml文件的语法，开始准备用word字符替换的，发现有点行不通，结束&#125;不知道该如何替换。 貌似用栈可以解决这个问题，暂时放着。 【答案】 F：分类计数(15分)【问题描述】 输入一个字符串，请输出这个字符串包含多少个大写字母，多少个小写字母，多少个数字。 【输入格式】 输入一行包含一个字符串。 【输出格式】 输出三行，每行一个整数，分别表示大写字母、小写字母和数字的个数。 【样例输入】 11+a=Aab 【样例输出】 1131 【评测用例规模与约定】 对于所有评测用例，字符串由可见字符组成，长度不超过 100。 【解题思路】 这题就是送分题了，只需要三个if就能解决了，判断出是否是大写字母，小写字母，数字，然后计数即可。 【答案】 12345678910111213141516171819202122232425#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;int main()&#123; string s; cin &gt;&gt; s; int length = s.size(); int x=0,y=0,z=0; for(int i=0;i&lt;length;i++)&#123; if(&#x27;A&#x27;&lt;=s[i]&amp;&amp;s[i]&lt;=&#x27;Z&#x27;)&#123; x++; &#125; else if(&#x27;a&#x27;&lt;=s[i]&amp;&amp;s[i]&lt;=&#x27;z&#x27;)&#123; y++; &#125; else if(&#x27;0&#x27;&lt;=s[i]&amp;&amp;s[i]&lt;=&#x27;9&#x27;)&#123; z++; &#125; &#125; cout &lt;&lt; x &lt;&lt; endl; cout &lt;&lt; y &lt;&lt; endl; cout &lt;&lt; z; return 0;&#125; G：整除序列(20分)【问题描述】 有一个序列，序列的第一个数是 n，后面的每个数是前一个数整除 2，请输出这个序列中值为正数的项。 【输入格式】 输入一行包含一个整数 n。 【输出格式】 输出一行，包含多个整数，相邻的整数之间用一个空格分隔，表示答案。 【样例输入】 120 【样例输出】 120 10 5 2 1 【评测用例规模与约定】 对于 80% 的评测用例，1 ≤ n ≤ 109。对于所有评测用例，1 ≤ n ≤ 1018。 【解题思路】 这道题思路也不难，给出一个数，不断除2，迭代至答案n为0即可。 【答案】 12345678910111213#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;int main()&#123; int n; cin &gt;&gt; n; while(n&gt;0)&#123; cout &lt;&lt; n &lt;&lt; &quot; &quot;; n /= 2; &#125; return 0;&#125; H：走方格(20分)【问题描述】 在平面上有一些二维的点阵。这些点的编号就像二维数组的编号一样，从上到下依次为第 1 至第 n 行，从左到右依次为第 1 至第 m 列，每一个点可以用行号和列号来表示。现在有个人站在第 1 行第 1 列，要走到第 n 行第 m 列。只能向右或者向下走。注意，如果行号和列数都是偶数，不能走入这一格中。问有多少种方案。 【输入格式】 输入一行包含两个整数 n, m。 【输出格式】 输出一个整数，表示答案。 【样例输入】 13 4 【样例输出】 12 【样例输入】 16 6 【样例输出】 10 【评测用例规模与约定】 对于所有评测用例，1 ≤ n ≤ 30, 1 ≤ m ≤ 30。 【解题思路】 这题算是图论里面比较基础一道题，寻找路径的种树，可以用搜索来做，也可以用动态规划。和走台阶也类似，，每一个位置都有两种走法，向右走，向下走，除掉边界和不可到达的点。 建立一个二维数组，不使用0坐标，从1开始算边界，二维数组进行循环，当横纵坐标有一个为1，则说明是边界，设置为1，当横纵坐标是偶数时，说明，此点不可达，设为0，其余位置值为左位置和上位置值之和，解决了此问题。 【答案】 12345678910111213141516171819202122232425262728293031#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;int a[35][35];int main()&#123; for(int i=0;i&lt;35;i++)&#123; fill(a[i],a[i]+35,0); &#125; for(int i=0;i&lt;35;i++)&#123; a[i][1]=1; a[1][i]=1; &#125; int n,m; cin &gt;&gt; n &gt;&gt; m; for(int i=1;i&lt;=n;i++)&#123; for(int j=1;j&lt;=m;j++)&#123; if(i==1||j==1)&#123; a[i][j]=1; &#125; else if(i%2==0&amp;&amp;j%2==0)&#123; a[i][j]=0; &#125; else &#123; a[i][j]=a[i-1][j]+a[i][j-1]; &#125; &#125; &#125; cout &lt;&lt; a[n][m]; return 0;&#125; I：字符串编码(25分)【问题描述】 小明发明了一种给由全大写字母组成的字符串编码的方法。对于每一个大写字母，小明将它转换成它在 26 个英文字母中序号，即 A → 1, B → 2, … Z →26。这样一个字符串就能被转化成一个数字序列：比如 ABCXYZ → 123242526。现在给定一个转换后的数字序列，小明想还原出原本的字符串。当然这样的还原有可能存在多个符合条件的字符串。小明希望找出其中字典序最大的字符串。 【输入格式】 一个数字序列。 【输出格式】 一个只包含大写字母的字符串，代表答案 【样例输入】 1123242526 【样例输出】 1LCXYZ 【评测用例规模与约定】 对于 20% 的评测用例，输入的长度不超过 20。对于所有评测用例，输入的长度不超过 200000。 【解题思路】 这道题求字典序最大，也就是说，每次还原字符都找字典序最大的字符例如123有三种情况ABC，LC，AW，它们三个字典序最大的就是LC，类似贪心。主要问题每次怎么选到字典序最大的字符。 【答案】 12345678910111213141516171819#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;int main()&#123; string s; cin &gt;&gt; s; int length = s.size(); for(int i=0;i&lt;length;i++)&#123; if((i+1)&lt;length&amp;&amp;((s[i]-&#x27;0&#x27;)*10+(s[i+1]-&#x27;0&#x27;))&lt;=26)&#123; cout &lt;&lt; (char)(&#x27;A&#x27;+((s[i]-&#x27;0&#x27;)*10+(s[i+1]-&#x27;0&#x27;))-1); i++; &#125; else&#123; cout &lt;&lt; (char)(&#x27;A&#x27;+(s[i]-&#x27;0&#x27;)-1); &#125; &#125; return 0;&#125; J：整数小拼接(25分)【问题描述】 给定义个长度为 n 的数组 A1, A2, · · · , An。你可以从中选出两个数 Ai 和 Aj (i 不等于 j)，然后将 Ai 和 Aj 一前一后拼成一个新的整数。例如 12 和 345 可以拼成 12345 或 34512 。注意交换 Ai 和 Aj 的顺序总是被视为 2 种拼法，即便是 Ai = Aj 时。请你计算有多少种拼法满足拼出的整数小于等于 K。 【输入格式】 第一行包含 2 个整数 n 和 K。第二行包含 n 个整数 A1, A2, · · · , An。 【输出格式】 一个整数代表答案。 【样例输入】 124 331 2 3 4 【样例输出】 18 【评测用例规模与约定】 对于 30% 的评测用例，1 ≤ N ≤ 1000, 1 ≤ K ≤ 108, 1 ≤ Ai ≤ 104。对于所有评测用例，1 ≤ N ≤ 100000，1 ≤ K ≤ 1010，1 ≤ Ai ≤ 109。 【解题思路】 典型的排列问题，直接上八皇后的模板，事实上所有的排列问题，都能用它解决，只需要在排列好两个数的时候，进行拼接，比较大小，计数即可，唯一害怕的就是时间过不了。 【答案】 123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;iostream&gt;using namespace std;int n,k,sum=0;int a[5];int b[100005];bool isok(int r)&#123; for(int i=0;i&lt;r;i++)&#123; if(a[i]==a[r])&#123; return false; &#125; &#125; return true;&#125;void dfs(int r)&#123; if(r==2)&#123; int w=1; while(b[a[1]]/w)&#123; w *= 10; &#125; int cache = b[a[0]]*w+b[a[1]]; if(cache&lt;k)&#123; sum++; &#125; return ; &#125; for(int i=0;i&lt;4;i++)&#123; a[r]=i; if(isok(r))&#123; dfs(r+1); &#125; &#125;&#125;int main()&#123; cin &gt;&gt; n &gt;&gt; k; for(int i=0;i&lt;n;i++)&#123; cin &gt;&gt; b[i]; &#125; dfs(0); cout &lt;&lt; sum; return 0;&#125; 参考链接第十一届蓝桥杯省赛第一场原题]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[暑假开始]]></title>
    <url>%2F%2Fposts%2F202007031.html</url>
    <content type="text"><![CDATA[昨天期末考试结束了，生活似乎又恢复了往日，但是仍未开始。对未来充满了期待，充满了害怕，真的走出校门，学生不再是借口，因为还是学生，我可以……但是，始终人是一个个体，是要走出去的，面对不熟悉的一切。 一个朋友介绍的猎头，帮我找实习工作，目标也是一家上市公司，但是刚刚得到消息，别人只要一本以上的实习生，没错，简历就直接pass掉了。简历也是我精心制作的，花了很长的时间，内容，回顾大学三年，真正能写在上面的真的不多，专业证书也没有一个，竞赛也无个人奖，一片贫瘠。三年，我在做什么？ 也在网上投了很多的实习公司，石沉大海，连朵浪花都看不到。我在想，如果今年我就这样毕业了，在如此艰难的一个情况，该何去何从，本科生虽然从全国来看，比例占的并不多，但是从现在来看，已经并不那么金贵了。连个进门的机会都没有的。 我身边也有同龄在做教师行业，虽然有的人也许会说，不想过这种一眼就看到头的生活，但是做什么不是如此呢？你说一辈子就是当教师了，别人做手艺，写代码不也同样是如此。不过没有那么看似过的轻松罢了，三尺讲台也有大天地。不过铁饭碗是真的香，人的精神、心态都不一样。 昨天做了一个奇怪的梦，梦到我们在搬宿舍，那栋宿舍楼有100多层高，我们的宿舍在第12层，一楼有很多的电梯口，可是我竟找不到一个到12楼的，几番尝试，上了一个比较大点的电梯，按下12层，里面最高能到100多层，可是不知道是谁，按下了比楼层还高的层数（离谱的很），人们说能跑到外面去，脱轨，这回再完了，真的到了顶层，也并没有脱轨，我也醒了。 我真的醒了。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件工程复习题]]></title>
    <url>%2F%2Fposts%2F202006281.html</url>
    <content type="text"><![CDATA[一、单选择 1.开发软件所需高成本和产品的低质量之间有着尖锐的矛盾，这种现象称做 A.软件工程 B.软件周期 C.软件危机 D.软件产生 确定 2.研究开发所需要的成本和资源是属于可行性研究中的研究的一方面。 A.技术可行性 B.经济可行性 C.社会可行性 D.法律可行性 确定 3.模块的内聚性最高的是 A.逻辑内聚 B.时间内聚 C.偶然内聚 D.功能内聚 确定 4.在SD方法中全面指导模块划分的最重要的原则是 A.程序模块化 B.模块高内聚 C.模块低耦合 D.模块独立性 确定 5.软件详细设计主要采用的方法是 A.模块设计 B.结构化设计 C.PDL语言 D.结构化程序设计 确定 6.黑盒测试在设计测试用例时，主要需要研究 A.需求规格说明与概要设计说明 B.详细设计说明 C.项目开发计划 D.概要设计说明与详细设计说明 确定 7.若有一个计算类型的程序，它的输入量只有一个，其范围是现从输入的角度考虑一组测试用例：设计这组测试用例的方法是 A.条件覆盖法 B.等价分类法 C.边界值分析法 D.错误推测法 确定 8.下列属于维护阶段的文档是 A.软件规格说明 B.用户操作手册 C.软件问题报告 D.软件测试分析报告 确定 9.快速原型模型的主要特点之一是 A.开发完毕才见到产品 B.及早提供全部完整的软件产品 C.开发完毕后才见到工作软件; D.及早提供工作软件 确定 10.因计算机硬件和软件环境的变化而作出的修改软件的过程称为 A.教正性维护 B.适应性维护 C.完善性维护 D.预防性维护 确定 11.下列文档与维护人员有关的有 A.软件需求说明书 B.项目开发计划 C.概要设计说明书 D.操作手册 确定 12.下列模型属于成本估算方法的有 A.COCOMO模型 B.McCall模型 C.McCabe度量法 D.时间估算法 确定 13.是把对象的属性和操作结合在一起，构成一个独立的对象，其内部信息对外界是隐蔽的，外界只能通过有限的接口与对象发生联系。 A.多态性 B.继承 C.封装 D.消息 确定 14．美国卡内基—梅隆大学SEI提出的CMM模型将软件过程的成熟度分为5个等级，以下选项中，属于可管理级的特征是。 A．工作无序，项目进行过程中经常放弃当初的计划 B．建立了项目级的管理制度 C．建立了企业级的管理制度 D．软件过程中活动的生产率和质量是可度量的 确定 15．在McCall软件质量度量模型中，属于面向软件产品修改。 A．可靠性 B．可重用性 C．适应性 D．可移植性 确定 16．汽车有一个发动机。汽车和发动机之间的关系是关系。 A．一般具体 B．整体部分 C．分类关系 D．主从关系 确定 17．对象是OO方法的核心，对象的类型有多种，通常把例如飞行、事故、演出、开会等等，称之为 A．有形实体 B．作用 C．事件 D．性能说明 确定 18．为软件的运行增加监控设施，这种维护的维护类型是 A．纠正性维护 B．适应性维护 C．完善性维护 D．预防性维护 确定 19.软件按照设计的要求，在规定时间和条件下达到不出故障，持续运行的要求的质量特性称为 A.可用性 B.可靠性 C.正确性 D.完整性 确定 20．数据流图(DFD)是方法中用于表示系统的逻辑模型的一种图形工具。 A.SA B．SD C．SP D．SC 确定 二、判断 1、文档是软件产品的一部分，没有文档的软件就不称其为软件。 T F 确定 2、在需求分析过程中，分析员要从用户那里解决的最重要的问题是给该软件提供哪些信息。 T F 确定 3、需求规格说明书在软件开发中具有重要的作用，它也可以作为软件可行性分析的依据。 T F 确定 4、数据流图建立系统的功能模型，它由数据流、加工和数据存贮组成。 T F 确定 5、好的测试是用少量的测试用例运行程序，发现被测程序尽可能多的错误。 T F 确定 6、面向对象的分析是面向计算机系统建立软件系统的对象模型。 T F 确定 7、不完善的系统定义往往是导致软件项目失败的主要原因。 T F 确定 8、一个成功的项目唯一提交的就是运行程序。 T F 确定 9、只有质量差的软件产品才需要维护。 T F 确定 10、一个好的测试用例在于能发现至今未发现的错误。 T F 确定 11、软件工作的考虑范围主要是程序设计和实现。 T F 确定 12、在项目计划发生延迟的情况下，增加更多的程序员一定会加快进度。 T F 确定 13、软件错误可能出现在开发过程的早期，越早修改越好。 T F 确定 14、在软件开发的过程中，若能推迟暴露其中的错误，则为修复和改正错误所花费的代价就会降低。 T F 确定 15、模型是对现实的简化，建模是为了更好地理解所开发的系统。 T F 确定 16、好的测试用例应能证明软件是正确的。 T F 确定 17、白盒测试仅与程序的内部结构有关，完全可以不考虑程序的功能要求。 T F 确定 18.开发软件就是编写程序。 T F 确定 19.以结构化分析方法建立的系统模型就是数据流图。 T F 确定 20.在用户需求分析时观察用户手工操作过程不是为了模拟手工操作过程,而是为了获取第一手资料,并从中提取出有价值的需求。 T F 确定 21.穷举测试是较现实的测试方法。 T F 确定 22.缺乏有力的方法学的指导和有效的开发工具的支持,往往是产生软件危机的原因之一。 T F 确定 23.面向对象设计是将面向对象分析所创建的分析模型进一步细化形成软件设计模型的过程。 T F 确定 24.程序文档一般指以注释的形式嵌入程序中的代码描述。 T F 确定 25.一般单元测试不可以并行进行。 T F 确定 26.如果测试过程没有发现任何错误,则说明软件没有错误。 T F 确定 27.生产高质量的软件产品是软件工程的首要目标。 T F 确定 28.类是对具有共同特征的对象的进一步抽象。 T F 确定 29.一个类中的每个对象都是这个类的一个实例。 T F 确定 30.可行性研究需要的时间长短和所研究系统的规模关系不大。 T F 确定 31.可行性研究工作要在初步的需求定义之前进行。 T F 确定 32.设计阶段的输出是编码阶段的输入。 T F 确定 33.在用户需求分析时观察用户手工操作过程不是为了模拟手工操作过程,而是为了获取第一手资料,并从中提取出有价值的需求。 T F 确定 34.穷举测试是较现实的测试方法。 T F 确定 35.穷举测试是较现实的测试方法。 T F 确定 36.为了快速完成集成测试，采用一次性集成方式是适宜的。 T F 确定 37.一般单元测试不可以并行进行。 T F 确定 38.可行性研究工作要在初步的需求定义之前进行。 T F 确定 39.软件模块间的耦合性越强越好。 T F 确定 40.缺乏有力的方法学的指导和有效的开发工具的支持,这往往是产生软件危机的原因之一。 T F 确定 41.程序文档一般指以注释的形式嵌入程序中的代码描述。 T F 确定 42.在设计测试用例时，应包括合理的输入条件和不合理的输入条件。 T F 确定 43.模块越多，开发的成本越小。 T F 确定 44.如果测试过程没有发现任何错误,则说明软件没有错误。 T F 确定 45.开发软件就是编写程序。 T F 确定 46.开发一个软件项目总存在某些不确定性,即存在风险。有些风险如果控制得不好,可能导致灾难性的后果。 T F 确定 47.生产高质量的软件产品是软件工程的首要目标。 T F 确定 48.可行性研究工作要在初步的需求定义之前进行。 T F 确定 49.开发软件就是编写程序。 T F 确定 50.设计阶段的输出是编码阶段的输入。 T F 确定 51.生产高质量的软件产品是软件工程的首要目标。 T F 确定 52.穷举测试是较现实的测试方法。 T F 确定 53．抽象和求精是一对互补的概念，也是人类解决复杂问题时最常用、最有效的方法。 T F 确定 54．面向对象需求过程的本质是在问题空间与求解空间之间架设桥梁。 T F 确定 55.为了快速完成集成测试，采用一次性集成方式是适宜的。 T F 确定 56.在设计测试用例时，应包括合理的输入条件和不合理的输入条件。 T F 确定 57.穷举测试是较现实的测试方法。 T F 确定 58．软件开发时，一个错误发现得越晚，为改正它所付出的代价就越大。 T F 确定 59.软件模块间的耦合性越强越好。 T F 确定 60.传统方法学采用结构化技术自底向上地完成软件开发各项任务。 T F 确定 61.模块越多，开发的成本越小。 T F 确定 62.软件开发应该是一种组织良好、管理严密、各类人员协同配合、共同完成的工程项目。 T F 确定 63.软件开发时，一个错误发现得越晚，为改正它所付出的代价就越大。 T F 确定 64.数据流图和数据字典共同构成系统的物理模型。 T F 确定 65.改正性维护是改正软件中原有的错误，所以对软件的修改一般不会导致文档的修改，而适应性和完善性维护将导致文档的修改。 T F 确定 66.软件开发小组的规模与个人生产率成正比，向一个已经延期的软件项目中增加人力，会使它按期完工。 T F 确定 67.层次图和结构图不仅表明一个模块调用哪些模块，而且对模块的其他成分也有明确的表示。 T F 确定 三、名词解释:::tip 1、项目风险指项目在预算、进度、人力、资源、顾客和需求等方面的原因对软件项目产生的不良影响。::: :::tip 2、α测试是指软件开发公司组织内部人员模拟各类用户行为对即将面市的软件产品( 称为α版本) 进行测试，试图发现错误并修正。::: :::tip 3、技术风险指软件在设计、实现、接口、验证和维护过程中可能发生的潜在问题，对软件项目带来的危害。::: :::tip 4、活动图描述系统为完成某项功能而执行的操作序列，这些操作序列可以并发和同步。::: :::tip 5、状态图描述类的对象的动态行为。它包含对象所有可能的状态、在每个状态下能够响应的事件以及事件发生时的状态迁移与响应动作。::: :::tip 6、白盒测试是已知产品内部工作过程, 通过测试检验产品内部动作是否按照产品规格说明的规定正常进行。::: :::tip 7、黑盒测试把测试对象看做一个黑盒子，测试人员完全不考虑程序内部的逻辑结构和内部特性，只依据程序的需求规格说明书，检查程序的功能是否符合它的功能需求。::: :::tip 8、单元测试又称模块测试，它着重对软件设计的最小单元（软件构件或模块）进行验证。单元测试根据设计描述，对重要的控制路径进行测试，以发现构件或模块内部的错误。单元测试通常采用白盒测试，并且多个构件或模块可以并行进行测试。::: :::tip 9、集成测试又称组装测试，经单元测试后的模块需集成为软件系统，集成测试是对集成后的软件系统进行测试，主要用来揭露设计阶段产生的错误。::: :::tip 10、确认测试按照需求规格说明书中的确定指标对系统进行功能与性能的测试。该阶段进行明确测试（对照需求规格说明书用黑盒法进行测试） ，软件配置测试（文档的完整性，发现遗漏错误及时补充和修改。::: :::tip 11、恢复测试主要检查系统的容错能力。当系统出错时， 能否在指定的时间间隔内修正错误并重新启动系统。::: :::tip 12、软件项目的成本管理估算软件项目的成本,作为立项和签合同的依据之一, 并在软件开发过程中按计划管理经费的使用。::: :::tip 13、软件质量软件产品满足规定的和隐含的与需求能力有关的全部特征和特性。::: :::tip 14、软件生命周期一个软件从定义，开发，使用和维护，直到最终被废弃，要经历一个漫长的时期，通常把软件经历的这个漫长时期称为生命周期。::: :::tip 15、数据字典数据字典是描述数据流图中数据信息的集合（描述内容包括：数据流图、状态转换图、E-R 图中的数据信息 、控制信息等 。::: :::tip 16、数据流图描述输入数据流到输出数据流的变换，用于对系统的功能建模。::: 四、简答 1.软件危机表现方面 软件开发成本过高； 软件质量得不到保证； 软件开发效率低； 难以控制开发进度，工作量估计困难； 软件不能满足社会发展的需求，成为社会、经济发展的制约因素； 程序规模、工作量与成本的关系。 2.软件项目管理任务 制定软件项目的实施计划和方案； 对人员进行组织和分工； 按照计划进度，以及成本管理、风险管理、质量管理的要求进行软件开发，完成软件项目的各项要求和任务。 3.软件产品具有哪些特点? 软件开发与传统的产品生产存在本质差别； 软件是逻辑产品，而不是物理产品； 软件不会磨损； 4.简述在测试中采用自顶向下集成和自底向上集成的优缺点。 自顶向下集成的优点在于能尽早地对程序的主要控制和决策机制进行检验, 因此较早地发现错误。 缺点是在测试较高层模块时, 低层处理采用桩模块替代, 不能反映真实情况, 重要数据不能及时回送到上层模块, 因此测试并不充分。 自底向上集成方法不用桩模块, 测试用例的设计亦相对简单, 但缺点是程序最后一个模块加入时才具有整体形象。 它与自顶向下综合测试方法的优缺点正好相反。 5.衡量某种程序语言是否适合于特定的项目, 一般应考虑哪些因素？ 算法和计算复杂性; 软件运行环境; 用户需求中关于性能方面的需要; 数据结构的复杂性; 软件开发人员的知识水平; 可用的编译器与交叉编译器。 6.简述软件维护及其过程。 软件维护就是要针对用户使用软件产品过程提出的问题而对软件产品进行相应的修改或演化，从而修正错误，改善性能或其它特征，以及使软件适应变化的环境。 软件维护的过程： 提出维护要求， 分析维护要求， 提出维护方案， 审批维护方案， 确定维护计划， 修改软件设计， 修改程序， 测试程序， 复查验收。 7.什么是需求分析？需求分析阶段的基本任务是什么？ 需求分析指的是在建立一个新的或改变一个现存的电脑系统时描写新系统的目的、范围、定义和功能时所要做的所有的工作。 需求分析阶段的基本任务是：要准确的定义新系统的目标，为了满足用户需要，回答系统必须“做什么”的问题。 8.什么叫维护？维护的类型有哪些？ 软件维护就是在软件已经交付使用之后，为了改正错误或满足新的需要而修改软件的过程。 软件维护类型有： 改正性维护：对程序使用期间发现的程序错误进行诊断和改正的过程；占维护工作量17-21% 。 适应性维护：配合变化了的环境进行修改软件的活动；占维护工作量18-25% 。 完善性维护：满足用户在使用过程中提出增加新的功能或修改已有功能的建议而进行的改进工作；占维护工作量50-66%。 预防性维护：为了改善未来的可维护性或可靠性而修改软件的工作；占维护工作量4% 左右。 9.用例图的作用是什么？ 用例图是外部参与者所能观察到的系统功能的模型图。由一组用例、参与者及它们之间的关系组成。主要用于对系统、子系统或类的功能行为进行建模。参与者是与系统交互的外部实体，可以是人，也可以是其它系统。用例是从用户的角度描述系统的行为（功能）它将系统的功能描述成一系列事件，这些事件最终对参与者产生可观察结果。 10.简要写出数据流图映射到结构图的步骤。 复审和精化数据流图 确定数据流图的类型：变换型、事务型 将数据流图映射成初始结构图 改进初始结构图。 11.简要写出软件生命周期各阶段及任务。 软件生命周期大致可分为6个阶段： 可行性研究：确定问题是否值得解，技术可行性、经济可行性、操作可行 需求分析：系统必须做什么 总体设计：系统如何实现，包括系统设计和结构设计 详细设计：具体实现设计的系统 实现：编码和测试 运行维护：保证软件正常运行。 12.简要写出软件设计工程的6个步骤。 制订规范； 体系结构和接口设计； 数据/类设计； 部件级设计； 编写设计文档;； 设计评审。 13.简要写出用况建模的步骤。 定义系统； 确定执行者； 确定用况； 描述用况； 定义用况间的关系； 确认模型。 14.结合所学知识写出面向对象分析的一般步骤。 获取客户对系统的需求：包括标识场景和用况，以及建造需求模型。 用基本的需求为指南，来选择类和对象（包括属性和操作）。 定义类的结构和层次。 建造对象——关系模型。 利用用况/场景来复审分析模型。 15.简要写出画分层数据流图的步骤。 画出系统的输入输出， 画出系统内部， 画出加工内部 重复第3步，直至每个尚未分解的加工都足够简单（即不必再分解）。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[户外活动打野果]]></title>
    <url>%2F%2Fposts%2F202006221.html</url>
    <content type="text"><![CDATA[:::tip好久都没有这样的活动过了，跑进深山老林，摘果子。::: 收到表姐给我发的图片，上面是一个桶装的李子，是那种像葡萄的小李子，让我赶紧过去摘。这种活动没有人会拒绝。 我立马就过去了，那条路很窄，我还很怕对面来车，索性没有遇到，七转八转，再穿过一片荒地就到了。不熟悉的人，你很难想象这里还有路，以前是田地都有田埂，不过都已经长草了，只有老一辈人才能找的到。 到达对面，我眼前的是一大片果林，树上的果子都将树枝压弯了，地上掉的也都是，简直shuan气，不注意看，真以为是葡萄，结的这样密。我来的时候就已经摘了不少，我们又摘了一会，整整一后备箱，天啊。 过了一天，我们又去，不过这次就没那么幸运了，天空下起了大雨，我们又没带伞，全身都湿透，也是摘了不少，比上次少了一点，第一次都卖掉了，一块钱一斤，卖了百十块钱，第二次一家分了一点，吃不完的那种，这大桶你提走吧，不不，我还是要这小桶吧，小桶也有不少，能吃个够。 好久都没有这样的活动了，感觉挺有意思的。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu18.04彻底删除MySQL数据库]]></title>
    <url>%2F%2Fposts%2F202006191.html</url>
    <content type="text"><![CDATA[从接触MySQL数据库开始，不可避免的一个问题就是数据库彻底删除，windows上，卸载了之后，可能要到ProgramData里面有没有看看是否有mysql文件夹，找到删除，Program Files，Program Files(x86)也是如此，然后再到注册表搜索一下mysql，找到也要删除，如果这些文件存在的话，很有可能会影响下一次的安装。 如果服务器是在阿里云买的，可能会预安装MySQL，我也不会使用，所以就删除了，要不然安装的MySQL会出问题。 只要按照以下的顺序，一步步运行，应该是是可以完全删除的。 查看MySQL依赖项dpkg --list|grep mysql sudo apt-get remove mysql-common sudo apt-get autoremove --purge mysql-server-5.7 清除残留数据dpkg -l|grep ^rc|awk &#39;&#123;print$2&#125;&#39;|sudo xargs dpkg -P 再次查看MySQL剩余依赖项dpkg --list|grep mysql 继续删除依赖项sudo apt-get autoremove --purge mysql-apt-config 到此可以在运行第一条命令，如果没有输出应该就是删除成功了。 关于服务器的配置，可以参考，我的这篇文章web服务环境配置，我今天试的也是也没有问题的。 参考连接Ubuntu18.04彻底删除MySQL数据库]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小卖铺]]></title>
    <url>%2F%2Fposts%2F202006171.html</url>
    <content type="text"><![CDATA[:::tip隔了这么多天都没有写博客，最近作业太多了，这个这次用的markdown格式感觉还可以。::: 1. 引言1.1 选题背景 2020年，爆发了全球疫情新冠肺炎，由于有着较强传染性，大部分高校为了防止疫情进一步扩散，宣布本学期不开学，但是有少部分高校由于有科研任务，仍然被迫选择开学，造成了一定的风险性。学生到校，如何健康的生活，对于各个高校来说都是极具挑战性的，最好的办法就是隔绝，各个小卖铺、商店要求送货上门。 互联网的技术的飞快发展给人们的生活带来了极大的改变，以前为了买一个特殊的东西，说不定要跑上很远才可以买到，以前有“千里送鹅毛，礼轻情意重”，现在打开微信，就能见面聊天，然而我们却变得越来越懒了，吃饭有外卖，买东西专门有“跑腿”业务，催生了一系列的产业。在这个特殊时期，可以好好利用这个机会，发展用户。 1.2 选题意义 古代秀才不出门，尽知天下事，在网络发达的今天，作为普通人，也可以了解到比秀才还多的资源，给我们的生活带来了极大的便利。网络交换信息极速。市面上有类似的商城、外卖平台，可以说，已经做的非常好了，就是广告多，少发货量，也可以用微信代替，但是必须是好友，当存在大量订单的时候，就不便于管理了，不如大家同在一个平台，无广告，清爽，便捷。 2. 相关技术介绍2.1 SSM框架技术 SSM（Spring+SpringMVC+MyBatis）框架集由Spring、MyBatis两个开源框架整合而成（SpringMVC是Spring中的部分内容）。常作为数据源较简单的web项目的框架。 Spring的两大核心思想是依赖注入(IOC)和面向切面编程(AOP)，主要用于管理项目中的对象，简化开发流程。 SpringMVC包含了众多的“xxxx器”，视图解析器，前端控制器等等，在项目中用于拦截用户的请求，它的核心Servlet即DispatcherServlet承担中介或是前台这样的职责，将用户请求通过HandlerMapping去匹配Controller，Controller就是具体对应请求所执行的操作。 MyBatis是对jdbc的封装，它让数据库底层操作变的透明。MyBatis的操作都是围绕一个sqlSessionFactory实例展开的。MyBatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行SQL命令。 页面发送请求给控制器，控制器调用业务层处理逻辑，逻辑层像持久层发送请求，持久层与数据库交互，后将结果返回给业务层，业务层将处理逻辑发送给控制器，控制器再通过视图解析器将页面渲染展现给用户。 2.2 MySQL数据库 MySQL数据库是一个关系型数据库管理系统，属于Oracle旗下产品，关系数据库将数据保存在不同的表中，使用SQL语言，体积小，速度快，最好的RDBMS应用软件之一。 2.3 Spring Security安全框架 Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框架。与此功能相似的还有shiro安全框架，Spring Security对Web安全性的支持大量地依赖于Servlet过滤器，过滤器链拦截Servlet请求，并将这些请求转给认证和访问决策管理器处理，从而增强安全性。其有两大核心作用，身份认证与授权。 2.4 JSP和jQuery JSP（全称JavaServer Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的HTTP请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。 jQuery是一个快速、简洁的JavaScript框架，它的设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。 2.5 JSON JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写，同时也易于机器解析和生成。数据都是采用键值对的方式表示，任何支持的类型都可以通过 JSON 来表示，例如字符串、数字、对象、数组等。但是对象和数组是比较特殊且常用的两种类型，对象用一组{}来表示，数组由[]表示。 3. 系统需求分析3.1 系统可行性分析 现实需求：现在疫情的爆发，人们都足不出户，学生到校也是要进行封闭管理的，为了减少人员的流动，提出了送货上门服务，这样的一个平台是能够带来便利的。 技术可行性：由于现在网络速率的提高，微服务架构的优势日益凸显，市场上有着成熟的开发流程，项目后台基于Spring，SpringMVC，MyBatis搭建，数据库采用MySQL，安全框架使用Spring Security，密码使用Bcr加密，页面发送请求使用JSP和jQuery，数据交互格式采用JSON，将页面嵌入到Webview中。 交易安全可行性：由于本系统只是涉及到类似于中间人身份，并不触碰现金，商家送上门之后再收取相关费用，从这方面看来是安全的。 3.2 系统需求分析 小卖铺系统的主要功能： 商店老板可以在系统上架商品，如果是商店还没有入驻，需要注册，然后才可以发布。之后进入上架商品页面，填写商品属性，进行发布。发布成功后，将在系统页面展示。同样也可以下架商品。商品的属性有商品号，价格，名称，店铺号。 学生首次使用需要注册，填写相关属性，然后登录，在平台中选择需要的商品，加入购物车，选择完毕，在购物车页面中进行下单操作，成功之后生成订单，然后系统给店铺老板发送通知。 商店老板收到订单之后，检查货源是否充足，如果充足，就根据订单地址送货上门，如果不充足就拒绝发货。整个交易完毕。 4. 系统功能设计4.1 系统总体设计由上面的需求分析，设计出如下的上下文数据流图和0层数据流图。 学生学生老板老板小卖铺系统小卖铺系统通知通知上架/下架商品上架/下架商品查询订单/同意/拒绝发货查询订单/同意/拒绝发货选购/下单商品选购/下单商品变更订单变更订单身份信息身份信息身份信息身份信息图4-1 上下文数据流图图4-1 上下文数据流图Viewer does not support full SVG 1.1 将上面的上下文数据流图细化为0层数据流图，描述数据的走向。 学生学生商家商家学生表学生表商家表商家表商品列表商品列表购物车表购物车表订单列表订单列表1检查是否登录检查是否登录4购物车购物车6下架商品下架商品3选择商品选择商品8变更订单变更订单5上架商品上架商品1检查是否登录检查是否登录9生成订单生成订单选择商品选择商品登录状况登录&#xa;状况未登录未登录已登录已&#xa;登录加入商品加入商品删除商品删除商品下单下单记录订单记录订单通知通知检查检查7确认订单确认订单备货备货送货上门送货上门…获取商品信息获取商品信息…2发货发货获取地址获取&#xa;地址商品商品学生地址学生地址商家信息商家信息登陆状况登陆状况未登录未登录上架上架上架上架下架下架下架下架获取商品信息获取商品信息变更变更变更变更图4-2 0层数据流图图4-2 0层数据流图Viewer does not support full SVG 1.1 4.2 数据库分析与设计 根据数据流图中数据和实体对象进行数据库表的设计。 本项目涉及到学生、商家和管理员，归类于一个用户，只是不同的角色。基于角色的权限访问控制（RBAC），最低需要五个表，分别是用户、角色、权限、用户角色关系、角色权限关系表，此外在此项目中还需要要商品、订单、购物车表，分别做如下设计。 4.2.1 数据库ER图设计 根据实体对象的关系，做出如下的ER关系图。用户表包含着所有的用户，用角色关系表来体现不同的用户，权限表存储不同角色的操作权限。 用户用户关系1关系1用户号用户号角色角色权限权限商品商品关系2关系2购物车购物车类型类型密码密码角色号角色号角色名角色名角色描述角色描述创建时间创建时间权限号权限号权限名字权限名字权限标志权限标志地址地址订单订单创建时间创建时间总额总额图4-3 ER关系图图4-3 ER关系图Viewer does not support full SVG 1.1 4.2.2 数据库表的设计 (1) 订单表(orders)，主键是id，自动递增，用户在下单的时候生成订单，订单表与用户表和商品表关联性较强，包括了买方与卖方，由订单表的状态给双方通知。 表 4-1 订单表 序号 列名 数据类型 主键 注释 1 user_id_boss int(11) 老板id 2 user_id_stu int(11) 学生id 3 date varchar(255) 创建时间 4 address varchar(255) 订单地址 5 price_sum double(10,2) 总额 6 good_id int(11) 商品id 7 flag int(11) 标志发货 8 id int(11) PRI 订单id (2) 商品表(good)，主键id递增，用于存储商品记录。 表 4-2 商品表 序号 列名 数据类型 主键 注释 1 id int(11) PRI 商品id 2 goodName varchar(50) 商品名 3 price double(10,2) 商品价格 (3) 权限表(permission)，用于存储权限标识，主键id自动递增，permTag在后台用于标识权限信息。 表 4-3 权限表 序号 列名 数据类型 主键 注释 1 id int(11) PRI 权限id 2 permName varchar(50) 权限名字 3 permTag varchar(50) 权限标识 (4) 身份验证表(persistent_logins)是Spring Security自动生成的，当用户在登录界面中选中记住我，在这个表中就会产生一条记录，在token的有效期内用户的操作都是免登录的。 表 4-4 身份验证表 序号 列名 数据类型 主键 注释 1 username varchar(64) 用户名 2 series varchar(64) PRI 标识 3 token varchar(64) token令牌 4 last_used timestamp 最后使用 (5) 角色表(role)用于定义用户的角色，是学生，店长还是管理员，基于角色的权限访问控制(RBAC)的中间表，id是主键，自动递增。 表 4-5 角色表 序号 列名 数据类型 主键 注释 1 id int(11) PRI 角色id 2 roleName varchar(50) 角色名 3 roleDesc varchar(255) 角色描述 (6) 用户权限关系表(role_permission)用户建立角色和权限的关系，角色和权限是一个多对多的关系，一个角色可以拥有多个权限，一个权限也可以被多个用户拥有。 表 4-6 角色和权限关系表 序号 列名 数据类型 主键 注释 1 role_id int(11) PRI 角色id 2 permission_id int(11) PRI 权限id (7) 购物车表(shopcart)是专给学生(买家)用的，将商品添加到购物车，与商品建立关系。 表 4-7 购物车表 序号 列名 数据类型 主键 注释 1 user_id int(11) PRI 用户id 2 good_id int(11) PRI 商品id (8) 用户表(user)用于存储用户信息，主键id，自动递增，由于运用了安全框架，可以设置用户的一些状态，提高安全性。 表 4-8 用户表 序号 列名 数据类型 主键 注释 1 id int(11) PRI 用户id 2 username varchar(50) 用户名 3 realname varchar(50) 真实姓名 4 password varchar(255) 密码 5 createDate date 创建时间 6 lastLoginTime date 最后登录时间 7 enabled int(5) 是否可用 8 accountNonExpired int(5) 账户未过期 9 accountNonLocked int(5) 账户未锁定 10 credentialsNonExpired int(5) 凭据未过期 11 address varchar(255) 地址 (9) 用户商品关系表(user_good)用户建立用户和商品的关系，和购物车表一样，但是意义不同，购物车表表示的是学生与商品的关系，用户商品关系表表示的是店长和商品的关系。 表 4-9 用户商品关系表 序号 列名 数据类型 主键 注释 1 user_id int(11) PRI 用户id 2 good_id int(11) PRI 商品id (10) 用户角色关系表(user_role)用于建立用户与角色的关系，用户要想有权限，就必须是一种角色，然后对角色进行授权，间接用户就有权限了。 表 4-10 用户角色关系表 序号 列名 数据类型 主键 注释 1 user_id int(11) PRI 用户id 2 role_id int(11) PRI 角色id 4.3 系统模块详细设计4.3.1 用户登录 用户登录验证采用的是Spring Security自带的一个表单登录，重新定制登录页面，集成图片验证码，防止恶意用户，可根据自己需求选择记住我，一个小时免登录。其实在后端的过滤器链首先验证的是，验证码是否正确，然后才是用户名密码，两个同时正确，身份验证通过。 开始开始结束结束主页主页有账号?有账号?输入用户名密码输入用户名密码true?true?输入图片验证码输入图片验证码true?true?登录成功登录成功NNNN注册注册NNYYYYYY图4-4 用户登录流程图4-4 用户登录流程Viewer does not support full SVG 1.1 4.3.2 生成订单 生成订单，是学生的功能，首先需要将首页展现的商品列表加入到购物车中，对于前台来说，需要向后端购物车接口发送商品id和用户id，建立联系。然后学生进入到购物车页面，选中加入到购物车中的商品，点击下单，这是时候，会向后端生成订单接口发送三个参数，分别是学生id,店长id，商品id，这样后端的业务代码就会在订单表中生成一条新的记录。 图4-5 生成订单流程图4-5 生成订单流程Viewer does not support full SVG 1.1 4.4 页面交互流程 用户分为三个角色，店长，学生，管理员，不同的角色具有不同的功能。 在首页中，展现了一个商品列表，以及登录和注册的按钮。没有账户的用户进行注册，有账户的进行登录，因为进行了用户角色分类，操作的界面显示都不太一样。 对于学生来说，可以修改个人信息，将首页的商品加入到购物车中，对以添加到购物车中商品下单，查看订单的状况，是否已经发货。 管理员权限原则上是无限大的，任何用户可以进行的操作，管理员都可以，但是这是无意义的，试想，一个管理员可以发货又可以下单，这貌似也行，咸鱼APP上就是如此，但是限于开发时间，现只做了用户管理和商品管理。对于违规的商品可以删除，同时也可以添加用户，更改用户信息。 主页主页注册注册登录登录学生学生管理员管理员店长店长我的订单我的订单加入购物车加入购物车购物车购物车退出退出我的信息我的信息修改地址修改地址修改密码修改密码下单下单删除删除退出退出我的订单我的订单店长商品管理店长商品管理我的信息我的信息修改地址修改地址修改密码修改密码学生学生商品上架商品上架商品删除商品删除商品管理商品管理退出退出用户管理用户管理删除商品删除商品添加用户添加用户更改用户信息更改用户信息图4-6 页面交互流程图图4-6 页面交互流程图Viewer does not support full SVG 1.1 5. 系统实现5.1 开发环境 表5-1 开发环境信息表 种类 名称 版本 开发工具 IDEA 2020.1 开发操作系统 win10 家庭版1903 数据存储 MySQL 5.5 开发语言 JAVA jdk8 服务器 Tomcat 9.0.30 云服务器 Ubuntu 18.04 安卓开发工具 Android Studio 3.4.1 5.2 匿名用户首页 安卓客户端首次进入就是主页，主要是做数据展示以及用户登录和注册，匿名用户首先需注册或者登录，方可进行下一步操作。 图5-1 匿名用户首页图5-1 匿名用户首页Viewer does not support full SVG 1.1 5.3 用户登录界面展示 用户登录界面，需要输入用户名，密码，验证码，进行身份验证，验证次序如下，首先进行验证码验证，如果验证码输入错误，则会弹出“验证码不一致”弹窗，验证码正确后，再验证用户名和密码，如果输入有误就会弹出“Bad credentials”错误，两个都验证成功后，进入进入主页，Spring Security会验证用户的角色，展现不同的功能。 图5-2 用户登录界面图5-2 用户登录界面Viewer does not support full SVG 1.1 5.4 学生首页实现 学生登录成功，拥有如下功能，查看和修改我的信息，查看我的订单，再购物车中下单，以及选中商品列表中的商品，加入到购物车中。 图5-3 学生首页图5-3 学生首页Viewer does not support full SVG 1.1 5.5 店长商品上架 店长可以管理自己上架的商品，输入商品的名字，以及价格，点击提交，就能成功地将商品上架，对于后台数据库来说，商品表将增加一条记录，商品与用户地关系表也要增加一条记录，维持关系。同样的，店长也可以对自己的商品进行删除操作，选中要删除的商品，然后点击删除即可。 图5-4 店长商品管理页面图5-4 店长商品管理页面Viewer does not support full SVG 1.1 5.6 管理员用户管理 管理员可以对用户进行管理，首先管理员可以添加用户，可以选择用户的类型，这里增加用户（注册用户），考虑还是有些不足的，输入相同的用户名，注册虽然失败，但是还是提示注册成功，用户名用于唯一标识一个用户。考虑到可能某些用户密码会忘记，管理员能进行密码修改，同时在这个页面中也展示了所有注册的用户。 图5-5 管理员用户管理界面图5-5 管理员用户管理界面Viewer does not support full SVG 1.1 6. 测试与验证6.1 用户登录测试 再首页点击登录按钮，进入登录页面，输入用户名，密码，验证码，进行功能测试。 表 6-1 用户登录测试表 过程 预期结果 测试结果 预设条件 不输入任何数据 提示“输入验证码不一致” Y 无 用户名或者密码错误 提示“Bad credentials” Y 无 验证码输入错误 提示“输入验证码不一致” Y 无 用户名：hexo，密码：123456，验证码填写正确 登录成功返回到主页 Y 无 6.2 学生下单 学生登录之后，将首页的商品选择后添加到购物车，然后在进入到购物车页面，选择要购买的商品，点击下单，即生成了订单，在订单页面立即出现订单的状态发货还是未发货，对于店长来说，将会收到这条通知，然后对订单进行发货操作。 表 6-2 学生下单测试表 过程 预期结果 测试结果 预设条件 不选择任何商品点击下单 订单生成失败 N 无 选择一个商品进行下单 生成一条订单 Y 无 选择多个商品下单 生成多条订单 Y 无 6.3 商品上架 商品上架是店长的功能，可以对商品进行管理，商品，主要有两个参数，商品名，商品价格，数据库中的商品表还有一个商品id，唯一标识一个商品。 表 6-3 商品上架测试表 过程 预期结果 测试结果 预设条件 不填写任何商品信息提交表单 提醒未填写 N 无 填写商品名，但是不填写价格 提醒未填写价格 N 无 填写价格,不填写商品名 提醒未填写商品名 N 无 两个都填写 商品添加成功 Y 无 经测试，发现商品信息未填写完全，也是可以显示商品提交成功的，但是实际上后台不会添加这个商品，设置输入框必填，解决了这个问题。 6.4 管理员更改用户密码 用户管理是管理员的功能，包括对于用户的增加，和更改用户密码，考虑到管理员删除用户不友好的，另外用户的个人信息，管理员也不应修改，当用户忘了密码时可以寻找管理员重置密码。 表 6-4 管理员更改用户密码测试表 过程 预期结果 测试结果 预设条件 不输入用户名 请输入用户名 N 无 输入用户名，不输入密码 请输入密码 N 无 不输入用户名，输入密码 请输入用户名 N 无 输入用户名和密码 更改密码成功 Y 无 经测试，发现什么输入也会显示密码修改成功，这个显然是不行的，为input设置了`required`属性，但是由于不是from表单形式，也就自然无效了。 7. 收获 由于最近在学web后端，所以就想着能不能做一款网络应用，起初也不知道需要做些什么，简单的，对于数据库的一些增删改，也不想做，因为有了SSM和SpringBoot，做出API响应接口是十分容易的。这一次做下来，发现最重要的就是数据如何的存储，这次做的也存在着很多的毛病，例如如何唯一标识一个商品，如果设置id为唯一标识，自动自增，如果不涉及到商品的删除还好点，假如某个商品删除，对于商品的增删改可能会有问题。数据的交互没有搞好，js和jsp数据如何互相使用，过多的依耐它们两个所拿到的值，js可以判断你选中了哪些组件，但是却并不知道有多少个，需要jsp的配合使用，总之很麻烦。 还有就是本次使用了Spring Security进行身份认证与授权，它可以很好地对于用户的一些权限进行控制，可以设置哪些接口被那些角色所访问，它还有在页面中使用它的标签库，在页面中，使用``包含的内容可以控制内容的一个展示，用户包括权限，则展示相应的功能和内容。 也奋斗好几天，没日没夜的，我觉得收获还是挺大的，网上看别人做的很好，就算一步步跟着也是可能会出错的，可能会花上数个小时，翻阅数篇博客，我发现用的最多的时间不是编代码，而是解决bug，这就是个经验累积的过程吧，以前在服务器上部署个web坏境，可能会花上一天甚至还未解决，现在大概十几分钟就行了。踩坑的过程就是学习的过程。但是不知道为什么，服务端程序部署到云tomcat服务器中不能运行，又掉坑去了。 8. 附录AndroidManifest.xml123456789101112131415161718192021222324&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.example.zuoye&quot;&gt; &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt; &lt;application android:allowBackup=&quot;true&quot; android:usesCleartextTraffic=&quot;true&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:label=&quot;@string/app_name&quot; android:roundIcon=&quot;@mipmap/ic_launcher_round&quot; android:supportsRtl=&quot;true&quot; android:theme=&quot;@style/AppTheme&quot;&gt; &lt;activity android:name=&quot;.MainActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; activity_main.xml1234567891011121314&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; tools:context=&quot;.MainActivity&quot;&gt; &lt;WebView android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:id=&quot;@+id/web_view&quot;/&gt;&lt;/LinearLayout&gt; MainActivity.java12345678910111213141516171819202122232425262728293031323334353637package com.example.zuoye;import androidx.appcompat.app.AppCompatActivity;import android.os.Build;import android.os.Bundle;import android.webkit.WebSettings;import android.webkit.WebView;import android.webkit.WebViewClient;public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); WebView main_webview = findViewById(R.id.web_view); WebSettings settings = main_webview.getSettings(); settings.setJavaScriptCanOpenWindowsAutomatically(true);//设置js可以直接打开窗口，如window.open()，默认为false settings.setJavaScriptEnabled(true);//是否允许执行js，默认为false。设置true时，会提醒可能造成XSS漏洞 settings.setSupportZoom(true);//是否可以缩放，默认true settings.setBuiltInZoomControls(true);//是否显示缩放按钮，默认false settings.setUseWideViewPort(true);//设置此属性，可任意比例缩放。大视图模式 settings.setLoadWithOverviewMode(true);//和setUseWideViewPort(true)一起解决网页自适应问题 settings.setAppCacheEnabled(true);//是否使用缓存 settings.setDomStorageEnabled(true);//DOM Storage main_webview.loadUrl(&quot;http://10.0.2.2:8080/shop2_war/&quot;); //该方法解决的问题是打开浏览器不调用系统浏览器，直接用webview打开 main_webview.setWebViewClient(new WebViewClient() &#123; @Override public boolean shouldOverrideUrlLoading(WebView view, String url) &#123; view.loadUrl(url); return true; &#125; &#125;); &#125;&#125;]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring Security整合]]></title>
    <url>%2F%2Fposts%2F202006121.html</url>
    <content type="text"><![CDATA[:::tip当对一个新事物不熟悉的时候，最好的办法就是走老路，别人怎样就怎样，版本需一致，勿要掉坑。::: Spring Security是一个安全框架，但是只能够在Spring项目中使用，与此相似的安全框架还有shiro，它并不依赖于任何框架。安全提供了两个主要功能：认证与授权。一些接口，并不能随意的就让任何人访问，需要通过网站管理者的认证，但是认证的用户也不能随意的访问任何接口，例如对于数据库增删改的操作接口，一定要慎重。用户有不同的角色，角色有不同的权限，这就是基于角色的权限访问控制，即RABC。基于这套理论，可以给每一个接口设置访问的权限，一个角色只有拥有这个权限才可以访问。 用户用户权限权限角色角色用户角色用户角色角色权限角色权限基于RABC的基本表基于RABC的基本表Viewer does not support full SVG 1.1 spring Security和ssm的整合ssm框架还是基于上次的优雅的ssm框架，可以查看，还是将项目所需要文件应该创建的位置用树形表示出来，作为参考，到需要的时候不知道在哪创建，就可以在这里找到，完善xxx，即是对已存在的文件增删改，创建xxx，即是新创建的文件。 123456789101112131415161718192021222324252627282930313233343536373839404142.├── .idea├── src│ └── main| ├── java| | └── org| | └── example| | ├── controller| | | ├── MainController.java| | | └── UserController.java| | ├── dao| | | └── UserMapper.java| | ├── domain| | | └── User.java| | ├── service| | | ├── UserService.java| | | └── Impl| | | └── UserServiceImpl.java| | └── test| | ├── SpringTest.java| | └── MybatisTest.java| ├── resources| | ├── org| | | └── example| | | └──dao| | | └── UserMapper.xml| | ├── applicationContext.xml| | ├── db.properties| | ├── mybatis-config.xml| | ├── spring-security.xml| | └── springmvc.xml│ └── webapp│ ├── WEB-INF| | ├── Pages| | | ├── error.jsp| | | ├── login.jsp| | | └── success.jsp│ │ └── web.xml│ └── index.jsp ├── target├── pom.xml└── shop.iml 所需要的jar包坐标就是因为这个jar包的版本让我掉坑去了，Spring-Security 5.x.x 就是密码的存储格式改变了，密码必须要选择一个加密方式，具体我也还没搞清楚密码该怎么验证，等4.x.x熟悉之后再看5版本吧。 12345678910111213&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.security&lt;/groupId&gt; &lt;artifactId&gt;spring-security-web&lt;/artifactId&gt; &lt;version&gt;4.2.3.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.security&lt;/groupId&gt; &lt;artifactId&gt;spring-security-config&lt;/artifactId&gt; &lt;version&gt;4.2.3.RELEASE&lt;/version&gt;&lt;/dependency&gt; 创建spring-security.xmlspring security的核心配置文件，spring的配置文件大致都是如此，特殊的地方就是引用的文件有些区别，它这里就是多了一个security。 123456789101112131415161718192021222324252627282930313233&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:security=&quot;http://www.springframework.org/schema/security&quot; xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd &quot;&gt; &lt;security:http&gt; &lt;!-- 需要拦截的资源 --&gt; &lt;!-- isFullyAuthenticated():该资源需要认证才可以访问 --&gt; &lt;!-- permitAll():允许所有人访问 --&gt; &lt;!-- isAnonymous():只有未登录用户可以访问 --&gt; &lt;security:intercept-url pattern=&quot;/index.jsp&quot; access=&quot;permitAll()&quot;/&gt; &lt;security:intercept-url pattern=&quot;/userLogin&quot; access=&quot;permitAll()&quot;/&gt; &lt;security:intercept-url pattern=&quot;/**&quot; access=&quot;isFullyAuthenticated()&quot;/&gt; &lt;!--关闭csrf拦截--&gt; &lt;security:csrf disabled=&quot;true&quot;/&gt; &lt;!-- 自定义登录页面 --&gt; &lt;security:form-login login-page=&quot;/userLogin&quot; login-processing-url=&quot;/securityLogin&quot;/&gt; &lt;/security:http&gt; &lt;!-- 认证管理器 --&gt; &lt;security:authentication-manager&gt; &lt;security:authentication-provider&gt; &lt;security:user-service&gt; &lt;security:user name=&quot;admin&quot; password=&quot;1234&quot; authorities=&quot;ROLE_ADMIN&quot;/&gt; &lt;/security:user-service&gt; &lt;/security:authentication-provider&gt; &lt;/security:authentication-manager&gt;&lt;/beans&gt; 这里可能一下子写的有点多，&lt;security:intercept-url pattern=&quot;&quot; access=&quot;&quot;/&gt;的作用是设置一些接口的访问权限，pattern里包含需要控制的接口，可以是一个路径，或者一个文件，一个“*”代表一级目录。 默认Spring Security是给了一个用于身份验证的方式，可以选择弹窗式的表单，也可以选择一个表单页面，这里就重写了一下登录的页面。 还有就是有一个认证管理器，用于定义一些用户，授予一些角色，相当于授权。在这里都已经写死了，也可以将这些用于存入到数据库，这样就可以实现动态的对一些用户的权限进行修改。 创建login.jsp这个就是自己定制的登录页面了。 1234567891011121314&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;登录页面&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;登录页面&lt;/h3&gt; &lt;form action=&quot;securityLogin&quot; method=&quot;post&quot;&gt; 用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br/&gt; 密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 完善web.xml这里就是在web.xml中添加了Spring Security的过滤链，也不贴完整代码了，将这个过滤链放到web.xml即可。 123456789&lt;!-- Spring Security过滤器链 --&gt;&lt;filter&gt; &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt; &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;&lt;/filter&gt;&lt;filter-mapping&gt; &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt;&lt;/filter-mapping&gt; 完善applicationContext.xml这个也是最重要的一点，加载Spring Security的核心配置文件。 12&lt;!-- 加载spring-security --&gt;&lt;import resource=&quot;spring-security.xml&quot;/&gt; 创建MainController.xml登录的方法就写在了这里，也比较的简单。 12345678910111213package org.example.controller;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;@Controllerpublic class MainController &#123; @RequestMapping(&quot;/userLogin&quot;) public String login()&#123; return &quot;login&quot;; &#125;&#125; 至此，已经可以实现所有的接口都需要身份认证才可以访问，但是还有很重要的一点，如何让不同的接口被不同的角色访问，还没有做。只需要修改Spring Security的核心配置文件就行了。 完善spring-security.xml本次加上了权限控制，定义了两个角色，分别是ROLE_USER和ROLE_ADMIN，两个角色，一个可以查看所有用户，一个可以插入用户。hasAnyRole()可以判断一个用户是否是此种角色。这样就可以实现不同的接口被不同的角色访问。但是此种方式并不符合实际的开发需要，不可能授权一个用户，还把项目文件改改，下面将介绍RBAC。 12345678910111213141516171819202122232425262728293031323334353637&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:security=&quot;http://www.springframework.org/schema/security&quot; xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd &quot;&gt; &lt;security:http&gt; &lt;!-- 需要拦截的资源 --&gt; &lt;!-- isFullyAuthenticated():该资源需要认证才可以访问 --&gt; &lt;!-- permitAll():允许所有人访问 --&gt; &lt;!-- isAnonymous():只有未登录用户可以访问 --&gt; &lt;security:intercept-url pattern=&quot;/index.jsp&quot; access=&quot;permitAll()&quot;/&gt; &lt;security:intercept-url pattern=&quot;/userLogin&quot; access=&quot;permitAll()&quot;/&gt; &lt;security:intercept-url pattern=&quot;/user/findAll&quot; access=&quot;hasAnyRole(&#x27;ROLE_USER&#x27;)&quot;/&gt; &lt;security:intercept-url pattern=&quot;/user/addUser&quot; access=&quot;hasAnyRole(&#x27;ROLE_ADMIN&#x27;)&quot;/&gt; &lt;security:intercept-url pattern=&quot;/**&quot; access=&quot;isFullyAuthenticated()&quot;/&gt; &lt;!--放开csrf拦截--&gt; &lt;security:csrf disabled=&quot;true&quot;/&gt; &lt;!-- 自定义登录页面 --&gt; &lt;security:form-login login-page=&quot;/userLogin&quot; login-processing-url=&quot;/securityLogin&quot;/&gt; &lt;/security:http&gt; &lt;!-- 认证管理器 --&gt; &lt;security:authentication-manager&gt; &lt;security:authentication-provider&gt; &lt;security:user-service&gt; &lt;security:user name=&quot;admin&quot; password=&quot;1234&quot; authorities=&quot;ROLE_ADMIN&quot;/&gt; &lt;security:user name=&quot;user&quot; password=&quot;1234&quot; authorities=&quot;ROLE_USER&quot;/&gt; &lt;/security:user-service&gt; &lt;/security:authentication-provider&gt; &lt;/security:authentication-manager&gt;&lt;/beans&gt; 配置权限不足跳转的错误页面默认访问一个页面权限不足，是报403的一个错误页面，这对于用户来说体验式很不好的，所以需要定制一下错误页面。 创建error.jsp123456789&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;未授权&lt;/title&gt;&lt;/head&gt;&lt;body&gt;你无权限访问此页面。&lt;/body&gt;&lt;/html&gt; 完善spring-security.xml在此文件的security:http标签中添加如下内容 12&lt;!-- 自定义权限不足页面 --&gt;&lt;security:access-denied-handler error-page=&quot;/error&quot;/&gt; 完善MainController.java在此文件中定义错误需要跳转的路径。 123456789101112131415161718package org.example.controller;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;@Controllerpublic class MainController &#123; @RequestMapping(&quot;/userLogin&quot;) public String login()&#123; return &quot;login&quot;; &#125; @RequestMapping(&quot;/error&quot;) public String error()&#123; return &quot;error&quot;; &#125;&#125; 以下是将实现动态用户授权。 数据库数据12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788/* Navicat Premium Data Transfer Source Server : srcrs Source Server Type : MySQL Source Server Version : 50528 Source Host : localhost:3306 Source Schema : shop Target Server Type : MySQL Target Server Version : 50528 File Encoding : 65001 Date: 13/06/2020 01:30:46*/SET NAMES utf8mb4;SET FOREIGN_KEY_CHECKS = 0;-- ------------------------------ Table structure for permission-- ----------------------------DROP TABLE IF EXISTS `permission`;CREATE TABLE `permission` ( `id` int(11) NOT NULL AUTO_INCREMENT, `permName` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, `permTag` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;-- ------------------------------ Table structure for role-- ----------------------------DROP TABLE IF EXISTS `role`;CREATE TABLE `role` ( `id` int(11) NOT NULL AUTO_INCREMENT, `roleName` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, `roleDesc` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;-- ------------------------------ Table structure for role_permission-- ----------------------------DROP TABLE IF EXISTS `role_permission`;CREATE TABLE `role_permission` ( `role_id` int(11) NOT NULL, `permission_id` int(11) NOT NULL, PRIMARY KEY (`role_id`, `permission_id`) USING BTREE, INDEX `permission_id`(`permission_id`) USING BTREE, CONSTRAINT `role_permission_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT, CONSTRAINT `role_permission_ibfk_2` FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;-- ------------------------------ Table structure for user-- ----------------------------DROP TABLE IF EXISTS `user`;CREATE TABLE `user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, `realname` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, `password` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL, `createDate` date NULL DEFAULT NULL, `lastLoginTime` date NULL DEFAULT NULL, `enabled` int(5) NULL DEFAULT NULL, `accountNonExpired` int(5) NULL DEFAULT NULL, `accountNonLocked` int(5) NULL DEFAULT NULL, `credentialsNonExpired` int(5) NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;-- ------------------------------ Table structure for user_role-- ----------------------------DROP TABLE IF EXISTS `user_role`;CREATE TABLE `user_role` ( `user_id` int(11) NOT NULL, `role_id` int(11) NOT NULL, PRIMARY KEY (`user_id`, `role_id`) USING BTREE, INDEX `user_id`(`user_id`) USING BTREE, INDEX `role_id`(`role_id`) USING BTREE, CONSTRAINT `user_role_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT, CONSTRAINT `user_role_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Compact;SET FOREIGN_KEY_CHECKS = 1; 参考链接springboot整合spring security教程]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动提交百度收录]]></title>
    <url>%2F%2Fposts%2F202006091.html</url>
    <content type="text"><![CDATA[:::tip不知道为什么百度收录那么慢，提交sitemap已经一周了，貌似只有个主页，相反谷歌却已经有十来个链接了，再尝试每天API提交一次试试。::: 简述百度提供了相应的API收录提交接口，不知道作用大不大，反正试一下吧，sitemap提交了这么多天也没有动静，也没有更新。 sitemap将网站所有的链接都生成了，但是有一些链接是不太友好的，例如文章的链接，就要是文章的链接，不能标签，分类的链接也存在，打开之后，并不能直接看到文章的内容，还得要点一次文章，这个是不太好的。所以当用API提交时，应该排除掉自己不需要的链接，首先要拿到sitemap的内容，然后通过正则筛选到自己想要的链接，接着提交到API就行了。 例如，存在以下几种链接 12345https://srcrs.top/posts/2019/08/12/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%BF%AB%E9%80%9F%E5%B9%82%E6%A8%A1%E6%9D%BF.htmlhttps://srcrs.top/posts/tags/bfs.htmlhttps://srcrs.top/posts/categories/Note.html 只需要用一个正则公式就能够获取到自己想要的链接 1https://srcrs.top/posts/[\d]&#123;4&#125;/[\d]&#123;2&#125;/[\d]&#123;2&#125;/.+.html 把这些链接组合成一个字符串，官网给的示例，我还是有点看不懂，post发送方式只会携带键值对的参数，看到别人的实现方式就是类似当作socket发送消息的方式，还是挺新奇的。索性就当作一个工具类拿来用了。 所需jar包使用maven建立的一个项目，需要导入jsoup的包。 12345&lt;dependency&gt; &lt;groupId&gt;org.jsoup&lt;/groupId&gt; &lt;artifactId&gt;jsoup&lt;/artifactId&gt; &lt;version&gt;1.12.1&lt;/version&gt;&lt;/dependency&gt; 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172public class App &#123; public static void main(String[] args) throws Exception &#123; Document doc = Jsoup.connect(&quot;sitemap.xml地址&quot;).get(); String str = doc.toString(); String pattern = &quot;https://srcrs.top/posts/[\\d]&#123;4&#125;/[\\d]&#123;2&#125;/[\\d]&#123;2&#125;/.+.html&quot;; Pattern regex = Pattern.compile(pattern); Matcher m = regex.matcher(str); String json = &quot;&quot;; while (m.find()) &#123; json = json + m.group() + &quot;\n&quot;; &#125; String url = &quot;接口调用地址&quot;; System.out.println(App.postTuiSong(url,json)); &#125; /** * 发送请求的工具类 * @param url * @param Parameters * @return */ public static String postTuiSong(String url, String Parameters) &#123; String PostUrl = url; if (null == PostUrl || Parameters.length() == 0) &#123; return null; &#125; String result = &quot;&quot;; PrintWriter out = null; BufferedReader in = null; try &#123; //建立URL之间的连接 URLConnection conn = new URL(PostUrl).openConnection(); //设置通用的请求属性 conn.setRequestProperty(&quot;User-Agent&quot;, &quot;curl/7.12.1&quot;); conn.setRequestProperty(&quot;Host&quot;, &quot;data.zz.baidu.com&quot;); conn.setRequestProperty(&quot;Content-Type&quot;, &quot;text/plain&quot;); conn.setRequestProperty(&quot;Content-Length&quot;, &quot;83&quot;); //发送POST请求必须设置如下两行 conn.setDoInput(true); conn.setDoOutput(true); //获取conn对应的输出流 out = new PrintWriter(conn.getOutputStream()); //发送请求参数 out.print(Parameters.trim()); //进行输出流的缓冲 out.flush(); //通过BufferedReader输入流来读取Url的响应 in = new BufferedReader(new InputStreamReader(conn.getInputStream())); String line; while ((line = in.readLine()) != null) &#123; result += line; &#125; //&#125; &#125; catch (Exception e) &#123; System.out.println(&quot;post推送出现异常！&quot; + e); e.printStackTrace(); &#125; finally &#123; try &#123; if (out != null) &#123; out.close(); &#125; if (in != null) &#123; in.close(); &#125; &#125; catch (Exception ex) &#123; ex.printStackTrace(); &#125; &#125; System.out.println(&quot;post推送结果：&quot; + result); return result; &#125;&#125; maven.ymlgithub actions的运行配置文件 12345678910111213141516171819202122232425262728name: Java CI with Mavenon: push: schedule: - cron: &#x27;0 22 * * *&#x27;jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Set up JDK 1.8 uses: actions/setup-java@v1 with: java-version: 1.8 - name: Build with Maven env: URL_1: $&#123;&#123; secrets.URL_1 &#125;&#125; URL_2: $&#123;&#123; secrets.URL_2 &#125;&#125; run: | cd bilibili sudo dpkg -i google-chrome-stable_current_amd64.deb sudo apt-get -f install unzip chromedriver_linux64.zip mvn compile exec:java -Dexec.mainClass=&quot;org.example.App&quot; -Dexec.args=&quot;$&#123;URL_1&#125; $&#123;URL_2&#125;&quot; 参考链接java实现百度资源平台主动提交链接]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[没那么容易]]></title>
    <url>%2F%2Fposts%2F202006061.html</url>
    <content type="text"><![CDATA[这两天迷上了在b站发视频，没准备做多好的视频，就是觉得很有意思，练练自己的口才，其实很早之前就想发但是没有好的思路，现在就发些有趣的小发现吧。 隔行如隔山，以前看别人在讲解一个东西的时候，说话能说的那么从容，就像是两个人谈话一样，很亲切，但是自己在录的时候就不行了，很僵硬，另外工具也不足，录音还是用手机的，杂音要小很多，但是这就必须要保证，录屏和录音同一时间开始，如果差那么一两秒还得调好，中间剪切也要一致。 开始用的b站云剪辑，好不容易花那么多时间剪完了，上传上去一看被压缩的不成样子，然后又下载了pr，这个说实话剪辑还是很强的，但是不如b站云剪辑简单好用，时间轴太短了，不好切。 说实话，要想做一个好视频真的要花很多的时间，像一些专业的，还需要做好文案，有了好的文案视频才能做的更好。就像我这样做着玩的，也就是得过且过吧，但是反反复复，一句话说的卡住了，电脑点错了，都重新开始录，挺麻烦和耗时间的。 任何一件事都是如此，别人看起来光鲜亮丽，背后也有你从未吃过的苦。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[时间是把刀]]></title>
    <url>%2F%2Fposts%2F202006031.html</url>
    <content type="text"><![CDATA[在马路边等车，偶然碰到了我的初中老师，他是教我语文的老师，同时也是我的班主任，暂且叫做c老师吧。我叫了声老师，他停了下来，笑着看着我，停了几秒，我感觉他是在想我的名字，大概已经忘了吧^_^，然后换成了“你”，相互寒暄了几句。毕竟已经好多年没有见面了，铁打的学校，流水的学生。说实话，c老师，我的印象还是比较深的，从小学到现在，我与c老师说过的话最多，对我也最好。 我仍记得刚上初中开学时，c老师夸了勤快，让我当劳动班干部，从此踏入“政途”，想起每次开学时他的春风满面，过后的严肃表情，又让我畏惧。那天，看到他仍似当初的春风满面，真好。 一个表姐在高中教书，找到我，让我帮她写课题论文，是关于语文教学和心理健康教育方面的，我就说，好啊，正好在家也没什么事干。可是到真正写的时候，真难受啊，她只是让我写了两个部分，一个是从题目中抽取三个关键词，例如“新时代”、“语文”、“心理健康”下个定义，就是解释一下，一个是国内外的研究综述，发现写这个东西真的是考验内功啊，平常要是没点积累，真的什么写不出来，这个不在所学范围，因此我就属于这种。搜论文啊，找啊找，看啊看，歇一会，躺在床上，起来继续搜，一个里面抽取一部分，也搞不清楚什么该写不该写，继而又抠会手机。感觉写的挺不好的，因为都是东平西凑的，很少又自己的东西。到了三点才凑到差不多字数，赶紧睡觉吧，早上起来再发过去。 早上起来之后，就发了过去，她回了句挺好的，反正我是不相信的，然后要感谢我，给我发了一个红包，让我买个西瓜吃，我咋也不肯要啊，写的那么菜，最后出了杀手锏，你要是不要我以后也不好意思再找你帮忙了，这就不能再推辞了，一看里面是200块钱，我更不好意思了，写的不是多好，不会写也没多大走心，也不知道能不能帮上忙，几十块钱还好点，这么多受之有愧。大概是想让我明白知识能变成财富，很值钱，不过话说回来，这种感觉确实挺好。 也不知道哪来的小孩，调皮的不行，总在我家周围敲得bang~bang响，开始我还好言相劝，不要在此弄的如此吵人，嘿，竟然不正眼看我，当耳旁风，提高音量，吼了几句，几个小屁孩才走开，我就进了屋，然后又响起了，我又出去了，接连几次，我都很少用的什么滚啊，死啦，仍吓不住，要是自己的孩子早就一脚踹屁股上了，这个时候只有暴力才是威信。只是一个二十来岁小伙和十来岁小孩，于情于理多少有点说不过去，也就是吓一吓。就当再次响起时，我猛地追起他们，吼他们，吓的飞起来跑^_^。傍晚还有在附近遛弯的，假如看到了，我感觉还挺丢人的。果然管了两天，这时，外面又想起了bang~bang。 记的小时候，我们也是手贱，拿小石头砸别人的门玩，最后，好像是我先被抓住，然后把他们供出来了，忘了最后咋样了^_^。很多时候，我们是不挑战别人底线的，说了我们都会听的，但是看到现在的一些小孩子却野性十足。（当然，一般暴力都能解决） 突然懂了我的一个长辈奇怪的做法，当时说实话我还挺反感的，一个大人何必对小孩这样，现在我懂了，熊孩子的野性也是要有底线的，不要打扰别人的生活，不懂事并不是借口，家人也许能忍受你的无理取闹，可别人却不应该，教育为重啊。我明白了，没有经历过别人所经历的，就不要对别人奇怪的行为妄自评论，任何事情都不是一天两天形成的，这是真的。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[保存登录状态]]></title>
    <url>%2F%2Fposts%2F202006011.html</url>
    <content type="text"><![CDATA[:::tiphttp请求是无状态的，也就是请求一次的状态并不会保存下来，有的网站的一些操作权限只支持登录的用户，以前做的登录就是请求一次API，验证有没有这个用户，就假装登陆了。如何授权并保持这样的登录状态呢？::: 保存登录状态有大致两种方式，两者的区分点就是存不存在跨域的问题（跨域可以简单理解为，一个地址要请求另一个地址的内容）。 如果不存在跨域的问题，可以采用cookie(在客户端记录状态)和session(在服务端记录状态)的方式保存登录状态。客户端和服务器之间通常都是存在跨域的问题，因此就需要采用token的方式保存登录状态。 浏览器浏览器服务器服务器用户登录用户登录验证通过并生成相应Token验证通过并生成相应Token携带Token发送请求携带Token发送请求存储Token存储Token验证Token验证Token返回相应数据返回相应数据Viewer does not support full SVG 1.1 注册流程保存登录状态首先肯定是对于注册的用户来说的，先来看看注册流程，比较简单一点。对于注册页面不应该被拦截。由于token中包含了密码，token对于别人来说相当于明文，加密就是用的base64，很好解开，所以一旦token泄露就很危险了，这里密码和账户最好用BCR加密一下。 开始开始填写个人信息填写个人信息检查用户是否存在检查用户是否存在Ok？Ok？对密码进行加密对密码进行加密保存账号密码保存账号密码结束结束BCR加密BCR加密Viewer does not support full SVG 1.1 登录流程登录的流程，首先访问登录页面，把本地存储的文件都带上，主要就是看是否含有token令牌，然后登录被拦截，如果未含有token就直接输入账号密码，验证用户的身份，如果验证通过，就可以生成一个新的令牌，交给用户然后本地存储操作，如果用户名或者密码错误，就提示用户重新输入，再次验证身份。如果本地含有令牌，就验证令牌是否有效，如果令牌失效，就重新输入账号密码验证身份，颁发新的令牌。登录流程主要就是能得到一个能使用的令牌。 登录登&#xa;录拦截拦&#xa;截令牌令&#xa;牌DBDB验证账号密码验证账号密码…验证令牌验证令牌…生成令牌生成令牌…DBDB进入登录页面进入登录页面已登录或验证失败或令牌失效已登录或验证失败或令牌失效输入用户名密码输入用户名密码验证用户名密码验证用户名密码验证令牌验证令牌令牌失效令牌失效令牌有效令牌有效令牌失效令牌失效存在令牌存在令牌…本地存储本地存储…新的令牌新的令牌验证失败验证失败验证通过验证通过验证失败验证失败Viewer does not support full SVG 1.1 携带令牌请求API这里就是需要注意的就是如何携带token请求API。 携带令牌访问API携带令牌访问API…本地存储本地存储拦截令牌拦截令牌…验证令牌验证令牌…令牌失效令牌失效取得令牌取得令牌…请求API请求APIAPI池API…获得数据获得数据令牌有效,fangwenAPI令牌有效,fangwenAPIViewer does not support full SVG 1.1 pom.xml中需要的依赖包1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;2.1.2&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;&lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;druid&lt;/artifactId&gt; &lt;version&gt;1.1.22&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt --&gt;&lt;dependency&gt; &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt; &lt;artifactId&gt;jjwt&lt;/artifactId&gt; &lt;version&gt;0.9.0&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.mindrot/jbcrypt --&gt;&lt;dependency&gt; &lt;groupId&gt;org.mindrot&lt;/groupId&gt; &lt;artifactId&gt;jbcrypt&lt;/artifactId&gt; &lt;version&gt;0.4&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt; &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; 程序整体结构程序整体结构放在这里，可以作为参考。 1234567891011121314151617181920212223242526272829303132.├── .idea├── src│ └── main| ├── java| | └── org| | └── example| | ├── controller| | | └── UserController.java| | ├── dao| | | └── UserMapper.java| | ├── domain| | | └── User.java| | ├── service| | | ├── UserService.java| | | └── Impl| | | └── UserServiceImpl.java| | ├── utils| | | ├── JwtCfg.java| | | ├── JwtFilter.java| | | └── JwtUtils.java| | └── Application.java| | | | | └── resources| ├── org| | └── example| | └──dao| | └── UserMapper.xml| └── application.properties├── target└── pom.xml 编写UserController.java这里包含一些API接口。只有user/login没有被拦截，其它接口都需要token认证才能够访问。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465package org.example.controller;import org.example.domain.User;import org.example.service.UserService;import org.example.utils.JwtUtils;import org.mindrot.jbcrypt.BCrypt;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import javax.servlet.http.HttpServletResponse;import java.util.List;@RestController@RequestMapping(&quot;/user&quot;)public class UserController &#123; @Autowired private UserService userService; @Autowired private User user; @GetMapping(&quot;test/findAll&quot;) public List&lt;User&gt; findAll()&#123; System.out.println(&quot;Controller表现层，查询所有用户&quot;); System.out.println(user); List&lt;User&gt; all = userService.findAll(); for (User user : all) &#123; System.out.println(user); &#125; return all; &#125; @PostMapping(&quot;test/addUser&quot;) public String addUser(User user)&#123; user.setPassword(BCrypt.hashpw(user.getPassword(),BCrypt.gensalt())); System.out.println(&quot;Controller表现层，增加用户&quot;); userService.addUser(user); return &quot;添加用户成功&quot;; &#125; @PostMapping(&quot;/login&quot;) public String login(HttpServletResponse response, User user) &#123; // 查询数据库，查找此用户输入信息是否正确 User users = null; users = userService.findUser(user); System.out.println(users.getUsername()+&quot;:&quot;+users.getPassword()); if(!BCrypt.checkpw(user.getPassword(),users.getPassword()))&#123; return &quot;你输入的用户名或密码有误&quot;; &#125; else&#123; System.out.println(user); String token = JwtUtils.geneJsonWebToken(users.getUsername(), users.getPassword()); // 将token放在响应头 response.setHeader(&quot;Authorization&quot;, &quot;Bearer &quot;+token); return &quot;Bearer &quot;+token; &#125; &#125; @RequestMapping(&quot;test/secure/check&quot;) public String check()&#123; return &quot;登录成功&quot;; &#125;&#125; 编写UserMapper.java这里是持久层的代码，创建访问数据库的接口，需要使用注解或者和一个同名的xml文件配合使用。访问数据库需要实现这些接口的功能。 12345678910111213141516171819package org.example.dao;import org.example.domain.User;import org.springframework.stereotype.Repository;import java.util.List;@Repositorypublic interface UserMapper &#123; //查找所有的用户 List&lt;User&gt; findAll(); //增加一个用户 void addUser(User user); //查找一个用户 User findUser(User user) ;&#125; 编写User.java实体类，一般和数据库的属性是一致的，可以将数据库的一张表封装成一个实体类。 12345678910111213141516171819202122232425262728293031323334353637package org.example.domain;import org.springframework.context.annotation.Configuration;import java.io.Serializable;@Configurationpublic class User implements Serializable &#123; //用户名 private String username; //密码 private String password; public String getUsername() &#123; return username; &#125; public void setUsername(String username) &#123; this.username = username; &#125; public String getPassword() &#123; return password; &#125; public void setPassword(String password) &#123; this.password = password; &#125; @Override public String toString() &#123; return &quot;User&#123;&quot; + &quot;, username=&#x27;&quot; + username + &#x27;\&#x27;&#x27; + &quot;, password=&#x27;&quot; + password + &#x27;\&#x27;&#x27; + &#x27;&#125;&#x27;; &#125;&#125; 编写UserService.java业务层接口代码，和表现层接口代码一样，配合使用。 1234567891011121314package org.example.service;import org.example.domain.User;import java.util.List;public interface UserService &#123; List&lt;User&gt; findAll(); void addUser(User user); User findUser(User user) ;&#125; 编写UserServiceImpl.java实现业务层接口功能，供表现层调用。 1234567891011121314151617181920212223242526272829303132package org.example.service.Impl;import org.example.dao.UserMapper;import org.example.domain.User;import org.example.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class UserServiceImpl implements UserService &#123; @Autowired private UserMapper userMapper; @Override public List&lt;User&gt; findAll() &#123; System.out.println(&quot;Service业务层，查询所有用户&quot;); return userMapper.findAll(); &#125; @Override public void addUser(User user) &#123; System.out.println(&quot;Service业务层，保存用户&quot;); userMapper.addUser(user); &#125; @Override public User findUser(User user) &#123; return userMapper.findUser(user); &#125;&#125; 编写JwtCfg.javaJWT的配置类，例如可以配置具体的拦截的路径，现在我也只会配置这个^_^。 12345678910111213141516171819package org.example.utils;import org.springframework.boot.web.servlet.FilterRegistrationBean;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class JwtCfg &#123; @Bean public FilterRegistrationBean&lt;JwtFilter&gt; jwtFilter() &#123; final FilterRegistrationBean&lt;JwtFilter&gt; registrationBean = new FilterRegistrationBean&lt;&gt;(); registrationBean.setFilter(new JwtFilter()); // 对/user/test/*下的url进行拦截验证 registrationBean.addUrlPatterns(&quot;/user/test/*&quot;); return registrationBean; &#125;&#125; 编写JwtFilter.java这个类的作用是拦截器（Filter），拦截的路径就是在JwtCfg.java中配置，可以获取到请求头中的令牌，也就是token，这个类我感觉也是比较核心的一个类，对于携带token的用户，需要将token拿过来，然后解码，获取到里面的值。 token就是类似这样的一串代码，前面的Bearer 不包含在token中。当token过期的时候，JWT会自动判断其失效的，不用自己手动配置。 1Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInVzZXJOYW1lIjoiMTExIiwiaWF0IjoxNTkxMDA3Njk4LCJleHAiOjE1OTEwOTQwOTh9.fidk9TBllhA_lb9CNODCf3HD4dp-NNsyOdPU0O3Wnhw 解码之后就变成了这样 1&#123;sub=admin, userName=111, iat=1591007698, exp=1591094098&#125; 里面也还可以包含很多这样的键值对，下面是它们的含义。 :::tipJWT标准里面定好的claim有： iss(Issuser)：代表这个JWT的签发主体； sub(Subject)：代表这个JWT的主体，即它的所有人； aud(Audience)：代表这个JWT的接收对象； exp(Expiration time)：是一个时间戳，代表这个JWT的过期时间； nbf(Not Before)：是一个时间戳，代表这个JWT生效的开始时间，意味着在这个时间之前验证JWT是会失败的； iat(Issued at)：是一个时间戳，代表这个JWT的签发时间； jti(JWT ID)：是JWT的唯一标识。::: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package org.example.utils;import io.jsonwebtoken.Claims;import io.jsonwebtoken.Jwts;import io.jsonwebtoken.SignatureException;import org.springframework.web.filter.GenericFilterBean;import javax.servlet.FilterChain;import javax.servlet.ServletException;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;public class JwtFilter extends GenericFilterBean &#123; /** * 秘钥 */ public static final String SECRET_KEY = &quot;secretkey&quot;; @Override public void doFilter(final ServletRequest req, final ServletResponse res, final FilterChain chain) throws IOException, ServletException&#123; final HttpServletRequest request = (HttpServletRequest) req; final HttpServletResponse response = (HttpServletResponse) res; // 从request中获取authorization final String authHeader = request.getHeader(&quot;authorization&quot;); // 判断token是否是用Bearer 开头的 String header = &quot;Bearer &quot;; if (authHeader == null || !authHeader.startsWith(header)) &#123; //没有token或者token格式不对则抛一个异常， //也可以自己设置返回的状态码 //response.setStatus(HttpServletResponse.SC_BAD_GATEWAY); //在前端取得这样的状态码则说明请求失败 throw new ServletException(&quot;Missing or invalid Authorization header&quot;); &#125; else &#123; // 然后从授权处获取JWT令牌，去掉前面的Bearer final String token = authHeader.substring(7); try &#123; // 使用JWT解析器检查签名是否与Key &quot;secretkey &quot;有效。 final Claims claims = Jwts.parser().setSigningKey(SECRET_KEY).parseClaimsJws(token).getBody(); System.out.println(claims); System.out.println(claims.getExpiration().getTime()); System.out.println(System.currentTimeMillis()); // 在请求标题中添加claims request.setAttribute(&quot;claims&quot;, claims); &#125; catch (Exception e) &#123; throw new ServletException(&quot;Invalid token&quot;); &#125; &#125; chain.doFilter(req, res); &#125;&#125; JwtUtils.java这个是生成token的类。 12345678910111213141516171819202122232425262728293031323334353637383940414243package org.example.utils;import io.jsonwebtoken.Jwts;import io.jsonwebtoken.SignatureAlgorithm;import org.springframework.util.StringUtils;import java.util.Date;public class JwtUtils &#123; public static final String SUBJECT = &quot;admin&quot;; /** * 过期时间，毫秒，一天 * */ public static final long EXPIRE = 1000 * 60 * 60 * 24; /** * 秘钥 */ public static final String SECRET_KEY = &quot;secretkey&quot;; /** * 生成jwt * @param username * @param password * @return */ public static String geneJsonWebToken(String username, String password) &#123; if (StringUtils.isEmpty(username) || StringUtils.isEmpty(password)) &#123; return &quot;用户名或密码不能为空&quot;; &#125; return Jwts.builder().setSubject(SUBJECT) .claim(&quot;userName&quot;, username) .setIssuedAt(new Date()) .setExpiration(new Date(System.currentTimeMillis() + EXPIRE)) .signWith(SignatureAlgorithm.HS256, SECRET_KEY).compact(); &#125;&#125; 编写Application.javaSpringBoot的主入口类。 1234567891011121314151617package org.example;import org.mybatis.spring.annotation.MapperScan;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.transaction.annotation.EnableTransactionManagement;@SpringBootApplication@EnableTransactionManagement@MapperScan(&quot;org.example.dao&quot;)class Application &#123; public static void main(String[] args) &#123; SpringApplication.run(Application.class, args); &#125;&#125; 编写UserMapper.xml这个相当于持久层的接口UserMapper.java实现类，里面可以写一些SQL语句，对数据库进行CRUD。 12345678910111213141516171819&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper namespace=&quot;org.example.dao.UserMapper&quot;&gt; &lt;!-- 开启二级缓存 --&gt; &lt;cache/&gt; &lt;select id=&quot;findAll&quot; resultType=&quot;user&quot;&gt; select * from user &lt;/select&gt; &lt;insert id=&quot;addUser&quot; parameterType=&quot;user&quot;&gt; insert into User (username,password) values ( #&#123;username&#125;,#&#123;password&#125; ); &lt;/insert&gt; &lt;select id=&quot;findUser&quot; parameterType=&quot;user&quot; resultType=&quot;user&quot;&gt; select * from user where username=#&#123;username&#125;; &lt;/select&gt;&lt;/mapper&gt; application.propertiesspringboot的配置文件。 12345678spring.datasource.type=com.alibaba.druid.pool.DruidDataSourcespring.datasource.driver-class-name=com.mysql.cj.jdbc.Driverspring.datasource.url=jdbc:mysql://localhost:3306/srcrs?useSSL=false&amp;serverTimezone=UTCspring.datasource.username=rootspring.datasource.password=123456mybatis.mapper-locations=classpath:org/example/dao/*.xmlmybatis.type-aliases-package=org.example.domain 至此就已经编写完了。目前可以做的就是通过user/login接口获得token令牌，然后通过这个令牌就可以访问其它所有已经定义好的接口，实现了简单的身份认证。但是这也还是不够用的，例如有些接口是不可以被外界所使用的，尤其是对一些重要的数据，所以接下来还得需要一个安全框架，实现认证与授权，通过定义一个个角色，对这些角色授予访问部分API接口的权限，能够让API接口更加的安全，现在这个样子是不行的，计划准备使用spring security来实现。 还有需要注意一些坑，最好要保证包的版本一直，否则可能会出一些莫名其妙的问题，例如jwt包，我开始选择的是0.11.1的这个包，但是不知道为什么老师报错，然后我就换成了0.9.0就好了，很奇怪。 另外就是做接口测试，可以在chrome中装一个插件Tabbed Postman - REST Client，这个插件就可以做接口测试，还比较好用。 参考链接Spring Boot整合JWT实现认证 前后端分离后如何实现登录？前端基于vue、axios，后端基于springSecurity、JWT、BCR算法加密解密 JWT在身份认证方面的应用]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>token</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[至暗ing]]></title>
    <url>%2F%2Fposts%2F202005291.html</url>
    <content type="text"><![CDATA[要疯掉了，一个简单的登录流程，不知道怎么实现。前两天突然想到，用户是如何登录的，在我以前的印象中就是有个登录窗口，以提交表单形式查询对应的数据库表，看看有没有这个用户的信息，如果用户名和密码是正确的，那么就可以放行。 但是登录不是这样的啊，这样登录只不过是查询了一次数据库表，发送了一次http请求，而http请求是无状态的，也就是说并没有保存这个登录的状态。像正常登录网站，登录成功之后对应有用户的一些信息，可以实现退出注册，这才是个登录啊。 在前后端还未分离的时候，Tomcat会生成一个session，也就是一次会话，在这个会话之中可以保存用户的一些信息，在前后端未分离时，前端页面能获取到这个session，后端也能获取到这个session，可以当用户登录成功之后，后端将用户的关键信息加入到session中，然后前端就可以验证在此session中是否有此用户关键信息，以此判断是否已经登录成功。 但是前后端分离之后，前端和后端并不是部署到一起，彼此是独立项目，却又相关联。此时session前端并不能直接访问到了，所以得需要新的解决方案。具体也可以这样，后端登录验证通过之后，向前端发送一些它能识别的信息，可以理解为一个锁，前端拿到这个锁保存下来，检测到这个锁的存在，说明用户已经登录成功，每次请求时，都需要带上这个锁，后端才能识别你是谁，是否有权限，已经登录。 这个锁可以是token或者是别的，自己定义的应该也可以，不过没那么安全和成熟吧。token的使用也就是如此，后端生成，前端保存，以此作为身份认证。大概就是这样吧。现在大致知道需要使用jwt和spring sercurity，但是还不知如何使用，用不好。 至今也没有实现，可难受了，有时候也真想着去放弃，但是咬咬牙，还是不愿意认命。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络安全很重要]]></title>
    <url>%2F%2Fposts%2F202005251.html</url>
    <content type="text"><![CDATA[从来没有想过自己有一天qq被盗了，但是确实是被盗了，感觉挺丢人的，就那么一瞬间，几乎所有联系人都发了一条消息，就那么一条广告，不知道是为了赚钱还是为了乐趣，反正挺无聊的。 有段时间就想模拟一个微信网页版，抓它的包，能实现给别人发消息，但是它有心跳检测，我搞不清楚原理，所以一会就挂掉了。晚上就开始做梦，微信被别人登录了，给所有人都发了一条消息，醒来打开手机一看是假的，没想到昨天qq到成真的了。 也不知道是什么时候泄露的，用的vpn？还是授权某个网站时密码被截取了，不太清楚，以前看到别人qq被盗心里还嘲笑一下，qq还能被盗？干啥能密码泄露？你看我连设备锁都没开，三十年河东，三十年河西啊。 我是真的不太重视网络安全问题，用手机卡想着偷点流量免流，付费软件想着去破解，蓝奏云想着怎么传送大文件，加速器也要撸个永久的，总之就是想钻些小空子，很有可能就是在这期间个人信息就泄露了，手机号不断有垃圾短信、电话，苦不堪言，自作自受。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[选择少一点未必是坏事]]></title>
    <url>%2F%2Fposts%2F202005231.html</url>
    <content type="text"><![CDATA[:::tip刷单的恶果，一旦官方旗舰店没有要买的东西，都不敢买了，挑来挑去，真累，都不知道在哪买好了。::: 家里需要买几个灯和一个排气扇，在淘宝选的真累啊，灯30*30的还好找一点，因为估计是标准的大小，很多好一点的牌子都会做这样尺寸的，而45*45的就不那么好找了，找了好多的店铺都没有找到这样的灯，价格贵了怕被坑，便宜了怕不经用，貌似已经陷入了死循环。高价就能买到好东西吗？我堂哥就干过别人在他这淘宝店买货，他从拼多多买货。最后找了一个销量不太多的，用自己名字当品牌的店铺，大概这样的会靠谱一些吧。 刷过单的都知道，一些好评，又拍照，拍视频的很少是真心拍的，一般都是刷单所为。像我自己平常在网上买东西，一般都是不管它，默认自动好评，只有出现问题了才说一说。 买排风扇也是，打的排风孔是8cm的，但是市面上几乎都是10cm的排风孔，因此就很难找，也怪打孔时没有做好功课，好不容易找到一个，下单完才看到，拉伸管（也叫铝箔管）一头8cm，一头10cm，电机口是8cm的，排风孔是8cm的，这肯定会有一头对不上啊，真坑啊，无奈退款，想不通这个商家是怎么想的，热心的我，还给他们提了改进意见^_^。然后又踏入了疯狂搜索之中，找半天也没找到合适的（不知道是喜欢那个样式，牌子，还是不想多花那20块钱），累的不行，果断最后多花20块钱，在一个好点的店铺买了一个。 现代购物，的确很方便，但是乱花渐欲迷人眼啊，我有时候就是这样，买样东西选来选去，最后就没买的欲望了，不买去球。选择困难症，也许只有选择少一点才能治好。 想给博客装一个一键复制代码的插件，偶然就在github看到这个插件作者，点开看一看个人页面，真的震撼了，真崇拜这样的人，满满的几乎每一天都会有commit，而且还接近十次，这份热爱与坚持，常人所不及啊。这样的人何愁找不到一个好工作，我觉得这就是最好的简历。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[主角]]></title>
    <url>%2F%2Fposts%2F202005211.html</url>
    <content type="text"><![CDATA[:::tip众里寻他千百度，慕然回首，那人却在灯火阑珊处。::: 前段时间在YouTube上看到一个叫做鄂东老男孩的视频主，以前也看到过有几次，但是都没有点开看看，因为他可能由于先天的不幸，看起来和别人有点不一样，偶然一次，我点开看了，然后就被征服了，每天都要看一下才好。乐观的人生观，乐观的态度，能够自立更生，在当地还是个名人勒，很多这种情况都是靠家里面维持生活，真了不起。 夏天来了，我的皮肤真不行，一到夏天就开始过敏，记得小时候没有的，不知道从什么时候开始的，脸上就是火辣辣的，长的又像是很多年没长的青春痘，难道又要开始发育？想也是不可能。总比刚高中毕业那段时间好，那时候连续好几次都是全身过敏，都起的是红点点，不过喝颗过敏药一会就能下去了，没药的时候，就跟上厕所没纸一样，四处找药店买药。一次在外面的干活的时候，可能接触过敏源了，就发作了，难受的不行，但是又没办法出去，就忍着，煎熬的几个小时过去了，我的免疫细胞胜利了。 错误是宝贵的经验，有些东西，可能跟想的是很不一样的，要真正的去做，第一次都是不熟练，不熟悉的，慢慢的第二次，第三次，重复就是力量。第一次会踩很多的坑，会跌倒，会失望至极，有人把这比作是取款机，忘记了密码，你想取钱就要不断的尝试寻找正确的密码，会不会更有动力一些^_^。对待姑娘是不是也是如此呢？^_^，多少年了，这样的经验还是没有积累到。 创业，我想对于一个刚出社会的人来说，并不是那么容易吧，无论是各行各业总归要学习几年，了解一下行业的规律，经验，然而在一些人的口中说起来是如此的容易，即使是加盟店，我到觉得加盟模式就是一个无底洞，首先就要交一大笔加盟费，可以使用总店的品牌和原料，然后店铺选址，装修，也得投资不少。我在想，如果那么挣钱，为什么总店不自己投资开店呢？自己开店，招聘人员经营，不赚的更多，很显然，总店将风险都压在了加盟方的身上，这是一笔稳赚不赔的买卖，不管你赚钱与否，都与我无关，我觉得这样的模式是危险的，但是如今确实很火，也不知道为什么。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[试题四]]></title>
    <url>%2F%2Fposts%2F202005181.html</url>
    <content type="text"><![CDATA[题目描述【说明】 一般的树结构常采用孩子-兄弟表示法表示，即用二叉链表作树的存储结构，链表中节点的两个链域分别指向该节点的第一个孩子节点和下一个兄弟节点。例如，题图(a)所示的树的孩子-兄弟表示如题图(b)所示。 DDAABBEEFFCCPP(a)(a)Viewer does not support full SVG 1.1 DD∧∧∧∧BBAAFF∧∧EE∧∧PP∧∧∧∧CC∧∧∧∧(b)(b)Viewer does not support full SVG 1.1 函数LevelTraverse()的功能是对给定树进行层序遍历。例如，对题图所示的树进行层序遍历时，节点的访问次序为：D B A E F P C。对树进行层序遍历时使用了队列结构，实现队列基本操作的函数原型如下表所示。 函数原型 说明 void InitQueue(Queue *Q) 初始化队列 Bool IsEmpty(Queue Q) 判断队列是否为空，若是则返回TRUE，否则返回FALSE void EnQueue(Queue *Q,TreeNode p) 元素入队 void DeQueue(Queue *Q,TreeNode *p) 元素出队 Bool、Status类型定义如下： 123456789typedef enum &#123; FALSE = 0,TRUE = 1&#125; Bool;typedef enum &#123; OVERFLOW = -2, UNDERFLOW = -1, ERROR = 0, OK = 1&#125; Status; 树的二叉链表定义如下： 1234typedef struct Node &#123; char data; struct Node *firstchild,*nextbrother;&#125;Node,*TreeNode; 【函数】 1234567891011121314151617181920212223242526Status LevelTraverse(TreeNode root)&#123; /*层序遍历树，树采用孩子-兄弟表示法，root是树根节点的指针*/ Queue tempQ; TreeNode ptr,brotherptr; if(!root)&#123; return ERROR; &#125; (1); brotherptr = root -&gt; nextbrother; while(brotherptr)&#123; EnQueue(&amp;tempQ,brotherptr); (2); &#125;/*end-while*/ while((3))&#123; (4); printf(&quot;%c\t&quot;,ptr-&gt;data); if((5)) continue; (6); brotherptr=ptr-&gt;firstchild-&gt;nextbrother; while(brotherptr)&#123; EnQueue(&amp;tempQ,brotherptr); (7); &#125;/*end-while*/ &#125;/*end-while*/ return OK;&#125; 分析起初我看到这道题其实还是很蒙的，当时愣是没看明白是怎么回事，就放到了现在，又翻开看看，仔细读了一遍题意，原来我先开始都没明白这个函数是干什么的。 也就是，现在有一棵树，这个数是多少叉的不知道，已经用用孩子-兄弟法存储好了，也就是图(b)的那个二叉树，要模拟在原树图(a)上进行层序遍历，LevelTraverse()函数的作用就是这个。 首先来看这两个图，任意叉树转换孩子-兄弟法的规则是什么？这个要先搞明白。结合两个图，发现了这样的规则：对于一个节点来说，它的左节点是他的孩子，它的右节点是它的兄弟，一个兄弟就是在一层上，那么只要找到这个节点的第一个孩子节点，就能够找到这个孩子节点的所有兄弟，这一层次就算遍历完了，每个兄弟也有可能有孩子，将兄弟的孩子遍历完，就是下一层次，直到遍历所有节点。 这其实就是一个队列结构，有很强的先后关系，只有通过根节点才能找到它的所有孩子，输出，并将这些孩子保存到一个队列中，即这一层次遍历完，将这些孩子保存到一个队列中，孩子再找孩子，按照这个规则，入队出队，就行了，队列为空也就证明遍历完了。 【答案】 1234567891011121314151617181920(1):EnQueue(&amp;tempQ,root);/*这里函数传来了根节点，根节点入队，参数需要指针形式，传入地址即可*/(2):brotherptr=brotherptr-&gt;nextbrother;/*寻找该节点的所有兄弟*/(3):!IsEmpty(tempQ)/*当队列为空的时候则证明所有节点遍历完*/(4):DeQueue(&amp;tempQ,&amp;ptr);/*该行下面是一个输出语句，很明显上面要进行出队*/(5):!ptr-&gt;firstchild/*这里要屏蔽掉没有孩子的节点*/(6):EnQueue(&amp;tempQ,ptr-&gt;firstchild)/*孩子节点入队*/(7):brotherptr=brotherptr-&gt;nextbrother;/*和(2)一样，都是遍历兄弟节点，然后执行入队操作*/ 开始的时候，还是没有好好读清楚题意，没搞清楚规则，函数的作用，现在分析一遍，又清晰了一些，以后做题要注意一些这些毛病。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>软考</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[优雅的ssm框架]]></title>
    <url>%2F%2Fposts%2F202005141.html</url>
    <content type="text"><![CDATA[:::tip已经连续练了好几天这个，但是一些细节还是会忘，加深一下印象。::: 环境说明 种类 版本 电脑 win10 IDEA商业版 1.45.0 项目 maven 如果要是没有商业版，可以申请教育邮箱，或者用激活码激活。破解jar包下载，里面带有教程点我 整合的思路创建maven项目并配置相关环境创建maven项目并配置相关环境搭建spring搭建spring搭建springmvc搭建springmvcspring整合springmvcspring整合springmvc搭建mybatis搭建mybatisspring整合mybatisspring整合mybatis事务配置事务配置Viewer does not support full SVG 1.1 环境搭建创建maven项目在pom.xml中导入相关依赖123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115&lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;spring-version&gt;5.2.5.RELEASE&lt;/spring-version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.11&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-beans&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aop&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-tx&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;&lt;dependency&gt; &lt;groupId&gt;org.aspectj&lt;/groupId&gt; &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt; &lt;version&gt;1.9.5&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.19&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.5.4&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api --&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;servlet-api&lt;/artifactId&gt; &lt;version&gt;2.5&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/jsp-api --&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt; &lt;artifactId&gt;jsp-api&lt;/artifactId&gt; &lt;version&gt;2.2&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/com.mchange/c3p0 --&gt;&lt;dependency&gt; &lt;groupId&gt;com.mchange&lt;/groupId&gt; &lt;artifactId&gt;c3p0&lt;/artifactId&gt; &lt;version&gt;0.9.5.2&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/javax.servlet/jstl --&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;jstl&lt;/artifactId&gt; &lt;version&gt;1.2&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt; &lt;version&gt;2.0.4&lt;/version&gt;&lt;/dependency&gt;&lt;/dependencies&gt; 创建好项目的整体结构这里就是整个ssm框架基本的结构了。可以根据下面的思路走，看到哪个文件开始编写时，就可以在这里找到文件该到哪里创建。controller是表示层，dao是持久层，service是业务层，domain是实体类。 1234567891011121314151617181920212223242526272829303132333435363738.├── .idea├── src│ └── main| ├── java| | └── org| | └── example| | ├── controller| | | └── UserController.java| | ├── dao| | | └── UserMapper.java| | ├── domain| | | └── User.java| | ├── service| | | ├── UserService.java| | | └── Impl| | | └── UserServiceImpl.java| | └── test| | ├── SpringTest.java| | └── MybatisTest.java| ├── resources| | ├── org| | | └── example| | | └──dao| | | └── UserMapper.xml| | ├── applicationContext.xml| | ├── db.properties| | ├── mybatis-config.xml| | └── springmvc.xml│ └── webapp│ ├── WEB-INF| | ├── Pages| | | └── success.jsp│ │ └── web.xml│ └── index.jsp ├── target├── pom.xml└── ssm3.iml 创建数据库1234567create database srcrs;use srcrs;CREATE TABLE `user` ( `id` int(11) NOT NULL, `name` varchar(255) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8; 编写javabean实体类即编写User.java，这个是根据数据库的内容来编写的，数据库表的内容不同，javabean就要做出相应改变。 1234567891011121314151617181920212223242526272829303132package org.example.domain;import java.io.Serializable;public class User implements Serializable &#123; private Integer id; private String name; public Integer getId() &#123; return id; &#125; public void setId(Integer id) &#123; this.id = id; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; @Override public String toString() &#123; return &quot;User&#123;&quot; + &quot;id=&quot; + id + &quot;, name=&#x27;&quot; + name + &#x27;\&#x27;&#x27; + &#x27;&#125;&#x27;; &#125;&#125; 编写service接口和实现类。即编写UserService.java和UserServiceImpl.java 123456789101112package org.example.service;import org.example.domain.User;import java.util.List;public interface UserService &#123; List&lt;User&gt; findAll(); void addUser(User user);&#125; 12345678910111213141516171819202122package org.example.service.Impl;import org.example.domain.User;import org.example.service.UserService;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class UserServiceImpl implements UserService &#123; @Override public List&lt;User&gt; findAll() &#123; System.out.println(&quot;Service业务层，查询所有用户&quot;); return null; &#125; @Override public void addUser(User user) &#123; System.out.println(&quot;Service业务层，保存用户&quot;); &#125;&#125; spring框架代码编写编写applicationContext.xml配置spring扫描注解，将相应的类交给Spring管理。排除Controller注解。 1234567891011121314151617181920&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot; xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd &quot;&gt; &lt;!-- 注解扫描，除了Controller不扫描 --&gt; &lt;context:component-scan base-package=&quot;org.example&quot;&gt; &lt;context:exclude-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt; &lt;/context:component-scan&gt;&lt;/beans&gt; 编写SpringTest.java进行测试1234567891011121314package org.example.test;import org.example.service.UserService;import org.example.service.Impl.UserServiceImpl;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ClassPathXmlApplicationContext;public class SpringTest &#123; public static void main(String[] args) &#123; ApplicationContext ac = new ClassPathXmlApplicationContext(&quot;classpath:applicationContext.xml&quot;); UserService userServiceImpl = ac.getBean(&quot;userServiceImpl&quot;, UserServiceImpl.class); userServiceImpl.findAll(); &#125;&#125; 输出以下内容，则证明spring搭建好了。 1Service业务层，查询所有用户 springmvc代码代码编写在web.xml中配置前端控制器1234567891011121314&lt;!-- 配置前端控制器 --&gt;&lt;servlet&gt; &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt; &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt; &lt;init-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:springmvc.xml&lt;/param-value&gt; &lt;/init-param&gt; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt; &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt; &lt;url-pattern&gt;/&lt;/url-pattern&gt;&lt;/servlet-mapping&gt; 在web.xml中配置中文乱码过滤器如果加上这个有报错信息，则是说明位置加的不对，没啥影响，如果看不顺眼可以换个位置就好了。 12345678910111213&lt;!-- 解决中文乱码问题 --&gt;&lt;filter&gt; &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt; &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt; &lt;init-param&gt; &lt;param-name&gt;encoding&lt;/param-name&gt; &lt;param-value&gt;UTF-8&lt;/param-value&gt; &lt;/init-param&gt;&lt;/filter&gt;&lt;filter-mapping&gt; &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt;&lt;/filter-mapping&gt; 编写springmvc.xml配置文件12345678910111213141516171819202122232425262728&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd &quot;&gt; &lt;!-- 开启注解扫描，只扫描Controller注解 --&gt; &lt;context:component-scan base-package=&quot;org.example&quot;&gt; &lt;context:include-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt; &lt;/context:component-scan&gt; &lt;!-- 配置视图解析器对象 --&gt; &lt;bean id=&quot;internalResourceViewResolver&quot; class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt; &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/Pages/&quot;/&gt; &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;&gt;&lt;/property&gt; &lt;/bean&gt; &lt;!-- 过滤静态资源 --&gt; &lt;mvc:resources mapping=&quot;/css&quot; location=&quot;/css/**&quot;/&gt; &lt;mvc:resources mapping=&quot;/js&quot; location=&quot;/js/**&quot;/&gt; &lt;mvc:resources mapping=&quot;/images&quot; location=&quot;/images/**&quot;/&gt; &lt;!-- 开启SpringMVC注解的支持 --&gt; &lt;mvc:annotation-driven/&gt;&lt;/beans&gt; 编写index.jsp123456789&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;a href=&quot;user/findAll&quot;&gt;查询所有用户&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; 编写UserController.java123456789101112131415package org.example.controller;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;@Controller@RequestMapping(&quot;/user&quot;)public class UserController &#123; @RequestMapping(&quot;/findAll&quot;) public String findAll()&#123; System.out.println(&quot;Controller表现层，查询所有学生&quot;); return &quot;success&quot;; &#125;&#125; 编写success.jsp这个页面没有做过多操作，如果能够成功跳转到这个页面则证明代码没有问题。反之如果在这个页面中有500等类似错误，就需要好好看看哪错了。 123456789&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;响应成功&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; IDEA配置tomcat这个就不用多说了。 测试运行如果点击页面中的查询所有用户按钮，可以跳转到响应成功的页面，并且控制台输出 1Controller表现层，查询所有学生 则说明springmvc搭建成功。 spring整合springmvc主要的一个问题就是当web项目启动时，spring.xml如何运行起来。所谓的整合也就是说，可以相互间调用其对象。 在web.xml中配置ContextLoaderListener监听器123456789&lt;!-- 配置Sping的监听器，加载spring配置文件 --&gt;&lt;listener&gt; &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;&lt;/listener&gt;&lt;!-- 设置配置文件路径 --&gt;&lt;context-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;&lt;/context-param&gt; controller中注入service对象完善UserController.java。 12345678910111213141516171819202122232425package org.example.controller;import org.example.domain.User;import org.example.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import java.util.List;@Controller@RequestMapping(&quot;/user&quot;)public class UserController &#123; @Autowired private UserService userService; @RequestMapping(&quot;/findAll&quot;) public String findAll()&#123; System.out.println(&quot;Controller表现层，查询所有用户&quot;); //此时这里只能进行调用不能输出，因为List是null List&lt;User&gt; all = userService.findAll(); return &quot;success&quot;; &#125;&#125; 测试整合的结果运行web项目，点击查询所有用户，如果页面可以跳转到响应成功页面，并且在控制台输出以下内容则证明整合成功。 12Controller表现层，查询所有用户Service业务层，查询所有用户 mabatis代码编写有很多都是采用注解的方式，以后假如说遇到复杂的查询还是需要使用配置文件的，我想的就是长痛不如短痛，一步到位。 编写持久层接口UserMapper.java即编写UserMapper.java。这个接口主要的作用制定操作数据库的规范，例如查询用户，增加用户，实现其方法就行，但是在mybatis中不需要自己实现，通过注解或者配置xml即可。 12345678910111213141516package org.example.dao;import org.example.domain.User;import org.springframework.stereotype.Repository;import java.util.List;@Repositorypublic interface UserMapper &#123; //查找所有的用户 List&lt;User&gt; findAll(); //增加一个用户 void addUser(User user);&#125; 编写mybatis-config.xml123456789101112131415161718192021222324252627&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;&lt;configuration&gt; &lt;!-- 加载外部配置文件 --&gt; &lt;properties resource=&quot;db.properties&quot;/&gt; &lt;!-- 为实体类设置别名 --&gt; &lt;typeAliases&gt; &lt;package name=&quot;org.example.domain&quot;/&gt; &lt;/typeAliases&gt; &lt;environments default=&quot;development&quot;&gt; &lt;environment id=&quot;development&quot;&gt; &lt;transactionManager type=&quot;JDBC&quot;/&gt; &lt;dataSource type=&quot;POOLED&quot;&gt; &lt;property name=&quot;driver&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;/&gt; &lt;property name=&quot;url&quot; value=&quot;$&#123;jdbc.url&#125;&quot;/&gt; &lt;property name=&quot;username&quot; value=&quot;$&#123;jdbc.username&#125;&quot;/&gt; &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;/&gt; &lt;/dataSource&gt; &lt;/environment&gt; &lt;/environments&gt; &lt;!-- 注册*Mapper.xml文件 --&gt; &lt;mappers&gt; &lt;package name=&quot;org.example.dao&quot;/&gt; &lt;/mappers&gt;&lt;/configuration&gt; 编写UserMapper.xml如果要使用扫包的方式注册UserMapper.xml，这里命名需要和对应的接口命名一致。 1234567891011&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper namespace=&quot;org.example.dao.UserMapper&quot;&gt; &lt;!-- 开启二级缓存 --&gt; &lt;cache/&gt; &lt;select id=&quot;findAll&quot; resultType=&quot;user&quot;&gt; select * from user &lt;/select&gt;&lt;/mapper&gt; 编写db.properties1234jdbc.driver=com.mysql.cj.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306/srcrs?useSSL=false&amp;amp;serverTimezone=UTCjdbc.username=rootjdbc.password=123456 编写MybatisTest.java123456789101112131415161718192021222324252627package org.example.test;import org.apache.ibatis.io.Resources;import org.apache.ibatis.session.SqlSession;import org.apache.ibatis.session.SqlSessionFactory;import org.apache.ibatis.session.SqlSessionFactoryBuilder;import org.example.dao.UserMapper;import org.example.domain.User;import java.io.IOException;import java.io.InputStream;import java.util.List;public class MybatisTest &#123; public static void main(String[] args) throws IOException &#123; String resource = &quot;mybatis-config.xml&quot;; InputStream inputStream = Resources.getResourceAsStream(resource); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); //这里传入一个true开启自动提交事务 SqlSession session = sqlSessionFactory.openSession(true); UserMapper mapper = session.getMapper(UserMapper.class); List&lt;User&gt; all = mapper.findAll(); for (User user : all) &#123; System.out.println(user); &#125; &#125;&#125; 运行，如果可以查询到数据库中的数据，则证明，可以mybatis搭建成功。增加用户就不用测了。 spring整合mybatis在applicationContext.xml中配置连接池1234567&lt;!-- 配置连接池 --&gt;&lt;bean id=&quot;dataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt; &lt;property name=&quot;driverClass&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;/&gt; &lt;property name=&quot;jdbcUrl&quot; value=&quot;$&#123;jdbc.url&#125;&quot;/&gt; &lt;property name=&quot;user&quot; value=&quot;$&#123;jdbc.username&#125;&quot;/&gt; &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;/&gt;&lt;/bean&gt; 在applicationContext.xml中加载外部文件db.properties12&lt;!-- 添加数据库外部文件 --&gt;&lt;context:property-placeholder location=&quot;classpath*:db.properties&quot;/&gt; 在applicationContext.xml中配置SqlSessionFactory工厂1234567891011&lt;!-- 配置SqlSessionFactory工厂 --&gt;&lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt; &lt;!-- 注入数据库连接池 --&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt; &lt;!-- 扫描domain包 使用别名 --&gt; &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;org.example.domain&quot;/&gt; &lt;!-- 扫描dao包，注册*Mpper.xml文件 --&gt; &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:org/example/dao/*.xml&quot;/&gt; &lt;!-- 日志 --&gt; &lt;property name=&quot;configuration&quot; ref=&quot;configuration&quot;&gt;&lt;/property&gt;&lt;/bean&gt; 在applicationContext.xml配置简单日志需要和上面日志工厂配合使用。 1234&lt;!-- 配置日志 --&gt;&lt;bean id=&quot;configuration&quot; class=&quot;org.apache.ibatis.session.Configuration&quot;&gt; &lt;property name=&quot;logImpl&quot; value=&quot;org.apache.ibatis.logging.stdout.StdOutImpl&quot;&gt;&lt;/property&gt;&lt;/bean&gt; 在applicationContext.xml中配置dao接口1234567&lt;!-- 配置dao接口所在包 --&gt;&lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt; &lt;!-- 注入sqlSessionFacetory --&gt; &lt;property name=&quot;sqlSessionFactoryBeanName&quot; value=&quot;sqlSessionFactory&quot;/&gt; &lt;!-- 给出需要扫描dao接口包 --&gt; &lt;property name=&quot;basePackage&quot; value=&quot;org.example.dao&quot;/&gt;&lt;/bean&gt; 完善UserServiceImpl.java12345678910111213141516171819202122232425262728package org.example.service.Impl;import org.example.dao.UserMapper;import org.example.domain.User;import org.example.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class UserServiceImpl implements UserService &#123; @Autowired private UserMapper userMapper; @Override public List&lt;User&gt; findAll() &#123; System.out.println(&quot;Service业务层，查询所有用户&quot;); return userMapper.findAll(); &#125; @Override public void addUser(User user) &#123; System.out.println(&quot;Service业务层，保存用户&quot;); userMapper.addUser(user); &#125;&#125; 完善UserController.java1234567891011121314151617181920212223242526272829303132333435package org.example.controller;import org.example.domain.User;import org.example.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import java.util.List;@Controller@RequestMapping(&quot;/user&quot;)public class UserController &#123; @Autowired private UserService userService; @RequestMapping(&quot;/findAll&quot;) public String findAll()&#123; System.out.println(&quot;Controller表现层，查询所有用户&quot;); List&lt;User&gt; all = userService.findAll(); for (User user : all) &#123; System.out.println(user); &#125; return &quot;success&quot;; &#125; @RequestMapping(&quot;/addUser&quot;) public String addUser(User user)&#123; System.out.println(&quot;Controller表现层，增加用户&quot;); userService.addUser(user); return &quot;success&quot;; &#125;&#125; 完善UserMapper.xml12345678910111213141516&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper namespace=&quot;org.example.dao.UserMapper&quot;&gt; &lt;!-- 开启二级缓存 --&gt; &lt;cache/&gt; &lt;select id=&quot;findAll&quot; resultType=&quot;user&quot;&gt; select * from user &lt;/select&gt; &lt;insert id=&quot;addUser&quot; parameterType=&quot;user&quot;&gt; insert into User (id,name) values ( #&#123;id&#125;,#&#123;name&#125; ); &lt;/insert&gt;&lt;/mapper&gt; 完善index.jsp1234567891011121314&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;a href=&quot;user/findAll&quot;&gt;查询所有学生&lt;/a&gt; &lt;form action=&quot;user/addUser&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;&lt;br/&gt; &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;&lt;br/&gt; &lt;input type=&quot;submit&quot; name=&quot;注册&quot;&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 测试运行运行web项目，点击查询所有用户，如果在控制台中输出所有的学生，则证明整合成功。也可以输入id和name，添加一个用户。可能添加用户会失败，因为增删改需要提交事务。接下来进行事务配置。 事务配置在applicationContext中配置事务管理123456789101112131415&lt;!-- 配置事务管理器 --&gt;&lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;&lt;/bean&gt;&lt;!-- 配置事务通知 --&gt;&lt;tx:advice id=&quot;txAdvice&quot; transaction-manager=&quot;transactionManager&quot;&gt; &lt;tx:attributes&gt; &lt;tx:method name=&quot;find*&quot; read-only=&quot;true&quot;/&gt; &lt;tx:method name=&quot;*&quot; isolation=&quot;DEFAULT&quot;/&gt; &lt;/tx:attributes&gt;&lt;/tx:advice&gt;&lt;!-- 配置AOP增强 --&gt;&lt;aop:config&gt; &lt;aop:advisor advice-ref=&quot;txAdvice&quot; pointcut=&quot;execution(* org.example.service.Impl.*ServiceImp.*(..))&quot;/&gt;&lt;/aop:config&gt; 至此，一个优雅的框架搭建好了，如果需要别的功能可以在添加。可以删除不必要的文件，org.example.test做测试用的，可以删除，mybatis-config.xml也可以删除了。 完整代码下载地址：ssm框架源码 注意有一点需要注意，当你的web应用部署到服务器，关于连接数据库，或者执行SQL语言报错的时候，应该是你的数据库驱动和数据库版本不一致，假如你的数据库是5.7版本，就数据库驱动也要是5版本，数据库是8版本，驱动也要调成8版本。还有一种错误就是Linux默认对于数据库大小写敏感，需要自己改变一下。请参考我的web服务环境配置。 参考史上最详细的IDEA优雅整合maven+ssm框架 maven中央仓库 mybatis官网 Spring整合mybatis的xml文件配置]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[能解决人生困惑的良药]]></title>
    <url>%2F%2Fposts%2F202005121.html</url>
    <content type="text"><![CDATA[不知从什么时候开始，就喜欢读别人的自传，最早有mp5的时候，就看些网络小说，例如些，坏蛋是怎么练成的，修仙的啊，就是让人看了很爽的那种，主人公的主角光环，不到最后一刻，绝不熄灭。不过也不能全盘否认，也有写的不错的，但只是个别片段章节。 后来，看一些名人的传记，要属自传更好一些，读起来，就好像你在听他讲关于他一生的故事。从小时候，到暮年，经历了什么，各个时间段在想什么，在做什么，读起来，很是有感觉，虽然有的可能记忆模糊了一些，话语有些包装，也没什么。 最近在看一本叫做《浪》的书，作者是关愚谦，最开始他就讲自己为何从中国逃到外国去，百度了一下，竟是一位“叛国者”，在文革时期，冒用外宾身份逃到了国外，躲避批斗。 作者的出身也比较好，受过良好教育，也经历了中国最动乱的那段时期，民国，日本入侵中国，国共内战，新中国成立，抗美元朝，文化大革命，是那段历史的见证者之一，以作者视角展示的，仅仅是众多双眼睛的冰山一角吧，不是很多人能在新中国成立庆典，坐在观众席第一排。 49年，作者住在上海，那时候还没有解放，新闻的控制权还在国民党手上，前一天收音机上还说国民党大胜了共产党，第二天上海就光复了，一个国家的意识形态，都被新闻掌握着，现在也这样就不足为怪了，这本书能够出版，是否也修改了一些原本的东西呢？ 朝鲜战争时，新中国仅仅成立了一年，美国插手，图谋不轨，中国组成抗美援朝志愿军，需要学生参与进来，从中挑选部分学生上前线，需要在同意书上签名，但是不是必须的，挑选中的是要上前线的，关乎生死的，最开始同学们都热血高涨，到了真正公布上前线名单时，都害怕了，坐在下面一声不敢吭，有个叫的最欢的投机主义者，被选中了，在去的路上，却做了逃兵。 有一个观点，我也很认同，不是签字了，就是爱国，不签字就是不爱国，每个人的境遇都是不一样的。任何事情都是如此，诸如买什么品牌手机就是爱国，我从不信这个。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录两个错误]]></title>
    <url>%2F%2Fposts%2F202005111.html</url>
    <content type="text"><![CDATA[Web应用程序[root]注册了JDBC驱动程序，但在Web应用程序停止时未能注销它。为了防止内存泄漏，jdbc驱动程序被强制注销 这个应该就是jdbc驱动版本的问题，我当时mysql数据库版本是5.几，用的8.几的驱动包就报这个错误，然后换成了5.几驱动包就没有这个错误了，但是现在又换回8.几的包又不报这个错误了，也有可能是c3p0的原因。 c3p0让我吃了不少苦头 开始使用的是2010的老版本，使用率比较高，但是我一访问就会报500的错误，查有的说是jar报冲突问题，我心想这个可麻烦了，最后又把c3p0升级版本，换到15年出的版本，也是同样的问题，最后清空target文件目录，再次重新运行就没有这样的问题了。 外部引入文件配置数据源 如果数据库的数据源在外部文件中，需要引入到spring配置文件中。 但是需要注意命名 1234jdbc.driver=com.mysql.cj.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306/srcrs?useSSL=false&amp;amp;serverTimezone=UTCjdbc.username=rootjdbc.password=123456 前面最好都加上一个jdbc，要不然就会出现一个错误，username是读取电脑主机名，我也不知道为啥。 参考springboot启动报错：Handler dispatch failed; nested exception is java.lang.AbstractMethodError 关于spring通过外部引入文件配置数据源]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>ssm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多久了]]></title>
    <url>%2F%2Fposts%2F202005091.html</url>
    <content type="text"><![CDATA[有的时候，人真的不能太聪明，会活的很不快乐，把什么都了解的很明白，别人忽悠不了你，别人不快乐，你也生气，做个快乐的傻子，不好吗^_^。 时隔多年，我再一次拿到了三好学生这个荣誉，我觉得我还是不够格的，三好学生指的是思想品德好、学习好和身体好，思德不反党反国家，学习也就那样，身体健全，任何一方面都不是多好，本不想去争取的，最后又去试了一下，全靠“厚爱”。 上次还是高中，班级前十就是三好学生了，因为班级热爱学习的不多，获取要容易一点。 时间越久，越能了解到，知识让我们改变的是什么，将来无论贫穷富有，总有些东西是买不来的，当然，你也买不来别人的。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[web服务环境配置]]></title>
    <url>%2F%2Fposts%2F202005061.html</url>
    <content type="text"><![CDATA[jdk 将jdk压缩包上传到服务器 可以从官网下载，或者自己备份有。上传后文件名为 1jdk-8u231-linux-x64.tar.gz 解压 如果什么都不加，默认解压在当前目录下。 1sudo tar -zxvf jdk-8u231-linux-x64.tar.gz 环境变量配置 在命令行输入此命令，打开环境变量配置文件。 1sudo vim /etc/profile 下面的只需要改一下JAVA_HOME，推荐使用xftp查看路径，快捷高效。 1234JAVA_HOME=/home/ubuntu/jdk1.8.0_231CLASSPATH=$JAVA_HOME/lib/PATH=$PATH:$JAVA_HOME/binexport PATH JAVA_HOME CLASSPATH 使配置生效 1source /etc/profile mysql以前那个方法不行了，这次又换了一个。 先运行dpkg -l | grep mysql查看有没有安装mysql，如果有输出就说明安装了，请参考，我的ubuntu18.04彻底删除MySQL数据库这篇文章就能解决你的问题。 安装mysql-server 安装MySQLapt install mysql-server 查看是否安装成功netstat -tap | grep mysql,如果看到有mysql就说明安装成功。 输入mysql进入数据库，此时数据库是没有密码的。 配置MySQL 输入mysql_secure_installation secure enough. Would you like to setup VALIDATE PASSWORD plugin? # 要安装验证密码插件吗? Press y|Y for Yes, any other key for No: N # 这里我选择N New password: # 输入要为root管理员设置的数据库密码 Re-enter new password: # 再次输入密码 Remove anonymous users? (Press y|Y for Yes, any other key for No) : y # 删除匿名账户Success. Disallow root login remotely? (Press y|Y for Yes, any other key for No) : N # 是否禁止root管理员从远程登录？ Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y # 删除test数据库并取消对它的访问权限 Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y # 刷新授权表，让初始化后的设定立即生效 此时mysql就是初步配置好了，但是仍然不够。 配置MySQL允许远程访问 编辑配置文件vim /etc/mysql/mysql.conf.d/mysqld.cnf 注释bind-address = 127.0.0.1 按Esc键，输入冒号，再输入wq，即可保存退出。 输入mysql -uroot -p加上你设置的密码，就能进入到数据库。 进行授权grant all on *.* to root@&#39;%&#39; identified by &#39;你的密码&#39; with grant option; 刷新权限flush privileges; 退出exit 重启MySQLsystemctl restart mysql 接下来就可以远程访问了。 解决不用密码就能登录到现在发现不用密码也是能登录的，相当与以前设置的密码还没有生效。 进入数据库mysql -uroot -p 进入mysqluse mysql; 无password版本，即5.7以下包括5.7update user set authentication_string=password(&quot;你的密码&quot;) where user=&#39;root&#39;; 大于5.7update user set password=password(&#39;你的密码&#39;) where user=&#39;root&#39;; 不清楚这两条运行了，也没关系。 update user set plugin=”mysql_native_password”; 刷新flush privileges; 退出exit 重启MySQLsystemctl restart mysql 解决数据库大小写敏感问题在windows中，数据库的大小写是不敏感的，而在Linux是区分大小写的。 mysql是通过lower_case_table_names变量来处理大小写问题的。 进入mysqlmysql -uroot -p，回车输入你的密码 查询大小写变量show variables like &#39;%case%&#39;; 输入如下内容，该变量值是0，说明对大小写是敏感的。 123456+------------------------+-------+| Variable_name | Value |+------------------------+-------+| lower_case_file_system | OFF || lower_case_table_names | 0 |+------------------------+-------+ 退出数据库，进入终端vim /etc/mysql/mysql.conf.d/mysqld.cnf 在[mysqld]下面添加lower_case_table_names=1 保存并退出 重启MySQLsystemctl restart mysql 至此，mysql算是差不多配置完了。如果再出问题，应该就是驱动和数据版本不匹配了。 tomcat 下载tomcat 地址：tomcat 9.0.34 上传到服务器 上传后名字为 1apache-tomcat-9.0.34.tar.gz 解压 解压到当前目录 1sudo tar -zxvf apache-tomcat-9.0.34.tar.gz 赋权限 我不知有何用。 1sudo chmod 755 -R apache-tomcat-9.0.34 修改startup.sh启动脚本 在apache-tomcat-9.0.34/bin目录中输入 1sudo vi startup.sh 在最后一行的前面添加如下内容，路径要符合自己的实际情况。 1234567export JAVA_HOME=/home/ubuntu/jdk1.8.0_231export JRE_HOME=$&#123;JAVA_HOME&#125;/jreexport CLASSPATH=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/libexport PATH=$&#123;JAVA_HOME&#125;/bin:$PATH#tomcatexport TOMCAT_HOME=/home/ubuntu/apache-tomcat-9.0.34 修改shutdown.sh关闭脚本 在apache-tomcat-9.0.34/bin目录中输入 1sudo vi shutdown.sh 和上面哪个一样，在最后一行的前面添加如下内容，路径要符合自己的实际情况。 1234567export JAVA_HOME=/home/ubuntu/jdk1.8.0_231export JRE_HOME=$&#123;JAVA_HOME&#125;/jreexport CLASSPATH=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/libexport PATH=$&#123;JAVA_HOME&#125;/bin:$PATH#tomcatexport TOMCAT_HOME=/home/ubuntu/apache-tomcat-9.0.34 启动tomcat 1sudo ./startup.sh 提示如下内容则说明启动成功 123456Using CATALINA_BASE: /home/ubuntu/apache-tomcat-9.0.34Using CATALINA_HOME: /home/ubuntu/apache-tomcat-9.0.34Using CATALINA_TMPDIR: /home/ubuntu/apache-tomcat-9.0.34/tempUsing JRE_HOME: /home/ubuntu/jdk1.8.0_231/jreUsing CLASSPATH: /home/ubuntu/apache-tomcat-9.0.34/bin/bootstrap.jar:/home/ubuntu/apache-tomcat-9.0.34/bin/tomcat-juli.jarTomcat started. 参考链接Ubuntu18.04安装jdk Ubuntu 18.04安装mysql Ubuntu18.04 安装tomcat Linux下MySQL大小写敏感问题]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mybatis初入门]]></title>
    <url>%2F%2Fposts%2F202005051.html</url>
    <content type="text"><![CDATA[:::tip记录一下Mybatis的入门环境配置。::: 基本环境使用工具 IDEA商业版 2020.1 项目类型 maven项目 首先需要构建一个maven项目 在pom.xml添加所需要的依赖。持久层就是访问数据库，所以必须得有jdbc的驱动和mybatis支持。 12345678910111213&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.5.4&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.19&lt;/version&gt;&lt;/dependency&gt; 在src/main/java目录中如果有目录文件就删除，没有就继续。 在src/main/java中创建如下目录 com/demo/controller 用于存放业务代码 com/demo/dao 用于存放持久层代码 com/demo/domain 用于存放javabean com/demo/utils 用于简化生成SqlSession对象 创建核心配置文件在src/main中创建资源文件resources目录，并在里面创建mybatis的核心配置文件mybatis-config.xml 123456789101112131415161718192021&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;&lt;configuration&gt; &lt;properties resource=&quot;db.properties&quot;/&gt; &lt;environments default=&quot;development&quot;&gt; &lt;environment id=&quot;development&quot;&gt; &lt;transactionManager type=&quot;JDBC&quot;/&gt; &lt;dataSource type=&quot;POOLED&quot;&gt; &lt;property name=&quot;driver&quot; value=&quot;$&#123;driver&#125;&quot;/&gt; &lt;property name=&quot;url&quot; value=&quot;$&#123;url&#125;&quot;/&gt; &lt;property name=&quot;username&quot; value=&quot;$&#123;username&#125;&quot;/&gt; &lt;property name=&quot;password&quot; value=&quot;$&#123;password&#125;&quot;/&gt; &lt;/dataSource&gt; &lt;/environment&gt; &lt;/environments&gt; &lt;mappers&gt; &lt;mapper resource=&quot;com/demo/dao/StudentMapper.xml&quot;/&gt; &lt;/mappers&gt;&lt;/configuration&gt; 也可以使每个Mapper自动被加载，但是前提要求是，接口名需要和xml名相同。 123&lt;mappers&gt; &lt;package name=&quot;com.demo.dao&quot;/&gt;&lt;/mappers&gt; 创建数据库连接配置外部文件在resources目录下创建db.properties文件，用于存放访问数据库的身份信息。使用需要注册。 1234driver=com.mysql.cj.jdbc.Driverurl=mysql://localhost:3306/srcrs?useSSL=false&amp;amp;serverTimezone=UTCusername=rootpassword=123456 我觉得这个外部文件还挺不错的，当项目已经上线得时候，如果需要修改数据库连接，不需要动核心配置文件，只需要修改这个文件就行了。 创建javabean准备访问数据库的student表，在domain目录中创建相应的javabean。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class Student &#123; private String sno; private String sname; private String sgender; private Integer sage; public String getSno() &#123; return sno; &#125; public void setSno(String sno) &#123; this.sno = sno; &#125; public String getSname() &#123; return sname; &#125; public void setSname(String sname) &#123; this.sname = sname; &#125; public String getSgender() &#123; return sgender; &#125; public void setSgender(String sgender) &#123; this.sgender = sgender; &#125; public Integer getSage() &#123; return sage; &#125; public void setSage(Integer sage) &#123; this.sage = sage; &#125; @Override public String toString() &#123; return &quot;Student&#123;&quot; + &quot;sno=&#x27;&quot; + sno + &#x27;\&#x27;&#x27; + &quot;, sname=&#x27;&quot; + sname + &#x27;\&#x27;&#x27; + &quot;, sgender=&#x27;&quot; + sgender + &#x27;\&#x27;&#x27; + &quot;, sage=&quot; + sage + &#x27;&#125;&#x27;; &#125;&#125; 这里需要注意的就是，数据库表的名字需要和javabean的名字相同，或者符合驼峰命名法，好像得需要在配置中开启，最好名称相同，也可以使用resultMap做结果集映射，就可以随便起名字了。 创建生成SqlSession对象类在utils目录下创建MybatisUtils.java 1234567891011121314151617public class MybatisUtils &#123; static SqlSessionFactory sqlSessionFactory; static &#123; String resource = &quot;mybatis-config.xml&quot;; InputStream inputStream = null; try &#123; inputStream = Resources.getResourceAsStream(resource); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); &#125; public static SqlSession getSqlSession()&#123; return sqlSessionFactory.openSession(); &#125;&#125; 简化获取SqlSession对象，每次需要用到的时候，直接从这个类的getSqlSession方法获取对象就行。 创建数据库查询接口在dao中创建StudentDao.java 123public interface StudentDao &#123; List&lt;Student&gt; getStudentList();&#125; 创建接口对应的xml在resources目录中创建com/demo/dao/StudentMapper.xml 12345678910&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper namespace=&quot;com.demo.dao.StudentDao&quot;&gt; &lt;select id=&quot;getStudentList&quot; resultType=&quot;com.demo.domain.Student&quot;&gt; select * from Student &lt;/select&gt;&lt;/mapper&gt; 注意要在mybatis-config.xml中注册。 可以给javabean设置别名，就不需要写javabean的全路径名了。 在mybatis-config.xml中加入 123&lt;typeAliases&gt; &lt;package name=&quot;domain.blog&quot;/&gt;&lt;/typeAliases&gt; 每一个在包 domain.blog 中的 Java Bean，在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名。 创建业务代码在controller中创建App.java 1234567891011public class App &#123; public static void main(String[] args) &#123; SqlSession sqlSession = MybatisUtils.getSqlSession(); StudentMapper mapper = sqlSession.getMapper(StudentMapper.class); List&lt;Student&gt; studentList = mapper.getStudentList(); for (Student student : studentList) &#123; System.out.println(student); &#125; sqlSession.close(); &#125;&#125; 开启日志mybatis自带有输出到控制台的日志，如果需要使用直接到mybatis-config.xml中配置就可以，需要注意位置放置的位置。 123&lt;settings&gt; &lt;setting name=&quot;logImpl&quot; value=&quot;STDOUT_LOGGING&quot;/&gt;&lt;/settings&gt; 这样日志就会有日志输出了。 同样也可以自己配置mybatis日志实现。例如使用log4j。 在pom.xml中导入log4j依赖包。 123456&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;&lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt; 创建log4j日志配置文件log4j.properties，放到资源目录resources中。 123456789101112131415161718192021222324#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码log4j.rootLogger=DEBUG,console,file#控制台输出相关配置log4j.appender.console = org.apache.log4j.ConsoleAppenderlog4j.appender.comsole.Target = System.outlog4j.appender.comsole.Threshold = DEBUGlog4j.appender.console.layout = org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern = [%c]-%m%n#文件输出的相关设置log4j.appender.file = org.apache.log4j.RollingFileAppenderlog4j.appender.file.File = ./log/srcrs.loglog4j.appender.file.MaxFileSize = 10mblog4j.appender.file.Threshold = DEBUGlog4j.appender.file.layout = org.apache.log4j.PatternLayoutlog4j.appender.file.layout.ConversionPattern = [%p][%d&#123;yy-MM-dd&#125;][%c]%m%n#日志输出级别log4j.logger.org.mybatis = DEBUGlog4j.logger.java.sql = DEBUGlog4j.logger.java.sql.Statement = DEBUGlog4j.logger.java.sql.ResultSet = DEBUGlog4j.logger.java.sql.PreparedStatement = DEBUG 在mybatis-config.xml中配置相应的日志实现标签。 123&lt;settings&gt; &lt;setting name=&quot;logImpl&quot; value=&quot;LOG4J&quot;/&gt;&lt;/settings&gt; sqlSession每次使用完都需要关闭，另外进行增删改的时候还得提交事务，也可以设置成自动提交事务。 参考链接maven中央仓库 mybatis官方文档 mybatis狂神版]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[总有一见如故]]></title>
    <url>%2F%2Fposts%2F202005052.html</url>
    <content type="text"><![CDATA[有大概三年没见的老朋友又见面了，还和以前一样，还是那么熟悉。 自高中毕业，我去上大学，他去当兵，随后两年义务兵结束，又继续选择在部队待三年，一年大约有一个月的假期，也挺好的。 我好奇于军旅生活，每天都干些什么，执行过什么特殊任务，打枪爽不爽。有擦枪走火丢了性命的。时常也能玩手机，好似学校，只不过一个是训练，一个是学习。 聊聊以前的同学，谁结婚了，谁有孩子了，谁又在干些什么。我大都不太了解，能了解的大概就是qq或微信通讯录的号码。连以前玩的最好的，都很少联系了，不，准确的说是没有联系，没啥事，实在不知道从哪开始。但我相信，哪天碰面，仍如当初。 匆匆一世，人的一辈子并不长，任何事情在时间的洪流中，只不过是过眼云烟，就如同1919年5月4日，当时是何等镜头，现在浓缩成青年节、爱国运动。 时间吞噬了什么？]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[炎炎夏日]]></title>
    <url>%2F%2Fposts%2F202005031.html</url>
    <content type="text"><![CDATA[五一，去参加一个表姐的婚礼，之间相隔了近50公里，在今天看来，这个距离并不算远吧，个把小时就到了。从小到大也只是见过几次面，好像从来也没有说过一次话。 找的老公看着挺好的，有气质，尤其有一股IT男的气质，但是听说好像是在政府部门上班，挺不错的。 这几天气温可高，不知不觉夏天就来了，前不久我还喜欢早上晒太阳，现在已经受不了了。在家待着也挺无聊的，总有一些琐事，计划总是赶不上变化。 生活趋于平常，前不久看到一个儿时的玩伴，已经就业了，也是计算机行业，聊了一会，给我传授了一下他的心得，感觉他学的还挺好的，实践能力比我强，我学了三年，而他仅仅学了半年，心里有点不平衡，大学，我们学原理，学基础内容，仅仅是入个门，也许很多东西都用不到吧，但是到头来发现，有些原理性知识也是不可或缺的。 那时候买的kindle，现在看的也不多，有时候眼睛累的时候，宁愿睡觉，但是，有时候想想，花钱买的，不看也有点吃亏，没事的时候总是强制自己看看，比看手机舒服，无论是生理上还是心理上，眼睛不会疼，心也趋于平静。前不久刚刚看完了朱元璋的传记，发现有些东西并不像传言的那样，事出必有因。 永远相信，美好的事情即将发生^_^。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[背包问题求具体方案]]></title>
    <url>%2F%2Fposts%2F202005032.html</url>
    <content type="text"><![CDATA[:::tip好久都没有写过c++程序了，怕连helloword都忘怎么写了，还要没事的时候捡起来练练，一练发现了自己的知识漏洞，整了好久。::: 【问题描述】小明要组织一台晚会，总共准备了 n 个节目。然后晚会的时间有限，他只能最终选择其中的 m 个节目。这 n 个节目是按照小明设想的顺序给定的，顺序不能改变。小明发现，观众对于晚会的喜欢程度与前几个节目的好看程度有非常大的关系，他希望选出的第一个节目尽可能好看，在此前提下希望第二个节目尽可能好看，依次类推。小明给每个节目定义了一个好看值，请你帮助小明选择出 m 个节目，满足他的要求。 【输入格式】 输入的第一行包含两个整数 n, m ，表示节目的数量和要选择的数量。第二行包含 n 个整数，依次为每个节目的好看值。【输出格式】输出一行包含 m 个整数，为选出的节目的好看值。 【样例输入】 125 33 1 2 5 4 【样例输出】 13 5 4 【样例说明】 选择了第1, 4, 5个节目。 【评测用例规模与约定】 对于 30% 的评测用例，1 &lt;= n &lt;= 20；对于 60% 的评测用例，1 &lt;= n &lt;= 100；对于所有评测用例，1 &lt;= n &lt;= 100000，0 &lt;= 节目的好看值 &lt;= 100000。 解思拿到这道题，很明显的就是一道背包问题，动态规划最容易求解的也是背包问题，有固定的模板，但是这道题一看并不是让求最大的价值，最优解什么的，而是要求解具体的选择方案，我就有点犯难了。 题意得理解也不难，有n节目，每个节目都有一个好看值，只选择其中得m个节目，要求节目顺序不改变，使这m个节目得好看值最大。 具体思路我只想了一种，就是用背包模板，在中间记录选择了哪几个节目，最后输出这些节目就行了。开始准备维护一个节目队列，但是行不通，计算结果不正确。最后写着写着，我发现了dp数组形成的规律，当此节目被选中的时候，dp数组的数据将发生改变，反之则数据没有发生改变。 第一个节目第一个节目第二个节目第二个节目第五个节目第五个节目第三个节目第三个节目第四个节目第四个节目dp[1]dp[1]3333553355dp[2]dp[2]3344995588dp[3]dp[3]33441212661010Viewer does not support full SVG 1.1 这种想法是适用于部分的数据，对于这个示例却不适用，难受啊。这种方案实在是不会。把这段错误代码贴出来，啥时候想明白，再说。 1234567891011121314151617181920212223242526272829#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;int a[100005];int dp[100005];int v[100005][2];int main()&#123; int n,m; cin &gt;&gt; n &gt;&gt; m; for(int i=0;i&lt;n;i++)&#123; dp[i]=0; v[i][0]=0; cin &gt;&gt; a[i]; &#125; for(int i=0;i&lt;n;i++)&#123; for(int j=m;j&gt;0;j--)&#123; if((dp[j-1]+a[i])&gt;dp[j])&#123; dp[j] = dp[j-1] + a[i]; v[j][0]=dp[j]; v[j][1]=i; &#125; &#125; &#125; for(int i=1;i&lt;=3;i++)&#123; cout &lt;&lt; v[i][0] &lt;&lt; &quot;---&gt;&quot; &lt;&lt; v[i][1] &lt;&lt; endl; &#125; return 0;&#125; 没办法，得用第二个方案了，所有的节目包括两个部分，一个是好看度，一个是节目编号，然后排好序，进行贪心选取。 需要进行两次排序，一次对于n个节目的好看度排序，第二次对前m个节目的编号排序，直接选择前m个节目就好了，但是估计不会过全部的数据，时间复杂度有点大。 代码 1234567891011121314151617181920212223242526272829303132333435#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;struct Node&#123; int x;//节目好感度 int y;//节目编号 &#125;;Node s[100005];bool cmp1(Node a,Node b)&#123; if(a.x&gt;b.x)&#123; return true; &#125; return false;&#125;bool cmp2(Node a,Node b)&#123; if(a.y&lt;b.y)&#123; return true; &#125; return false;&#125;int main()&#123; int n,m; cin &gt;&gt; n &gt;&gt; m; for(int i=0;i&lt;n;i++)&#123; cin &gt;&gt; s[i].x; s[i].y=i; &#125; sort(s,s+n,cmp1); sort(s,s+m,cmp2); for(int i=0;i&lt;m;i++)&#123; cout &lt;&lt; s[i].x &lt;&lt; &quot; &quot;; &#125; return 0;&#125; 测试数据的结果图 第一次排序第一次排序好看值好看值5544332211编号编号3344002211第二次排序第二次排序好看值好看值3355442211编号编号0033442211Viewer does not support full SVG 1.1 这样就把这个问题解决掉了，]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[低烧不退]]></title>
    <url>%2F%2Fposts%2F202004291.html</url>
    <content type="text"><![CDATA[心里沉甸甸的，我的brother已经发低烧一个星期了，还没有好转，上次从学校弄回来去医院也检查了，没有任何问题，但是在家里每次量体温就是37.1，37.2，就在这两个碰，去学校后，问老师也是还在低烧状态，也不到为什么。 把这件事说出来之后，发现别人也曾经有过这样的情况，10天半个月的，也有，吃药，输液，不管用，最后都是自己好的，也不知道是什么引起的。今天从网上查，发现有个人连续几年都是低烧状况，去过好多医院也没有治好，底下评论的凑热闹的，不乏都是这样的问题，还是有一小部分群体的。 吃饭，精神头，都好的很，我想如果不是今年这个情况，说不定都不知道在发低烧。医学上规定37.3以上才算是低烧，但是正常人的体温也就是在36.7左右，37到37.3也说不清是不是正常的。 我们这有点迷信，喊魂能治病，为此我母亲，那天10点多还没睡，要来做这件事（平常睡的很早），但是不凑巧他还没睡，全家人都在担心。 快点好吧。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[流水线执行方式]]></title>
    <url>%2F%2Fposts%2F202004271.html</url>
    <content type="text"><![CDATA[:::tip流水线执行方式对比的是串行执行方式，串行执行方式比较简单，一个指令执行完下一个指令才可以执行，流水线执行方式有点颠覆我以前的想法。::: 首先先来看一道题吧。 例题1若每一条指令都可以分解为取指、分析和执行三步。已知取指时间t取指=4Δt，分析时间t分析=3Δt，执行时间t执行=5Δt。如果按串行方式执行，执行完100条指令需要___Δt。如果按照流水方式执行，执行完100条指令需要___Δt。 串行执行方式都不需要多说，执行一条指令需要花12Δt，那么执行100条则需要1200Δt。 那么流水线方式呢？我以前做法就是，第一条指令完成取指，就可以运行第二条指令的取指······，直到运行到第100条指令，取指所需要花的时间为4Δt，每条指令只需要完成取指就行了，只要最后一条指令完成，其他指令一定也会完成的，所以所需要花的时间就是400Δt+3Δt+5Δt=408Δt，但是一看答案却不是这样的，而是507Δt，百思不得其解。 再来好好理一理思路。 t[1]取指t[1]取指t[1]分析t[1]分析t[2]取指t[2]取指t[1]执行t[1]执行t[2]分析t[2]分析t[3]取指t[3]取指t[2]执行t[2]执行t[3]分析t[3]分析············t[3]执行t[3]执行············t[n-1]取指t[n-1]取指············t[n-1]分析t[n-1]分析t[n]取指t[n]取指t[n-1]执行t[n-1]执行t[n]分析t[n]分析t[n]执行t[n]执行Viewer does not support full SVG 1.1 由这个表格可以看清楚，t[1]完成取指，接着t[2]，一直到t[n]，可以看到最后执行的指令就是t[n]，只要t[n]完成，所有的指令都会完成，好像我的想法没问题啊。 但是这次真的是想错了，每一列是作为一个整体完成的，也就是说，这一列的指令可以并行，完成的时间以这一列指令中，消耗时间最长的为准。起初看到类似这个图我仍不明白是什么意思，最后看到是每一列的指令步骤都要完成才能进入下一列，才知道这个公式咋来的。 这时候就会由一个公式： :::tipT=t取指+max(t分析,t取指)+(n-2)*max(t取指,t分析,t执行)+max(t执行,t分析)+t执行::: 那么就按照这个公式来算吧。 4Δt+4Δt+5Δt*98+5Δt+5Δt = 508Δt 不对啊，这个算出来的也不是507Δt啊，难道还有一些地方没有注意到？怀着疑问，我又从网上找到了一道类似的题。 例题2若每一条指令都可以分解为取指、分析和执行三步。已知取指时间t取指=5Δt,分析时间t分析=2Δt，执行时间t执行=5Δt。如果按顺序方式从头到尾执行完500条指令需___Δt。如果按照[执行]k、[分析]k+1 、[取指]k+2重叠的流水线方式执行指令，从头到尾执行完500条指令需___Δt。 这两道题可以说是同一道题，只是改变了以下数字。 串行执行需要时间500*12Δt=6000Δt 流水线执行需要时间5Δt+5Δt+498*5Δt+5Δt+5Δt=2510Δt 这个是没有问题的，可以和答案对的上。证明这个想法是对的。 我又从网上找啊找，找到了原题，但是我很失望，答案都是507Δt，更可笑是百度文库，明明计算结果是508Δt，但是答案却选一个507Δt。这个是百度文库的这道原题地址点我。 所以，书上再一次出错了，可怕的是竟然还有解释和运算步骤，不知道咋算的。这本书虽然是清华出版的，但是质量确实不高，什么缺图的，答案是错的，符号打印错的，不算多，也不算少，尤其是涉及的比较广，有的知识点还是头一次见，书上怎么说就怎么遵守，总体上对的肯定比错的几率大很多。 再论我发现这两道例题不一样了。这道题，书上答案应该没有错。 好心累啊，搞不懂那多出来的一个周期是怎么来的。第一个参考链接还画有图，解释它们之间的区别，看不懂。要我自己想的就是，每条指令取指完之后就不用管了，再加上最后一条指令的分析和执行的时间，就是执行的总时间，这样算如果例题2不是特殊的重叠，算的时间也对，可能以前能算对也只是个巧合，把公式记下来算了。 这两道题是两种不同的流水线执行方式。 例题1，是最省时的执行方式。 :::tipT=t取指+t分析+(n-1)*max(t取指,t分析,t执行)+t执行::: 例题2，步骤重叠。 :::tipT=t取指+max(t分析,t取指)+(n-2)*max(t取指,t分析,t执行)+max(t执行,t分析)+t执行::: 参考链接流水线指令执行 流水线指令运行的总时间计算]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>疑问</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[请求参数绑定与常用注解]]></title>
    <url>%2F%2Fposts%2F202004261.html</url>
    <content type="text"><![CDATA[:::tip注解太多了，记不清楚，有的地方得看过几遍才知道讲的是什么，对于有些东西只是知道个大概，加深一下印象。::: 直接从地址栏获取地址栏中的静态数据，用一组键值对来表示。 1&lt;a href=&quot;param/getparam?username=srcrs&amp;password=123456&quot;&gt;获得参数&lt;/a&gt; 在对应响应的方法体中，传入与地址栏“键”的名字一样的变量就可以拿到其对应的“值”。 1234public String getParam(String username,String password) &#123; System.out.println(username+&quot;,&quot;+password); return &quot;success&quot;;&#125; 以表单方式将数据封装到javabean中首先得需要有一个javabean类。 1234567891011121314151617181920212223242526272829public class Account implements Serializable &#123; private String username; private String password; private Double money; public String getUsername() &#123; return username; &#125; public void setUsername(String username) &#123; this.username = username; &#125; public String getPassword() &#123; return password; &#125; public void setPassword(String password) &#123; this.password = password; &#125; public Double getMoney() &#123; return money; &#125; public void setMoney(Double money) &#123; this.money = money; &#125;&#125; javabean需要实现序列化，对应的成员属性需要实现setter和getter方法。 然后创建一个与此对应的form表单。 123456&lt;form action=&quot;param/saveAccount&quot; method=&quot;post&quot;&gt; 用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br/&gt; 密 码：&lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;&lt;br/&gt; 金 额：&lt;input type=&quot;text&quot; name=&quot;money&quot;&gt;&lt;br/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt; ::: danger这里input标签中的name属性尤其要注意，其名需要和javabean中属性名相同。::: 这里有一个疑问，为什么javabean要实现序列化？ :::tip任何类型只要实现了Serializable接口，就可以被保存到文件中，或者作为数据流通过网络发送到别的地方。 我觉得这个才是关键，因为涉及到了前后端的交互，但是底层不知道如何运行。::: 对应实现的方法，参数列表可以直接写对应的javabean对象属性名，可以直接通过setter方法赋值。 123456public String saveAccount(Account account) &#123; System.out.println(&quot;用户名：&quot;+account.getUsername()); System.out.println(&quot;密 码：&quot;+account.getPassword()); System.out.println(&quot;金 额：&quot;+account.getMoney()); return &quot;success&quot;;&#125; javabean中若包含对象该如何赋值？ :::tip假如Account中包含User类的实例对象user，User类中有属性uname,uage,则采用user.uname，user.uage即可为user赋值。::: javabean中包括集合 12List&lt;String&gt; lists;Map&lt;String,Integer&gt; maps; 1234lists1：&lt;input type=&quot;text&quot; name=&quot;lists[0]&quot;&gt;&lt;br/&gt;lists2：&lt;input type=&quot;text&quot; name=&quot;lists[1]&quot;&gt;&lt;br/&gt;maps1：&lt;input type=&quot;text&quot; name=&quot;maps[&#x27;one&#x27;]&quot;&gt;&lt;br/&gt;maps2：&lt;input type=&quot;text&quot; name=&quot;maps[&#x27;two&#x27;]&quot;&gt;&lt;br/&gt; 解决中文乱码1234567891011121314&lt;!-- 中文乱码过滤器 --&gt;&lt;filter&gt; &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt; &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt; &lt;init-param&gt; &lt;param-name&gt;encoding&lt;/param-name&gt; &lt;param-value&gt;UTF-8&lt;/param-value&gt; &lt;/init-param&gt;&lt;/filter&gt;&lt;filter-mapping&gt; &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt;&lt;/filter-mapping&gt; @RequestParam把请求中指定名称的参数给控制器中的形参赋值。就是为了处理绑定参数的时候，当传入的参数名和方法参数名不同赋值失败的问题。 如下所示，当k为name时，而方法中接收的参数使用的是username，这个时候就需要用到这个注解了。 1&lt;a href=&quot;anno/testRequestParam?name=打啊&quot;&gt;跳转&lt;/a&gt; 1234public String testRequestParam(@RequestParam(&quot;name&quot;) String username) &#123; System.out.println(username); return &quot;success&quot;;&#125; @RequestBody用于获取请求体内容，直接使用可以得到key=value&amp;key=value形式的数据，不适用get请求。提交一个表单，用户名和密码，在响应的方法参数的前面加上此注解就可以拿到请求体。 12345&lt;form action=&quot;anno/testRequestBody&quot; method=&quot;post&quot;&gt; 用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt;&lt;br/&gt; 密 码：&lt;input type=&quot;text&quot; name=&quot;password&quot;/&gt;&lt;br/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt;&lt;/form&gt; 1234public String testRequestParam(@RequestBody String body) &#123; System.out.println(body); return &quot;success&quot;;&#125; @PathVariable用于绑定url中的占位符，例如，请求url中/delete/{id}，这个{id}就叫做url的占位符。是spring3.0之后加入的，是springmvc支持rest风格url的重要标志。 restful风格我也没有用过，也不知道哪好哪不好，看着好像优点像多态，同一路径不同的请求方式会响应不同的方法，而我现在用的就是不同的方法有不同的路径。 @PathVariable(“id”) 里面的id则占位符也要是id。这样就可以取到id的值了。 1&lt;a href=&quot;anno/testPathVariable/10&quot;&gt;提交&lt;/a&gt; 12345@RequestMapping(&quot;/testPathVariable/&#123;id&#125;&quot;)public String testPathVariable(@PathVariable(&quot;id&quot;) String id) &#123; System.out.println(id); return &quot;success&quot;;&#125; @RequestHeader获取请求消息头。这个在获取请求头中哪个信息可以用到。 1&lt;a href=&quot;anno/testRequestHeader&quot;&gt;提交&lt;/a&gt; 1234public String testRequestHeader(@RequestHeader(&quot;Accept&quot;) String header) &#123; System.out.println(header); return &quot;success&quot;;&#125; @CookieValue把指定cookie名称的值传入控制器方法参数。也就是拿Cookie中的某些值。和@RequestHeader的注解作用差不多都是为了请求头中的值，只不过这个更细化了一些。 1&lt;a href=&quot;anno/testCookieValue&quot;&gt;提交&lt;/a&gt; 12345@RequestMapping(&quot;/testCookieValue&quot;)public String testCookieValue(@CookieValue(&quot;JSESSIONID&quot;) String ssid) &#123; System.out.println(ssid); return &quot;success&quot;;&#125; @ModelAttribute在SpringMVC4.3以后加入，可以用于修饰方法和参数。出现在方法之前，先执行，它可以修饰没有返回值的方法，也可以修饰有具体返回值的方法。 出现在方法上，获取指定的数据给参数取值。 更通俗的来讲，就是说在某个方法响应之前，另一个方法上有@ModelAttribute注解的会优先响应，例如可以对传入的参数是否合法，是否有空值，可以做一个检测，防止崩溃。 对以下例子执行顺序是：show(),testModelAttribute()。 1&lt;a href=&quot;anno/testModelAttribute&quot;&gt;提交&lt;/a&gt; 123456789@RequestMapping(&quot;/testModelAttribute&quot;)public String testModelAttribute() &#123; System.out.println(&quot;testModelAttribute&quot;); return &quot;success&quot;;&#125;@ModelAttributepublic void show() &#123; System.out.println(&quot;show&quot;);&#125; @SessionAttribute可以在session域中增加，查找，删除数据。将一些值放到session域中的好处就是可以跨页面获取到这些值。作用于类之上。 这里如果在某个jsp页面需要使用EL表达式获取到session域中的值，默认是忽略的，需要设置成isELIgnored=”false”不忽略。 success.jsp 123456789101112&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; isELIgnored=&quot;false&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h2&gt;跳转页面成功&lt;/h2&gt; $&#123;sessionScope&#125;&lt;/body&gt;&lt;/html&gt; 123&lt;a href=&quot;anno/testAddModelAttribute&quot;&gt;增加&lt;/a&gt;&lt;a href=&quot;anno/testFindModelAttribute&quot;&gt;查找&lt;/a&gt;&lt;a href=&quot;anno/testDelModelAttribute&quot;&gt;删除&lt;/a&gt; 12345678910111213141516171819202122232425262728293031/** * 增加 * @param model * @return */ @RequestMapping(&quot;/testAddModelAttribute&quot;) public String testAddModelAttribute(Model model) &#123; model.addAttribute(&quot;msg&quot;,&quot;srcrs&quot;); return &quot;success&quot;; &#125;/** * 查找 * @param modelMap * @return */@RequestMapping(&quot;/testFindModelAttribute&quot;)public String testFindModelAttribute(ModelMap modelMap) &#123; System.out.println(modelMap.get(&quot;msg&quot;)); return &quot;success&quot;;&#125;/** * 删除 * @return */@RequestMapping(&quot;/testDelModelAttribute&quot;)public String testDelModelAttribute(SessionStatus status) &#123; status.setComplete(); return &quot;success&quot;;&#125;]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringMVC入门程序]]></title>
    <url>%2F%2Fposts%2F202004241.html</url>
    <content type="text"><![CDATA[SpringMVC在三层架构的位置表现层表现层业务层业务层持久层持久层SpringMVCSpringMVCSpringSpringMyBatisMyBatis浏览器浏览器Servlet,控制器Servlet,控制器Service,业务逻辑处理Service,业务逻辑处理DAO,数据访问层DAO,数据访问层数据库数据库JavaBean,数据模型JavaBean…JSP,视图JSP,视图ServiceServiceDaoDaoViewer does not support full SVG 1.1 SpringMVC基于组件方式执行流程浏览器浏览器前端控制器DIspatcherServlet接受用户请求响应前端控制器DIspatcherServlet…处理器映射器HandlerMapping处理器映射器&#xa;HandlerMapping处理器适配器HandlerAdapter执行Handler处理器适配器HandlerAdapter…Handler处理器平常也叫做ControllerHandler处理器平常也叫做Controller1.Request请求1.Request请求2.请求查找Handler2.请求查找Handler3.返回一个执行链3.返回一个执行链4.请求适配器执行4….5.执行5.执行6.返回ModelAndView6.返回ModelAndView7.返回ModleAndView7….8.请求进行视图解析8….视图解析器ViewResolver视图解析器&#xa;ViewResolver视图jspFreemarkerExcelPdf视图jsp…9.返回View9….10.视图渲染将模型数据填充到Request域10….11.Response响应11.Response响应Viewer does not support full SVG 1.1 入门程序编写要求，通过超链接从一个页面跳转到另一个页面 1.首先需要安装好tomcat，IDEA商业版（破解的jar包内带教程），maven。 2.在IDEA中创建一个maven版的web项目 此时项目目录结构为 1234567891011.├── .idea├── src│ └── main│ └── webapp│ ├── WEB-INF│ │ └── web.xml│ └── index.jsp ├── target├── pom.xml└── SpringMVC.iml 3.在main目录中创建java文件夹和resources文件夹，在java中可以存放写的业务代码，在resources文件夹中可以存放静态资源文件。 1234567891011121314151617181920.├── .idea├── src│ ├── main| ├── java| | └── cn| | └── demo| | └── controller| | └── Hello.java| ├── resources| | └── springmvc.xml│ └── webapp│ ├── WEB-INF| | ├── pages| | | └── success.jsp│ │ └── web.xml│ └── index.jsp ├── target├── pom.xml└── SpringMVC.iml 创建这么多的文件夹与文件 pom.xml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!-- 版本统一，在properties标签中添加如下内容--&gt;&lt;properties&gt; &lt;spring.version&gt;5.2.4.RELEASE&lt;/spring.version&gt;&lt;/properties&gt;&lt;!-- 在dependencies添加相应jar包的依赖--&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt; &lt;version&gt;4.0.1&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt; &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt; &lt;version&gt;2.3.1&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-beans&lt;/artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;&lt;/dependency&gt; SpringMVC只是Spring的一个模块，还得需要Spring的支持，其次web，mvc，jsp，servlet包都需要加上。 Hello.java这是一段简单的业务代码。 123456789101112@Controller@RequestMapping(path = &quot;/hello&quot;)public class Hello &#123; @RequestMapping(path = &quot;/sayhello&quot;) public String sayHello() &#123; System.out.println(&quot;Hello World&quot;); System.out.println(&quot;你好&quot;); return &quot;success&quot;; &#125;&#125; :::tip@Controller 将Hello类交给Spring管理 @RequestMapping(path = “/hello”) 映射路径，可以访问到这个类。 @RequestMapping(path = “/sayhello”) 映射路径，可以访问到这个方法。::: 注解如何生效？ 在Spring中如果想使用注解，让Spring管理对象，得需要一个xml得配置项，这里得自己创建。 方法如何被执行？ 如何知道有success.jsp?并跳转到它？ 这就得需要视图解析器了。 springmvc.xml12345678910111213141516171819202122232425&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;!-- 开启注解扫描 --&gt; &lt;context:component-scan base-package=&quot;cn.demo.controller&quot;/&gt; &lt;!-- 视图解析器对象--&gt; &lt;bean id=&quot;internalResourceViewResolver&quot; class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt; &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/pages/&quot;/&gt; &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt; &lt;/bean&gt; &lt;!-- 开启SpringMVC注解支持 --&gt; &lt;mvc:annotation-driven/&gt;&lt;/beans&gt; 注解扫描，后面的cn.demo.controller是扫描的范围，只有在这个范围内写了注解才能被解析到。 视图解析器，可以找到相应的jsp文件。 web.xml看前面的SpringMVC组件执行流程，浏览器首先就应该改和前端控制器打交道，前端控制器也是首脑。入口是Servlet。 1234567891011121314151617&lt;!-- 前端控制器 --&gt; &lt;servlet&gt; &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt; &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt; &lt;!-- 将xml配置文件加载进来 --&gt; &lt;init-param&gt; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt; &lt;param-value&gt;classpath:springmvc.xml&lt;/param-value&gt; &lt;/init-param&gt; &lt;!-- Servlet默认第一次发请求时创建，修改为启动即被创建 --&gt; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt; &lt;/servlet&gt; &lt;!-- 在任何路径的请求都将被Servlet拦截 --&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;dispatcherServlet&lt;/servlet-name&gt; &lt;url-pattern&gt;/&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; index.jsp123456789101112&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h2&gt;首页&lt;/h2&gt; &lt;a href=&quot;hello/sayhello&quot;&gt;入门&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; 点击入门将触发Hello类中的sayhello方法。 success.jsp123456789&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;成功！！！&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt; 跳转成功后的页面。 下面配置好tomcat就可以正常运行了。 解决IDEA控制台中文乱码在IDEA控制台中，Tomcat打印的log中文是乱码，看到控制台就是UTF-8格式，Tomcat默认也是UTF-8格式，不知道为啥，最后打开Tomcat的安装目录中\conf\logging.properties文件，找到java.util.logging.ConsoleHandler.encoding = UTF-8，将其后面的UTF-8修改为GBK即可。 后话整体的思路就是，在pom.xml中配置好所需要jar包，，然后在web.xml中配置前端控制器（DispatcherServlet），创建业务类，交给Spring管理，注解如何生效？创建Spring的xml配置，通过context:component-scan扫描所在范围内的java文件中的注解，使Spring可以管理这个类，@RequestMapping可以映射到相应的方法使之执行。跳转页面，方法返回一个字符串，视图解析器就可以根据这个字符串找到相应的jsp文件，但是需要指定这个jsp文件在哪里。 参考链接idea tomcat控制台乱码问题，终于解决了 SpringMVC课程]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[当今社会]]></title>
    <url>%2F%2Fposts%2F202004221.html</url>
    <content type="text"><![CDATA[:::tip每一次，我们以为自己打破了监狱的高墙、迈向自由的前方，其实只是到了另一间更大的监狱，把活动范围稍稍加以扩大。::: 好烦啊，还有那么多东西都不会，看见一个陌生的词都要去查一下是什么意思，看了半天都不理解，捉急。 最近发生的一些事，让我越来越不理解这是怎样的一个社会，怎样的一个世界，就拿原阳县的事来说，为什么事发工地没有取得相关的证件就敢施工，而老百姓少了一个证件都别想动工，有些地方监管部门选择性执法，拿着人民发的工资，却成天坐办公室，不去履行自己的职责，我觉得这样的政治制度是有问题的。 昨天应该是小孩下葬的日子，部分记者想去采访一下，却被不明身份的人阻拦，并把手机抢去，今天看到手机被寄回来了，但是却被刷机。不知道里面有什么猫腻，事件已经暴漏在公众眼下，仍敢如此，可想公众不知道，又会怎样。 我就想，当我们普通老百姓人身安全或者财产受到侵犯时，法律却不能给我们很好的解决，或者不能解决，而是比谁拳头硬，我觉得这是一个国家的悲哀。现在才感到习主席“打黑除恶”是多么的正确，当自己遇到这样的人时。钱不自己去挣，总想着从别人身上去“抢”，穿着人模狗样，分明不是个人。我也算看明白了，所谓dang员，干部，老板，不做过多评论。 报警？对不起，你这属于扯皮，你们自己协商。上访举报吧，难以获得记者那样的关注度，也不一定领导看得见，时效也长，不能及时得到解决。从网上特意关注过这些事情，发现好多啊，叫天天不应，叫地地不灵，假想自己走到这一步该如何呢？ 我觉得爱国需要有新定义，不要总是说什么国泰民安，网络的发展，看到了这个社会还是存在的很多的问题的，有很多事情，闹大了才得到解决，然而大了就不好解决，小孩要从小管。社会，国家，多多留意一些小问题，才会更美好。 弟弟上学发烧，今天晚上刚带回来，特别时期，不比以前，学校要求去医院检查一下，开个证明，这样也好。年轻人爱出威风，穿个薄褂子，气温早晚温差大，唉。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看了一点SpringBoot的思考]]></title>
    <url>%2F%2Fposts%2F202004181.html</url>
    <content type="text"><![CDATA[:::tip先开始就准备看SpringBoot的，但是看到介绍说需要先了解Spring要不然可能会看不懂，所以就简单过了一遍Spring，直到今天才开始看SpringBoot，仅仅看了一点，我就感到惊喜不已。::: 简述过了一遍Spring，我知道了Spring有两大特性，IOC和AOP，一个是反转控制，一个是面向切面编程，反转控制的意思是，将原本自己创建对象的权力交给Spring，自己不需要管对象是怎么创建的，直接拿来用就可以了，面向切面编程，目的是将业务代码和非业务代码分离，一些打印、输出等代码不应和业务代码混合到一起，单独拿出来，放到一个切面类中。 说了这些其实我也整的不是很明白，我不知道对象交给Spring管理的优点，我知道当需要对象是可以直接从Spring中去拿，不用管这个对象是在哪个包中，直接拿来用就可以了，可能平常写的代码都太短还体会不到成百上千上万会怎么样，通过简单的xml配置，就可以将一个类中的字面量都初始化，一个对象也可以通过引用的方式初始化，很方便。很重要的一点就是注解。 通过短短的一条注解，就可以把这个类交给Spring去管理，我很好奇这个是如何实现的，我知道Spring底层创建对象的方式是基于反射，注解是如何被识别被加载，我不懂。偶然间，我想到了上学期期末java结业作业的一道题，里面涉及到了注解，那时候我还不知道这个叫注解，正是通过注解初始化对象，那时候我还不明白为什么要这样，就用通常的方式不美吗？但是，我还是很认真的看了那道题，虽然用了很长的时间，但是解决了，后来老师说，这个搞明白对以后些框架有用去，直到今天我才发现谜底在这。 SpringBoot今天才开始看，仅仅看了一点，会创建SpringBoot项目并开始运行，访问网址，返回结果，我就感到惊奇不已。要知道之前创建javaweb，光是环境我都好长时间没整明白，tomcat本地还需要安装，配置，但是SpringBoot将这一套东西都整合到了一起tomcat环境也不需要配置了，大大减少了开发流程，后边估计还会有更多的东西都可以直接拿来用，不用配置环境，要知道配置环境多少人都踩了坑。 用的时候我也有一丝担忧，那就是用这些框架确实很舒服，以后就不想看一些底层的东西了，我觉得这个很危险。就比如铁锨过去是翻土的一个好工具（现在基本都是牛或者机器翻土吧），用它也可以铲沙，但是遇到硬的土质就不太管用了，所以人们又根据铁锨发明了锄头。工具的出现就是更方便高效的生活，但是不适应的时候，就得需要改变了，得知道原理才知道如何去改变这些东西，假如不知道铁锨得那个棍是怎么做的，锄头那个棍不也做不成，如何能将头和棍紧紧的套在一起，也不知道。 所以，我希望自己能够在享受框架便利的同时也能够多去了解一下，这个是咋做的，咋实现的。 现在好好分析上学期的一道大作业。 实现类似Spring中的反射依赖注入请补充附件中的BeanFactory代码，完成附件里面AnimalCenterTest的正确运行。 12345package zoo;public interface Animal &#123; public void move();&#125; 123456789101112131415161718192021package zoo;public class AnimalCenter &#123; //需要将注解的值产生实例，然后注入到first变量中 @Inject(value=&quot;zoo.Tiger&quot;) private Animal first; //需要将注解的值产生实例，然后注入到second变量中 @Inject(value=&quot;zoo.Bird&quot;) private Animal second; public void firstShow() &#123; first.move(); &#125; public void secondShow() &#123; second.move(); &#125;&#125; 12345678910package zoo;public class AnimalCenterTest &#123; public static void main(String[] args) throws Exception &#123; AnimalCenter ac = BeanFactory.getBean(AnimalCenter.class); ac.firstShow(); ac.secondShow(); &#125;&#125; 1234567891011121314151617181920212223package zoo;import java.lang.reflect.Field;public class BeanFactory &#123; public static &lt;Q&gt; Q getBean(Class&lt;Q&gt; clazz) &#123; Q result = null; //请补充 //首先产生一个clazz的实例对象 //请补充 //查找所有的成员变量，并遍历 //如果有成员变量带有Inject注解，请采用反射办法获取到注解的值 //然后产生注解值所对应的实例对象，并赋值给这个成员变量 //如果该成员变量是private，需要用反射办法设置为可以访问的 return result; &#125;&#125; 12345678910package zoo;public class Bird implements Animal&#123; public void move() &#123; System.out.println(&quot;Bird: I can fly high&quot;); &#125;&#125; 12345678910package zoo;import java.lang.annotation.*;@Retention(RetentionPolicy.RUNTIME)@Target(ElementType.FIELD)//注入的注解，用于指定注入类型public @interface Inject &#123; public String value();&#125; 123456789package zoo;public class Tiger implements Animal&#123; public void move() &#123; System.out.println(&quot;Tiger: I can run fast&quot;); &#125;&#125; 当时给的代码就是这样，如何补充代码也都有注释，只知道一点点反射，却不知道如何通过反射查看是否有注解。 这里需要注意几个问题 如何通过反射创建一个实例对象？ :::tipnewInstance();::: 如何通过反射获取实例对象的所有成员变量？ :::tipgetClass().getDeclaredFields();::: 反射如何操纵私有变量或方法 :::tipsetAccessible(true);::: 如何根据反射判断成员是否带有注解？ :::tipgetAnnotation();::: 补充完代码1234567891011121314151617181920212223242526272829package zoo;import java.lang.reflect.Field;public class BeanFactory &#123; public static &lt;Q&gt; Q getBean(Class&lt;Q&gt; clazz) &#123; Q result = null; try &#123; //创建clazz的实例对象 result = clazz.newInstance(); //获取当前实例对象的所有成员方法 Field[] filed = result.getClass().getDeclaredFields(); for(Field f : filed) &#123; //设置私有变量也可以操纵 f.setAccessible(true); //判断当前成员变量是否有此注解 Inject inject = f.getAnnotation(Inject.class); //根据注解里面的值反射得到实例对象 Object obj = Class.forName(inject.value()).newInstance(); //result里面的成员变量f的值设置为obj f.set(result, obj); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return result; &#125;&#125; 依赖注入实现原理大概就是这样的吧，但是少量的代码时体会不到它的好处的，我就没咋体会到，相反会觉得复杂，明明有简单的方法不用，要用这个复杂的，慢慢体会吧。SpringBoot是初尝它的好，还要一步步挖掘^_^。 气死我了，早该不用Typora编辑器了，害得我找了多久都不知道哪里错了，可能这个编辑器内部带有格式，总是转html失败，立马卸载。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[冷清]]></title>
    <url>%2F%2Fposts%2F202004151.html</url>
    <content type="text"><![CDATA[前两天感觉还挺热闹的，这两天又冷清下来了，家里有贴瓷砖的，没事就是打个招呼，烧开水，早上不到五点家里就剩我还没起床了。 上午9点多来个收废品的，正好可以把家里的破烂收拾收拾，一会的功夫就把纸箱子，空瓶啥的都清理了。然后看到了电子秤，我就站了上去，发现我还瘦了6斤，我觉得是秤有问题，一斤三毛，就几斤也不在乎了。放上去之后，秤显示的是21.6，算成22吧，22乘以三毛就是六块六，算七块吧，我心想这么一大堆才卖7块钱，真不值钱。 进屋后，我想到了我秤的时候是公斤，22是公斤啊，怎么能乘以3毛，少了一半，一看还没走，我就说，不对，这个账有问题，你那是公斤秤，少算了一半，又给了剩余的一半。我的反应是真慢啊，像我们方言说就是晕，要是再反应慢点，别人走了，就泡汤了，事后别人还说这孩真傻。^_^ 与陌生人交往，还是要多用点脑子，防宰，还是社会经验不足。我如果不是秤一下自己，很有可能当做公斤卖了。 上午10点淘米，先把米饭煮好，中午炒菜就行了，我还不会。下午五点多加热剩下的米饭，将近六点半我妈才回来，把剩菜热一热，凑合一顿。第二天又是早早地就出门了，如果不说我都不知道什么时候。 马上就到五月份了，过的可真快，开学估计也要到五月之后了，从电视中看到已经开学了的，学生上课戴口罩，老师戴口罩，学生带着不说话还好点，老师一堂课下来如果不换几个口罩都不知道成啥样了，虽然是特殊时期，我觉得这并不妥。 最近看了好多关于朱镕基的视频，看了百度百科和维基百科对他的介绍，只能说中国政治是很敏感的。我很佩服的是他在很重要的场合都能脱稿，能谈笑风生，例如访美的时候，我弟弟说他一定记了很久，我不然，我觉得这就是一个人长期磨炼，加上素质的结果，他讲的话都很通俗，能听得懂，愿意听，时不时还开个玩笑。近代中国经济的告诉发展，他的功劳很大。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代理模式]]></title>
    <url>%2F%2Fposts%2F202004141.html</url>
    <content type="text"><![CDATA[:::tipAOP是Spring框架的两大特性之一，面向切面编程，实现原理是代理模式，有点不太理解代理模式，理一理。::: 什么是代理模式代理模式，简单的来说就是中转站。例如省长要开会，不会把我们老百姓叫过去，而是市长过去，市长了解之后又给县长开；一个人要买房，然后找中介，卖方的老板并不直接与买家交流，而是通过中介传达意愿交易，最终把房卖掉；媒婆（并不一定女的），通常都是两家都比较熟悉的人，要结婚办事，一些不好说的话，就是通过媒婆去传达；vpn上网，本地连接网络代理服务器，不直接与互联网进行数据交换，而是通过代理。 «interface»Internet+ method(type): typeNetWork+ method(type): typeUseUseProxyNetWork+ netWork: NetWork+ method(type): typeViewer does not support full SVG 1.1 情景：数学计算器有两个要求 执行加减乘除运算 日志：在程序执行期间追踪正在发生的活动 需要实现加减乘除四个方法，并且在程序运行的过程需要打印日志（调用方法名，传递的参数，计算结果等） 接下来用以下各种各种方式实现。 普通实现123456789public class App &#123; public static void main( String[] args ) &#123; MathI mathI = new MathImpl(); int result = mathI.sub(1,2); System.out.println(result); &#125;&#125; 123456public interface MathI &#123; int add(int i,int j); int sub(int i,int j); int mul(int i,int j); int div(int i,int j);&#125; 12345678910111213141516171819202122232425262728293031323334public class MathImpl implements MathI&#123; @Override public int add(int i, int j) &#123; System.out.println(&quot;method:add,arguments:&quot;+i+&quot;,&quot;+j); int result = i + j; System.out.println(&quot;method:add,result:&quot;+result); return result; &#125; @Override public int sub(int i, int j) &#123; System.out.println(&quot;method:sub,arguments:&quot;+i+&quot;,&quot;+j); int result = i - j; System.out.println(&quot;method:sub,result:&quot;+result); return result; &#125; @Override public int mul(int i, int j) &#123; System.out.println(&quot;method:mul,arguments:&quot;+i+&quot;,&quot;+j); int result = i * j; System.out.println(&quot;method:mul,result:&quot;+result); return result; &#125; @Override public int div(int i, int j) &#123; System.out.println(&quot;method:div,arguments:&quot;+i+&quot;,&quot;+j); int result = i / j; System.out.println(&quot;method:div,result:&quot;+result); return result; &#125;&#125; 一个计算接口中，定义了加减乘除四个方法，计算器实现计算类，并且在运行的时候打印了所调用的方法，传入的参数，计算的结果，每个方法体里面的结构都是差不多的，只是调用不同的方法，结果，标识有些不同。业务代码与非业务代码也混到了一起，显得混乱，我看着还挺整齐的。 静态代理实现123456789public class App &#123; public static void main( String[] args ) &#123; ProxyUtil proxy = new ProxyUtil(new MathImpl()); int result = proxy.sub(1,2); System.out.println(result); &#125;&#125; 123456public interface MathI &#123; int add(int i,int j); int sub(int i,int j); int mul(int i,int j); int div(int i,int j);&#125; 1234567891011121314151617181920212223242526public class MathImpl implements MathI&#123; @Override public int add(int i, int j) &#123; int result = i + j; return result; &#125; @Override public int sub(int i, int j) &#123; int result = i - j; return result; &#125; @Override public int mul(int i, int j) &#123; int result = i * j; return result; &#125; @Override public int div(int i, int j) &#123; int result = i / j; return result; &#125;&#125; 123456789101112131415161718192021222324252627282930313233343536373839public class Proxy implements MathI&#123; public MathImpl mathImpl; public Proxy(MathImpl mathImpl) &#123; this.mathImpl = mathImpl; &#125; @Override public int add(int i, int j) &#123; System.out.println(&quot;method:add,arguments:&quot;+i+&quot;,&quot;+j); int result = mathImpl.add(i,j); System.out.println(&quot;method:add,result:&quot;+result); return result; &#125; @Override public int sub(int i, int j) &#123; System.out.println(&quot;method:sub,arguments:&quot;+i+&quot;,&quot;+j); int result = mathImpl.sub(i,j); System.out.println(&quot;method:sub,result:&quot;+result); return result; &#125; @Override public int mul(int i, int j) &#123; System.out.println(&quot;method:mul,arguments:&quot;+i+&quot;,&quot;+j); int result = mathImpl.mul(i,j); System.out.println(&quot;method:mul,result:&quot;+result); return result; &#125; @Override public int div(int i, int j) &#123; System.out.println(&quot;method:div,arguments:&quot;+i+&quot;,&quot;+j); int result = mathImpl.div(i,j); System.out.println(&quot;method:div,result:&quot;+result); return result; &#125;&#125; 这种实现方式看起来并没有改进多少，相反代码更加多了，但是使MathImpl的业务代码和非业务代码隔离了，也算是进步了吧。 JDK动态代理12345678910public class App &#123; public static void main( String[] args ) &#123; ProxyUtil proxy = new ProxyUtil(new MathImpl()); MathI math = (MathI) proxy.getProxy(); int result = math.add(1,2); System.out.println(result); &#125;&#125; 123456public interface MathI &#123; int add(int i,int j); int sub(int i,int j); int mul(int i,int j); int div(int i,int j);&#125; 1234567891011121314151617181920212223242526public class MathImpl implements MathI&#123; @Override public int add(int i, int j) &#123; int result = i + j; return result; &#125; @Override public int sub(int i, int j) &#123; int result = i - j; return result; &#125; @Override public int mul(int i, int j) &#123; int result = i * j; return result; &#125; @Override public int div(int i, int j) &#123; int result = i / j; return result; &#125;&#125; 123456789101112131415161718192021222324252627282930import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;import java.util.Arrays;public class ProxyUtil &#123; public MathImpl mathImpl; public ProxyUtil(MathImpl mathImpl) &#123; this.mathImpl = mathImpl; &#125; public Object getProxy() &#123; //第一个参数类加载器。用来加载代理对象所属类。 ClassLoader loader = this.getClass().getClassLoader(); //第二个参数interfaces,目标对象实现所有的接口的class对象。 Class[] interfaces = mathImpl.getClass().getInterfaces(); //第三个参数代理对象如何实现目标对象的方法。 return Proxy.newProxyInstance(loader, interfaces, new InvocationHandler() &#123; @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123; System.out.println(&quot;method:&quot;+method.getName()+&quot;,args:&quot;+ Arrays.toString(args)); Object obj = method.invoke(mathImpl,args); System.out.println(&quot;method:&quot;+method.getName()+&quot;,result:&quot; + obj.toString()); return obj; &#125; &#125;); &#125;&#125; cglib动态代理CGlib动态代理和JDK动态代理相区别的地方就是，CGlib必须要包含继承，JDK必须包含接口实现。 AspectJ实现AspectJ并不是Spring自带的，是实现AOP的最好实现方式。 首先在pom.xml中添加以下依赖 12345678910111213141516171819202122232425262728&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;5.2.4.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.aspectj&lt;/groupId&gt; &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt; &lt;version&gt;1.9.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt; &lt;version&gt;5.2.4.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;cglib&lt;/groupId&gt; &lt;artifactId&gt;cglib&lt;/artifactId&gt; &lt;version&gt;3.3.0&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aop&lt;/artifactId&gt; &lt;version&gt;5.2.4.RELEASE&lt;/version&gt;&lt;/dependency&gt; 然后再创建applicationContext.xml，内容如下 123456789101112131415161718&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;!--开启aspectJ自动代理--&gt; &lt;aop:aspectj-autoproxy /&gt; &lt;context:component-scan base-package=&quot;org.maven.spring&quot;&gt; &lt;/context:component-scan&gt;&lt;/beans&gt; 1234567891011public class App &#123; public static void main( String[] args ) &#123; ApplicationContext ac = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;); MathI mathI = ac.getBean(&quot;mathImpl&quot;,MathI.class); int result = mathI.add(1,2); System.out.println(result); &#125;&#125; 123456public interface MathI &#123; int add(int i,int j); int sub(int i,int j); int mul(int i,int j); int div(int i,int j);&#125; 123456789101112131415161718192021222324252627@Componentpublic class MathImpl implements MathI&#123; @Override public int add(int i, int j) &#123; int result = i + j; return result; &#125; @Override public int sub(int i, int j) &#123; int result = i - j; return result; &#125; @Override public int mul(int i, int j) &#123; int result = i * j; return result; &#125; @Override public int div(int i, int j) &#123; int result = i / j; return result; &#125;&#125; 123456789101112131415161718192021222324252627//标识为一个切面@Component@Aspectpublic class MyloggerAspect &#123; //切面里面的方法就叫做通知 //@Before将方法指定为前置通知，里面些切入表达式 //通知需要关注切入点 //当通知执行时就会把方法的一些信息添加到JoinPoint中 @Before(value = &quot;execution(* org.maven.spring.*.*(..))&quot;) public void beforeMethod(JoinPoint joinPoint) &#123; //获取方法的参数 Object[] args = joinPoint.getArgs(); //getSignation将切面中的名字进行封装 //获取方法名 String methodName = joinPoint.getSignature().getName(); System.out.println(&quot;method:&quot;+methodName+&quot;,args:&quot;+ Arrays.toString(args)); &#125; //返回通知 //可用returning设置接受方法的变量名 //在方法的参数中也应该改添加上 @AfterReturning(value = &quot;execution(* org.maven.spring.*.*(..))&quot;,returning = &quot;result&quot;) public void afterReturning(JoinPoint joinPoint , Object result) &#123; Object[] args = joinPoint.getArgs(); String methodName = joinPoint.getSignature().getName(); System.out.println(&quot;method:&quot; + methodName+&quot;,result:&quot; + result); &#125;&#125; 切入点表达式:::tip通常的形式 1execution(public int org.maven.spring.MathImpl.add(int,int)) 可以改写成 1execution(* org.maven.spring.*.*(..)) 第一个代表任意返回值任意类型第二个代表此包下任意类第三个*代表任意方法两个点代表任意参数::: 切入点简化方式:::tip@Pointcut(value = “execution(* org.maven.spring..(..))”)public void proxy(){} @Before(value=”proxy()”)public void auto(){}::: 五种通知类型 @Before作用于方法执行之前 :::tip 123456789@Before(value = &quot;execution(* org.maven.spring.*.*(..))&quot;)public void beforeMethod(JoinPoint joinPoint) &#123; //获取方法的参数 Object[] args = joinPoint.getArgs(); //getSignation将切面中的名字进行封装 //获取方法名 String methodName = joinPoint.getSignature().getName(); System.out.println(&quot;method:&quot;+methodName+&quot;,args:&quot;+ Arrays.toString(args));&#125; ::: @After作用于finally语句块 :::tip 1234@After(value = &quot;execution(* org.maven.spring.*.*(..))&quot;)public void after() &#123; System.out.println(&quot;后置通知&quot;);&#125; ::: @AfterReturning作用于方法执行之后 :::tip 123456@AfterReturning(value = &quot;execution(* org.maven.spring.*.*(..))&quot;,returning = &quot;result&quot;)public void afterReturning(JoinPoint joinPoint , Object result) &#123; Object[] args = joinPoint.getArgs(); String methodName = joinPoint.getSignature().getName(); System.out.println(&quot;method:&quot; + methodName+&quot;,result:&quot; + result);&#125; ::: @AfterThrowing作用于catch块 :::tip 12345//可捕捉是什么错误，用throwing@AfterThrowing(value = &quot;execution(* org.maven.spring.*.*(..))&quot;,throwing = &quot;e&quot;)public void afterThrowing(Exception e) &#123; System.out.println(&quot;有异常&quot;+e);&#125; ::: @Around可实现以上四种 :::tip 123456789101112131415@Around(value = &quot;execution(* org.maven.spring.*.*(..))&quot;)public Object around(ProceedingJoinPoint joinPoint) &#123; Object result = null; try &#123; //前置通知 result = joinPoint.proceed();//执行方法 //返回通知 return result; &#125; catch (Throwable e) &#123; //异常通知 &#125; finally &#123; //后置通知 &#125; return -1;&#125; ::: spring框架之xml实现applicationContext.xml配置 1234567891011121314151617181920212223&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;context:component-scan base-package=&quot;org.maven.spring&quot;&gt;&lt;/context:component-scan&gt; &lt;aop:config&gt; &lt;aop:aspect ref=&quot;myloggerAspect&quot;&gt; &lt;aop:before method=&quot;before&quot; pointcut=&quot;execution(* org.maven.spring.*.*(..))&quot;/&gt; &lt;aop:after-returning method=&quot;afterReturning&quot; pointcut=&quot;execution(* org.maven.spring.*.*(..))&quot; returning=&quot;result&quot; /&gt; &lt;/aop:aspect&gt; &lt;/aop:config&gt;&lt;/beans&gt; 除了切面代码有所改动，其余与AspectJ实现相同。 123456789101112@Componentpublic class MyloggerAspect &#123; public void before(JoinPoint joinPoint) &#123; String name = joinPoint.getSignature().getName(); Object[] args = joinPoint.getArgs(); System.out.println(&quot;method:&quot;+name+&quot;,args:&quot;+Arrays.toString(args)); &#125; public void afterReturning(JoinPoint joinPoint, Object result) &#123; String name = joinPoint.getSignature().getName(); System.out.println(&quot;method:&quot;+name+&quot;,result:&quot;+result); &#125;&#125; 参考连接尚硅谷spring]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[真诚的希望]]></title>
    <url>%2F%2Fposts%2F202004091.html</url>
    <content type="text"><![CDATA[今天闲来无事，又去看了一下抽奖程序，发现是因为图片的路径没找到，查了一下有很多程序，本地运行可以，在服务器就会出现很多的问题，文件找不到什么的，然后我就把本地的验证图片也放到项目中去，相当于初始化了一下，然后就成功了，不知道为什么。之前说的，因为在外网有可能图片加载不进来的说法是错误的，本地用全局代理，虽然有点慢也是可以的，之前暴力破解，平均好几个小时，只能抽一个号码，太浪费github的资源了（印证了不是自己的不心疼^_^）。好在可以抽奖了，这次运行了11个号码只需要不到十分钟时间，还可以。 好开心，一直都以为需要一个服务器，又能白嫖了^_^。 今天把这个一切都弄好之后，很少出门的我也应允去超市，头发从过年到现在都没剃，也两天没洗了，穿着拖鞋，干活穿的衣服，胡子也没刮，从前最不喜欢穿的校服也穿在身上，也敢出门，在过去这是不可想象的。我觉得代码让我心里很满足，让我不惧怕外界的一切，我想这也是一种成长吧。弄不出来我也会很不高兴，但是过一段时间又忍不住再看看，爱恨交接。 看到github上类似的项目不多，第一个有30多个Star，而我一个也没有，突然之间我也想有Star了，哪怕仅仅是一个，我也想做出让别人认可的，好玩的。 然后我就在平常玩免流的地方，发收集手机号的问卷，太可怜了还没有服务器，觉得平常用的少就没有买，在贴吧也发帖子，不知道到时候能够收集到多少人，此前我已经把全班的联通手机号都加进来了（不知道好不好）。 代码开源，其实原理也很简单，我就是不知道如何识别验证码，起初用Tess4j识别，需要下载相应的数据包，不知道是还需要训练还是因为什么，识别率很低，即使是降噪二值化之后，那么清楚的图片就是识别不出来，后来就放置了一段时间，又捡起来，发现有的用百度API识别验证码，但是只能识别一些不加干扰的验证码，正好降噪二值化就可以去除干扰了，识别率很高，并且一个月有50000次，绝对够用了。 永远相信，美好的事情即将发生。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件开发模型]]></title>
    <url>%2F%2Fposts%2F202004071.html</url>
    <content type="text"><![CDATA[:::tip遇到关于软件开发过程模型的题，老是分不清它们各自的特点，加深一下记忆。::: vuepress自定义容器输入 12345678910111213::: tip这是一个提示:::::: warning这是一个警告:::::: danger这是一个危险警告::: 输出 ::: tip这是一个提示::: ::: warning这是一个警告::: ::: danger这是一个危险警告::: 自定义容器块的标题 12345::: tip 这是提示这是一个提示::: ::: tip 这是提示这是一个提示::: 瀑布模型（Waterfall Model）瀑布模型规定了它们自上而下、相互衔接的固定次序，如同瀑布的流水一样，顺流而下，自然就有一定的顺序性，是一种比较经典的模型，1970年就提出了。 可行性分析可行性分析项目计划项目计划需求分析需求分析设计设计编码编码测试测试运行维护运行维护Viewer does not support full SVG 1.1 模型特点 各个阶段具有顺序性，必须等上一个阶段完成才能进行下一阶段，每一阶段都有文档生成，下一阶段要依赖上一阶段，每个阶段规定文档需进行评审，但是缺点是，测试进行的太晚，基本上软件都要上线的时候才进行测试，并且，发现某一错误需要往上一层迭代寻找错误原因。 模型优点 是一种线性模型，必须严格按照规划推进，很安全，对于需求明确，无大的需求变更很适合。 适用场景 适用于需求明确，无大的需求变更。 RAD模型（Rap Application Development）RAD模型使针对瀑布模型测试介入太晚而做的改进。又叫做V模型，通过开发和测试同时进行的方式缩短开发周期。 用户需求用户需求需求分析需求分析概要设计概要设计详细设计详细设计编码和实现编码和实现单元测试单元测试验收测试验收测试集成测试集成测试系统测试系统测试Viewer does not support full SVG 1.1 模型特点 强调极短的开发周期，测试和开发同时进行，克服了瀑布模型测试介入过晚。 模型优点 是瀑布模型的一个改进，但是改进并不明显。 适用场景 适用于一些传统信息系统应用的开发。 快速原型模型（RapidPrototype Model）快速原型模型又叫做原型模型。原型是指模拟魔种产品的原始模型，例如做一个聊天软件，可以先做一个大致雏形，能实现基本功能。 模型特点 快速原型模型的第一步是建造一个快速原型，尽早的与用户进行交互，得到的反馈，再进一步细化待开发软件的需求。逐步调整原型，达到客户的要求。 模型优点 减少了软件需求不明确带来的风险，对于一些需求不明确的软件开发很适合。 适用场景 适用于需求不明确、小型或是交互型的系统、大型系统的某些部分。 增量模型（Incremental Model）增量模型是把代开大软件系统模块化，将每个模块作为一个增量组件，从而可以分批次地分析，设计，编码，测试。 分析分析设计设计编码编码测试测试分析分析设计设计分析分析设计设计编码编码测试测试编码编码测试测试测试测试分析分析设计设计编码编码增量1增量1增量2增量2增量3增量3增量4增量4Viewer does not support full SVG 1.1 模型特点 整个产品划分为一个个增量组件，每个增量组件又是使用瀑布模型开发。 模型优点 可以分批次地提交软件产品，使用户及时了解软件项目的进展，一个模块的错误，不会影响到整个软件开发系统，开发顺序灵活，各个模块之间不分先后关系。（技术风险比较大，要是事先没约定好，搞不好就组装不到一起） 适用场景 已有产品升级或者新版本开发，对完成期限严格要求，对开发领域比较熟悉而且已有原型系统。 演化模型（Evolution Model）通常软件开发需求不会一次性就确定好，所以软件就很难一次做成功。 需求分析需求分析软件设计软件设计软件测试软件测试软件实现软件实现软件部署软件部署第一次试验开发第一次试验开发需求分析需求分析软件设计软件设计软件测试软件测试软件实现软件实现软件部署软件部署第二次试验开发第二次试验开发用户试用原型，进行评价和反馈，对需求进行修订和增补用户试用原型，进行评价和反馈，对需求进行修订和增补Viewer does not support full SVG 1.1 模型特点 提倡两次开发，第一次是试验开发，得到试验性的原型产品，探索可行性，明确需求。第二次在此基础上获得较为满意的产品。 模型优点 明确用户需求，提高系统质量，降低开发风险。 适用场景 需求不清楚，小型或中型系统，开发周期短。 螺旋模型（Spiral Model）大型软件开发一个原型可能会达不到要求，螺旋模型将瀑布模型和演化模型结合起来，加入了两种模型均忽略风险的分析。 原型1原型1原型2原型2原型3原型3可运行原型可运行原型风险分析风险分析风险分析风险分析风险分析风险分析软件需求软件需求需求确认需求确认开发计划开发计划生存期计划生存期计划需求计划需求计划软件产品设计软件产品设计设计确认与验证设计确认与验证组装与测试组装与测试详细设计详细设计编码编码单元测试单元测试组装与测试组装与测试验收测试验收测试实现实现实施工程开发验证下一产品实施工程&#xa;开发验证下一产品风险分析评价方案识别风险清除风险风险分析评价方案识别风险清除风险…制定计划决定目标方案和限制制定计划决定目标方案和限制…客户评估客户评估Viewer does not support full SVG 1.1 模型特点 与瀑布模型相比，螺旋模型支持用户需求的动态变化，使用此模型需要开发者具有相当丰富的风险评估经验和专门知识（经验丰富的大牛） 模型优点 关注软件的重用，错误及时消除，质量放在首位，将开发阶段和维护阶段放到一起。 适用场景 螺旋模型墙掉风险分析，适用于庞大、复杂并且具有高风险的系统。 喷泉模型（Fountion Model）喷泉模型是专门针对面向对象软件开发方法而提出的。在面向对象方法中，对象既是对现实问题中实体的抽象，也是构造软件系统的基本元素，总体来说就是将现实问题抽象为一个对象。基于面向对象方法所带来的便利，对软件的分析、设计和实现按照迭代的方式交替进行，通过进化方式，使软件分阶段逐渐完整。 集成与测试阶段集成与测试阶段编码阶段编码阶段设计阶段设计阶段规格与说明阶段规格与说明阶段需求阶段需求阶段上线上线Viewer does not support full SVG 1.1 模型特点 以需求为动力，以对象作为驱动的模型，适合面向对象开发方式，开发过程具有迭代性，无间隙性，迭代意味着开发活动（分析，设计，编码，测试）常需要重复多次，无间隙指不存在明显分界。（一个人完成？） 模型优点 各个阶段没有明显界限，开发人员可以同步进行，提高开发效率，节省开发时间。（我觉得不太中） 适用场景 面向对象开发过程。 敏捷开发模型敏捷开发模型，使产品尽早的可以进入市场，到达用户手中，例如一个微信，起初只支持聊天功能，后续增加了视频，语音，支付功能，是现在常用的开发模型。 模型特点 把一个大项目分为多个互相联系，但是也可独立运行的小项目，分别完成，在此过程中软件一直处于可用状态。文档少。 模型优点 产品可以尽早让用户使用，功能逐步完善。 适用场景 适合小型项目 不太专业，演化模型包括了螺旋模型和快速开发模型等包含关系都给隔开了，它们两个都是不断重复原型，最终得到较完善产品，后来才知道^_^ 参考链接：软件工程中开发模型的优缺点及适用场合 几种常见软件过程模型的比较 软件开发模型之一个声音很好听的小姐姐^_^]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[少熬夜]]></title>
    <url>%2F%2Fposts%2F202004051.html</url>
    <content type="text"><![CDATA[最近好多人都说我头发白了，拿镜子照一照，果然发现了好几根白头发，头发留的长了，都暴露出来了，看来不能老是熬夜了，啥也没干不说，身体到时候都搞坏了。 在家待这么长时间，很是无聊，连审美都出现疲劳了，自从博客换到了vuepress，用的都是reco主题，大概又半年时间了吧，看着又觉得不好看了，所有的缺点都忍受不了了。 昨天就开始了转化，也费了一点小劲才改好，由于分类的关键字不一样，等于就是一个s的区别，一个支持一篇文章有多个分类，另一个只支持属于一个分类，所以就手动一个个改了一下。 还有个问题就是文中插入的svg图片，默认是不居中的，以前就是自定义设置居中，但是这个主题的图标都是svg的，居中之后图标也居中了，显然不是想要的，总不能每篇文章的svg图片我一个个去设置居中，仔细看了一下源代码，发现每篇文章的svg图片都是包含在p标签里的，这样设置p标签下的svg图片居中就可以了。 接下来就踩坑去了，但是我怀疑是这个主题的一个bug，文章放在别的地方在build的时候就会出现一个类似长度错误的原因，反正是找了好久都没发现这个错误，但是我认为这个不应是个错误，很搞不懂。不熟悉vue，那就只能遵守规则了。 这就让我知道了一个道理，遵守规则，至关重要，不能想当然，小到一个逗号。 现在的小孩真是幸福，我的小侄子，只有四五岁，想看奥特曼，我就在电脑上给他搜索，昨天由于全国取消娱乐活动，我还得架梯子，想当年我看奥特曼的时候都是趴在别人门缝里看，那时候我只知道一个迪迦，而他几乎所有的奥特曼都能叫得上名字来，很是厉害。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我身边的事]]></title>
    <url>%2F%2Fposts%2F202004031.html</url>
    <content type="text"><![CDATA[:::tip一个征文的活动，内容是谈谈这次疫情，关于自己身边发生的事，以及自己的感受和思考，我就把自己的情况简单的谈一谈吧。::: 还记得刚放寒假的时候，只是在网上看到了有几十例不知道由什么原因引起的肺炎，然后就有专家跳出来说，广大市民不要惊慌，一定不是非典，可以控制的住，正在查明原因，后来就是这样的情况了。 有个朋友在武汉医院实习，是在武汉“封城”的前一天赶回来了的，事后看到她发朋友圈说，很多同事辛苦一年，今年连家都回不成，被挡在了火车站的检票口，也许有的仅仅相差几分钟就可以上车，哪知，这一过就是几个月。 年年初一都要走家串门拜新年，唯独今年特殊，有的人迷信，我只说世事无常。大家都老老实实的呆在家里，我觉得，这些年的发展，我们的群众思想觉悟比以前高了，例如，前些年不让放炮，但是还是有很多人放炮，我就想不通，响几声有何意义，既危险还吵人。 但是这次，关乎每一个人生命健康的事，他们都做出了自己应该做的事情，这是社会的进步。 有段时间可能关注新闻太少了，我第一次看见李文亮医生的事，是在微信朋友圈中，正是他离世的那天，我感觉李文亮医生就好像是突然成了热点一样，然后就百度了一下，看了他的简历和事迹，我，说句实在话真的感到惋惜，即使素不相识。85后，04年参加高考，武大七年，11年参加工作，算到今年才九个年头，35岁正是风华正茂的年纪，天妒英才。 我敬佩他敢讲真话，但是先开始，却被当作了谣言，这是讲究证据的，究竟是谁验证的？或者有其难言之隐？我觉得中国缺乏真正的权威，现在自媒体这么盛行，很多都是不合格的，消息有的缺乏真实性，或者千篇一律，直到钟南山老院士挂帅，才有了权威，听着名字就感觉带着气势，百度一下才知有多牛。 疫情期间，谣言满天飞，这也是网络快速发展所带来的弊端，以前人群中的谣言，本是个马，人口相传，就变成了驴，但是影响的就是这一片，网络中就不一样了，影响太大了。就像我父亲所说，喜欢喝酒的人说喝酒能抗击病毒，喜欢抽烟的人说抽烟能抗击病毒，卖茶叶的人说喝茶能抗击病毒······ 这次疫情期间，由于开不了学，全国基本上都开展了网课，说实话，只要有自觉性，学的并不一定比在学校学的差，网上的学习资源太多了，但是就怕没有自觉性，比如我弟弟，网课开着，手里还在抱着手机，老师并不知道学生的听课情况，暴漏了网课的一些弊端，不能够很好的监督。 现在，全球都快突破100万了，真希望快点好起来。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有了政权]]></title>
    <url>%2F%2Fposts%2F202003311.html</url>
    <content type="text"><![CDATA[:::tip有了政权，就有了一切，没有政权，就丧失一切。::: 林彪说，有了政权，就有了一切，没有政权，就丧失一切。生产关系固然是基础，但是靠夺取政权来改变，靠夺取政权来发展。否则，就是经济主义······无产阶级拿到了政权，百万富翁，千万富翁，亿万富翁，一下子就可以打倒。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>闲谈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL触发器]]></title>
    <url>%2F%2Fposts%2F202003281.html</url>
    <content type="text"><![CDATA[:::tip实现数据库的动态完整性，能够避免一些不必要的错误。例如当一个人的学号修改了，则相应的选课表等基本表的学号也要修改。::: 示例1设计一个触发器当进行Teacher表更新元组时，使其工资只能升不能降。 12345678910111213create trigger teacher_chgsal#定义触发器的名字before updata of salary#触发条件on teacher#对应的表referencing new x, old y#定义变量for each row when(x.salary &lt; y.salary)begin raise_application_reeor(-20003,&#x27;invalid salary on updata&#x27;);#Oracle报错函数end; 示例2假设student(S#,Sname,SumCourse),SumCourse为该同学已学习的课程的门数，初始值为0，以后没选秀一门课都要对其增1。设计一个触发器自动完成上述功能。 12345678910111213create trigger sumc after insert #触发条件on sc#对应的表referencing new newi#定义变量for each rowbegin update student set SumCourse = SumCourse + 1 where S# = :newi.S#; #相应动作end; 示例3假设student(S#,Sname,Sage,Ssex,Sclass)中某一学生药变更其主码S#的值，如使其原来的98030101变更为99030101，此时sc表中该同学已选课的S#也需要随其改变。 12345678910111213create trigger updS##触发器名after update of S##触发条件on student#相应的表referencing old oldi,new newi#定义变量for each rowbegin update sc set S# = newi.S# where S# = :oldi.S#; #动作end 示例4假设student(S#,Sname,SumCouse)，当删除某一同学S#时，该同学的所有选课也都要删除。 12345678create trigger delS#after deleteon Studentreferncing old oldifor each rowbegin delete sc where S# = :oldi.S#;end; 示例5假设student(S#,Sname,SumCourse)，当删除某一同学S#时，该同学的所有选课中的S#都要置为空值。 12345678create trigger delS# after deleteon Studentreferencing old oldifor each rowbegin update sc set S# = Null where S# = :oldi.S#;end; 示例6假设Dept(D#,Dname,Dean)，而Dean一定是该系教师Teacher(T#,Tname,D#,Salary)中工资最高的教师。 12345678910create trigger upddean before update of Deanon Deptreferencing old oldi,new newifor each row when(dean not in ( select Tname from Teacher where D# = :newi.D# and salary &gt;= all (select salary from Teacher where D# = :newi.D#)))begin raise_application_error(-20003,&#x27;invalid Dean on update&#x27;);end;]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL子查询与视图]]></title>
    <url>%2F%2Fposts%2F202003271.html</url>
    <content type="text"><![CDATA[某一元素是否包含某一集合成员 基本语法 [not] in 示例1 列出选修了001号课程的学生的学号和姓名 123select S#,Sname From StudentWhere S# in (select S# From SC Where C# = &#x27;001&#x27;); 示例2 求既学过001号课程，又学过002号课程的学生的学号。 123select S# From SCWhere C# = &#x27;001&#x27; and S# in(select S# From SC Where C# = &#x27;002&#x27;); 示例3 列出没学过李明老师讲授课程的所有同学姓名。 1234select Sname From StudentWhere S# not in(select S# From SC,Course C,Teacher TWhere T.Tname = &#x27;李明&#x27; and SC.C# = C.C# and T.T# = C.T#); 某一个集合是否包含另一个集合 基本语法 some,all 示例1 找出工资最低的教师姓名 12select Tname From Teacher Where Salary &lt;= all (select Salary From Teacher); 示例2 找出001号课程成绩不是最高的所有学生的学号 12select S# From SCWhere C# = &#x27;001&#x27; and Score &lt; some (select Score From SC Where C# = &#x27;001&#x27;); 示例3 找出所有课程都不及格的学生姓名 1234select Sname From StudentWhere 60 &gt; all(select Score From SCWhere S# = Student.S#); 示例4 找出001号课程成绩最高的所有学生的学号 123select S# From SCWhere C# = &#x27;001&#x27; and Score &gt;= all(select Score From SC Where C# = &#x27;001&#x27;); 示例5 找出98030101号同学成绩最低的课程号 123select C# From SCWhere S# = &#x27;98030101&#x27; and Score &lt;= all(select Score From SC Where S# = &#x27;98030101&#x27;); 示例6 找出张三同学成绩最低的课程号 123select C# From SC,Student SWhere Sname = &#x27;张三&#x27; and S.S# = SC.S# andScore &lt;= all(select Score From SC Where S# = S.S#); 测试集合存在和不存在 基本语法 [not] Exists 示例1 检索选修了赵三老师主讲课程的所有同学姓名。 1234select DISTINCT Sname From StudentWhere exists(select * From SC,Course,Teacher Where SC.C# = Course.C# and SC.S# = Student.S# and Course.T# = Teacher.T# and Tname = &#x27;赵三&#x27;); 示例2 检索学过001号教师主讲的所有课程的所有同学姓名。 123456select Sname From Student Where not exists(select * From Course Where Course.T# = &#x27;001&#x27; and not exists(select * From SC Where SC.S# = Student.S# and SC.C# = Course.C#)); 示例3 列出没学过李明老师讲授任何一门课程的所有同学姓名 1234select Sname From StudentWhere not exists(select * From Course,SC,Teacher Where Tname = &#x27;李明&#x27; and Course.T# = Teacher.T# and Course.C# = SC.C# and S# = Student.S#) 示例4 列出至少学过98030101号同学学过所有课程的同学的学号。 1234567select DISTINCT S# From SC SC1Where not exists(select * From SC SC2Where SC2.S# = &#x27;98030101&#x27; and not exists(select * From SC Where C# = SC2.C# and S# = SC1.S#)); 元组演算表达（特征：全称量词和存在量词） 1&#123;t[S#]|t∈SC∧∀(u∈SC∧u[S#]=&#x27;98030101&#x27;)(∃(w∈SC)(w[S#]=t[S#]∧w[C#]=u[C#]))&#125; 关系代数表达（选择，投影，乘除） 1Πs#,c#(SC) ÷ Πc#(σs#=&#x27;98030101&#x27;(SC)) 示例5 已知SPJ(Sno,Pno,Jno,Qty)，其中Sno供应商号，Pno零件号，Jno工程号，Qty数量，列出至少用了供应商S1供应的全部零件的工程号。 123456select DISTINCT Jno From SPJ SPJ1Where not exists(select * From SPJ SPJ2Where SPJ2.Sno = &#x27;S1&#x27; andnot exists (select * From SPJ SPJ3Where PSJ3.Pno = SPJ2.Pno and SPJ3.Jno = SPJ1.Jno)); 五个基本聚集函数 COUNT求个数 SUM求和 AVG求平均 MAX求最大 MIN求最小 分组查询 示例1 求每一学生的平均成绩 1select S#,AVG(Score) From SC Group by S#; 示例2 求每一门课程的平均成绩 1select C#,AVG(Score) From SC Group by C#; 分组过滤 示例1 求不及格课程超过两门的同学的学号 123select S# From SCWhere Score &lt; 60Group by S# Having Count(*) &gt; 2; 示例2 求有10人以上不及格的课程号 12select C# From From SC Where Score &lt; 60 Group by C# Having Count(*) &gt; 10; 示例3 求有两门课以上不及格课程同学的学号及其平均成绩 123456select S#,AVG(Score) From SCWhere S# in(select S# From SC Where Score &lt; 60Group by S# Having Count(*) &gt; 2)Group by S#; 并运算 基本语句 UNION 示例1 求学过002号课的同学或学过003号课的同学学号 123select S# From SC Where C# = &#x27;002&#x27;UNIONselect S# From SC Where C# = &#x27;003&#x27;; 示例2 已知两个表 Customers(CID,Cname,City,Discnt)Agents(AID,Aname,City,Percent) 求客户所在的或者代理商所在的城市 123select City From CustomersUNIONselect City From Agents; 交运算 基本语句 INTERSECT 求既学过002号课，又学过003号课的同学学号 123select S# From SC Where C# = &#x27;002&#x27;INTERSECTselect S# From SC Where C# = &#x27;003&#x27;; 差运算 基本语句 EXCEPT 示例1 假定所有学生都有选课，求没学过002号课程的学生学号 123select DISTINCT S# From SCEXCEPTselect S# From SC Where C# = &#x27;002&#x27;; 视图创建视图 示例1 定义一个视图CompStud为计算机系的学生，通过该视图可以将Student表中其他系的学生屏蔽掉 1234Create View CompStud As(select * From StudentWhere D# in(select D# From DeptWhere Dname = &#x27;计算机&#x27;)); 示例2 定义一个视图Teach为教师任课的情况，把Teacher表中的个人隐私方面的信息，如工资等信息屏蔽掉，仅反映其教哪门课及其学分等。 123Create View Teach AS(select T.Tname,C.Cname,Credit From Teacher T,Course CWhere T.T# = C.T#); 使用视图可以像使用table一样使用视图。 示例1 检索主讲数据库的教师姓名，可使用Teach 12select T.Tname From Teach TWhere T.Cname = &#x27;数据库&#x27;; 示例2 检索计算机系的所有学生，可使用CompStud 1select * From CompStud; 示例3 检索计算机系的年龄小于20的所有学生，我们可使用CompStud 12select * From CompStud Where Sage &lt; 20; 示例4 定义视图StudStat，描述学生的平均成绩、最高成绩，最低成绩等。 1234Create View StudStat(S#,Sname,Avgs,MinS,MaxS,CNT)as (select S#,Sname,AVG(Score),MIN(Score),MAX(Score),Count(*)From Student S,SC Where S.S# = SC.S#Group by S.S#); 示例5 基于视图StudStat检索某一学生平均成绩 12select Sname,Avgs From StudStat Where Sname = &#x27;张三&#x27;; 视图的更新对于视图的更新最终要反映到基本表中，因此更新操作需要好好思考一下，什么数据可以更新，什么不可以更新。 总结以下几点 如果视图的select目标列包含聚集函数，则不能更新。 如果视图的select子句中使用了unique或distinct，则不能更新。 如果视图包括了group by子句，则不能更新。 如果视图中包括了经过算术表达式计算出来的列，则不能更新。 如果视图是由单个表的列构成，但并没有包括主键，则不能更新。 撤销视图1Drop View view_name; delete和drop的使用 create对应drop insert对应delete]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[验证码识别与抽奖实践]]></title>
    <url>%2F%2Fposts%2F202003241.html</url>
    <content type="text"><![CDATA[:::tip以前总想着如何破解验证码，涉及到图像识别需要学习成本，索性百度有图像识别的API接口，每天可以调用5000次，也够用了，顺便实现了青岛啤酒抽奖。::: 关于如何在百度智能云调用API接口可以参考链接1，可以用百度云的账号登录，然后创建一个应用，再查看官方的API文档点我。 创建maven工程导入依赖创建一个maven工程，导入依赖。 1234567891011121314151617&lt;dependency&gt; &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt; &lt;artifactId&gt;selenium-java&lt;/artifactId&gt; &lt;version&gt;3.141.59&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.baidu.aip&lt;/groupId&gt; &lt;artifactId&gt;java-sdk&lt;/artifactId&gt; &lt;version&gt;4.12.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;commons-io&lt;/groupId&gt; &lt;artifactId&gt;commons-io&lt;/artifactId&gt; &lt;version&gt;2.4&lt;/version&gt; &lt;/dependency&gt; 获取验证码验证码是自动生成的，没有唯一的网络地址，所以根据图片链接并不能获取到图片，好在selenium支持截屏，这里需要注意的一点就是，一定要保证截取的图片只包含验证码，其余部分一点都不要包括进来（是一个坑），最开始的时候，我截取的图片，上下部分包括了少量的其余部分，在去噪和二值化的时候，导致了色彩覆盖，验证码直接看不见了。 1234567891011121314151617public static File elementSnapshot(WebElement element) throws Exception &#123; //创建全屏截图 WrapsDriver wrapsDriver = (WrapsDriver)element; File screen = ((TakesScreenshot)wrapsDriver.getWrappedDriver()).getScreenshotAs(OutputType.FILE); BufferedImage image = ImageIO.read(screen); //获取元素的高度、宽度 int width = element.getSize().getWidth(); int height = element.getSize().getHeight(); //创建一个矩形使用上面的高度，和宽度 Rectangle rect = new Rectangle(width, height); //元素坐标 Point p = element.getLocation(); BufferedImage img = image.getSubimage(p.getX(), p.getY()+10, rect.width-15, rect.height-14); ImageIO.write(img, &quot;png&quot;, screen); return screen; &#125; 这些后来添加的数字就是调位置用的，保证只截取验证码部分。 验证码降噪和二值化但是仅仅只有这个API接口是不够用的，因为验证码都会有干扰线，如果不加处理就提交，得到的结果基本是没有正确的，所以还要进行降噪和二值化。具体实现代码就是这样，图像处理这部分我也了解很少，只是搬运。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051public static void removeBackground(String imgUrl, String resUrl) &#123; //定义一个临界阈值 int threshold = 300; try &#123; BufferedImage img = ImageIO.read(new File(imgUrl)); int width = img.getWidth(); int height = img.getHeight(); for (int i = 1; i &lt; width; i++) &#123; for (int x = 0; x &lt; width; x++) &#123; for (int y = 0; y &lt; height; y++) &#123; Color color = new Color(img.getRGB(x, y));// System.out.println(&quot;red:&quot; + color.getRed() + &quot; | green:&quot; + color.getGreen() + &quot; | blue:&quot; + color.getBlue()); int num = color.getRed() + color.getGreen() + color.getBlue(); if (num &gt;= threshold) &#123; img.setRGB(x, y, Color.WHITE.getRGB()); &#125; &#125; &#125; &#125; for (int i = 1; i &lt; width; i++) &#123; Color color1 = new Color(img.getRGB(i, 1)); int num1 = color1.getRed() + color1.getGreen() + color1.getBlue(); for (int x = 0; x &lt; width; x++) &#123; for (int y = 0; y &lt; height; y++) &#123; Color color = new Color(img.getRGB(x, y)); int num = color.getRed() + color.getGreen() + color.getBlue(); if (num == num1) &#123; img.setRGB(x, y, Color.BLACK.getRGB()); &#125; else &#123; img.setRGB(x, y, Color.WHITE.getRGB()); &#125; &#125; &#125; &#125; File file = new File(resUrl); if (!file.exists()) &#123; File dir = file.getParentFile(); if (!dir.exists()) &#123; dir.mkdirs(); &#125; try &#123; file.createNewFile(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; ImageIO.write(img, &quot;png&quot;, file); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125;&#125; 经过此代码处理完之后验证码就可以达到此效果。由于我是自动截屏验证码这一部分，大小为8k，处理完就变成3k，但是不知道为什么背景颜色会变成深绿，虽然也是二值化；当我手动下载验证码，大小为1k，处理完之后变成2k，背景颜色是黑色，数字部分为白色，同样也是可以二值化的，但是不理解其中原理，是根据什么二值化的。 知道是什么问题了，我把png改成了jpg。现在再改成png。 处理完之后，验证码还是很清晰的，API识别效果要好上不少。 验证码识别百度智能云地址：click 识别需要查看百度智能云的官方文档。 我是用的是java，可以这样操作 1234567891011121314151617181920public class Sample &#123; //设置APPID/AK/SK public static final String APP_ID = &quot;你的 App ID&quot;; public static final String API_KEY = &quot;你的 Api Key&quot;; public static final String SECRET_KEY = &quot;你的 Secret Key&quot;; public static void main(String[] args) &#123; // 初始化一个AipOcr AipOcr client = new AipOcr(APP_ID, API_KEY, SECRET_KEY); // 可选：设置网络连接参数 client.setConnectionTimeoutInMillis(2000); client.setSocketTimeoutInMillis(60000); // 调用接口 String path = &quot;test.jpg&quot;; JSONObject res = client.basicGeneral(path, new HashMap&lt;String, String&gt;()); System.out.println(res.toString(2)); &#125;&#125; 填好所需要的验证参数和图片地址，就可以得到图片中的文字了。 具体思路流程图创建一个窗口创建一个窗口开始开始访问抽奖网页访问抽奖网页成功？成功？填写手机号填写手机号截取验证码图片截取验证码图片调用文字识别API，并得到结果调用文字识别API，并得到结果正确？正确？填写正确的验证码填写正确的验证码抽奖抽奖结束结束Viewer does not support full SVG 1.1 这个还是画的太low了，下面再画一个数据流图对比一下。 数据流图项目需求 打开窗口，访问网页。 获取网页手机号元素，从手机号表获取手机号，填写手机号。 获取验证码的截图，降噪二值化验证码截图，调用百度智能云API，得到识别验证码。 获取网页验证码元素，填写由上步骤获取的验证码，并且判断验证码的正确性，如果正确则进行抽奖，如果错误则刷新网页（再次访问网页，从头开始）。 填写正确的验证码，抽奖，关闭窗口。 手机号表手机号表验证码识别验证码识别填写手机号填写手机号检查验证码正确性检查验证码正确性抽奖抽奖填写验证码填写验证码访问抽奖页面访问抽奖页面截取验证码截取验证码RobotRobot窗口窗口关闭窗口关闭窗口创建窗口创建窗口访问网址访问网址验证码图片验证码图片验证码图片验证码图片验证码验证码验证码验证码验证码验证码正确正确错误错误验证码验证码抽奖抽奖抽奖完毕抽奖完毕抽奖完毕抽奖完毕手机号手机号手机号手机号抽奖完毕抽奖完毕降噪二值化降噪二值化验证码图片验证码图片验证码图片验证码图片Viewer does not support full SVG 1.1 气死我了，本地测试是可以的，一转移到github actions上就是错误的，可能是由于国外ip不能调用百度的接口吧，二值化部分咋又有问题，不行了，我要暴力破解了，四个数，其实一个个破解要的时间也挺多的，这个页面还不能停留时间太长，只支持搜索三位数的时间，所以我把第一位设置成了随机数，，搜索后三位，第一位也可以弄成定值，赌赌运气吧_ 算了，不搞随机数了，你在变，别人也在变，还不如自己以不变应万变，总会有一次是对的。随机的时候，有时候一两次就对了，有时后十来次都没对，还是搞个固定的靠谱点。 我发现问题所在了，原来是在国外访问这个抽奖网页太慢了，很多时候验证码图片并没有显示出来，导致截图失败，所以二值化那个地方会抛异常。还是得搞个服务器。 本地测试了一下无界面，发现不是因为无界面而截不了图，推测应该就是在国外访问这个网址太慢了。暴力六个小时可以破解3个验证码，太慢了，有点浪费了，不过可以把自己的加上去^_^ 最新改了一下，发现一个数是固定的，每次搜索的时间太长了，有这么长时间不如去刷新出符合自己规则的验证码，然后我就让两个位数是固定的，果然，本地试了一下35分钟就可以破解出三个验证码，在github的actions上，两次都没超过15分钟就破解出了三个验证码，这个速度还是满意的。 那是不是就意味着三个数固定，破解速度会更快一点？我认为不是的，测试了一下效果没有两个的好，甚至我觉得次于一个数。我觉得这就像是扎金花一样，三张都是单牌会多一点，一对其次，豹子少之又少，折中一下还是取2更好一点。不至于验证码不对浪费太多时间（固定一个数对不上，需要浪费填1000次的机会，而两个数不对只需要浪费100次机会），以及数的组合可能性太低，做无谓的刷新。 参考链接： 链接1 链接2 链接3]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java和c++装饰器对比]]></title>
    <url>%2F%2Fposts%2F202003231.html</url>
    <content type="text"><![CDATA[c++12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#include&lt;iostream&gt;using namespace std;class Invoice&#123; public : virtual void printInvoice()&#123; cout &lt;&lt; &quot;This is the content of the invoice!&quot; &lt;&lt; endl; &#125;&#125;;class Decorator : public Invoice&#123; Invoice *ticket; public : Decorator(Invoice *t) &#123; ticket = t; &#125; void printInvoice() &#123; if(ticket != NULL)&#123; ticket-&gt;printInvoice(); &#125; &#125;&#125;;class HeadDecorator : public Decorator&#123; public : HeadDecorator(Invoice *t) : Decorator(t)&#123; &#125; void printInvoice() &#123; cout &lt;&lt; &quot;This is the header of the invoice!&quot; &lt;&lt; endl; Decorator::printInvoice(); &#125;&#125;;class FootDecorator : public Decorator&#123; public : FootDecorator(Invoice *t) : Decorator(t)&#123; &#125; void printInvoice() &#123; Decorator::printInvoice(); cout &lt;&lt; &quot;This is the footnote of the invoice!&quot; &lt;&lt; endl; &#125;&#125;;int main()&#123; Invoice t; FootDecorator f(&amp;t); HeadDecorator h(&amp;f); h.printInvoice(); cout &lt;&lt; &quot;----------------------------------------&quot; &lt;&lt; endl; FootDecorator a(NULL); HeadDecorator b(&amp;a); b.printInvoice(); return 0;&#125; java12345678910111213141516171819202122232425262728293031323334353637383940414243444546class Invoice&#123; public void printInvoice()&#123; System.out.println(&quot;这是票据正文！&quot;); &#125;&#125;class Decorator extends Invoice&#123; Invoice ticket; public Decorator(Invoice t)&#123; ticket=t; &#125; public void printInvoice()&#123; if(ticket!=null)&#123; ticket.printInvoice(); &#125; &#125;&#125;class HeadDecorator extends Decorator&#123; public HeadDecorator(Invoice t)&#123; super(t); &#125; public void printInvoice()&#123; System.out.println(&quot;这是票据的抬头！&quot;); super.printInvoice(); &#125;&#125;class FootDecorator extends Decorator&#123; public FootDecorator(Invoice t)&#123; super(t); &#125; public void printInvoice()&#123; super.printInvoice(); System.out.println(&quot;这是票据的脚注！&quot;); &#125;&#125;public class App&#123; public static void main(String args[])&#123; Invoice t = new Invoice(); FootDecorator f = new FootDecorator(t); HeadDecorator h = new HeadDecorator(f); h.printInvoice(); System.out.println(&quot;--------------&quot;); HeadDecorator a = new HeadDecorator(null); FootDecorator b = new FootDecorator(a); b.printInvoice(); &#125;&#125; 解决这两道题都是装饰器模式，因为c++面向对象内容写的比较少，导致有些代码部分都没看懂。 virtual关键字什么意思？ 虚函数，虚函数是指一个类中你希望重载的成员变量，当你用一个基类指针或引用指向一个继承类对象的时候，调用一个虚函数时，实际调用的是继承类的版本。 大致就是这个意思吧 1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;struct Base &#123; virtual void f() &#123; std::cout &lt;&lt; &quot;base\n&quot;; &#125;&#125;;struct Derived : Base &#123; void f() override &#123; // &#x27;override&#x27; 可选 std::cout &lt;&lt; &quot;derived\n&quot;; &#125;&#125;;int main()&#123; Base b; Derived d; // 通过引用调用虚函数 Base&amp; br = b; // br 的类型是 Base&amp; Base&amp; dr = d; // dr 的类型也是 Base&amp; br.f(); // 打印 &quot;base&quot; dr.f(); // 打印 &quot;derived&quot; // 通过指针调用虚函数 Base* bp = &amp;b; // bp 的类型是 Base* Base* dp = &amp;d; // dp 的类型也是 Base* bp-&gt;f(); // 打印 &quot;base&quot; dp-&gt;f(); // 打印 &quot;derived&quot; // 非虚函数调用 br.Base::f(); // 打印 &quot;base&quot; dr.Base::f(); // 打印 &quot;base&quot;&#125; c++如何使用继承？ 一个”:”就行了。类似于这样 class HeadDecorator : public Decorator。 c++如何调用父类的函数？ 类似于这样Decorator::printInvoice(); c++如何调用父类的构造函数？ 类似于这样HeadDecorator(Invoice *t) : Decorator(t)&#123; &#125; 这样那个c++代码就可以看懂了。 以前就看到过发票抬头那一道题，当时也是看了好久的时间，不理解，最后也调试了很久，不理解，现在使用IDEA调试，看懂了，调试过程成可以看到对象的转变过程，犯了一个大错误，不同的子类上转型之后在子类中调用父类的结果是不同的，也就是说一个子类对父类的改变只是它自己能够感受到影响，别的子类并不能感受到影响。作用域不一样，对象是一个独立的个体，就像老大给父亲买了两瓶酒，对于老二来说是跟他没有关系的，他并不能偷偷喝了。 c语言指针是真的厉害，以前只是在地址取值啥的，多了之后，这转到那，那转到这，一会就转晕了。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[后来]]></title>
    <url>%2F%2Fposts%2F202003211.html</url>
    <content type="text"><![CDATA[:::tip年龄越大，越来越不相信那些虚无缥缈的，倦于客套，小时候，我不明白，为何而活，该怎样生活，一惊，已经过去这么些年了。::: 最近身边有好几个小生命都降临了，表哥生了个大胖小子，大哥一家仍想生一个儿子，可无奈的是第三个仍然是个女儿，以前在一块上学的MZ，悄悄地不知道就结婚了，前两天在她朋友圈晒她家的美女，可真快啊，转眼就是这么多人的“长辈”了。 我最喜欢的就是这个季节，以前由于学校是在县城，每到一周放假的时候，需要坐车回家，那时候坐在车上，吹着晚风，看着外面的油菜花，它的香味让我沉醉，至今，我仍怀念。后来，我知道，那时候再也回不去了，早已成过往。 生命就是这样，从降临的那一刻起，就坐上了不会有回程的列车，这一路所遇到的风景，也许有的昙花一现，有的还可以回过头再多看两眼，珍惜，所需要珍惜的。 由于父亲喜欢玩牌，夫妻之间因为这个没事就要吵几句，赢了钱还好点，没啥事，只要一输了，事情就要来了，这天达到终点，动手了，甚至想拿起武器，我都吓坏了，赶紧制止这场风波，本来早就肚子饿了，一下子什么都不想吃了，就默默的待着他们二位身边，看着点，只想这段时间快点过去。后来，我明白了，原来每个人都有自己的小宇宙，不要等到爆发的时候再去后悔，该制止的时候就要制止。 小时候，都曾有着大大的梦，要做人群中最闪亮的人，要与班里最漂亮的女孩做朋友，就像想在所谓的偶像剧一般，穿着靓丽服饰，想要什么就有什么的日子，有着很厉害的老爸，成天就为男女之间的感情所伤脑，美名为爱情三角恋，后来，我明白了，原来生活并不是那样，并不是每个人都有这样的条件，并不是每个人这样厉害的老爸，并不是吃吃饭钱就挣到手了，相反的是，挣钱真的很不易，是真正的血汗钱，我的父亲也并不差，靠自己养活一家人，不偷不抢，教我做人。母亲也要强，做着一个男子兴许都受不了的工作，每每出去之前我都不愿待在她面前。 为何而活，我想这就是答案。类似于，孔雀，立春等类型的电影，能看到生活原本的样子，使人向上，我觉得这才是一部好电影。 曾在27层楼干活，由于工作需要，需要爬向窗子外面，我比较小，又是临时的，所以Y就把安全绳系在他身上，让我抓紧另一头，看着他一步步往窗外爬，双腿在颤抖，我也好不到哪里去，心都提到了嗓子眼，紧紧的抓住另一端，生怕出现意外，事后总算安全下来了，我感叹一句，挣钱真不容易啊。后来，我明白了，都是为了生活，有的人却在拿生命在冒险。 世间美好，还需前行。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[迷宫]]></title>
    <url>%2F%2Fposts%2F202003212.html</url>
    <content type="text"><![CDATA[:::tip今天做了一下蓝桥杯第十届的几道真题，但是迷宫这道题差点让我弄不出来，因为以前搜索类型的题我也练了不少，记录下出现的问题吧。::: 迷宫题目描述下图给出了一个迷宫的平面图，其中标记为 1 的为障碍，标记为 0 的为可 以通行的地方。 1234010000000100001001110000 迷宫的入口为左上角，出口为右下角，在迷宫中，只能从一个位置走到这 个它的上、下、左、右四个方向之一。 对于上面的迷宫，从入口开始，可以按DRRURRDDDR 的顺序通过迷宫， 一共 10 步。其中 D、U、L、R 分别表示向下、向上、向左、向右走。 对于下面这个更复杂的迷宫（30 行 50 列），请找出一种通过迷宫的方式， 其使用的步数最少，在步数最少的前提下，请找出字典序最小的一个作为答案。 请注意在字典序中D&lt;L&lt;R&lt;U。（如果你把以下文字复制到文本文件中，请务 必检查复制的内容是否与文档中的一致。在试题目录下有一个文件 maze.txt， 内容与下面的文本相同）分析这道题实际上就是一道广搜题，左上角是起点，右下角是终点，找一条最短的路径，并且是字典序最小的。广度优先搜索时一条队列，那么我就只需要维护一条队列就行了，字典序最小，那我只需要先向下（D），向左（L），向右（R），向上（U），这样走不出来的路径不仅仅是最短的，也是字典序最小的。 中间出了一个问题，就是一直跑不出来答案，以至于电脑都卡死机了，我想应该不至于的啊，最后用4行6列的那个样例，发现也是一直走个没完没了，而且路径越来越长，暂停下发现，原来是走过的节点又走了一遍，来回走，可不是一直跑个没完。 最后，我添加了走过的节点的标记，我又有点迷惑了，添加在外面是否会影响其他的路径呢，仔细想了一下是多虑的，一个点有四个方向可以走，必有一个点在最短路径，那么通过其他点到达这个点，必然比这个路径长，所以就不需要考虑这个了。 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;list&gt;using namespace std;struct Node&#123; int x; int y; string str = &quot;&quot;;&#125;;int a[35][55];int flag[35][55];int dir[4][2] = &#123;1,0,0,-1,0,1,-1,0&#125;;char di[4] = &#123;&#x27;D&#x27;,&#x27;L&#x27;,&#x27;R&#x27;,&#x27;U&#x27;&#125;;int n,m;Node e;list&lt;Node&gt; s;void bfs()&#123; while(!s.empty())&#123; e = s.front(); int x = e.x; int y = e.y; string str = e.str; if(x==n&amp;&amp;y==m)&#123; cout &lt;&lt; str &lt;&lt; endl; break; &#125; flag[x][y] = 1;//标记这个点已经走过了 s.pop_front(); for(int i=0;i&lt;4;i++)&#123; if(a[x+dir[i][0]][y+dir[i][1]]==0&amp;&amp;flag[x+dir[i][0]][y+dir[i][1]]==0)&#123; e.x = x+dir[i][0]; e.y = y+dir[i][1]; e.str = str + di[i]; s.push_back(e); &#125; &#125; &#125;&#125;int main()&#123; n=30; m = 50; for(int i=0;i&lt;35;i++)&#123; fill(a[i],a[i]+55,1); fill(flag[i],flag[i]+55,0); &#125; for(int i=1;i&lt;=n;i++)&#123; string s; cin &gt;&gt; s; m = s.size(); for(int j=1;j&lt;=m;j++)&#123; a[i][j] = (int)(s.at(j-1)-&#x27;0&#x27;); &#125; &#125; for(int i=0;i&lt;32;i++)&#123; for(int j=0;j&lt;52;j++)&#123; cout &lt;&lt; a[i][j] &lt;&lt; &quot; &quot;; &#125; cout &lt;&lt; endl; &#125; e.x = 1; e.y = 1; e.str = &quot;&quot;; flag[e.x][e.y] = 1; s.push_back(e); bfs(); return 0; &#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>bfs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github actions定时执行]]></title>
    <url>%2F%2Fposts%2F202003181.html</url>
    <content type="text"><![CDATA[github actions（以下简称gc）太牛了，还支持定时执行，正和我意，脚本不用我每天都去提交触发一次，到达某个时间就会执行的，真良心。 但是需要注意这个自动执行的时区，默认是国际标准时间，与国内相差有16个小时，可以在网上找时间换算器，以免出错。 还有需要注意的是，它这个定时执行，并不像手机闹钟一样，设置完立马就生效，例如现在12:00，现在设置个12:02的闹钟，时间到了闹钟就响了​。但是gc却有所区别，我开是这样做的时候，总是不会自动触发，我想是不是配置错了，后来发现也不是的。我把定时改成了每5分钟执行一次，但是到第一个五分钟并没有执行，而是在第二个五分钟开始执行，我就知道了，它这个定时任务并不是立即生效的，或者说也有可能需要等待一个周期。 然后我就放心大胆的调成了8 16 * * *​，这个是cron表达式，分别对应，分，时，天，月，年，*表达的意思是“任意”，“每”的意思，我上面那个则是每天在国际标准时间16:08执行，对应到国内则是零点8分，观察了两天都是没有问题的，以后就撒手不管了。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Selenium+部署到服务器]]></title>
    <url>%2F%2Fposts%2F202003161.html</url>
    <content type="text"><![CDATA[:::tipjsoup不能实现较好得交互性，所以常常要找实际请求的地址，而Selenium则方便多了，可以调用浏览器，恰好chrome有无界面版的，可以在服务器运行。顺便实现了一下提交xgzbd填报。::: Selenium可以调用本地的浏览器，实现类似于脚本的功能，用代码来操纵浏览器，服务器不支持GUI界面，chrome恰好又有无界面的版本，完美之作，可以在服务器愉快的运行爬虫了。 服务器环境部署由于我还没有服务器，所以使用的是github actions，我在这里是成功的，服务器应该更不用说吧。 下载chrome这里要下载linux版的chrome浏览器 下载地址：点我 然后需要将下载好的deb包上传到服务器中。 我是下载了之后上传到github仓库中，当github actions需要使用的时候，直接从仓库下载就行了(本地从仓库下载可能会有点慢)。 安装chrome1sudo dpkg -i google-chrome-stable_current_amd64.deb 安装对应依赖1sudo apt-get -f install 下载对应的chromedriver下载地址：点我 这里需要注意一下，你下载的chrome浏览器是什么版本，就要对应下载chromedriver，chrome版本信息在安装的时候会有。 例如 12chrome版本是80.0.3987.132-1则chromedriver版本也得是80.0.3987.x 如果能找到一样的版本就使用一样的，找不到就找.x，就找相近的版本。 然后将下载的zip包上传到服务器中。 解压chromedriver1unzip chromedriver_linux64.zip 到这里环境就已经搭建完了，接下来就是写代码了。 xgzbd自动提交这里由于我只使用了一些简单的方法，就不介绍Selenium怎么使用，可以参考下方[2] 首先创建一个maven工程，然后在pom.xml中引入Selenium的jar包 123456&lt;!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java --&gt;&lt;dependency&gt; &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt; &lt;artifactId&gt;selenium-java&lt;/artifactId&gt; &lt;version&gt;3.141.59&lt;/version&gt;&lt;/dependency&gt; 实现代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//设置无头模式ChromeOptions chromeOptions=new ChromeOptions();chromeOptions.setHeadless(Boolean.TRUE);//指定chromedriver的位置System.setProperty(&quot;chromedriver&quot;, &quot;chromedriver&quot;);//如果不采用无界面模式则不需要使用chromeOptions参数//这句话相当于创建了一个窗口WebDriver driver = new ChromeDriver(chromeOptions);//访问链接driver.get(&quot;http://jktb.haedu.gov.cn/?ext=fX93MD81Pi82fXV7OSQ=&amp;rn=1194639372&quot;);//寻找界面元素然后点击driver.findElement(By.xpath(&quot;/html/body/ul/li[1]&quot;)).click();Thread.sleep(3000);driver.findElement(By.xpath(&quot;//*[@id=\&quot;my-form\&quot;]/div[1]/div/button&quot;)).click();Thread.sleep(3000);WebElement mobile = driver.findElement(By.name(&quot;mobile&quot;));mobile.sendKeys(&quot;用户名&quot;);WebElement idCard = driver.findElement(By.name(&quot;idCard&quot;));idCard.sendKeys(&quot;密码&quot;);Thread.sleep(3000);driver.findElement(By.xpath(&quot;//*[@id=\&quot;my-form\&quot;]/div[4]/div/div/div/button&quot;)).click();Thread.sleep(3000);driver.findElement(By.xpath(&quot;/html/body/ul/li[1]&quot;)).click();Thread.sleep(3000);driver.findElement(By.xpath(&quot;//*[@id=\&quot;app\&quot;]/div[1]/div/div[2]/div[2]&quot;)).click();/*选择相应省份 */for(int i=1;i&lt;=21;i++)&#123; driver.findElement(By.xpath(&quot;//*[@id=\&quot;app\&quot;]/div[2]/div[2]/div[2]/div/div[2]/div[1]/ul/li[&quot;+i+&quot;]&quot;)).click();&#125;/*选择相应市 */for(int i=1;i&lt;=5;i++)&#123; driver.findElement(By.xpath(&quot;//*[@id=\&quot;app\&quot;]/div[2]/div[2]/div[2]/div/div[2]/div[2]/ul/li[&quot;+i+&quot;]&quot;)).click();&#125;/*选择区或者县 */for(int i=1;i&lt;=1;i++)&#123; driver.findElement(By.xpath(&quot;//*[@id=\&quot;app\&quot;]/div[2]/div[2]/div[2]/div/div[2]/div[3]/ul/li[&quot;+i+&quot;]&quot;)).click();&#125;Thread.sleep(3000);driver.findElement(By.xpath(&quot;//*[@id=\&quot;app\&quot;]/div[2]/div[2]/div[2]/div/div[1]/button[2]&quot;)).click();Thread.sleep(3000);driver.findElement(By.xpath(&quot;//*[@id=\&quot;app\&quot;]/div[1]/div/div[16]/button&quot;)).click();Thread.sleep(3000);driver.close(); 需要做异常处理。 开始的问题是，点击提交就是提交不了，最后发现，它这个填写好像是根据第一次填写就有的，有点不像是ip定位，所以我就手动更改地址。最后就可以提交了。也可以把gitee的自动部署改成这样的了。 如果无缘无故报错请调整间隔时间Thread.sleep，有可能网站后台还没加载成功，找不到元素。 参考链接： 链接1 链接2]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[狼性社会]]></title>
    <url>%2F%2Fposts%2F202003141.html</url>
    <content type="text"><![CDATA[:::tip我如一直小绵羊，行走在大街。::: 社会，好像离我们也不远了，一直在温室的我，或许得需要很长一段时间适应吧。 社会很复杂，人际关系很复杂，相比于学校，简直就是一个天上一个地下，一切的罪魁祸首就是利益。记得当初办理一个宽带，由于离我家很近，又互相认识，我只是刚刚去询问了一下，没过多久就来我家了，家人碍于情面，就办理了，后来就不说了，简直就是入了坑。最近我打算换一个宽带，就去询问销号的问题，没想到她让我直接不用了就行了，再三询问中，她说系统找不到了，后来又说直接不用了就行，态度可不好了，这分明是不想给我销号（不排除没有权限的可能，但是我记得开户营业厅应该可以办理销户吧，不太清楚，可是态度太不好了）办理前办理后，态度180度。 再说一件事，相信电信推销应该都有遇到过，有的说实话也还不错，有的用处就少了，像我用大王卡一个月就是19，看重流量可以随便用，也不打电话。我妈常常也会接到这样的电话，多数都会同意别人的话，愿意办理。前段时间，我看她手机，有一个半年合约每个月10块钱20g的流量包（我觉得那个人应该也是好心，因为我妈不会用，好多天都触发了日租包，办理这个业务费用就会减少一点），其实完全可以换一个套餐解决问题，像家里有宽带，手机流量就用的很少了，1g五毛钱不算贵，但是相比较我19元40g还是有点贵的^_^ 其实这个推销的人，我妈认识，知道我们想要换宽带，就整天打电话，那天电话聊了一会儿，感觉还挺好的，就去店里看了一下，开始我不太明白，以为真有什么好活动，一会我就看明白了，想让我携号转网（可能电信公司对携号转网有什么奖励），由于绑定有宽带，并且有个业务要到2038年才结束，我说有这业务怎么也携号转网不成啊，我得到的回答是，他们有办法，并且愿意开直通车（疫情期间得要申请）带我一块去协商携号转网，还是算了吧，我只想好好的用个宽带。后面他们告诉我的那个活动，其实很长时间之前我就知道有这个活动，我合计合计也还差不多，在接受范围之内，但是想到之前总是给我妈推销业务，想到现在用的这个宽带的惨痛教训，不要相信所谓的熟人（也就是，从来都没打过交道，有一点甜头就来套近乎，拉关系），不要不好意思，勇于拒绝，咋说我都不办了^_^ 现在，我申请了59元的天王卡套餐，免费送宽带业务，下个月就可以办理，还不错。 今天在网上挂了很久的一个手机终于有一个人问了，而且还聊了很久，我都把手机包装好了，又试了下能不能打电话，能不能发短信，再放到里面，我可高兴了，终于能卖出去了，可是到付款的时候，总是墨迹这，墨迹那，最后我敏锐的发现这是个骗子，害我白高兴一场。第一次卖东西就遇到了骗子，我有那么好骗吗？^_^ 生活就是这样，总有些事情会去经历，而我们就是这样一步步成长的。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[maven]]></title>
    <url>%2F%2Fposts%2F202003111.html</url>
    <content type="text"><![CDATA[:::tipmaven是自动化构建工具，有着强大的管理jar包的能力，这样当在做一个工程的时候，想使用哪个jar包时，不必去四处百度下载这个jar包，只需要在配置项中加入几行代码就可使用。::: 下载 这个是官网的下载地址：点我 需要忍受速度，甚至是下载不下来。翻墙也不行_。 这个是国内下载地址：点我 这个网站叫做新云，资源质量还不错，一般下载巨慢的，我就在这上面下载。 配置1.解压文件包可以创建一个文件夹将解压的文件放到里面，例如我就创建了一个文件夹： 1D:\maven 2.配置环境变量可以对比以前创建jdk的环境变量。首先创建MAVEN_HOME变量，填上刚刚解压的文件路径，例如我的则是： 1D:\maven\apache-maven-3.5.4 然后再将bin目录引入到path中。 接着就可以在cmd命令行中输入mvn -v查看版本信息。 3.将本地仓库配置到指定的路径这一项其实也可以不用配置，默认会有一个仓库的路径，为了便于我们自己查找，也可以自定义一个路径，例如我在这里创建repository存放仓库的数据。 1D:\maven\repository 然后打开D:\maven\apache-maven-3.5.4\conf\settings.xml，找到localRepository标签，在其附近添加 &lt;localRepository&gt;D:\maven\repository&lt;/localRepository&gt;，注意不要写道注释里去了。 4.配置中央仓库的镜像源打开D:\maven\apache-maven-3.5.4\conf\settings.xml，找到mirrors标签，在标签内添加如下代码 123456&lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;name&gt;nexus-aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; 修改maven项目的JRE版本默认maven的JRE版本是1.5的（不排除版本高的maven，JRE版本更高），但是我电脑安装的jdk版本却是1.8的，所以要修改一下。 打开D:\maven\apache-maven-3.5.4\conf\settings.xml，找到profiles标签，在标签内添加如下代码 123456789101112&lt;profile&gt; &lt;id&gt;jdk-1.8&lt;/id&gt;&lt;activation&gt;&lt;activeByDefault&gt;true&lt;/activeByDefault&gt; &lt;jdk&gt;1.8&lt;/jdk&gt;&lt;/activation&gt;&lt;properties&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;&lt;/properties&gt;&lt;/profile&gt; 以后创建的maven项目就都是1.8版本的了。 在正式使用前还需要两个配置，指定本地maven地址，可参考地址：https://www.bilibili.com/video/av21004567?p=19 如何依赖一个包在项目的pom.xml文件中，寻找dependencies(如没有则需要手动创建一个)，然后将该包的坐标添加进来。 自动化构建的各个环节 清理：mvn clean 将以前编译得到的旧的class字节码文件删除，为下一次编译做准备 编译：mvn compile 将Java源程序编译成class字节码文件 测试：mvn test 自动测试，自动调用junit程序 报告：mvn verify 测试程序执行的结果 打包：mvn package 动态Web工程打war包，Java工程打jar包 安装：mvn install Maven特定的概念——将打包得到的文件复制到“仓库”中的指定位置 部署：mvn deploy 将动态Web工程生成的war包复制到Servlet容器的指定目录下，使其可以运行 依次而执行 mvn site 创建项目文档 常见错误1.No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK? 解决办法参考：点我 学习地址：点我 这次的主要目的还是为了爬虫，因为有的jar包确实不好下载，并且也可以更简单的方式运行代码。把上次在github actions运行的爬虫改成了maven项目，只有几k，而以前那个jar包就有几百k，进步明显。 1mvn compile exec:java -Dexec.mainClass=&quot;包名.主函数的类名&quot; 参考： 12[1]:https://blog.csdn.net/Smile__1/article/details/100884299[2]:https://blog.csdn.net/u013760453/article/details/81055323]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[耦合与内聚]]></title>
    <url>%2F%2Fposts%2F202003081.html</url>
    <content type="text"><![CDATA[耦合的类型（由高到低） 内容耦合 一个模块直接修改或者直接操作另一个模块的数据。 公共耦合 由两个以上的模块共同引用一个全局数据项。 控制耦合 一个模块向另一模块传递一个控制信号，接受信号的模块将依据该信号值进行必要的活动。 标记耦合 两个模块至少有一个通过界面传递的公共参数，包含内部结构，如数组，字符串等。 数据耦合 模块间通过参数传递基本类型的数据。 图形理解 模块A模块A模块B模块B公共数据公共数据私有数据私有数据界面界面界面界面私有数据私有数据公共耦合公共耦合控制耦合控制耦合内容耦合内容耦合复杂数据 标记耦合复杂数据 标记耦合简单数据 数据耦合简单数据 数据耦合Viewer does not support full SVG 1.1 内聚的类型（由低到高） 偶然内聚 一个模块之间各成分之间没有任何关系。 逻辑内聚 几个逻辑相关的功能放在同一模块中。 时间内聚 一个模块完成的功能必须在同一时间内完成，而这些功能只是因为时间因素关联在一起。 过程内聚 处理各成分必须以特定的次序执行。 通信内聚 各成分操作都在呕吐难以数据集或生成同一数据集。 顺序内聚 各成分与一个功能相关，且一个成分的输出作为另一成分的输入。 功能内聚 模块的所有成分对完成单一功能是最基本的，且该模块对完成这一功能而言是充分必要的。 图形理解 函数A函数A函数B函数B函数C函数C偶然内聚偶然内聚逻辑内聚逻辑内聚函数A函数A函数B函数B函数C函数C时间内聚时间内聚函数A函数A函数B函数B函数C函数C时间T时间T过程内聚过程内聚函数A函数A函数C函数C函数B函数B函数A函数A函数B函数B函数C函数C通信内聚通信内聚顺序内聚顺序内聚函数A函数A功能内聚功能内聚函数B函数B函数C函数C输出1输出1输出2输出2函数A函数A函数B函数B函数C函数C结果1结果1结果2结果2结果3结果3Viewer does not support full SVG 1.1 高内聚，低耦合。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一道不太理解的题]]></title>
    <url>%2F%2Fposts%2F202003071.html</url>
    <content type="text"><![CDATA[某软件项目的活动图如下图所示，其中顶点表示项目的里程碑，连接顶点的边表示包含的活动，变色数字表示活动持续时间（天）。完成该项目的最少时间为多少天？由于某种原因，现在需要同一个开发人员完成BC和BD，则完成该项目的最少时间为多少天？ DDEEIIFFAAJJHHCCGGBB2233224455224455336622STARTSTARTFINISHFINISH3366Viewer does not support full SVG 1.1 由上面这个图可以知道，任务时从活动A开始的，到活动J结束。 第一问就很简单了，求完成所有项目的最少时间，那只要求一条完成时间最长的路径就可以了。 AAG,7G,7H,12H,12D,4D,4E,10E,10F,13F,13C,5C,5B,2B,2J,18J,18I,13I,13225544667710101313131312121313181817171515Viewer does not support full SVG 1.1 由这个分析图可以知道，完成所有的活动最少要用18天的时间。 第二问，加了一个条件，BC和BD都是由一个人来完成，由上面这个图也很好分析，这个时候这个人面临着两个选择，先做BC或者先做BD。 先来看先做BC的情况。先做BC也就意味着由C发展的这一支活动还是跟以前运行的一样，但是由D发展的这一支，就需要等3天的时间，最后算得最少完成时间为21天。 再看先做BD的情况。先做BD也就意味着由D发展的这一支活动还是跟以前运行一样，但是由C发展的这一支，就需要等上两天的时间，最后算得最少完成时间为20天。 但是答案却是先做BC的情况，也就是最少完成时间是21天，为什么会这样呢？明明可以先做BD然后可以提前一天完成所有的项目。 然后我就认为答案错了就从网上找原题，发现所有的答案都是21天，解析说的是走最长的路径，不理解，这明明是两种情况，有一条最优的情况不选，却要走最长的，难道我对最少完成时间理解有误？ 有待解决。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>疑惑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用爬虫让码云自动部署]]></title>
    <url>%2F%2Fposts%2F202003072.html</url>
    <content type="text"><![CDATA[:::tipgithub的Pags服务在国内访问速度太慢了，因此我就想着在部署的时候就往码云上也提交一份代码，但是码云却并不会自动部署代码到Pags服务中，本片就是为解决这个。::: 简述码云在国内的访问速度很快，缺点就是自动部署是会员服务，一年得要99，但是我想要免费的，爬虫 + github actions正好可以帮助我做到这一点。 代码编写昨天刚刚学会了怎么登录网站，这可以帮助我拿到网站得Cookie，有了这个我就有权限对仓库进行操作了。 第二步，要找到部署的实际地址，这个也很简单，打开gitee Pages服务页面，然后再打开调试页面，放到Network那一栏，点击更新（实际就是重新部署的作用），最后我找到了rebuild这个请求，这个不就是重新构建的意思，再看看里面包含有Form Data这个就是提交的form表单，就是它没错了。 接着我就尝试着模拟这个请求，但最开始按照往常的方法总是请求失败，后来随着添加的参数越来越多，终于是可以请求成功了，后来测试了一下这个请求时有效的，可以实现部署的作用。 1234567891011121314151617181920212223242526272829303132333435import org.jsoup.Connection;import org.jsoup.Connection.Method;import org.jsoup.Jsoup;public class autoBuild &#123; public static void main(String[] args) &#123; try &#123; Connection.Response res = Jsoup.connect(&quot;https://gitee.com/srcrs/srcrs/pages/rebuild&quot;) .ignoreContentType(true) .followRedirects(true) .referrer(&quot;https://gitee.com/srcrs/srcrs/pages&quot;) .header(&quot;x-csrf-token&quot;, &quot;F85hxpxjSlddp6kfpewaa1h+zonyI/W4SB5JB/urBNY=&quot;) .header(&quot;x-requested-with&quot;, &quot;XMLHttpRequest&quot;) .data(&quot;branch&quot;,&quot;master&quot;) .data(&quot;build_directory&quot;,&quot;&quot;) .data(&quot;force_https&quot;,&quot;true&quot;) .header(&quot;authority&quot;, &quot;gitee.com&quot;) .header(&quot;path&quot;, &quot;/srcrs/srcrs/pages/rebuild&quot;) .header(&quot;scheme&quot;, &quot;https&quot;) .header(&quot;accept&quot;, &quot;*/*&quot;) .header(&quot;dnt&quot;, &quot;1&quot;) .method(Method.POST) .cookie(&quot;cookie&quot;, &quot;oschina_new_user=false; user_locale=zh-CN; remove_bulletin=gitee-maintain-1582772523; remote_way=http; Serve_State=true; remember_user_token=BAhbB1sGaQP9m1dJIiIkMmEkMTAkUFkxdGZvMmVlaDZHb1VaV00zL3BSZQY6BkVU--f5eecf67bdfe9126a0bd2760cb0e6e80063d4139; tz=Asia%2FShanghai; Hm_lvt_24f17767262929947cc3631f99bfd274=1583204132,1583295272,1583435853,1583472926; Hm_lpvt_24f17767262929947cc3631f99bfd274=1583472940; gitee-session-n=BAh7CUkiD3Nlc3Npb25faWQGOgZFVEkiJTRlMDdhYmEyN2JiMGZmYjY0MGQ4NWJjY2ZlZWFjNTc2BjsAVEkiGXdhcmRlbi51c2VyLnVzZXIua2V5BjsAVFsHWwZpA%2F2bV0kiIiQyYSQxMCRQWTF0Zm8yZWVoNkdvVVpXTTMvcFJlBjsAVEkiHXdhcmRlbi51c2VyLnVzZXIuc2Vzc2lvbgY7AFR7BkkiFGxhc3RfcmVxdWVzdF9hdAY7AFRJdToJVGltZQ3FCB7AO8uqkQk6DW5hbm9fbnVtaQJ0AjoNbmFub19kZW5pBjoNc3VibWljcm8iB2KAOgl6b25lSSIIVVRDBjsARkkiEF9jc3JmX3Rva2VuBjsARkkiMUY4NWh4cHhqU2xkZHA2a2ZwZXdhYTFoK3pvbnlJL1c0U0I1SkIvdXJCTlk9BjsARg%3D%3D--69cf92f5308eaf529cd0a7018877e1bda1278de7&quot;) .userAgent(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .execute(); System.out.println(&quot;srcrs&quot;); //Map&lt;String,String&gt; map = res.cookies(); //for(String s : map.keySet()) &#123; // System.out.println(s + &quot; : &quot; + map.get(s)); //&#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 这个Cookie时手动获取的，由于不知道Cookie什么时候会过期，所以代码存在着不稳定性，随时可能面临身份验证失败，所以下面将会实现自动获取Cookie并部署。 可以登录成功并且获取到了Cookie，但是Cookie获取到的值并不完整导致请求一直失败，暂时先看看这个有效期时多久时间，再做打算。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253import java.util.HashMap;import java.util.List;import java.util.Map;import org.jsoup.Connection;import org.jsoup.Connection.Method;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;public class autoBuild &#123; public static void main(String[] args) &#123; try &#123; Connection.Response res = Jsoup.connect(&quot;https://gitee.com/login&quot;) .userAgent(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .execute(); Map&lt;String,String&gt; datas = new HashMap&lt;&gt;(); Document doc = Jsoup.parse(res.body()); List&lt;Element&gt; list = doc.select(&quot;form&quot;); for(int i = 0;i &lt; list.size(); i++) &#123; for(Element e : list.get(i).getAllElements()) &#123; if(e.attr(&quot;name&quot;).equals(&quot;user[login]&quot;)) &#123; e.attr(&quot;value&quot;,&quot;账户名&quot;); &#125; if(e.attr(&quot;name&quot;).equals(&quot;user[password]&quot;)) &#123; e.attr(&quot;value&quot;,&quot;密码&quot;); &#125; if(e.attr(&quot;name&quot;).length() &gt; 0) &#123; datas.put(e.attr(&quot;name&quot;), e.attr(&quot;value&quot;)); &#125; &#125; &#125; Connection.Response login = Jsoup.connect(&quot;https://gitee.com/login&quot;) .userAgent(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .followRedirects(true) .ignoreContentType(true) .referrer(&quot;https://gitee.com/login&quot;) .method(Method.POST) .maxBodySize(Integer.MAX_VALUE) .data(datas) .cookies(res.cookies()) .maxBodySize(0) .execute(); Map&lt;String,String&gt; map = login.cookies(); System.out.println(map.size()); for(String s : map.keySet()) &#123; System.out.println(s + &quot; : &quot; + map.get(s)); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 代码运行有了自动部署的代码以后,还是不行啊，总不能每次提交完一次代码就要，就要手动运行一次代码，这还不如网页上操作呢，复杂不了多少。这显然不是我的初衷。 我想的是，让这个代码在github actions里面运行，当上面的自动化流程结束之后，相当于代码已经自动提交了，但是gitee的Pages还没有更新，这个时候在运行这段java代码就可以，完成自动部署的功能了。 只需要在文件中再添加一项任务就可以了，重要的时要配置好环境，以及如何在命令行中带jar包运行java代码。 前提将jar包和源文件放到一个文件夹里，注意源文件不要带包名。 在windows中 123javac -cp jsoup-1.12.2.jar; autoBuild.javajava -cp jsoup-1.12.2.jar; autoBuild 在linux中 123javac -cp ./jsoup-1.12.2.jar autoBuild.javajava -cp $CLASSPATH:jsoup-1.12.2.jar autoBuild 然后再提供一下我的github actions自动化代码。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960name: scrrs deployer # Actions 名字on: push: branches: - vuejobs: build: name: Build and publish runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - name: Use Node.js 10.x uses: actions/setup-node@v1 with: node-version: 10.x - name: Setup Environmental Science run: | npm install -g vuepress npm install - name: Generate public files run: | npm run build - name: Deploy env: GH_TOKEN: $&#123;&#123; secrets.GH_TOKEN &#125;&#125; GE_TOKEN: $&#123;&#123; secrets.GE_TOKEN &#125;&#125; GH_REP: $&#123;&#123; secrets.GH_REP &#125;&#125; GE_REP: $&#123;&#123; secrets.GE_REP &#125;&#125; run: | cd ./public git init git config user.name &quot;srcrs&quot; git config user.email &quot;531238678@qq.com&quot; git add . git commit -m &quot;自动部署&quot; git push --force --quiet &quot;https://$&#123;GH_TOKEN&#125;@$&#123;GH_REP&#125;&quot; master:master git push --force --quiet &quot;https://$&#123;GE_TOKEN&#125;@$&#123;GE_REP&#125;&quot; master:master auto: needs: build name: auto deploy gitee runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - name: Set up JDK 1.8 uses: actions/setup-java@v1 with: java-version: 1.8 - name: Build with gitee run: | cd ./gitee javac -cp ./jsoup-1.12.2.jar autoBuild.java java -cp $CLASSPATH:jsoup-1.12.2.jar autoBuild 在build任务完成之后，然后再执行auto deploy gitee任务，就可以达到自己的要求了。 还是有些不甘心，怕Cookie哪天过期了不能用了，又得再修改，先看看吧，假如一个月都不用修改，这也是个不错的方式。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[模拟登录GitHub拿到Cookie]]></title>
    <url>%2F%2Fposts%2F202003061.html</url>
    <content type="text"><![CDATA[:::tip爬取有些网站可能会需要登录才能有拿到某些数据的权限，所以 这次学习了一下如何登录一个网站，并且拿到Cookie，以后就可以用Cookie来登录。::: 简述其实github本身提供有一套完整的开放API，可以获取到很多的数据，完全用不着这么的麻烦，但是相对别的网站来说，可能就只有这样的方法了。 找到实际登录验证的地址通常暴漏在外面的并不是真正的地址，当然要找到这个地址也并不难，只需要登录失败一次就可以了。 填写需要的参数然后这个真正地址里Form Data有哪些参数(就是提交的的form表单)，而这些参数就是提交表单时必须要填的内容，我们填写账户名和密码就可以了，其他的还照原样。 可以用一个Map&lt;String,String&gt;来存储这些参数。 然后就可以登陆了，然后拿到Cookie，再次验证这个Cookie是否可以使用。以后就可以保存这个Cookie值用来登录。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566import java.util.HashMap;import java.util.List;import java.util.Map;import org.jsoup.Connection;import org.jsoup.Jsoup;import org.jsoup.Connection.Method;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;public class test &#123; public static void main(String[] args) &#123; try &#123; Connection.Response rs = Jsoup.connect(&quot;https://github.com/login&quot;) .userAgent(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .execute(); Map&lt;String, String&gt; datas = new HashMap&lt;&gt;(); Document d1 = Jsoup.parse(rs.body()); List&lt;Element&gt; eleList = d1.select(&quot;form&quot;); for(int i = 0; i &lt; eleList.size(); i++) &#123; for (Element e : eleList.get(i).getAllElements()) &#123; if (e.attr(&quot;name&quot;).equals(&quot;login&quot;)) &#123; e.attr(&quot;value&quot;, &quot;用户名&quot;);//需要修改成自己的 &#125; if (e.attr(&quot;name&quot;).equals(&quot;password&quot;)) &#123; e.attr(&quot;value&quot;, &quot;密码&quot;);//需要修改成自己的 &#125; if (e.attr(&quot;name&quot;).length() &gt; 0) &#123; datas.put(e.attr(&quot;name&quot;), e.attr(&quot;value&quot;)); &#125; &#125; &#125; Connection.Response login = Jsoup.connect(&quot;https://github.com/session&quot;) .userAgent(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .followRedirects(true) .ignoreContentType(true) .method(Method.POST) .data(datas) .cookies(rs.cookies()) .execute(); Map&lt;String, String&gt; map = login.cookies(); for(String s : map.keySet()) &#123; System.out.println(s + &quot; : &quot; + map.get(s)); &#125; //测试拿到的Cookie是否可以登录成功 Connection.Response response = Jsoup.connect(&quot;https://github.com/srcrs&quot;) .followRedirects(true) .ignoreContentType(true) .userAgent(&quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .cookies(map) .method(Method.GET) .execute(); Map&lt;String,String&gt; m = response.cookies(); for(String s : m.keySet()) &#123; System.out.println(s + &quot; : &quot; + m.get(s)); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[突破ip封禁限制]]></title>
    <url>%2F%2Fposts%2F202003021.html</url>
    <content type="text"><![CDATA[:::tip昨天感觉也没爬多少东西，就被网站把ip给封锁了，搞得浏览器都看不了这个网站了，所以今天就来突破ip封禁限制。::: 首先可以百度一个免费ip代理的网站，然后用爬虫爬取页面的代理ip，并验证ip的可用性。维护一个可用的代理池，每次访问网站可随机选择一个ip使用。 但是免费的ip是真的不好用啊。 并且这次将user-Agent伪装分离了，单独作为一个类，里面有10来个，也是每次随机选择一个使用。 12345678910111213141516171819202122class isok &#123; String ip; int port; public isok(String ip, int port) &#123; this.port = port; this.ip = ip; &#125; public void run() &#123; try &#123; Document doc = Jsoup.connect(&quot;https://www.qq.com&quot;) .proxy(ip, port) .get(); System.out.println(ip + &quot;:&quot; + port + &quot;----&gt;成功&quot;); new Proxy().addProxy(ip, port); &#125; catch (Exception e) &#123; // TODO Auto-generated catch block System.out.println(ip + &quot;:&quot; + port + &quot;----&gt;失败&quot;); &#125; &#125;&#125; 这个类用于验证ip是否可以使用，如果加上代理可以正确访问网站，就认为是可用的，然后进入代理池，使用。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java爬妹子图]]></title>
    <url>%2F%2Fposts%2F202003011.html</url>
    <content type="text"><![CDATA[:::tip以前总想着用python爬东西，网上说爬虫框架多，好用，我也没发现哪好，也许总是失败的原因。还是java好用。::: 从很早之前就知道“爬虫”这一个单词，以前我以为只有python可以做，所以就简单学习一下python，去用一些python框架，不知是工具的原因，还是自己对于这门语言了解的不够深，用起来是一头污水，什么也没有做成功，爬取个天气预报，爬取个图片，一次也没有成功过，所以兴趣就慢慢下去了，过了段时间又提起来，然后又是郁闷生气，总是失败。 周而复始，直到昨天我才发现用java也可以爬取东西，记得上学期作业我们也用java下载东西了，但是那时候可能没有太注意。能够访问网页了，拿到数据，然后就是处理数据了，如何拿到自己想要的数据，在python中有很多框架可以实现这一操作，在java中有没有呢？这么强大的java怎么会没有呢。答案是：Jsoup。 它可以加访问头的一些参数，可以实现selector选择器，对于网页中想要获取的数据，只需要复制相应数据的selector路径就能拿到。 接下来我的首刀就是妹子图网站了。进入网站，首先看到的是一个个的漂亮小姐姐的写真集合，暂且可以当作集合，每一页有24个集合，一共有240个这样的页面，我首先得拿到每一页集合的链接，所以我创建了一个页面类，用于获取每一页集合的链接，然后保存起来。 拿到集合的链接，就要进入到这个集合中，获取每一个图片的链接，所以我又创建一个获取图片链接的类，因为每个集合的图片数不一样，我设置了一个最大值，这样虽然浪费了一些时间，但是却可以获取所有的图片的链接。 获取到图片链接之后，就需要通过这个链接下载图片了，因为这个网站的的图片链接不支持直接访问，所以我又加上了一个Referer的请求头参数，再设置user-agent参数，最后就可以成功下载了。 下载的时候可以采用多线程，这里我没有用，不知道加上之后效率会提高多少。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141import java.io.File;import java.io.FileOutputStream;import java.io.InputStream;import java.net.URL;import java.net.URLConnection;import java.util.ArrayList;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;public class Main &#123; public static void main(String[] args) &#123; new Page(&quot;https://www.mzitu.com&quot;); &#125;&#125;/* * 获取每一页所有集合链接 */class Page &#123; String link = &quot;&quot;; ArrayList&lt;String&gt; url = new ArrayList&lt;String&gt;(); public Page(String link) &#123; this.link = link; getGather(); &#125; public void getGather() &#123; for (int i = 1; i &lt;= 1; i++) &#123; try &#123; Thread.sleep(1000); if (i != 1) &#123; Document doc = Jsoup.connect(link + &quot;/page/&quot; + i + &quot;/&quot;).post(); for (int j = 1; j &lt;= 24; j++) &#123; Elements m = doc.select(&quot;#pins &gt; li:nth-child(&quot; + j + &quot;) &gt; a&quot;); for (Element e : m) &#123; String href = e.attr(&quot;href&quot;); url.add(href); &#125; &#125; &#125; else &#123; Document doc = Jsoup.connect(link).get(); for (int j = 1; j &lt;= 24; j++) &#123; Elements m = doc.select(&quot;#pins &gt; li:nth-child(&quot; + j + &quot;) &gt; a&quot;); for (Element e : m) &#123; String href = e.attr(&quot;href&quot;); url.add(href); &#125; &#125; &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; new Gather(url); &#125;&#125;/* * 获取每个集合内图片的链接 */class Gather &#123; ArrayList&lt;String&gt; url = new ArrayList&lt;String&gt;(); public Gather(ArrayList&lt;String&gt; url) &#123; this.url = url; getImage(); &#125; public void getImage() &#123; for (String s : url) &#123; for (int i = 1; i &lt;= 150; i++) &#123; try &#123; Document doc = Jsoup.connect(s + &quot;/&quot; + i).userAgent( &quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;) .post(); Elements m1 = doc.select(&quot;body &gt; div.main &gt; div.content &gt; div.main-image &gt; p &gt; a &gt; img&quot;); for (Element e : m1) &#123; String src = &quot;&quot;; src = e.attr(&quot;src&quot;); if (!(&quot;&quot;.equals(src))) &#123; new downImag(src,s + &quot;/&quot; + i); &#125; &#125; Elements m2 = doc.select(&quot;#content &gt; article &gt; div:nth-child(2) &gt; figure &gt; p &gt; a &gt; img&quot;); for (Element e : m2) &#123; String src = &quot;&quot;; src = e.attr(&quot;src&quot;); if (!(&quot;&quot;.equals(src))) &#123; new downImag(src,s + &quot;/&quot; + i); &#125; &#125; Thread.sleep(100); &#125; catch (Exception e) &#123; System.out.println(&quot;链接&quot;); continue; &#125; &#125; &#125; &#125;&#125;/* * 下载图片类 */class downImag &#123; String link = &quot;&quot;; String referer = &quot;&quot;; static int n=1; public downImag(String link,String referer) &#123; this.link = link; this.referer = referer; down(); link = &quot;&quot;; referer = &quot;&quot;; &#125; public void down() &#123; try &#123; System.out.println(referer+&quot;------&gt;&quot;+link); URL url = new URL(link); URLConnection response = url.openConnection(); response.setRequestProperty(&quot;user-agent&quot;, &quot;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Mobile Safari/537.36&quot;); response.setRequestProperty(&quot;Referer&quot;, referer); InputStream is = response.getInputStream(); byte[] bs = new byte[1024]; int len; String name = &quot;D:\\Image\\&quot; + n++ + &quot;.jpg&quot;; File file = new File(name); FileOutputStream os = new FileOutputStream(file); while ((len = is.read(bs)) != -1) &#123; os.write(bs, 0, len); &#125; os.close(); is.close(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AS构建时出现错误]]></title>
    <url>%2F%2Fposts%2F202002271.html</url>
    <content type="text"><![CDATA[:::tip解决Gradle build时出现 Cause: unable to find valid certification path to requested target 错误::: 简述今天遇到了一个问题，AS在构建项目时就出现这个错误，从网上找说是因为，什么证书问题，一想这么麻烦，在自己电脑上从未出现这样的问题，安装步骤都是一样的，环境也都改的差不多了，按照往常的步骤，在部署时就是会出现这个错误，很迷。 下面是我参考的方法，但是两个都不一定有用，因为我用的时候是失败的，至于第二个还有错别字，我有点读不懂，但确实是这里来的一个偶然的发现。 第一个方法修改项目的 build.gradle 文件 123456allprojects &#123; repositories &#123; google() jcenter() &#125;&#125; 修改后 123456789allprojects &#123; repositories &#123; google() jcenter() //新添加的 mavenCentral() mavenLocal() &#125;&#125; 起初是一点也不能下载，但是加上这个之后会下载一部分，但是还是不行，不知道清除缓存之后行不行，没有试过。 第二个方法修改AS的Gradle配置 12345路径File | Settings | Build, Execution, Deployment | Gradle找到Gradle配置页将 Global Gradle settings中的Offine work前面的对勾去掉，Apply保存。最后然后 Build | Clean Project。 这个方法很奇怪，默认的情况下 Offine work 前面的对勾是没有打上的，我参考的那篇文章写的是 对勾去点 我就默认以为打错了，但是为什么要写上呢？ 我解决的方法开始我没有发现我找到的就是gradle的配置页，因此就有了这一种方法。 123路径File | Settings | Build, Execution, Deployment | Gradle | Android Studio找到 Enable embedded Maven repository，将前面打上对勾，然后Apply保存，OK。 修改项目的 build.gradle 文件 将 123456buildscript &#123; repositories &#123; google() jcenter() &#125;&#125; 和 123456allprojects &#123; repositories &#123; google() jcenter() &#125;&#125; 修改为 12345678buildscript &#123; repositories &#123; //google() //jcenter() maven &#123; url &#x27;https://maven.aliyun.com/repository/google&#x27; &#125; maven&#123; url &#x27;https://maven.aliyun.com/repository/jcenter&#x27;&#125; &#125;&#125; 和 12345678allprojects &#123; repositories &#123; //google() //jcenter() maven &#123; url &#x27;https://maven.aliyun.com/repository/google&#x27; &#125; maven&#123; url &#x27;https://maven.aliyun.com/repository/jcenter&#x27;&#125; &#125;&#125; 但是我并不知道为什么能解决这个问题，于是我想查了一下 Enable embedded Maven repository 有什么作用，但是并无所获。 这句中文意思是 启用嵌入式Maven存储库 ，根据字面意思我并不理解实际有何作用，但是确实可以解决遇到的问题。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[春风]]></title>
    <url>%2F%2Fposts%2F202002241.html</url>
    <content type="text"><![CDATA[:::tip好久都没出去走走了，只在方圆几十米活动。最多的户外活动就是晒太阳了，冬天的阳光真好。::: 那天傍晚，在周边闲逛的时候，可能也是好久没出来了，突然感觉风是那么的那么的暖，微微的凉风，吹在身上，吹在脸上，慢慢的到了心里。 冬天过去了，春天来了。 不知从什么时候起，我喜欢上了傍晚，太阳落在了半山腰，晚风吹，走在路上，喜欢这种感觉，宁静。 最近留了一个作业，是关于对就业和未来发展有什么疑惑的地方，其实疑惑的地方蛮多的，做了十几年的学生，在学校雨伞下生活的学生，我想谈谈我的看法。 回想高考完，到了选专业填志愿的时候，我相信有很多与我一样都是很迷惑的，不知道未来究竟要干嘛，什么才是自己的兴趣，是自己的归宿，当医生，当会计，当某某，好像都还可以，就如原玉一样，可以雕出任意的造型，但是雕出来的效果就不知道怎么样了。 英语不好，偶然间知道了计算机专业，貌似如果学的不是很深，对于英语问题并不是很大，我又比较喜欢数学，听说关联性还挺强，所以就报了计算机，就来到了信阳学院。 到今年，差不多已经学了本专业已经快三年了，从开始学高数，学c语言，学离散数学，学数据结构，学java，学数据库，学计算机科学导论，学汇编语言等等，到这学期学习Android开发，学习PHP，学软件工程，我就在想，学了这么多东西，我就疑惑，到现在是否可以胜任一份计算机方面的工作，或者说达到什么样的一个标准可以去就业。 我有一个很早就退学的同学，当然并不是鄙视谁，看不起谁，每个人都有自己的选择，只是拿做一个例子，几个月前看见他在朋友圈里发关于编程类的东西，一问才知道，他去培训班学习编程去了，半年就可以达到上岗的要求，然而我们大学生呢，上了四年找不到专业工作的比比皆是。 我觉得原因就是我们对于未来太迷茫了，没有真正的决定下来，认真思考究竟未来要干些什么，而那些培训班目的就很明确了，就是要学这些东西，就是要用熟这些工具，就是要到达别人公司里的上岗要求，然而在学校就不是这样了，我们学的东西有很多，我们对于外界（社会），对于公司里职业要求，专业水准，并不是多清楚。 那为什么会有大学呢？不如都培训班好了？]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[增加填空题]]></title>
    <url>%2F%2Fposts%2F202002221.html</url>
    <content type="text"><![CDATA[简述今天终于把填空题弄上去了，其实早就可以弄上去的，但是一直在纠结能够智能识别题目类型的问题。 起初都是用答案来判断一道题是哪种类型的题，像判断，选择，它们的答案都是有限的，只需要判断答案是不是属于这个集合里的就行了，但是填空题就不一样了，答案的类型没有什么特别的特征，很有可能与别的类型的题混合到一起，所以这次就改变了一下思路，用户必须要带一个大标题，用特定的文字标明是什么类型的题，这样就减少一道题分错类的可能性。在写填空题的时候我就在想，除了判断选择那就是填空了，但是这样是不对的，假如说有其他的题型加入，就没法了。 现在遇到的问题也挺多的，有很多的bug我都感觉是不可避免的，以后还是要慢慢想想咋解决。 填空题现在未解决的问题 题目中包含括号，将会默认当成答案。 答案的类型数目多，可能以后还要添加。 我觉得现在按照这样的方式，用户也并不会多增加什么麻烦，以前直接导入进去就行了，现在可能得把像一、填空这样类似的大标题得和我预定的改成一样的，还可以吧。现在得话，缺少这个大标题是识别不了题目是什么类型的，思路就是遇到大标题就，就判断属于哪一种类型，然后创建对象，到遇到下一个大标题开始，都是这种类型的题。 也得好好弄一个怎么使用的说明，毕竟只是一个命令行界面，其实也可以搞一个图形界面，但是我觉得没必要，能用不就行了。 仓库地址：https://github.com/srcrs/ItemBank说明： 现在只支持单选题，多选题，判断题和填空题。 必须包含大标题，否则将无法运行。关于大标题写法可参考仓库地址。 答案必须在括号中。 题号不可缺少(一般下载的题都包括题号，应该不是大问题)。 若对格式还有疑问请参考仓库地址，有例子。 样例： 12345一、填空1．数据库系统一般由（数据库）、应用系统、（数据库管理系统）、（数据库管理员）和用户构成。2．数据模型通常由（数据结构）、（数据操作）、（数据的约束条件）三部分组成。3．实体之间的联系可抽象为三类，它们是（一对一）、（一对多）、（多对多）。4．在数据库设计中，（数据字典）是系统中各类数据描述的集合，是进行详细的数据收集和数据分析所获得的主要成果。 一、填空 1．数据库系统一般由[1]、应用系统、[2]、[3]和用户构成。 [1]: [2]: [3]: 确定 2．数据模型通常由[1]、[2]、[3]三部分组成。 [1]: [2]: [3]: 确定 3．实体之间的联系可抽象为三类，它们是[1]、[2]、[3]。 [1]: [2]: [3]: 确定 4．在数据库设计中，[1]是系统中各类数据描述的集合，是进行详细的数据收集和数据分析所获得的主要成果。 [1]: 确定 二、单选择 1.数据库管理系统的英文缩写是。 A.DB B.DBS C.DBMS D.DBSS 确定 2.是按照一定的数据模型组织的，长期储存在计算机内，可为多个用户共享的数据的集合。 A.数据库系统 B.数据库 C.关系数据库 D.数据库管理系统 确定 3.关系数据模型的三个组成部分中，不包括 A.完整性规则 B.数据结构 C.数据操作 D.并发控制 确定 4.关系代数表达式的优化策略中，首先要做的是 A.对文件进行预处理 B.尽早执行选择运算 C.执行笛卡儿积运算 D.投影运算 确定 5.事务有多个性质，其中不包括 A.一致性 B.惟一性 C.原子性 D.隔离性 确定 三、多选择 6.SQL语言通常称为。 A.结构化查询语言 B.结构化控制语言 C.结构化定义语言 D.结构化操纵语言 确定 7.如何构造出一个合适的数据逻辑结构是主要解决的问题。 A.关系数据库优化 B.数据字典 C.关系数据库规范化理论 D.关系数据库查询 确定 8.要保证数据库逻辑数据独立性，需要修改的是。 A.模式 B.模式与内模式的映射 C.模式与外模式的映射 D.内模式 确定 9.下列四项中，不属于数据库特点的是。 A.数据共享 B.数据完整性 C.数据冗余很高 D.数据独立性高 确定 10.学生社团可以接纳多名学生参加，但每个学生只能参加一个社团，从社团到学生之间的联系类型是。 A.多对多 B.一对一 C.多对一 D.一对多 确定 四、判断 1.数据库安全控制的目的是防止非法对数据库的使用和对数据库的恶意破坏。 T F 确定 2.面向集合的操作方式是SQL语言的特点之一。 T F 确定 3.面向对象的操作方式是SQL语言的特点之一。 T F 确定 4.日志文件是用于数据库恢复的重要文件。 T F 确定 5.在登录日志文件时，应该先更新数据库，后登录日志文件。 T F 确定 6.飞机的座位与乘客之间的联系是一对一联系。 T F 确定 7.判断一个并发调度是否正确，可以用“可串行化”概念来解决。 T F 确定 8.对关系模型来说，范式级别越高，实际应用效果越好。 T F 确定 9.视图是关系数据库系统提供给用户以多种角度观察数据库中的数据的重要机制。 T F 确定 10.索引有助于提高数据检索的速度，因此建立索引的数量越多越好。 T F 确定 11.一个基本表最多只能有一个索引。 T F 确定]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>from</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[组合与复用]]></title>
    <url>%2F%2Fposts%2F202002171.html</url>
    <content type="text"><![CDATA[什么叫合成与复用现在面临这样一个场景，B类需要使用A类中的三个方法，可以有这几种方法实现。 第一种方法B类继承A类，这样，B类就可以使用A类的public方法。 A+ method_1(): void+ method_2(): void+ method_3(): voidExtendsExtendsBViewer does not support full SVG 1.1 第二种方法B类依赖A类，A类在B类中以局部变量形式存在。 A+ method_1(): void+ method_2(): void+ method_3(): voidB+ method(a:A): void 第三种方法使用聚合的方式。更加深刻理解了聚合与组合的关系，以前只是知道，都是整体与部分的关系，但是组合是不可分开的，就像人和手一样不可分开，但是如何提现到代码上？同生同灭，不可分离。 A+ method_1(): void+ method_2(): void+ method_3(): voidB+ a: A+ setA(a:A): void 第四种方法组合方式实现。 A+ method_1(): void+ method_2(): void+ method_3(): voidB+ a: A = new A() 基本内容合成与复用的原则是尽量使用合成/聚合的方式，而不是使用继承。 设计原则核心思想 找出应用中可能需要变化的除外，把他们独立出来，不要和那些不需要变化的代码混在一起。 针对接口编程，而不是针对实现编程。 需要解决对象之间的关系，松耦合。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[迪米特法则]]></title>
    <url>%2F%2Fposts%2F202002172.html</url>
    <content type="text"><![CDATA[迪米特法则（Law of Demeter）基本介绍： 一个对象应该改对其他对象保持最少的了解 类与类的关系越密切，耦合度越大 迪米特法则又叫最少知道原则，简单说就是一个类对自己依赖的类知道的越少越好，被依赖的类不管多么复杂，都尽量将逻辑封装在类的内部，对外只提供public方法，不对外泄露任何信息。 迪米特法则有个更简单的定义：只与直接朋友通信 直接朋友：每个对象都会与其他对象有耦合关系，只要两个对象之间有耦合关系，就可以说这两个对象之间是朋友关系。其中，出现的成员变量，方法参数，方法返回值中的类称为直接朋友。而出现在局部变量中的类不是直接朋友，也就是说，陌生的类最好不要以局部变量的形式出现在类的内部。 迪米特法则例子有一个学校，下属有各个学院和总部，现要求打印出学校总部员工ID和学院员工的ID 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667import java.util.ArrayList;import java.util.List;//客户端public class Main &#123; public static void main(String[] args) &#123; SchoolManager schoolManager = new SchoolManager(); schoolManager.printAllEmployee(new CollegeManager()); &#125;&#125;//学校总部员工class Employee &#123; private String id ; public void setId(String id) &#123; this.id = id ; &#125; public String getId() &#123; return id ; &#125;&#125;//学院的员工class CollegeEmployee &#123; private String id; public void setId(String id) &#123; this.id = id ; &#125; public String getId() &#123; return id ; &#125;&#125;//管理学院员工class CollegeManager &#123; public List&lt;CollegeEmployee&gt; getAllEmployee() &#123; List&lt;CollegeEmployee&gt; list = new ArrayList&lt;CollegeEmployee&gt;(); for(int i = 0;i &lt; 10; i++) &#123; CollegeEmployee emp = new CollegeEmployee(); emp.setId(&quot;学院员工id：&quot; + i); list.add(emp); &#125; return list; &#125;&#125;//管理学校员工class SchoolManager &#123; public List&lt;Employee&gt; getAllEmployee() &#123; List&lt;Employee&gt; list = new ArrayList&lt;Employee&gt;(); for(int i = 0; i &lt; 5; i++) &#123; Employee emp = new Employee(); emp.setId(&quot;学校总部员工：&quot; + i); list.add(emp); &#125; return list; &#125; //打印所有的员工 void printAllEmployee(CollegeManager sub) &#123; List&lt;CollegeEmployee&gt; list1 = sub.getAllEmployee(); System.out.println(&quot;---------学院员工----------&quot;); for(CollegeEmployee e : list1) &#123; System.out.println(e.getId()); &#125; List&lt;Employee&gt; list2 = this.getAllEmployee(); System.out.println(&quot;----------学校总部员工--------&quot;); for (Employee e : list2) &#123; System.out.println(e.getId()); &#125; &#125;&#125; 现在来分析一下这个代码，符不符合迪米特法则。 迪米特法则的规则是，一个类只与它的直接朋友进行交流，耦合类的对象的直接朋友是，成员变量，方法参数，方法返回值，除了以上三种都不是直接朋友。 来看一下这段代码,传入参数的类型是CollegeManager，按照规则它是本类的直接朋友，再看CollegeEmployee他们在方法体中，是局部变量，所以并不是本类的直接朋友。为什么Employee是直接朋友？那是因为在上一个方法中Employee是作为方法返回值使用的。那么CollegeEmployee这部分代码放到哪里呢？传入参数是sub，所以相当于把输出这件事情交给了sub去处理，所以把他们封装到CollegeManager中。 123456789101112void printAllEmployee(CollegeManager sub) &#123; List&lt;CollegeEmployee&gt; list1 = sub.getAllEmployee(); System.out.println(&quot;---------学院员工----------&quot;); for(CollegeEmployee e : list1) &#123; System.out.println(e.getId()); &#125; List&lt;Employee&gt; list2 = this.getAllEmployee(); System.out.println(&quot;----------学校总部员工--------&quot;); for (Employee e : list2) &#123; System.out.println(e.getId()); &#125;&#125; 改正代码后，其实代码逻辑也更符合现实生活一点，因为一个学院总会有自己学院员工名单的，不可能什么都交给学校去做，而一个学校的权力肯定比学院要大一点，有权去知道这个学院有多少员工。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970import java.util.ArrayList;import java.util.List;//客户端public class Main &#123; public static void main(String[] args) &#123; SchoolManager schoolManager = new SchoolManager(); schoolManager.printAllEmployee(new CollegeManager()); &#125;&#125;//学校总部员工class Employee &#123; private String id ; public void setId(String id) &#123; this.id = id ; &#125; public String getId() &#123; return id ; &#125;&#125;//学院的员工class CollegeEmployee &#123; private String id; public void setId(String id) &#123; this.id = id ; &#125; public String getId() &#123; return id ; &#125;&#125;//管理学院员工class CollegeManager &#123; public List&lt;CollegeEmployee&gt; getAllEmployee() &#123; List&lt;CollegeEmployee&gt; list = new ArrayList&lt;CollegeEmployee&gt;(); for(int i = 0;i &lt; 10; i++) &#123; CollegeEmployee emp = new CollegeEmployee(); emp.setId(&quot;学院员工id：&quot; + i); list.add(emp); &#125; return list; &#125; public void printAllEmployee() &#123; List&lt;CollegeEmployee&gt; list1 = this.getAllEmployee(); System.out.println(&quot;---------学院员工----------&quot;); for(CollegeEmployee e : list1) &#123; System.out.println(e.getId()); &#125; &#125;&#125;//管理学校员工class SchoolManager &#123; public List&lt;Employee&gt; getAllEmployee() &#123; List&lt;Employee&gt; list = new ArrayList&lt;Employee&gt;(); for(int i = 0; i &lt; 5; i++) &#123; Employee emp = new Employee(); emp.setId(&quot;学校总部员工：&quot; + i); list.add(emp); &#125; return list; &#125; //打印所有的员工 void printAllEmployee(CollegeManager sub) &#123; sub.printAllEmployee(); List&lt;Employee&gt; list2 = this.getAllEmployee(); System.out.println(&quot;----------学校总部员工--------&quot;); for (Employee e : list2) &#123; System.out.println(e.getId()); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用细则]]></title>
    <url>%2F%2Fposts%2F202002161.html</url>
    <content type="text"><![CDATA[这个是做什么的可以将带答案的题转换成from表单，目前只支持单项选择题、多项选择题、判断题，错误的题会变成红色，正确的题会变成绿色。插入到markdown文档中就可使用。 下载地址我在这 文档类型文档类型支持txt格式，输出也是txt格式。 题目格式123456一、判断1.数据库安全控制的目的是防止非法对数据库的使用和对数据库的恶意破坏。( T )2.面向集合的操作方式是SQL语言的特点之一。 ( T )3.面向对象的操作方式是SQL语言的特点之一。 ( F )4.日志文件是用于数据库恢复的重要文件。 ( T )5. 在登录日志文件时，应该先更新数据库，后登录日志文件。 ( F ) 12345678910111213141516171819202122二、多项选择题(共61小题）1.(AB)从逻辑意义上讲，一个计算机网络是由( )构成的。A、通信子网B、资源子网C、局域网D、广域网2.(AC)计算机网络的发展经历了( ) 阶段。A、远程联机系统B、初期计算机网络C、开放式标准化网络D、中期计算机网络3.(ABC)网络的发展趋势必将导致( )三网合一，网络安全、服务质量、多媒体信息的快速传送将成为网络性能的关键问题。A、计算机网络B、通信网络C、广播电视网络D、无线网络4.(ABC)网络拓扑结构是指节点相连形成的几何形状。网络常见的拓扑结构有( )。A、星型网络B、总线型网络C、环型网络D、树型网络5.(ABC)以地理分布范围为标准，计算机网络可分为( )等。A、局域网B、城域网C、广域网D、校园网 12345678910111213141516三、单选题1.数据库管理系统的英文缩写是（ C）。A.DB B.DBS C.DBMS D.DBSS 2.（ B）是按照一定的数据模型组织的，长期储存在计算机内，可为多个用户共享的数据的集合。A.数据库系统 B. 数据库 C. 关系数据库 D. 数据库管理系统3.关系数据模型的三个组成部分中，不包括 ( D )A. 完整性规则 B. 数据结构C. 数据操作 D.并发控制 4.关系代数表达式的优化策略中，首先要做的是 ( B )A. 对文件进行预处理 B. 尽早执行选择运算C. 执行笛卡儿积运算 D. 投影运算5.事务有多个性质，其中不包括 ( B )A. 一致性 B. 惟一性C. 原子性 D. 隔离性 123456说明：1.如果要加上大标题例如: 一、判断，二、多项选择题(共61小题）等，必须要戴上前面的大写序号，否则将会识别不到大标题。也可以不加大标题不影响。2.答案必须再括号中，不论这个括号在哪，但是必须要包含正确答案。3.文档中可以包含一些多余的空格。4.题号不能缺少，否则将会出现一道题划分位置的错误5.选择题选项不可缺少。 使用 将上面下载的压缩包解压放到桌面上，点开txt2form,这时可以看到三个文件。 123jre1.8.0_221/ txt2form.exewxb.ico 点击txt2form.exe打开 这时会让你输入源文件路径，可以在电脑的任何目录创建一个*.txt文件。 12345例如：1.我在桌面创建一个`in.txt`。2.将需要转换的题放到`in.txt`中。3.将`in.txt`拖入到刚刚打开的软件中，路径就会填写到上面了。4.回车运行，如果内容都格式正确，将会转换成功，输出到桌面的`out.txt`中（如没有会自己创建）。 *.txt在哪个目录创建的，out.txt就将输出到哪个目录中。 附结果： 一、判断 1.数据库安全控制的目的是防止非法对数据库的使用和对数据库的恶意破坏。 T F 确定 2.面向集合的操作方式是SQL语言的特点之一。 T F 确定 3.面向对象的操作方式是SQL语言的特点之一。 T F 确定 4.日志文件是用于数据库恢复的重要文件。 T F 确定 5.在登录日志文件时，应该先更新数据库，后登录日志文件。 T F 确定 6.飞机的座位与乘客之间的联系是一对一联系。 T F 确定 7.判断一个并发调度是否正确，可以用“可串行化”概念来解决。 T F 确定 8.对关系模型来说，范式级别越高，实际应用效果越好。 T F 确定 9.视图是关系数据库系统提供给用户以多种角度观察数据库中的数据的重要机制。 T F 确定 10.索引有助于提高数据检索的速度，因此建立索引的数量越多越好。 T F 确定 11.一个基本表最多只能有一个索引。 T F 确定 12.若希望某数据库中的全体用户都具有某个权限，较好的做法是创建一个角色并将此权限授给该角色。 T F 确定 13.当一个表的各记录中某列的字符长度不固定时常将该列定义为CHAR类型。 T F 确定 14.当一个表的各记录中某列的字符长度不固定时常将该列定义为VARCHAR类型。 T F 确定 15.若数据库关系设计中存在函数传递依赖，可能满足2NF，但一定不满足3NF。 T F 确定 二、多项选择题(共61小题) 1.从逻辑意义上讲，一个计算机网络是由()构成的。 A、通信子网 B、资源子网 C、局域网 D、广域网 确定 2.计算机网络的发展经历了()阶段。 A、远程联机系统 B、初期计算机网络 C、开放式标准化网络 D、中期计算机网络 确定 3.网络的发展趋势必将导致()三网合一，网络安全、服务质量、多媒体信息的快速传送将成为网络性能的关键问题。 A、计算机网络 B、通信网络 C、广播电视网络 D、无线网络 确定 4.网络拓扑结构是指节点相连形成的几何形状。网络常见的拓扑结构有()。 A、星型网络 B、总线型网络 C、环型网络 D、树型网络 确定 5.以地理分布范围为标准，计算机网络可分为()等。 A、局域网 B、城域网 C、广域网 D、校园网 确定 三、单选题 1.数据库管理系统的英文缩写是。 A.DB B.DBS C.DBMS D.DBSS 确定 2.是按照一定的数据模型组织的，长期储存在计算机内，可为多个用户共享的数据的集合。 A.数据库系统 B.数据库 C.关系数据库 D.数据库管理系统 确定 3.关系数据模型的三个组成部分中，不包括 A.完整性规则 B.数据结构 C.数据操作 D.并发控制 确定 4.关系代数表达式的优化策略中，首先要做的是 A.对文件进行预处理 B.尽早执行选择运算 C.执行笛卡儿积运算 D.投影运算 确定 5.事务有多个性质，其中不包括 A.一致性 B.惟一性 C.原子性 D.隔离性 确定 6.SQL语言通常称为。 A.结构化查询语言 B.结构化控制语言 C.结构化定义语言 D.结构化操纵语言 确定 7.如何构造出一个合适的数据逻辑结构是主要解决的问题。 A.关系数据库优化 B.数据字典 C.关系数据库规范化理论 D.关系数据库查询 确定 8.要保证数据库逻辑数据独立性，需要修改的是。 A.模式 B.模式与内模式的映射 C.模式与外模式的映射 D.内模式 确定 9.下列四项中，不属于数据库特点的是。 A.数据共享 B.数据完整性 C.数据冗余很高 D.数据独立性高 确定 10.学生社团可以接纳多名学生参加，但每个学生只能参加一个社团，从社团到学生之间的联系类型是。 A.多对多 B.一对一 C.多对一 D.一对多 确定 11.反映现实世界中实体及实体间联系的信息模型是 A.关系模型 B.层次模型 C.网状模型 D.E-R模型 确定 12.对表进行垂直方向的分割用的运算是。 A.交 B.投影 C.选择 D.连接 确定 13.在SQL中，用户可以直接操作的是。 A.基本表 B.视图 C.基本表或视图 D.基本表和视图 确定 14.对数据库并发操作有可能带来的问题包括 A.读出“脏数据” B.带来数据的冗余 C.未被授权的用户非法存取数据 D.破坏数据独立性 确定 15．数据管理技术的发展过程中，经历了人工阶段、文件系统阶段和数据库管理阶段，在这几个阶段中，数据独立性最高的是阶段。 A．文件系统 B．人工管理 C．数据库系统 D．数据项管理 确定]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>form表单</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[依赖倒置原则]]></title>
    <url>%2F%2Fposts%2F202002162.html</url>
    <content type="text"><![CDATA[依赖倒置原则（Dependence Inversion Principle）依赖倒置原则说的是： 高层模块不应该依赖底层模块，二者都应该依赖其抽象。 抽象不应该依赖于细节，细节应该依赖抽象。 依赖倒置的中心思想是面向接口编程。 依赖倒置原则设计理念：相对于细节的多变性，抽象的东西更稳定。以抽象为基础搭建的架构比以细节为基础的架构要稳定的多。在java中，抽象指的是接口或者抽象类，细节就是具体的实现类。 使用接口或抽象类的目的是制定好规范，而不涉及任何具体的操作，展现细节的任务交给它们的实现类去完成。 DIP例子完成Person接受消息的功能 123456789101112131415161718public class Main &#123; public static void main(String[] args) &#123; Person person = new Person(); person.receive(new Email()); &#125;&#125;class Email &#123; public String getInfo() &#123; return &quot;hello world&quot;; &#125;&#125;class Person &#123; public void receive(Email email) &#123; System.out.println(&quot;收到消息：&quot;+email.getInfo()); &#125;&#125; 这样就实现了一个简单的接受消息功能。 但是，现在想一个问题，在现实生活中我们并不仅仅只是接收Email消息，还可能接收微信，手机短信等。那么现在只有一个接收的方法，并且接收的是email消息，也就是说现在，对于接受来的消息不加判断，都是email消息，这是与现实相违背的。 所以应该用一个接口来实现各种类型的消息，细节应该依赖于抽象。 12345678910111213141516171819202122232425262728293031323334353637import org.omg.CORBA.IRObject;public class Main &#123; public static void main(String[] args) &#123; Person person = new Person(); person.receive(new New()); &#125;&#125;class Email implements IReceiver&#123; public String getInfo() &#123; return &quot;Email: hello world&quot;; &#125;&#125;class Weixin implements IReceiver &#123; @Override public String getInfo() &#123; return &quot;Weixin: hello world&quot;; &#125;&#125;class New implements IReceiver &#123; @Override public String getInfo() &#123; return &quot;New: hello world&quot;; &#125;&#125;class Person &#123; public void receive(IReceiver receiver) &#123; System.out.println(receiver.getInfo()); &#125;&#125;interface IReceiver &#123; public String getInfo();&#125; 有点像开闭原则，应该是取到了交集吧以后，抽象不应该依赖于细节，细节应该依赖于抽象。记住。 UseUseMain+ main(): voidEmail+ getInfo(): StringWeixin+ getInfo(): StringNew+ getInfo(): String«interface»Name+ getInfo(): StringViewer does not support full SVG 1.1]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[接口隔离原则]]></title>
    <url>%2F%2Fposts%2F202002163.html</url>
    <content type="text"><![CDATA[接口隔离原则（Interface Segregation Principle）介绍：客户端不应该依赖它不需要的接口，即一个类对另一个类的依赖应该建立在最小的接口上。 也就是说，当一个类需要实现某一个接口的时候，但是这个接口中有些方法对它来说并不需要去实现，就需要将这个大的接口划分为小的接口。 ISP例子如图所示：A类通过接口Name依赖B类，但是A类只是使用到接口的1，2，3方法；B类通过接口Name依赖B类,但是A类只是使用到接口的1，4，5方法. UseUseUseUse«interface»Name+ operation1(): void+ operation2(): void+ operation3(): void+ operation4(): void+ operation5(): voidABDCViewer does not support full SVG 1.1 按照上图写一段示例代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192public class Main &#123; public static void main(String[] args) &#123; &#125;&#125;class A&#123; public void depen1(Name n) &#123; n.operation1(); &#125; public void depen2(Name n) &#123; n.operation2(); &#125; public void depen3(Name n) &#123; n.operation3(); &#125;&#125;class B implements Name &#123; @Override public void operation1() &#123; System.out.println(&quot;B 实现了 operation1&quot;); &#125; @Override public void operation2() &#123; System.out.println(&quot;B 实现了 operation2&quot;); &#125; @Override public void operation3() &#123; System.out.println(&quot;B 实现了 operation3&quot;); &#125; @Override public void operation4() &#123; System.out.println(&quot;B 实现了 operation4&quot;); &#125; @Override public void operation5() &#123; System.out.println(&quot;B 实现了 operation5&quot;); &#125; &#125;class C&#123; public void depend1(Name n) &#123; n.operation1(); &#125; public void depend4(Name n) &#123; n.operation4(); &#125; public void depend5(Name n) &#123; n.operation5(); &#125;&#125;class D implements Name &#123; @Override public void operation1() &#123; System.out.println(&quot;D 实现了 operation1&quot;); &#125; @Override public void operation2() &#123; System.out.println(&quot;D 实现了 operation2&quot;); &#125; @Override public void operation3() &#123; System.out.println(&quot;D 实现了 operation3&quot;); &#125; @Override public void operation4() &#123; System.out.println(&quot;D 实现了 operation4&quot;); &#125; @Override public void operation5() &#123; System.out.println(&quot;D 实现了 operation5&quot;); &#125; &#125;interface Name &#123; public void operation1(); public void operation2(); public void operation3(); public void operation4(); public void operation5();&#125; 这样写是没有问题的，也符合当前的类图。A类依赖B类只使用接口的1，2，3方法，所以按道理说B类只需要实现1，2，3方法即可，同样，C类依赖B类也是这样的问题。多写了一段无用的代码，不需要实现的方法就应该撤掉，所以接口需要重新设计，使它们各自只实现自己需要的功能。 这个时候就需要将接口隔离，也就是拆分。 拆分后代码的类图 UseUseUseUseUseUseUseUseACBD«interface»Name1+ operation1(): void«interface»Name3+ operation4(): void+ operation5(): void«interface»Name2+ operation2(): void+ operation3(): voidViewer does not support full SVG 1.1 这个时候可以看到将接口拆分为三个，B类和D类只需要按需实现就可以了，虽然增加了两个接口，但是确使代码结构变得清晰了起来，代码量也少了。 这个是实现的代码，结构确实清晰了不少。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778public class Main &#123; public static void main(String[] args) &#123; &#125;&#125;class A&#123; public void depen1(Name1 n) &#123; n.operation1(); &#125; public void depen2(Name2 n) &#123; n.operation2(); &#125; public void depen3(Name2 n) &#123; n.operation3(); &#125;&#125;class B implements Name1,Name2 &#123; @Override public void operation1() &#123; System.out.println(&quot;B 实现了 operation1&quot;); &#125; @Override public void operation2() &#123; System.out.println(&quot;B 实现了 operation2&quot;); &#125; @Override public void operation3() &#123; System.out.println(&quot;B 实现了 operation3&quot;); &#125; &#125;class C&#123; public void depend1(Name1 n) &#123; n.operation1(); &#125; public void depend4(Name3 n) &#123; n.operation4(); &#125; public void depend5(Name3 n) &#123; n.operation5(); &#125;&#125;class D implements Name1,Name3 &#123; @Override public void operation1() &#123; System.out.println(&quot;D 实现了 operation1&quot;); &#125; @Override public void operation4() &#123; System.out.println(&quot;D 实现了 operation4&quot;); &#125; @Override public void operation5() &#123; System.out.println(&quot;D 实现了 operation5&quot;); &#125; &#125;interface Name1 &#123; public void operation1();&#125;interface Name2 &#123; public void operation2(); public void operation3();&#125;interface Name3 &#123; public void operation4(); public void operation5();&#125; 发现自己以前写的代码的接口也要去隔离隔离了。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[里氏替换原则]]></title>
    <url>%2F%2Fposts%2F202002164.html</url>
    <content type="text"><![CDATA[里氏替换原则（Liskov Substitution Principle）里氏替换原则实际上是告诉我们如何正确的使用继承。 继承中包含这样一层含义：父类中凡是已经实现好的方法，实际上实在设定规范和契约，虽然它不强制要求所有的子类必须遵守这些契约，但是如果这些子类对这些已经实现的方法任意修改，就会对整个继承体系造成破坏。 继承在给程序设计带来遍历的同时，也带来了弊端。比如使用继承会u给程序带来侵入性，程序的移植性降低，增加对象间的耦合性，如果一个类被其它的类所继承，则当这个类需要修改时，必须考虑到所有的子类，并且父类需改后，所有涉及到子类的功能都有可能产生故障。 综上问题，继承要遵守里氏替换原则。 何为里氏替换原则？ 如果对每个类型为T1的对象O1，都有类型为T2的对象O2，使得以定义T1定义的所有程序P在所有的对象O1都代换成O2时，程序P的行为没有发生变化，那么类型T2时类型T1的子类型。换句话说，所有引用基类的地方必须能透明地使用器子类的对象。 在使用继承时，遵守里氏替换原则，在子类中尽量不要重写父类的方法 里氏替换原则告诉我们，继承实际上让两个类的耦合性增加了，在适当的情况下，可以通过聚合，组合和依赖来解决问题。 LSP例子现在有这样一个例子，有一个基类枪，枪可以射击，有很多种枪，手枪，步枪，一个士兵想买一把枪去杀人。 一个士兵买了一把枪然后开枪，杀人。 12345678910111213141516171819202122232425262728public class Main &#123; public static void main(String[] args) &#123; Soldier s = new Soldier(); s.killEnemy(new Rifle()); s.killEnemy(new HandGun()); &#125;&#125;class Soldier &#123; public void killEnemy(Gun gun) &#123; gun.shoot(); System.out.println(&quot;soldier kill enemy&quot;); &#125;&#125;abstract class Gun &#123; abstract public void shoot();&#125;class Rifle extends Gun &#123; @Override public void shoot() &#123; System.out.println(&quot;rifle shoot&quot;); &#125; &#125;class HandGun extends Gun &#123; @Override public void shoot() &#123; System.out.println(&quot;handgun shoot&quot;); &#125;&#125; 现在问题来了，玩具枪也是枪的一种，所以现在吧玩具枪也加上。 闹笑话了，玩具枪开枪设计也杀死了敌人，所以很明显现在子类并不能代替父类，所以并不符合里氏原则。 12345678910111213141516171819202122232425262728293031323334public class Main &#123; public static void main(String[] args) &#123; Soldier s = new Soldier(); s.killEnemy(new Rifle()); s.killEnemy(new HandGun()); s.killEnemy(new ToyGun()); &#125;&#125;class Soldier &#123; public void killEnemy(Gun gun) &#123; gun.shoot(); System.out.println(&quot;soldier kill enemy&quot;); &#125;&#125;abstract class Gun &#123; abstract public void shoot();&#125;class ToyGun extends Gun &#123; public void shoot() &#123; System.out.println(&quot;toygun shoot&quot;); &#125;&#125;class Rifle extends Gun &#123; @Override public void shoot() &#123; System.out.println(&quot;rifle shoot&quot;); &#125; &#125;class HandGun extends Gun &#123; @Override public void shoot() &#123; System.out.println(&quot;handgun shoot&quot;); &#125;&#125; 现在的类图 UseUseSoldier+ killEnemy(gun Gun): voidGun+ shoot(): voidRifle+ shoot(): voidHandGun+ shoot(): voidToyGun+ shoot(): voidViewer does not support full SVG 1.1 因为玩具枪射击并不能杀人，所以需要将能杀人的枪和不能杀人的玩具枪提升到一个等级。这样就可以了。 123456789101112131415161718192021222324252627282930313233343536public class Main &#123; public static void main(String[] args) &#123; Soldier s = new Soldier(); s.killEnemy(new Rifle()); s.killEnemy(new HandGun()); &#125;&#125;class Soldier &#123; public void killEnemy(WeaponGun gun) &#123; gun.shoot(); System.out.println(&quot;soldier kill enemy&quot;); &#125;&#125;abstract class Gun &#123; &#125;abstract class WeaponGun extends Gun&#123; public abstract void shoot();&#125;class ToyGun extends Gun &#123; public void shoot() &#123; System.out.println(&quot;toygun shoot&quot;); &#125;&#125;class Rifle extends WeaponGun &#123; @Override public void shoot() &#123; System.out.println(&quot;rifle shoot&quot;); &#125; &#125;class HandGun extends WeaponGun &#123; @Override public void shoot() &#123; System.out.println(&quot;handgun shoot&quot;); &#125;&#125; UseUseSoldier+ killEnemy(gun Gun): voidWeaponGun+ shoot(): voidRifle+ shoot(): voidHandGun+ shoot(): voidToyGunGunViewer does not support full SVG 1.1 里氏替换原则一句话，继承尽量不要修改重写方法，子类型要完全能够替换基类型。但是知道今天还是不能够理解，继承不该重写方法还有何用？可能就有点像抽象不应该依赖于细节，基类就相当于细节了，基类一改动就全变了，需要把子类调到更高一层。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP搭建环境]]></title>
    <url>%2F%2Fposts%2F202002131.html</url>
    <content type="text"><![CDATA[简述搭建php环境需要用到三个软件 Apache：用作搭建服务器 PHP：用作解析php代码 Mysql：用作数据存储 下载Apache的时候我可是费了老劲了，短短10M我几乎花了五个小时才下载玩。在将PHP加载到Apache中的时候需要需要注意它们的版本，否则将会加载失败，我这里PHP2.2.25和httpd5.4.8、PHP2.4.23和httpd7.4.2是可以匹配成功的（httpd是Apache超文本传输协议(HTTP)服务器的主程序，下载Apache就是它），希望不要再踩坑了。 可以参考学习地址中老师讲的，完美配置。 下载apache有支持https的，给的是不支持的。适用于64位Windows10计算机。 Apache下载地址：点我 PHP下载地址：点我 Mysql下载地址：点我 安装安装就不需要多说了，为了方便以后的配置，建议在D盘目录下建立一个名称为server的文件夹，将三个软件都安装在这个文件夹中 httpd的安装目录为D:\server\apache PHP的安装目录为D:\server\php7 php是压缩包，不需要安装，只需要将里面的文件放到php7中就可以了 Mysql的安装目录D:\server\mysql 配置 将D:\server\apache\bin配置到环境变量中，mysql因为我是之前就安装了，如果没有环境变量也需要把它的bin目录加载进来。 打开D:\server\apache\conf\httpd.conf 需要认识几个地方 37行的ServerRoot就是服务的根目录，这里不需要修改。 将220行的#ServerName localhost:80修改成ServerName localhost,这里是服务的名字。 58行的Listen 80这里是服务监听的端口，通常不需要修改。 配置DNS域名解析 打开C:\Windows\System32\drivers\etc\hosts，注意要给管理员权限（但是我的给了也不行，后来用vscode才修改成功，今天再一看又可以修改了，迷），在最后一行添加 127.0.0.1 localhost 三项配置 在178行后面添加 123456#加载PHPLoadModule php7_module &#x27;D:/server/php7/php7apache2_4.dll&#x27;#将PHP配置文件加载到Apache配置文件PHPIniDir &#x27;D:/server/php7/php.ini&#x27;#分配给PHPAddType application/x-httpd-php .php 将D:\server\php7\php.ini-development复制一份，然后将php - 副本.ini-development修改为php.ini 将MySQL加载到PHP中这里我就简短的说明一下，因为如果只是学习php语言的话很可能用不到。但是很重要。 在上面推荐的视频中，使用的时php5.4.8版本，有mysql的扩展，但是下载的软件时php7.4.2版本，在这哥版本中已经删掉了php_mysql.dll扩展，但是可以使用php_pdo_mysql.dll来代替。 打开D:\server\php7\php.ini 搜索pdo_mysql,将927行;extension=pdo_mysql修改成extension=pdo_mysql 搜索extension_dir在757行后面添加 12;增加扩展路径extension_dir = &quot;D:/server/php7/ext&quot; 至此mysql已经加载成功，pdo是一个连接mysql数据库的工具。 检查打开CMD命令行，输入httpd -t指令，可以检查是否有语法错误，如果返回 12&#x27;httpd&#x27; 不是内部或外部命令，也不是可运行的程序或批处理文件。 说明是没有配置环境变量。 httpd -M可以看哪写模块加载到服务程序中。 注意每次更改配置文件都要重启一下。 测试如果前面一切都没有问题，那么现在就可以测试了 在D:\server\apache\htdocs中新建一个index.php,里面内容为 123&lt;?php echo &#x27;hello world&#x27;;?&gt; 在浏览器输入http://localhost/index.php正常时可以返回hello world的。不清楚的可以参考上面推荐的视频。]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蓝奏云分卷工具]]></title>
    <url>%2F%2Fposts%2F202002111.html</url>
    <content type="text"><![CDATA[:::tip一直以来深受百度网盘的折磨，下载速度慢，上传速度也慢，唯一的优点就是资源多，但是我并不苟同。::: 蓝奏云蓝奏云，下载不需要客户端，上传下载网速快，存储空间无限，唯一的缺点就是，上传单个文件的大小限制100MB，这个工具也就是为了解决这个问题。 分卷工具地址：zaxtyson/LanZouCloud-CMD 这个工具是一个cmd客户端，采用命令行的控制方式。优点就是解决了 上传文件限制100m内 上传文件格式受限 第一个问题，解决的思路是用rar.exe压缩工具对大文件进行分卷压缩，然后再上传。 第二个问题，采用添加合法后缀名的方式上传。 使用 工具下载地址LanZouCloud-CMD下载最新版 下载完后安装到一个文件夹中在.\lanzou-cmd中找到lanzou-cmd.exe，打开，登录，就可以用了。 使用方法点我 123文件有的是通过工具上传的，可能会将文件名修改了，自己下载的需要手动转换回来。转换规则是：1.将‘#’变成‘.’，2.去掉后面的‘.dll’]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>网盘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用ssh连接到gitHub Actions服务器]]></title>
    <url>%2F%2Fposts%2F202002101.html</url>
    <content type="text"><![CDATA[:::tipgitHub Actions以前只是知道可以做持续集成，可以部署静态网站。我就突发奇想，既然是服务器，那么有没有可能，连接到这个服务器，比如可以免费撸一个服务器玩，没想到还真可以。::: 方案一mxschmitt/action-tmate 会导致不能进行到下一个步骤，但是没有尝试。打不开正在构建的流程，看不到操作日志，所以查不到ssh连接。 For example 123456789name: CIon: [push]jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 //这段应该没什么用，拷贝代码，但是代码库是空的。 - name: Setup tmate session uses: mxschmitt/action-tmate@v1 方案二mxschmitt/action-tmate 也是通过tmate连接，解决了方案一突出连接后不能进行下一步骤。默认添加了我15分钟自动断开，但是可通过touch /tmp/keepalive命令解除。 但是这个会有一个问题，连接成功之后，大概几分钟不进行操作，将会失去控制。这个正在构建的操作日志，很多时候也会打不开，难道是今天太多了？ For example 12345678name: Ubuntuon: [push]jobs: Ubuntu: runs-on: ubuntu-latest steps: - name: Setup Debug Session uses: csexton/debugger-action@master 方案三P3TERX/debugger-action 这个是基于方案二改进的，超时事件设置为30分钟，同时也修改了操作日志大部分时间不能显示的问题。 For example 12345678name: Ubuntuon: pushjobs: Ubuntu: runs-on: ubuntu-latest steps: - name: SSH connection to Actions uses: p3terx/debugger-action@master 使用 创建一个工作流 然后把例子代码复制到.github/workflows/main.yml中 Start commit提交更改 查看操作日志，提取ssh并连接 此时应可以看到,实际上又两个这段代码，找到 ssh DG62jMpSsns6MNDszJUkzFzLG@sfo2.tmate.io复制到终端就可以连接上了。我用git终端连接上了。 win10 cmd终端我测试是不可以的 Xshell 6 终端我测试也是不可以的 1234567To connect to this session copy-n-paste the following into a terminal or browser:ssh DG62jMpSsns6MNDszJUkzFzLG@sfo2.tmate.iohttps://tmate.io/t/DG62jMpSsns6MNDszJUkzFzLGAfter connecting you can run &#x27;touch /tmp/keepalive&#x27; to disable the 30m timeout 结语好像进来了也没啥能干的。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开放封闭原则]]></title>
    <url>%2F%2Fposts%2F202002071.html</url>
    <content type="text"><![CDATA[开放封闭原则（Open-Closed Principle） 定义：对扩展开放，对修改关闭。即软件实体尽量在不修改原有代码的情况下进行扩展。也就是说，写的代码在扩展功能的时候尽量不要影响之前的代码部分，而是能够很好的拼装在一起。 作用： 实现高内聚，低耦合 优点，降低了程序各部分的耦合性，为了满足开闭原则，需要对系统进行抽象化设计，抽象化是开闭原则的关键。 开闭原则的适应性、灵活性、稳定性都很好，增加一个新功能不需要对系统基础的抽象层进行修改，只要拼接到一起就可以了，不影响系统其他的功能模块。 OCP例子问题：有一个图表演示系统，目前可以支持演示饼状图，柱状图，现在需要一个图形显示的管理器 代码如下： 12345678public class Main &#123;//代码1 public static void main(String[] args) &#123; System.out.println(&quot;this is OCP&quot;); ChartDisplayManager manager = new ChartDisplayManager(); manager.display(&quot;bar&quot;); manager.display(&quot;pie&quot;); &#125;&#125; 123456789101112131415public class ChartDisplayManager &#123;//代码2 public void display(String name) &#123; // TODO Auto-generated method stub switch (name) &#123; case &quot;pie&quot;: new PieChart().display(); break; case &quot;bar&quot;: new BarChart().display(); break; default: break; &#125; &#125;&#125; 12345public class PieChart &#123;//代码3 public void display() &#123; System.out.println(&quot;pie chart display&quot;); &#125;&#125; 12345public class BarChart &#123;//代码4 public void display() &#123; System.out.println(&quot;Bar chart display&quot;); &#125;&#125; 此时类之间的关系 BarChart+ display(): voidPieChart+ display(): voidChartDisplayManager+ display(name: String): voidUseUseUseUseViewer does not support full SVG 1.1 现在需要加一个折线图。添加折线图，需要新添一个类，并且还需要修改代码2，违反了开闭原则，所以需要修改代码的结构，新增一个抽象类BaseChart，包含有一个Display方法，使所有的图都继承它，然后修改此方法，就可以解决此问题了。 修改后的代码为： 123456789public class Main &#123;//代码1 public static void main(String[] args) &#123; System.out.println(&quot;this is OCP&quot;); ChartDisplayManager manager = new ChartDisplayManager(); manager.display(new BarChart()); manager.display(new PieChart()); manager.display(new LineChart()); &#125;&#125; 12345public class ChartDisplayManager &#123;//代码2 public void display(BaseChart base) &#123; base.display(); &#125;&#125; 12345public class PieChart extends BaseChart&#123;//代码3 public void display() &#123; System.out.println(&quot;pie chart display&quot;); &#125;&#125; 12345public class BarChart extends BaseChart&#123;//代码4 public void display() &#123; System.out.println(&quot;Bar chart display&quot;); &#125;&#125; 12345public class LineChart extends BaseChart&#123;//代码5 public void display() &#123; System.out.println(&quot;Line chart display&quot;); &#125;&#125; 123public abstract class BaseChart &#123;//代码6 public abstract void display();&#125; 类之间的关系 BaseChart+ display(): voidBarChart+ display(): voidPieChart+ display(): voidLineChart+ display(): voidChartDisplayManager+ display(base: BaseChart): voidExtendsExtendsExtendsExtendsExtendsExtendsUseUseViewer does not support full SVG 1.1]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ItemBank单选题遇到的问题]]></title>
    <url>%2F%2Fposts%2F202002061.html</url>
    <content type="text"><![CDATA[问题1 选项内容的末尾是字母时，会导致后一个选项生成失败。 13，14，31，44，54，56，81，107 :::tip预解决方法：每个选项不都是A.或者A、或者别的什么，那么可以把它们的规则添加到正则公式中，就可以解决这个问题了。对于题目也可以把这样类似的添加上去，不可以中用点就可以代替。1.和1、或者其他都应支持。::: 问题2 最后一个选项末尾时数字时，会导致下一个题目的ID错误，有可能会造成ID重复；会使本选项缺少数字。 30，49，72，84，96，102，103 :::tip预解决方法：在D选项的末尾添加一个空格。不对，并不知道D选项的具体范围，所以找不到D选项的末尾。可以这样，会匹配到一个数字点非数字的表达式，虽然不知道D的范围，但是可以找到点具体的位置，只需要知道上一个题号占几位，判断加一之后是否会增加位数，以此来往前推题号，但是这也遇到了一个问题，就是当题号无序的时候，或者变化的不规则，增长速度不一样就会出问题了，例如一下从88变到了103。其实可以规避这样的问题，就是在他们之间取一个最小值，但是当两种事件同时发生的时候，就又会出问题了。暂时先这样解决吧。前提是必须要题目必须要有序。！！！不可缺少9，99，999，9999题号的题，升序就行了。::: 问题3 当题目中包含数字点非数字的时候会出错，例如202.119.2.X中的2.X是符合我的正则表达式的，很尴尬，现在解决不了这样的问题。 259]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络题库之判断题（测试）]]></title>
    <url>%2F%2Fposts%2F202002062.html</url>
    <content type="text"><![CDATA[一、判断题(共277小题） 1.计算机网络是现代计算机技术和通信技术密切结合的产物。() T F 确定 2.计算机网络是将地理位置不同且具有独立功能的多个计算机系统通过通信线路和通信设备相互连接在一起，通过网络操作系统及网络协议软件进行管理，以实现资源共享和相互通信的系统。() T F 确定 3.从逻辑上讲，一个计算机网络是由通信子网和资源子网构成的。() T F 确定 4.计算机网络发展阶段经历了近程联机系统、初期计算机网络和开放式标准化网络。() T F 确定 5.在计算机网络中负责节点间的通信任务的那一部分称为资源子网。() T F 确定 6.网络的发展趋势必将导致计算机网络、通信网络、广播电视网络三网合一，网络安全、服务质量、多媒体信息的快速传送将成为网络性能的关键问题。() T F 确定 7.网络拓扑结构是指节点相连形成的几何形状。网络常见的拓扑结构有星型结构、总线型结构、环型结构、树型结构、网状结构、总线星型混合结构等。() T F 确定 8.按地理分布范围为标准，计算机网络可分为局域网、城域网和校园网3种。() T F 确定 9.网络软件包括网络操作系统、通信协议、网络管理与应用软件3类。() T F 确定 10.通信介质分为有线介质和无线介质两类，有线介质一般包括双绞线、同轴电缆、光纤3种。() T F 确定 11.计算机网络产生的基本条件是通信技术与计算机技术的结合。() T F 确定 12.半双工通信的网络上的每个设备能够同时发送和接收数据。() T F 确定 13.数据可分为模拟数据和数字数据两大类。() T F 确定 14.数字数据是一组离散的数据，模拟数据是一组连续的数据，经过采样、量化、编码后可以转换为数字数据。() T F 确定 15.从通信双方信息交互的方式来看，可分为单工、半双工和全双工3种基本方式。() T F 确定 16.将发送端的模拟信号变换成数字信号的过程称为调制，而将接收端把数字信号还原成模拟信号的过程称为解调。() T F 确定 17.为了利用廉价的电话公共交换网实现计算机之间的远程通信，必须将发送端的模拟信号变换成能在电话公共交换网上传输的数字信号。() T F 确定 18.在计算机通信与网络中，广泛采用的信号同步方式有同步和异步两种。() T F 确定 19.按数据传送技术划分，交换网络可分为电路交换、报文交换和分组交换。() T F 确定 20.用电路交换技术完成数据传输要经历建立电路和拆除电路2个过程。() T F 确定 21.为了进行数据传输，在数据传输之前先要在发送站与接收站之间建立一条逻辑通路，这种交换方式称为电路交换技术。() T F 确定 22.现有的公共数据网，如我国的CNPAC、美国的TELENET等，广泛采用的交换技术为虚电路交换技术。() T F 确定 23.电信号最常用的多路复用技术是时分多路利用和频分多路复用，此外还有空分多路复用和统计时分多路复用。() T F 确定 24.将一种数据形式转换成适合于在信道上传输的某种电信号形式，这类技术统称为编码。() T F 确定 25.表示数据传输可靠性的指标是误码率。() T F 确定 26.波分多路复用技术主要用于电缆通信。() T F 确定 27.相移键控是用数字基带信号控制正弦载波信号的相位，又可以分为绝对相位和相对相位。() T F 确定 28.物理层的特性有机械特性、电气特性、规程特性和功能特性4种。() T F 确定 29.物理层是利用其4个特性在DTE和DCE之间实现对物理信道的建立、维护和拆除功能。() T F 确定 30.数据链路层中传送的数据快称为报文，在数据链路层中，差错控制的两种基本方法是检错和纠错。() T F 确定 31.网络层的3个功能是路径选择、流量控制、网络连接建立与管理，负责将报文分组从源节点传送到目的节点。() T F 确定 32.网络层所提供的服务可分为面向连接的服务和无连接的服务。() T F 确定 33.传输层负责错误的确认和恢复，以确保信息的可靠传递，它位于应用层和网络层之间。() T F 确定 34.OSI的会话层处于传输层提供的服务之上，给应用层提供服务。() T F 确定 35.会话层的主要功能是建立会话控制。会话连接的释放采用有序释放的方式，它包括4个步骤，依次分别是请求、指示、响应和确定。() T F 确定 36.表示层位于OSI模型的第6层，它的主要功能是语法转换和表示上下文。() T F 确定 37.TCP/IP网络体系结构，网际层主要协议有IP、ARP、RARP和ICMP。() T F 确定 38.TCP/IP网络体系结构中，传输层端到端主要协议有TCP和UDP。() T F 确定 39.TELNET提供了3种基本服务，他们是网络虚拟终端、客户和服务器协商机制和对称连接机制。() T F 确定 40.局域网的网络层/LLC子层界面服务规范提供两种服务方式，它们是确认无连接服务和面向连接服务。() T F 确定 41.LLC为服务访问点间的数据通信定义了两种操作，它们是I型操作和II型操作。() T F 确定 42.交换式局域网的设计目标是低成本、高延迟、易管理、高性能。() T F 确定 43.数据链路层的协议数据单元是帧。() T F 确定 44.网络层的协议数据单元是帧。() T F 确定 45.数据链路层的协议数据单元是分组。() T F 确定 46.网络层的协议数据单元是IP报文。() T F 确定 47.传输层的协议数据单元是分组。() T F 确定 48.数据的加密与解密功能是传输层的功能。() T F 确定 49.数据的压缩与解压功能是会话层的功能。() T F 确定 50.数据的加密与解密功能是表示层的功能。() T F 确定 51.路由选择功能是传输层的功能。() T F 确定 52.路由选择功能是网络层的功能。() T F 确定 53.在TCP/IP体系结构中，ARP协议处于第二层。() T F 确定 54.在TCP/IP协议结构中，ICMP协议处于第三层。() T F 确定 55.在TCP/IP协议结构中，TCP协议处于第三层。() T F 确定 56.在TCP/IP协议结构中，IP协议处于第三层。() T F 确定 57.在传统的以太网中，采用的拓扑结构是总线型的。() T F 确定 58.在交换式的以太网中，采用的拓扑结构是总线型的。() T F 确定 59.ARP的功能是将IP地址解析为MAC地址。() T F 确定 60.RARP的功能是将IP地址解析为MAC地址。() T F 确定 61.IP报文的分片与重组都发生在路由器上。() T F 确定 62.IP报文格式中的总长度包含头部长度和数据区长度。() T F 确定 63.ICMP源抑制报文是由路由器发出的。() T F 确定 64.PING命令使用ICMP的请求/应答报文。() T F 确定 65.在路由表中，对于默认路由，可以采用255.255.255.255作为子网掩码。() T F 确定 66.使用路由器组网时，网络不可以形成环。() T F 确定 67.OSPF是动态路由选择协议。() T F 确定 68.RIP是内部网关协议。() T F 确定 69.TCP提供全双工通信。() T F 确定 70.TCP的连接的建立与关闭采用3次握手的机制。() T F 确定 71.传输层的主要功能是负责主机到主机的端对端的通信。() T F 确定 72.应用层提供TCP/IP应用协议以及应用程序的编程接口。() T F 确定 73.传输层提供TCP/IP应用协议以及应用程序的编程接口。() T F 确定 74.文件传输协议(FTP)使用TCP服务。() T F 确定 75.介质访问控制子层称为LLC层，专门用来解决广播网中信道分配的问题。() T F 确定 76.对于不同的局域网，其LLC子层是不同的，但MAC子层是相同的。() T F 确定 77.局域网的数据链路层划分为MAC和LLC两个子层。() T F 确定 78.局域网常用的媒体访问控制方法有CSMA/CD、令牌环和令牌总线3种技术，其中令牌总线只适用于总线拓扑结构网络。() T F 确定 79.采用CSMA/CD媒体访问控制方法时，为了减少冲突的发生，源站点在发送帧之前要侦听信道。() T F 确定 80.路由器设备常用于延伸网络的长度，它在两段电缆间向两个方向传送数字信号，在信号通过时将信号放大和还原。() T F 确定 81.由于穿越局域网的链路只有一条，不需要设置路由选择和流量控制功能，所以局域网不需要设置网络层。() T F 确定 82.令牌环的特点是在轻负荷时，由于存在等待令牌的时间，所以效率低，但在重负荷时，对各站公平访问且效率高。() T F 确定 83.无线网络产品包括无线网卡、无线AP或无线路由器和天线等。() T F 确定 84.10Mbps的局域网产品包括10Base2、10Base5、10BaseT、10BaseF和10Broad36共5种类型。() T F 确定 85.IEEE802.3或Ethernet规定数据的传输必须用不归零码编码进行。() T F 确定 86.令牌总线介质访问控制访问是将局域网物理总线的站点构成一个逻辑环。() T F 确定 87.在以太网中，介质访问控制方式是有冲突检测的栽波侦听多路访问。() T F 确定 88.在以太网中，介质访问控制方式是令牌总线。() T F 确定 89.在FDDI中，介质访问控制方式是CSMA/CD。() T F 确定 90.在FDDI中，介质访问控制方式是令牌。() T F 确定 91.100M的HUB不具有路径检测功能。() T F 确定 92.使用100M的HUB组网时，网络不可以形成环。() T F 确定 93.网卡工作在在OSI/RM的数据链路层。() T F 确定 94.SWITCH具有通信过滤功能。() T F 确定 95.100M的SWITCH具有路径检测功能，可以级联10M的SWITCH。() T F 确定 96.使用100M的SWITCH组网时，网络不可以形成环。() T F 确定 97.IP地址255.255.255.255是直接广播地址。() T F 确定 98.C类网络地址192.168.12.0进行子网划分，如果子网号采用4位，则可以划分16个可用的子网。() T F 确定 99.一个主机可以有多个IP地址。() T F 确定 100.一个路由器可以同时属于多个网络。() T F 确定 101.微软(MicroSoft)公司内部采用NetBEUI网络协议。() T F 确定 102.Windows2000/2003操作系统文件所在文件夹的默认名称是Winnt。() T F 确定 103.对等结构网络中，每个节点既要完成客户端的功能，又要完成服务器的功能。() T F 确定 104.WindowsNT操作系统可以分为WindowsNTServer和WindowsNTWorkstation两种版本，后者用于服务器。() T F 确定 105.UNIX的核心协议是TCP/IP。() T F 确定 106.Windows2000/2003的域用户账号是由一个用户名和一个口令来标识，需要用户在登录时间输入，又可以分为内置账号和自定义账号。() T F 确定 107.文件夹的权限类型包括完全控制、修改、读取及运行、读取、写入等几种。() T F 确定 108.利用convert命令可以将FAT32转变为NTFS文件系统。() T F 确定 109.域是Windows2000/2003目录服务的基本管理单位，采用域模式的最大好处是单一网络登录功能，任何一个用户只要拥有一个账号就可漫游网络。() T F 确定 110.Linux规定每个用户必须有一个注册名和一个口令。注册名可从系统管理员处得到。() T F 确定 111.Linux系统用户可通过键入mail命令读取信件。() T F 确定 112.利用Is可以查看Linux文件的目录项，利用cat或pr可以打印文件。() T F 确定 113.在Linux系统中是，cd的功能是改变工作目录，rmdir的功能是删除目录，mkdir的功能是创建目录。 T F 确定 114.Linux文件包括普通文件、目录文件和设备文件等。() T F 确定 115.在NetWare网络中，具有最高权限的用户是系统管理员。() T F 确定 116.只要一个内核中实现了TCP/IP协议的操作系统，就可以成为TCP/IP网络操作系统。() T F 确定 117.域名系统就是把域名转换成IP地址。() T F 确定 118.域名系统就是把IP地址转换成域名。() T F 确定 119.A类地址可以划分126网络。() T F 确定 120.域名从左到右网域逐级变高，低一级网域包含高一级网域。() T F 确定 121.在WindowsNT中共有三种类型的组：本地组、全局组、一般组。() T F 确定 122.帧中继技术标准中的虚电路又可以分为PVC和SVC两类。() T F 确定 123.帧中继与X．25在设计思想上有明显的差别，X．25强调传输效率和传输性能；而帧中继则着眼于纠错与流量控制。() T F 确定 124.帧中继使用永久虚电路PVC，PVC通过数据链路帧地址中的虚电路标识符来识别。() T F 确定 125.X．25所规范的物理层协议是X.21。() T F 确定 126.ATM网络的"打包"最大特点是"小步快跑"的快速分组交换方式。() T F 确定 127.DCE通常指的是用户端的主机或终端等，DTE则常指同步调制解调器等设备。() T F 确定 128.广域网中最高层是传输层，传输层为上层提供的服务分两种，即无连接的网络服务和面向连接的网络服务。() T F 确定 129.广域网由一些节点交换机及连接这些交换机的链路组成。() T F 确定 130.OSPE是一种链路状态路由协议，IGRP是距离矢量路由协议。() T F 确定 131.BGP是自治系统之间的路由协议。() T F 确定 132.网络互联设备网桥所涉及的OSI模型层次最多。() T F 确定 133.网桥通过将帧的目标地址和自己地址表中的信息进行比较，实现帧的转发和过滤。() T F 确定 134.如果在一个链路状态路由的互联网络中有5个路由器和6个网络，那么存在5个路由表，每个表中至少有30个表项。() T F 确定 135.100Mbps的交换机采用直通式交换时，其最小延迟时间为10S。() T F 确定 136.用中继器扩展为10BASE2以太网，最多允许5个中继器，6个网段，每个网段的最大长度为185m。() T F 确定 137.一台具有24端口的100Mbps交换机，其总体集合带宽在理论上可以达到100X24Mbps。() T F 确定 138.127.0.0.1是回路测试地址。() T F 确定 139.MAC地址是指安装在主机上的网卡的地址。() T F 确定 140.MAC地址是48位的二进制数。() T F 确定 141.端口号是16位的二进制数。() T F 确定 142.IPV4采用48位的IP地址。() T F 确定 143.126.123.12.123是A类地址。() T F 确定 144.A类地址的子网掩码是255.255.0.0。() T F 确定 145.外置式调制解调器，一般应该接在计算机的串行口上。() T F 确定 146.网络互连必须遵守有关的协议、规则或约定。() T F 确定 147.各种操作系统支持网络互连，首先必须有共同的"语言"--协议。() T F 确定 148.Internet服务供应商简称为ISP;远程登录简称为TELNET;万维网简称为WWW;电子邮件简称为E-mail。 T F 确定 149.FTP是文件传输协议的英文缩写；HTML是超文本标记语言的英文缩写；SMTP是简单邮件传输协议的英文缩写；POP是邮局协议的英文简写。() T F 确定 150.MIME称为多用途网际邮件扩展协议,使用支持MIME的工具可以以附件的方式来发送其他文件。() T F 确定 151.用户在Internet上发送E-mail是通过SMTP协议来实现的，收E-mail是通过POP3协议来实现的，还有一种接收协议是IMAP4协议。() T F 确定 152.Internet其实就是一台提供特定服务的计算机。() T F 确定 153.在URL中不能有空格。() T F 确定 154.CuteFTP是FTP的一种常用的服务器程序。() T F 确定 155.网络中机器的标准名称包括域名和主机名，采取多段表示方法，各段间用圆点分开。() T F 确定 156.网络域名地址一般都通俗易懂，大多采用英文名称的缩写来命名。() T F 确定 157.为了减少DNS服务器的负担，在主机的内存中保存了最近使用的域名和IP地址的对应关系，以提高服务器的负担，提高查询效率。() T F 确定 158.当一个主机请求查询域名时，首先向根域名服务器提出查询请求。() T F 确定 159.FTP是表示层协议，采用了Telnet协议和其他底层协议的一些功能。() T F 确定 160.局域网的安全措施首选防火墙技术。() T F 确定 161.安全审计技术是网络安全的关键技术之一。() T F 确定 162.拒绝服务是一种系统安全机制，它保护系统以防黑客对计算机网络的攻击。() T F 确定 163.完整性检查程序是反病毒程序，它通过识别文件和系统的改变来发现病毒。() T F 确定 164.数据库的加密与一般的网络通信加密相同，采用类似的加密方法与密钥管理方法。() T F 确定 165.防火墙不能防范不通过它的连接。() T F 确定 166.通过合并堡垒主机与内部路由器构建防火墙是一个优选方案。() T F 确定 167.网络信息管理库是管理对象的集合，它是一个实际数据库。() T F 确定 168.Kerberos是用于解决公钥密码的密钥分配与管理的一种有效机制。() T F 确定 169.局域网中一般使用NetBEUI、IPX/SPX和TCP/IP等3种协议。() T F 确定 170.选择通信协议的基本原则是尽量少地选用网络协议、注意协议的版本和协议的一致性。() T F 确定 171.IP地址分为两个部分，即网络部分和主机部分。() T F 确定 172.双绞线一般分为非屏蔽双绞线和屏蔽双绞线两大类。() T F 确定 173.在局域网中，从网卡到集线器间的连接为直通，即两个RJ-45连接器中的导线的分布应统一。() T F 确定 174.只有将计算机中的文件设置为共享，其他用户才能通过“网上邻居”或其它途径访问它们，而文件的共享通常是以共享文件的形式来实现的。() T F 确定 175.共享文件夹权限的设置是具有累加性的，如果某个用户属于多个组，则该用户对共享文件夹的权限是这些组对文件夹权限的总和。() T F 确定 176.共享文件夹的权限设置是用于控制网络用户访问本计算机共享的文件夹的资源，对于本地登录的用户是不起作用的。() T F 确定 177.活动目录用于组织资源，而DNS用于查找资源，只有它们共同工作才能为用户或其他请求返回信息。() T F 确定 178.利用DHCP协议可以对IP地址等信息进行集中管理。() T F 确定 179.DHCP服务器的IP地址应该是动态的，其IP地址、子网掩码、默认网关等有关数据必须用手动的方式输入。() T F 确定 180.如果有多个DHCP服务器响应，则DHCP客户端只接受第一个收到的DHCP服务器的响应。() T F 确定 181.在Windows2003DHCP服务器中，可以根据实际需要设置一个或多个作用域，这些作用域可以同时启动和停止。() T F 确定 182.要安装DHCP服务器，就必须安装TCP/IP协议，并设置固定的IP地址信息。() T F 确定 183.设置时限的目的是可以定时回收已经没有人使用的IP地址。() T F 确定 184.当一个网络上的客户端比可分配的IP地址数少时，可以把“租约期限”设置得长一些，默认为7天。() T F 确定 185.在使用TCP/IP协议的网络中，DNS服务提供了一种将IP地址映射为计算机名称的方法。() T F 确定 186.在使用TCP/IP协议的网络中，DNS服务提供了一种将IP地址映射为计算机名称的方法。() T F 确定 187.Windows2003的DNS是一种开放式协议，完全支持并遵守RFC标准规范。() T F 确定 188.域名系统允许DNS名称空间分成几个区域。() T F 确定 189.DNS服务器在管理时是以区域为单位，而不是以域为单位管理的。() T F 确定 190.IIS通过使用超文本传输协议传输信息，它能够提供WWW服务、FTP服务、SMTP服务和NNTP服务。() T F 确定 191.FPT具备双向传输功能，它可以在不同类型的计算机之间传送文件。() T F 确定 192.通常情况下，一封电子邮件的发送需要经过用户代理、传输代理和投递代理等3个程序的参与。() T F 确定 193.网络规划课程设计的目的有两个，一个是加深对计算机网络通信系统工作原理的理解，另一个是提高学生网络应用的能力。() T F 确定 194.网络规划课程设计的最终成果是一分网络规划设计方案书。() T F 确定 195.布线系统是建筑物或建筑群内信息传递的媒介。() T F 确定 196.在综合布线系统中，由于多个子系统独立布线，并采用不同的传输媒介，所以给建筑物的设计和今后的管理带来了一系列的弊端。() T F 确定 197.21世纪的一些重要我处就是数字化、网络化和信息化，它是一个以网络为核心的信息时代。() T F 确定 198.因特网虽然非常复杂，但从其工作方式上看，可以划分为两大块，即边缘部分和核心部分。() T F 确定 199.总时延＝发送时延＋传播时延＋处理时延＋排队时延。() T F 确定 200.信道或网络利用率过高会产生非常大的时延。()。 T F 确定 201.传输媒体分为两大类即导向传输媒体和非导向传输媒体。() T F 确定 202.硬件地址又称为IP地址。() T F 确定 203.传播媒体本身属于物理层。() T F 确定 204.信噪比就是信号的平均功率和噪声的平均功率之比。() T F 确定 205.信道的带宽或信道中的信噪比越大，信息的极限传输速率就越高。() T F 确定 206.单模光纤的纤芯很细，其直径只有几个微米，所以制造成本很低。() T F 确定 207.时分复用的所有用户是在不同的时间占用同样的频带宽度。() T F 确定 208.xDSL技术是用数字技术对现有模拟电话用户线进行改造，使它能够承载宽带业务。() T F 确定 209.数据链路层使用的信道主要有两种类型即点结点信道和广播信道。() T F 确定 210.当网桥刚刚连接到以太网时，其转发表是空的。() T F 确定 211.链路和数据链路是一个概念。() T F 确定 212.透明传输是指数据直接通过系统中的互连功能模式而不进行RLP纠错。() T F 确定 213.在使用CSMA/CD协议时，一个站不可能同时发送和接收。() T F 确定 214.网络层向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务。() T F 确定 215.网络层不提供服务质量的承诺。() T F 确定 216.利用IP协议可以使性能各异的网络在网络层上看起来好像是一个统一的网络。() T F 确定 217.物理地址是数据链路层和物理层使用的地址。() T F 确定 218.IP地址是网络层及以上各层使用的地址。() T F 确定 219.ARP的作用是把MAC地址转换成IP地址。() T F 确定 220.RARP的作用是把IP地址转换成MAC地址。() T F 确定 221.因特网中的所有路由器，对目的主机是专用地址的数据报一律不进行转发。() T F 确定 222.利用因特网作为本机构各专用网之间的通信载体的专用网称为虚拟专用网VPN。() T F 确定 223.隧道技术适用于多播组的位置在地理上很分散的情况。() T F 确定 224.洪泛与剪除适合于较小的多播组，而所有的组成员接入的局域网也是相邻接的。() T F 确定 225.基于核心的发现技术对于多播组的大小在较大范围内变化时不适合。() T F 确定 226.运输层向它上面的应用层提供通信服务。() T F 确定 227.严格的讲，两个主机进行通信就是两个主机中的应用层互相通信。() T F 确定 228.在一个主机中经常有多个应用进程同时分别和另一个主机中的多个应用进程通信。() T F 确定 229.网络层为主机之间提供逻辑通信，而运输层为应用进程之间提供端到端的逻辑通信。() T F 确定 230.运输层要对收到的报文进行差错检测，而网络层只对数据报的数据进行检验而不检查首部部分。() T F 确定 231.运输层有两种不同的运输协议，即面向连接的UDP和无连接的TCP()。 T F 确定 232.在协议栈层间的抽象的协议端口是软件端口，和路由器或交换机上的硬件端口是完全不同的概念。 T F 确定 233.软件端口是不同硬件设备进行交互的接口，而硬件端口是应用层的各种协议进程与运输实体进行层间交互的一种地址。() T F 确定 234.服务器端使用的端口号分为两类，一类叫熟知端口号或系统端口号，另一类叫登记端口号。() T F 确定 235.所谓流量控制就是让发送方的发送速率不要太快，要让接收方来得及接收。() T F 确定 236.对网络中某一资源的需求超过了该资源所能提供的可用部分，网络的性能就要变坏，这种情况就叫拥塞 T F 确定 237.客户和服务器都是指通信中涉及的两个应用进程，客户是服务请示方，服务器是服务提供方。() T F 确定 238.域名系统是因特网使用的命名系统，用来把机器名字转换为IP地址。() T F 确定 239.计算机网络面临的安全威胁有截获、中断、篡改、伪造等。() T F 确定 240.在被动攻击中，攻击者只是观察和分析某一个协议数据单元PDU而不干扰信息流。() T F 确定 241.主动攻击是指攻击者对某个连接中通过的PDU进行各种处理。() T F 确定 242.从类型上看，主动攻击又可划分为更改报文流、拒绝服务、伪造连接初始化。() T F 确定 243.恶意程序种类很多，对网络安全威胁较大的主要有计算机病毒、计算机蠕虫、特洛伊木马和逻辑炸弹。 T F 确定 244.加密密钥与解密密钥相同的密码体制称为公钥密码体制。() T F 确定 245.加密密钥与解密密钥不同的密码体制称为对称密码体制。() T F 确定 246.任何加密方法的安全性取决于密钥的长度，以及攻破密文所需的计算量。() T F 确定 247.鉴别是要验证通信的双方的确是自己所要通信的对象，而不是其他的冒充者。() T F 确定 248.报文摘要MD是进行报文鉴别的复杂方法。() T F 确定 249.密钥管理包括密钥的产生、分配、注入、验证和使用。() T F 确定 250.鉴别首部AH提供源点鉴别和数据完整性，但不能保密。() T F 确定 251.在使用AH或ESP之间，先要从源主机到目的主机建立一条网络层的逻辑连接即安全关联SA。() T F 确定 252.运输层的安全协议主要有安全套接字SSL和运输层安全协议TLS。() T F 确定 253.应用层的安全协议主要有PGP和PEM。() T F 确定 254.一般把防火墙里面的网络称为可信的网络，而把防火墙外面的网络称为不可信的网络。() T F 确定 255.防火墙技术一般分为两类即网络级防火墙和应用级防火墙。() T F 确定 256.狭义的IP电话则不仅仅是电话通信，而且还可以是在IP网络上进行交互式多媒体实时通信，甚至还包括即时通信IM。() T F 确定 257.NetBEUI协议是IBM公司于1985年开发完成的，它是一种体积小、效率高、速率快的通信协议。() T F 确定 258.如果一台服务器上安装了多个网卡，或要采用路由器等设备进行两个局域网的互联时，不能使用NetBEUI通信协议。() T F 确定 259.NWLink协议是Novell公司IPX/SPX协议在微软网络中的实现。() T F 确定 260.如果要让两台实现互联的计算机间进行对话，它们使用的通信协议必须相同。() T F 确定 261.IP地址分为两个部分，即网络部分和主机部分。() T F 确定 262.文件的共享通常是以共享文件夹的形式来实现。() T F 确定 263.共享文件夹就是将该文件夹在网络上公布，以方便网络中其他用户查询和使用。() T F 确定 264.共享文件夹权限不具有累加性。() T F 确定 265.共享文件夹的权限设置对于本地登录的用户不起作用。() T F 确定 266.用户对共享文件夹中的子文件夹和文件的最终权限由共享权限与安全权限两者中最严格的来设置。 T F 确定 267.单独的一个文件可以设置为共享。() T F 确定 268.在访问基于Windows2003系统的共享资源时可能会要求输入用户名和密码。() T F 确定 269.共享文件夹在其他计算机上显示为远地磁盘，不能直接复制，而只能打开后复制这个磁盘下的文件或者文件夹。() T F 确定 270.ActiveDirectory是用于Windows2003的目录服务，它存储着网络上各种对象的有关信息，并使该信息易于管理员和用户查找及使用。() T F 确定 271.活动目录需要DNS才能工作，即DNS用于组织资源，而活动目录用于查找资源。() T F 确定 272.DNS不需要活动目录就能运行。() T F 确定 273.DHCP是一种简化主机IP配置管理的TCP/IP标准，利用该协议可以对IP地址等信息进行集中管理。 T F 确定 274.DHCP服务器的IP地址应该是静态的，其IP地址、子网掩码、默认网关等有关数据必须手动输入。() T F 确定 275.由于Windows2003中的计算机名称采用DNS的命名方式，因此在Windows域内应该安装DNS服务器。 T F 确定 276.在服务器计算机上安装活动目录后，如果不能根据服务器的当前配置定位一个DNS服务器，则Windows2003Server可以自动安装和配置DNS服务器。() T F 确定 277.要想通过Telnet或Web方式登录和管理交换机，除了要设置交换机的管理IP地址以外，还必须设置远程登录密码和交换机的特权密码。() T F 确定]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络题库之单选题（测试）]]></title>
    <url>%2F%2Fposts%2F202002063.html</url>
    <content type="text"><![CDATA[单项选择题(共376小题） 1.第2代计算机网络的主要特点是()。 A、计算机-计算机网络 B、以单机为中心的联机系统 C、国际网络体系结构标准化 D、各计算机制造厂商网络结构标准化 确定 2.网络协议的3个要素：语法、语义和()。 A、工作原理 B、时序 C、进程 D、传输服务 确定 3.以下的网络分类法中，分类方法有误的是()。 A、局域网/广域网 B、对等网/城域网 C、环型网/星型网 D、有线网/无线网 确定 4.传输介质是网络中收发双方之间的物理通路。下列传输介质中，具有很高的数据传输速率、信号传输衰减最小、抗干扰能力最强的是()。 A、电话线 B、同轴电缆 C、双绞线 D、光缆 确定 5.Internet是一个非常重要的网络，()是因特网使用的最基本、最重要的协议。 A、IPX/SPX协议 B、NCP协议 C、TCP/IP协议 D、NetBIOS协议 确定 6.网络拓扑结构一般有星型结构、总线结构、环型结构、网状结构等，大型校园网属于()。 A、星型结构 B、总线结构 C、环型结构 D、网状结构 确定 7.计算机网络有很多功能，最主要的是()。 A、电子邮件 B、电子商务 C、WWW D、资源共享 确定 8.下列各网络设备属于通信子网的是()。 A、客户机 B、接口信息处理机 C、终端 D、服务 确定 器9.下列设备属于资源子网的是()。 A、打印机 B、集中器 C、路由器 D、交换机 确定 10.计算机网络中可以共享的资源包括()。 A、硬件、软件、数据、通信信道 B、主机、外设、软件、通信信道 C、硬件、程序、数据、通信信道 D、主机、程序、数据、通信信道 确定 11.计算机网络可以分为局域网、()、广域网。 A、校园网 B、城域网 C、宽带网 D、教室网 确定 12.局域网按照()来划分，又可以分成总线结构和环型结构两种。 A、传输媒体 B、使用材料 C、拓扑结构 D、通讯方式 确定 13.在总线结构的局域网中，通常是采用()机制来进行通讯的。 A、ATM B、CDMA C、FTTB+LAN D、CSMA/CD 确定 14.下面属于宽带网接入方式的是()。 A、ADSL B、ISDN C、ATM D、电话拨号上网 确定 15.中国教育科研网是一家以()为主的广域网。 A、大专院校 B、所有学校 C、教育单位 D、教育和科研单位 确定 16.在进行模拟传输时，将数字信号转换成模拟信号的过程称为()。 A、编码 B、解码 C、调制 D、解调 确定 17.基带系统是使用()进行传输的。 A、模拟信号 B、多信道模拟信号 C、数字信号 D、多路数字信号 确定 18.在计算机内部的数据通信常以()方式进行。 A、单工 B、并行 C、半双工 D、全双工 确定 19.允许数据在两个方向上传输，但某一时刻只允许数据在一个方向上传输，称这种通信方式为()。 A、单工 B、并行 C、半双工 D、全双工 确定 20.在同一个信道的同一个时刻，能够进行双向数据传送的通信方式是()。 A、单工 B、半双工 C、全双工 D、上述3种均不是 确定 21.采用曼彻斯特编码的数据编码技术，目的是()。 A、在信道上传输模拟信号 B、节省信道带宽 C、能提取位同步时钟信号 D、增加数据传输率 确定 22.将物理信道的总带宽分割成若干个与传输单个信号带宽相同的子信道，每个子信道传输一路信号，称这种复用技术为()。 A、空分多路复用 B、同步时分多路复用 C、频分多路复用 D、异路时分多路复用 确定 23.将物理信道按时间分割成若干个时间片轮换给多个信号使用，每一时片由复用的一个信号占用，这样可在一条物理信道上传输多个数字信号，这种复用技术叫()。 A、空分多路复用 B、同步时分多路复用 C、频分多路复用 D、时分多路复用 确定 24.实际上提供虚电路服务的通信子网内部的实际操作()。 A、只可以是虚电路服务 B、即可用虚电路也用数据报 C、只可以是数据报 D、即不是虚电路也不是数据报 确定 25.报文的内容不按顺序到达目的节点的是()方式。 A、电路交换 B、报文交换 C、虚电路交换 D、数据报交换 确定 26.报文交换的传送方式采用()方式。 A、广播 B、存储－转发 C、异步传输 D、同步传输 确定 27.当网络以一个报文为单位进行“存储－转发”的是()。 A、电路交换 B、报文交换 C、虚电路交换 D、数据报交换 确定 28.采用专用线路通信时，可以省去的通信阶段是()。 A、建立通信线路 B、建立数据传输链路 C、传送通信信号和数据 D、双方确认通信结束 确定 29.下列说法中正确的是()。 A．虚电路与电路交换没有实质不同 B．在通信的两站间只能建立1条虚电路 C．虚电路有连接建立、数据传输、连接拆除3个阶段 D．虚电路不保证分组顺序到达 确定 30.四相调制(单个调制状态对应两个二进制位)的比特率为波特率的()倍。 A、1 B、2 C、3 D、4 确定 31.具有检错和纠正功能的编码是()。 A、奇偶校验法 B、CRC C、海明码 D、以上3种都可以 确定 32.数字信号传输有异步传输、同步传输，这种划分的依据是()。 A、字符传输顺序的不同 B、字符同步方式不同 C、字符起始信号的极性不同 D、数据传输方向不同 确定 33.同步传输中的同步是指()。 A．时钟频率同步 B、时钟同步 C、传输速度同步 D、位、字符同步 确定 34.下列可用于CRC校验的生成多项式的是()。 A、X(16)+X(15)+X(2)+1 B、X(16)+X(15)+X+1 C、X(16)+X(13)+X+1 D、X(16). 确定 35.在系统间提供可靠的数据传输的层次是()。 A、物理层 B、数据层 C、网络层 D、传输层 确定 36.数据链路层是OSI参考模型中()。 A、第一层，介于物理层和应用层之间 B、第二层，介于物理层和网络层之间 C、第三层，介于物理层和应用层之间 D、第三层，介于物理层和网络层之间 确定 37.下列选项中，不属于数据链路层所具有的功能的是()。 A、帧同步 B、阻塞控制 C、差错控制 D、流量控制 确定 38.数据链路层的传送单位是()。 A、位 B、字符 C、速率 D、帧 确定 39.下面选项中不属于帧同步所采用的方法的是()。 A、使用字符填充的首尾定界法 B、使用位填充的首尾标志法 C、违例编码法 D、反馈检测 确定 40.下面所列帧同步方法中，哪一种方法是以一组特定的位模式(如01111110)来标志一帧的起始与终止()。 A、字符填充法 B、违例编码法 C、位填充标志法 D、字节计数法 确定 41.链路层功能主要用于面向()的服务。 A、连接 B、对象 C、应用 D、用户 确定 42.下列选项中属于差错控制方法的是()。 A、反馈检测 B、违例编码法 C、自动重发请求(ARQ) D、自动更正 确定 43.反馈检测主要用于面向()的异步传输中，如终端与远程计算机间的通信。 A、字符串 B、帧 C、字符 D、位 确定 44.自动重发请求法有若干种实现方案，下列方案中()是最基本的实现方案。 A、停-等ARQ B、间隔重发请求 C、等待重发请求 D、连续重发请求 确定 45.停-等ARQ最主要的优点是()。 A、传输速度高 B、省时 C、所需缓冲存储空间小 D、成本低 确定 46.连续重发请求与停-等ARQ相比，最明显的差别在于()。 A、前者所需的缓冲存储空间最小，但链路传输效率高 B、前者所需的缓冲存储空间大 C、前者所需的缓存储空间大，链路传输效率低 D、前者所需的缓冲存储空间最小，链路传输效率低 确定 47.面向字符的同步协议的最大缺点是()。 A、它和特定的字符编码集关系过于密切，不利于兼容性 B、它和特定的反码系统关系过于密切，不利于兼容性 C、它和特定的字符编码集无直接联系，不利于兼容性 D、它和特定的反码系统无直接联系，不利于兼容性 确定 48.下列选项中不属于链路层协议的组成部分的是()。 A、链接建立 B、数据传输 C、链接合并 D、链路拆除 确定 49.从滑动窗口的观点来看待停-等ARQ，则它的窗口大小为()。 A、发送窗口=1，接收窗口>1 B、发送窗口=1，接收窗口=1 C、发送窗口>1，接收窗口=1 D、发送窗口>1，接收窗口>1 确定 50.()通信规程是异步协议的典例。 A、起止式 B、BSC协议 C、HDLC协议 D、ATP协议 确定 51.()是最早提出的同步协议。 Ａ、面向位的同步协议 Ｂ、面向字符的同步协议 Ｃ、面向字符串的同步协议 Ｄ、面向帧的同步协议 确定 52.所有面向位的数据链路控制协议均采用统一的()格式。 A、字符 B、位 C、帧 D、字符串 确定 53.每一帧前、后均有一标志码()，用作帧的起始、终止、指示及帧的同步。 A、0111110 B、01111110 C、FCS D、FDS 确定 54.为保证标志码惟一性但又兼顾帧内数据的透明性，可以采用()来解决。 A、轮询技术 B、差错检验 C、统一设置标志码 D、位插入法 确定 55.在常用的传输介质中，()的带宽最高，信号传输衰减最小，抗干扰能力最强。 A、双绞线 B、同轴电缆 C、光纤 D、微波 确定 56.通过改变载波信号的相位值来表示数字信号1、0的编码方式是()。 A、ASK B、FSK C、PSK D、NRZ 确定 57.在多路复用技术中，FDM是()。 A、频分多路复用 B、波分多路复用 C、时分多路复用 D、统计时分多路复用 确定 58.调制解调技术主要用于下列()种通信方式中。 A、模拟信道传输数字数据 B、数字信道传输数字数据 C、模拟信道传输模拟数据 D、数字信道传输模拟数据 确定 59.下列交换方式中()的传输延迟最小。 A、线路交换 B、报文交换 C、分组交换 D、上述所有的 确定 60.数据在传输过程中所出现差错的类型主要有随机错和()。 A、计算错 B、突发错 C、热燥声 D、CRC校验错 确定 61.不同计算机系统之间的进程如何通信()。 A、通过共享区 B、通过网络 C、通过缓冲区 D、通过文件 确定 62.信息的传输媒体称为()。 A、信源 B、载体 C、信宿 D、噪声 确定 63.信息的接收者称为()。 A、信源 B、载体 C、信宿 D、噪声 确定 64.有线信道的传输媒体不包括()。 A、微波 B、电缆 C、光缆 D、架空明线 确定 65.数据交换常有三种方式不包括()。 A、报文交换 B、分组交换 C、线路交换 D、传递交换 确定 66.在下列功能中，哪一个最好的描述了OSI(开放系统互连)模型的数据链路层()。 A、保证数据正确的顺序、无错和完整 B、处理信号通过介质的传输 C、提供用户与网络的接口 D、控制报文通过网络的路由选择 确定 67.在串行传输中，所有的数据字符的比特()。 A、在多根导线上同时传输 B、在同一根导线上同时传输 C、在传输介质上一次传输一位 D、以一组16位的形式在传输介质上传输 确定 68.多路复用器的主要功能是()。 A、执行数/模转换 B、减少主机的通信处理负荷 C、结合来自两条或更多条线路的传输 D、执行串行/并行转换 确定 69.RS232-C是采用哪一种逻辑方式来表示信号电平()。 A、正逻辑方式 B、负逻辑方式 C、中逻辑方式 D、多逻辑方式 确定 70.IEEE802.3的信号传送与调制方式是下列哪一种()。 A、调频 B、基带 C、宽带 D、高频 确定 71.下列哪一项是MODEM中完成数字信号转成模拟信号的功能()。 A、解调电路 B、接口电路 C、控制定时电路 D、调制电路 确定 72.FDDI的数据传输速度可高达多少Mbit/s()。 A、50 B、75 C、100 D、1000 确定 73.采用专用线路通信时，可以省去的通信阶段是()。 A、建立通信线路 B、建立数据传输链路 C、传送通信控制信号和数据 D、双方确认通信结束 确定 74.网络接口卡的基本功能包括：数据转换、通信服务和()。 A、数据传输 B、数据缓存 C、数据服务 D、数据共享 确定 75.各种网络在物理层互连时要求()。 A、数据传输率和链路协议都相同 B、数据传输率相同，链路协议可不同 C、数据传输率可不同，链路协议相同 D、数据传输率和链路协议都可不同 确定 76.对局域网来说，网络控制的核心是()。 A、工作站 B、网卡 C、网络服务器 D、网络互连设备 确定 77.电话拨号上网时，需要使用()。 A、网关 B、路由器 C、网桥 D、调制解调器 确定 78.调制解调器实现的信号转换是()。 A、电信号/光信号 B、模/数和数/模 C、无线/有线 D、调制/解调 确定 79.传送计算机数据最合适的是()。 A、光纤传输 B、摸拟传输 C、数字传输 D、微波传输。 确定 80.PPP协议是哪一层的协议()。 A、物理层 B、数据链路层 C、网络层 D、高层 确定 81.若码元速率为1600Baud，采用3DPSK，则数据速率是()。 A、1600bps B、4800bps C、6400bps D、9600bps 确定 82.当网络的数据流量或交通流量超过网络的额定容量时，将引起网络的吞吐能力急剧下降，这时必须进行网络()。 A、流量控制 B、拓扑控制 C、差错控制 D、拥塞控制 确定 83.在同一层次的对应实体之间交换的数据叫()。 A、接口数据单元 B、协议数据单元 C、接口控制信息 D、服务数据单元 确定 84.在数据链路层中，若发送方发送完全部10帧后，发现2号帧的确认返回超时，若根据检测差错的选择重发策略，则发送方要重发的帧数为()。 A、1 B、5 C、9 D、10 确定 85.数据链路层提供的流量控制主要用于()。 A、DTE-DTE之间 B、相临节点之间 C、DCE-DCE之间 D、端-端之间 确定 86.HDLC是()。 A、面向字符型的同步协议 B、面向比特型的同步协议 C、异步协议 D、面向字计数的同步协议 确定 87.路由功能一般在()实现。 A、物理层 B、数据链路层 C、网络层 D、传输层 确定 88.下列方法不能控制阻塞现象的是()。 A、增加节点的数据缓冲器的数量 B、增加节点间的信道数量 C、设置适当数量的“许可证” D、丢弃分组 确定 89.流量控制是一种机制，它是通过()来解决发送器和接收器速度的不一致的问题。 A、增大接收器接收速度 B、降低发送器发送速度 C、接收器向发送器反馈信息 D、增加网络缓冲能力 确定 90.接收端发现有差错时，设法通知发送端重发，直到收到正确的码子为止，这种差错控制方法称为()。 A、前项纠错 B、自动请求重发 C、冗余检验 D、混合差错控制 确定 91.用户提供可靠的端到端的服务是()。 A、物理层 B、数据链路层 C、网络层 D、传输层 确定 92.数据压缩的实现与OSI中的()密切相关。 A、物理层 B、数据链路层 C、表示层 D、传输层 确定 93.网络体系结构的应用层对数据结构的描述称为()。 A、高级语言 B、低级语言 C、抽象语法 D、传输语法 确定 94.()是OSI参考模型的最底层。 A、网络层 B、物理层 C、传输层 D、数据链路层 确定 95.在OSI参考模型中，()有数据加密功能。 A、网络层 B、应用层 C、传输层 D、表示层 确定 96.OSI网络模型中一共有()层。 A、3 B、5 C、7 D、9 确定 97.()是OSI参考模型的最高层。 A、表示层 B、应用层 C、会话层 D、数据链路层 确定 98.完成路径选择功能是在OSI模型的()。 A、物理层 B、数据链路层 C、网络层 D、传输 确定 层99.下列功能中，属于表示层提供的是()。 A、交互管理 B、透明传输 C、死锁处理 D、文本压缩 确定 100.在OSI模型中，n层提供的服务是()与对等层交体交换信息来实现的。 A、利用(n-1)层提供的服务以及按n层协议 B、利用n层提供的服务以及按(n-1)层协议 C、利用(n+1)层提供的服务以及按n层协议 D、利用n层提供的服务以及按(n+1)层协议 确定 101.局域网中，媒体访问控制功能属于()。 A、MAC子层 B、LLC子层 C、物理层 D、高层 确定 102.TCP/IP的体系结构共分为()层 A、2 B、3 C、4 D、5 确定 103.地址转换协议ARP在TCP/IP网络中属于第()层。 A、1 B、2 C、3 D、4 确定 104.交换式局域网的核心设备是()。 A、集线器 B、交换机或路由器 C、网桥 D、网卡 确定 105.在OSI模型中上下两个层次的关系用()来表示。 A、发送和接收 B、请求和应答 C、提供服务和使用服务 D、协议和规定 确定 106.因特网4层次模型中，应用层下面的一层是()。 A、物理层 B、数据链路层 C、网络层 D、传输层 确定 107.因特网的历史最早可追述到上个世纪70年代，那时候她的名称为()。 A、NSFNET B、ARPANET C、INTERNET D、USENET 确定 108.网络协议主要要素为()。 A、数据格式、编码、信号电平 B、数据格式、控制信息、速度匹配 C、语法、语义、同步 D、编码、控制信息、同步 确定 109.在OSI七层结构模型中，处于数据链路层与运输层之间的是()。 A、物理层 B、网络层 C、会话层 D、表示层 确定 110.在TCP/IP协议簇的层次中，解决计算机之间通信问题是在()。 A、网络接口层 B、网际层 C、传输层 D、应用层 确定 111.在中继系统中，中继器处于()。 A、物理层 B、数据链路层 C、网络层 D、高层 确定 112.在TCP/IP协议中，TCP和UDP在TCP/IP参考模型的()。 A、应用层 B、传输层 C、网际层 D、网络接口层 确定 113.当通信子网采用()方式时，我们首先要在通信双方之间建立起逻辑线路。 A、线路连接 B、虚电路 C、数据报 D、无线连接 确定 114.在OSI参考模型中，网络层的数据单元是()。 A、帧 B、报文 C、分组 D、比特序列 确定 115.在TCP/IP参考模型中，与OSI参考模型的网络层对应的是()。 A、主机-网络层 B、网际层 C、传输层 D、应用层 确定 116.RS-232-C是()接口规范。 A、物理层 B、数据链路层 C、网络层 D、运输层 确定 117.物理层服务提交比特的顺序和接收比特的顺序()。 A、一致 B、不一致 C、有时一致，有时不一致 D、可由用户配置 确定 118.两台计算机之间通过RS232串行通信接口进行数据通信，其接口线采用何种接法()。 A、直接连接 B、交叉连接 C、通过Modem连接 D、任意连接 确定 119.以太网通信协议是()。 A、CSMA B、TCP/IP C、X.25 D、CSMA/CD 确定 120.令牌环协议是一种()。 A、有冲突协议 B、随身征用协议 C、多令牌协议 D、无冲突协议 确定 121.局域网的网络硬件主要包括：网络服务器、工作站、()和通信介质。 A、调制解调器 B、主板 C、网络适配器 D、中继器 确定 122.在计算机局域网中，以文件数据共享为目标，需要将供多台计算机共享的文件存放于一台被称为()的计算机中。 A、文件服务器 B、路由器 C、网桥 D、网关 确定 123.()是指连入网络的不同档次，不同型号的微机，它是网络中用户操作的工作平台，它通过插在微机上的网卡和连接电缆与网络服务器相连。 A、工作站 B、路由器 C、网桥 D、文件服务器 确定 124.选择网卡的主要依据是组网的拓扑结构，()网络段的最大长度和节点之间的距离。 A、接入网络的计算机种类 B、使用的传输介质的类型 C、使用网络操作系统的类型 D、互联网络的规模 确定 125.在网络传输中，最普遍的传输介质是()。 A、光导纤维 B、同轴电缆 C、双绞线 D、红外线 确定 126.目前网络传输介质中传输速率最高的是()。 A、双绞线 B、同轴电缆 C、光缆 D、电话线 确定 127.Novell的NetWare是()软件。 A、网络操作系统 B、数据库管理系统 C、CAD D、网络应用软件 确定 128.下列不属于网络操作系统的是()。 A、Windows95 B、WindowsNT C、NetWare D、UNIX 确定 129.()是网络的心脏，它提供了网络最基本的核心功能，如网络文件系统、存储器的管理和调度等。 A、服务器 B、工作站 C、服务器操作系统 D、通信协议 确定 130.局域网的特点不包括()。 A、地理范围分布较小B数据传输率较低 C、误码率较低 D、协议简单 确定 131.在局域网参考模型中，与媒体无关，从而实现数据帧的独立传输的是()。 A、物理层 B、MLC子层 C、LLC子层 D、网际层 确定 132.令牌总线的访问方法和物理层技术规范由()描述。 A、IEEE802.2 B、IEEE802.3 C、IEEE802.4 D、IEEE802.5 确定 133.局域网参考模型中，将数据链路层分成MAC子层和LLC子层，其中MAC子层的功能是()。 A、建立、维持和拆除物理链路 B、解决哪些设备占有媒体的问题 C、与媒体无关，实现数据帧的独立传输 D、实现路由选择和流量控制功能 确定 135. A、帧发送 B、优先权操作 C、帧复制 D、令牌发送 确定 135.10Base2采用的连接器是()。 A、RJ-45头 B、BNC-T头 C、ST头 D、收发器 确定 136.实现虚拟局域网的核心设备是()。 A、集线器 B、核心交换机 C、服务器 D、光纤 确定 137.WLAN采用()协议。 A、802．3 B、802.5 C、802.8 D、802.11 确定 138.第三交换机相当于交换机与()合二为一。 A、交换机 B、网桥 C、中继器 D、路由器 确定 139.在ＯＳＩ参考模型中能实现路由选择、拥塞控制与互联功能的层是()。 A、传输层 B、应用层 C、网络层 D、物理层 确定 140.客户机提出服务请求,网络将用户请求传送到服务器，服务器执行用户请求，完成所要求的操作并将结果送回用户，这种工作模式称为()。 A、Client/server模式 B、对等模式 C、CSMA/CD模式 D、TOKENRING模式 确定 141.光纤分布数据接口FDDI采用()拓扑结构。 A、星型 B、总线型 C、环型 D、树型 确定 142.电缆中屏蔽层的的作用是()。 A、减少信号衰减 B、减少电磁干扰辐射 C、减少物理损坏 D、减少电缆的阻抗 确定 143.在组建一个10BASE-2以太网时需要使用的硬件设备中不包括()。 A、带有BNC接口的网卡 B、BNC-T型连接器 C、细同轴电缆 D、收发器 确定 144.局域网的标准是以美国电机电子工程师协会制定的()作为标准的。 A、IEEE801 B、IEEE802 C、IEEE803 D、IEEE804 确定 145.网卡的英文简称是()。 A、INC B、NNC C、CIN D、NIC 确定 146.利用双绞线连网的网卡采用的接口是()。 A、AUI B、BNC C、RJ-45 D、SC 确定 147.集线器大致可以分为两种，分别是共享式集线器和()。 A、速度自适应集线器 B、100M集线器 C、交换式集线器 D、有源集线器 确定 148.连接计算机到集线器的双绞线最大长度为()。 A、10米 B、100米 C、500米 D、200米 确定 149.局域网中，媒体访问控制功能属于()。 A、MAC子层 B、LLC子层 C、物理层 D、高层 确定 150.在OSI参考模型中，网桥实现互联的层次为()。 A、物理层 B、数据链路层 C、网络层 D、高层 确定 151.在快速以太网中，支持5类非屏蔽双绞线的标准是()。 A、100BASE-TT4 B、100BASE-FX C、100BASE-TX D、100BASE-CX 确定 152.在Internet上的主机都有唯一的IP地址。现行的IP地址中A类地址有()个网络数。 A、124 B、125 C、126 D、127 确定 153.在TCP/IP协议中，IP、ICMP、ARP、RARP在TCP/IP参考模型的()。 A、应用层 B、传输层 C、网际层 D、网络接口层 确定 154.100Base-T使用哪一种传输介质()。 A、同轴电缆 B、光纤 C、双绞线 D、红外线 确定 155.10Base-T使用哪一种电缆()。 A、细缆 B、粗缆 C、Fiber D、UTP 确定 156.MAC地址通常存储在计算机的()。 A、内存中 B、网卡上 C、硬盘上 D、高速缓冲区 确定 157.在以太网中，冲突()。 A、是由于介质访问控制方式的错误使用造成的 B、是由于网络管理员的失误造成的 C、是一种正常现象 D、是一种不正常现象 确定 158.下面关于以太网的描述那个是正确的()。 A、数据是以广播方式发送的 B、所有节点可以同时发送和接受数据的 C、两个节点相互通信时，第3个节点不检测总线上的信号。 D、网络中有一个控制中心，用于控制所有节点的发送和接受 确定 159.在以太网中，集线器的级联()。 A、必须使用直通UTP电缆 B、必须使用交叉UTP电缆 C、必须使用同一速率的集线器 D、可以使用不同的速率的集线器 确定 160.下列那种说法正确的是()。 A、集线器可以对接受的信号进行放大 B、集线器具有信息过滤功能 C、集线器具有路径检测功能 D、集线器具有交换功能 确定 161.以太网交换机中的端口/MAC地址映射表()。 A、是由交换机的生产厂家建立的 B、是交换机在数据转发过程中通过学习动态建立的 C、是有管理员建立的 D、是由网络用户利用特殊的命令建立的 确定 162.下列那种说法是错误的()。 A、以太网交换机可以多通过的信息进行过滤 B、以太网交换机中端口的速率可能不同 C、在交换式以太网中可以划分VLAN D、利用多个以太网交换机组成的局域网不能出现环路 确定 163.关于TCP和UDP，下列那种说法是错误的()。 A、TCP和UDP的端口是相互独立的 B、TCP和UDP的端口是完全相同的，没有本质区别 C、在利用TCP发送数据前，需要与对方建立一条TCP连接 D、在利用UDP发送数据时，不需要与对方建立连接 确定 164.标志一个特定的服务可以使用()。 A、MAC地址 B、CPU型号 C、网络操作系统的种类 D、TCP和UDP端口号 确定 165.管理计算机通信的规则称为() A、协议 B、介质 C、服务 D、网络操作系统 确定 166.在OSI模型中，第N层和其上的N＋l层的关系是()。 A、N层为N十1层提供服务 B、N十1层将从N层接收的信息增了一个头 C、N层利用N十1层提供的服务 D、N层对N＋1层没有任何作用 确定 167.如果有6台服务器和100台客户机，每台客户机都要访问所有服务器，用()许可证方式最合理。 A、PerServer B、PerConnection C、PerSeat D、PerNetwork 确定 168.Windows2000/2003Server支持下列()文件系统。 A、FAT8 B、FAT16 C、FS2000 D、NTFS 确定 169.下列关于本地用户账号的陈述()是错的。 A、用户账号名大小写相关 B、用户口令大小写相关 C、用户账号名最长为20个字符 D、用户账号名不能包含“=”和“：” 确定 170.下列()不是共享权限。 A、读 B、写 C、访问 D、完全控制 确定 171.由个人书写的操作系统是()。 A、DOS B、UNIX C、Windows D、Linux 确定 172.()给用户和计算机提供安全凭据，使用户和计算机能登录到网络并访问域资源，每个网络用户均需要。 A、姓名 B、密码 C、域 D、账号 确定 173.域模式的最大好处是()网络登录功能。 A、单一 B、两个 C、多个 D、相互 确定 174.NetWare网提供两种基本类型的实用程序，即菜单实用程序和()实用程序。 A、窗口 B、菜单 C、命令行 D、shell 确定 175.NetWare的系统卷是()。 A、system B、sys C、public D、home 确定 176.在NetWare网中一定会使用()协议。 A、IPX/SPX B、TCP/IP C、HTTP D、NetBEUI 确定 177.下列选项中属于广域网协议的是()。 A、IPX B、SLIP C、ISDN D、WAN 确定 178.下列选项中不是广域网的是()。 A、X.25网 B、ISDN C、FDDI D、帧中继 确定 179.帧中继是由()发展而来的。 A、FDDI B、ISDN C、X.25 D、DDN 确定 180.X．25的数据链路层采用()，是高级数据链路控制规程HDLC协议的一部分。 A、LAPB B、LLC/MAC C、LDAP D、SLIP 确定 181.ATM数据传输的单位是信元，长度为()字节。 A、48 B、72 C、8 D、53 确定 182.帧中继对于错误帧的处理是()。 A、不处理 B、要求重发 C、直接将其丢弃 D、不检查帧 确定 183.有关分组交换叙述错误的是()。 A、数据报方式灵活、快速 B、有数据报和虚电路两种方式 C、传输数据出错率高 D、线路利用率高 确定 184.ATM提供了一种应用独立的服务，主要表现在时间独立和()。 A、空间独立 B、语意独立 C、传输独立 D、透明 确定 185.ATM采用()多路复用技术。 A、ATDM B、TDM C、WDM D、FDM 确定 186.DDN不具有的特点是()。 A、带宽利用率高 B、永久性的数字连接 C、速度快、延迟短 D、传输质量高 确定 187.全双工以太网传输技术的特点是()。 A、能同时发送和接收帧、不受CSMA/CD限制 B、能同时发送和接收帧、受CSMA/CD限制 C、不能同时发送和接收帧、不受CSMA/CD限制 D、不能同时发送和接收帧、受CSMA/CD限制 确定 188.RIP路由算法所支持的最大HOP数为()。 A、10 B、15 C、16 D、32 确定 189.下列不属于电子邮件协议的是()。 A、POP3 B、SMTP C、SNMP D、IMAP4 确定 190.企业Intranet要与Internet互联，必需的互联设备是()。 A、中继器 B、调制解调器 C、交换器 D、路由器 确定 191.基于TCP/IP协议集的Internet体系结构保证了系统的()。 A、可靠性 B、安全性 C、开放性 D、可用性 确定 192.令牌环网中某个站点能发送帧是因为()。 A、最先提出申请 B、令牌到达 C、优先级最高 D、可随机发送 确定 193.FDDI标准规定网络的传输媒体采用()。 A、非屏蔽双绞线 B、屏蔽双绞线 C、光纤 D、同轴电缆 确定 194.以太网媒体访问控制技术CSMA/CD的机制是()。 A、争用带宽 B、预约带宽 C、循环使用带宽 D、按优先级分配带宽 确定 195.CSMA/CD数据帧数据字段最大为多少个字节() A、64 B、128 C、53 D、1500 确定 196.新一代的IP协议(IPv6)的地址由多少位组成()。 A、32 B、48 C、64 D、128 确定 197.当前因特网IP的版本是()。 A、IPv6 B、IPv3 C、IPv4 D、IPv5 确定 198.哪类地址不能分配给局域网()。 A、A类 B、B类 C、C类 D、D类 确定 199.202．119．2．123属于哪一类IP地址()。 A、A类 B、B类 C、C类 D、D类 确定 200.香农定理指出：信道容量与()成正比。 A、噪声功率 B、信道带宽 C、信道速率 D、信号频率 确定 201.帧中继适用的场合不包括()。 A、局域网互联 B、广域网互联 C、组建虚拟专用网 D、电子文件传输 确定 202.帧中继用户接入设备不包括()。 A、帧中继终端 B、帧中继装/拆设备 C、网关 D、路由器 确定 203.下面叙述不正确的是()。 A、中继器可以将以太网UTP线缆上的一个设备和以太网同轴电缆上的一个设备连接起来 B、中继器可以增加网络的带宽 C、中继器可以扩展网络上两个节点之间的距离 D、中继器能再生网络上的信号 确定 204.关于5-4-3-2-1规则，()叙述不正确。 A、在该配置中可以使用4个中继器 B、整体上最多可以存在5个网段 C、两个网段用做连接网段 D、4个网段连接以太网节点 确定 205.工作在大多数层和最高层的设备是()。 A、路由器 B、网桥 C、交换机 D、网关 确定 206.可堆叠集线器的优点是()。 A、相互连接的集线器在逻辑上是一个集线器 B、相互连接的集线器在逻辑上是一个网络 C、相互连接的集线器各自是独立的冲突域 D、相互连接的集线器各自是独立的广播域 确定 207.()设备和网络层关系最紧密。 A、中继器 B、交换机 C、路由器 D、网桥 确定 208.集线器创建的拓扑可以称为()。 A、星型拓扑 B、总线型拓扑 C、环型拓扑 D、网状拓扑 确定 209.交换机通过()方式增加网络的整体带宽。 A、将帧转发到所有端口 B、丢弃损坏的帧 C、隔离发送网段和接收网段之间的帧 D、将帧广播到所有端口 确定 210.交换机内部的表包含了()。 A、物理端口数和数据包地址 B、物理地址和帧地址 C、数据包地址和软件端口 D、帧地址和物理端口 确定 211.交换机在()情况下会将帧转发到所有端口。 A、只知道接收帧的目的网卡位置 B、不知道接收数据包的网卡的位置 C、不知道接收帧的目的网卡的位置 D、以上都不是 确定 212.()是交换机在做交换决定时不用的。 A、网络地址 B、硬件地址 C、帧地址 D、端口号 确定 213.5-4-3-2-1规则中的4是指()。 A、中继器个数 B、中继器连接的网段数 C、网段中的节点数 D、线缆长度 确定 214.下面主要使用硬件完成其主要功能的设备是()。 A、中继器 B、网关 C、协议转换器 D、路由器 确定 215.()保存在计算机的ARP缓存中。 A、IP地址和端口号 B、IP地址和MAC地址 C、MAC地址和网络号 D、TCP和IP地址 确定 216.数据包在到达目的地前必须通过的路由器数目称为()。 A、交织比率 B、组播号 C、高宽比 D、跳数 确定 217.()是使用距离矢量路由选择算法的路由协议。 A、RIP B、LSA C、OSPF D、IS-IS 确定 218.在典型的路由表中没有()。 A、到指定目的网络的下一跳有IP地址 B、到指定目的网络的跳数 C、目的网络的MAC地址 D、使用的路由协议类型 确定 219.关于网关的叙述，()是正确的。 A、网关必须转换许多协议包头 B、网关使用软件处理信息 C、网关必须处理多层协议 D、以上都是 确定 220.又被称为最短路径优先法的路由方法是()。 A、链路状态 B、距离矢量 C、源路由 D、生成树 确定 221.中继器通过执行那一层的协议来实现网络互连()。 A、物理层 B、数据链路层 C、网络层 D、运输层 确定 222.网桥(桥接器)通过执行那一层及其下层的协议转换来实现网络互连()。 A、数据链路层 B、网络层 C、运输层 D、会话层 确定 223.通过执行运输层及以上各层协议转换，或者实现不同体系结构的网络协议转换的互连部件称为 A、集线器 B、交换器 C、路由器 D、网关 确定 224.支持以太网和无线局域网的互连的设备称为()。 A、中继器 B、以太网交换机 C、路由器 D、网桥 确定 225.支持局域网与广域网互连的设备称为()。 A、中继器 B、以太网交换机 C、路由器 D、网桥 确定 226.下列那种说法是错误的()。 A、IP层可以屏蔽各个物理网络的差异 B、IP层可以代替各个物理网络的数据链路层工作 C、IP层可以屏蔽各个物理网络的实现细节 D、IP层可以为用户提供通用的服务 确定 227.IP地址191.139.11.23的那一部分表示主机号()。 A、191 B、191.139 C、11.23 D、23 确定 228.IP地址192.139.11.23的那一部分表示网络号()。 A、192 B、192.139 C、192.139.11 D、139.11.23 确定 229.在通常情况下，下列那一种说法是错误的()。 A、高速缓冲区中的ARP表是由人工建立的 B、高速缓冲区中的ARP表是由主机自动建立的 C、高速缓冲区中的ARP表是由动态的 D、高速缓冲区中的ARP表保存了主机IP地址和MAC地址的映射关系 确定 230.下列那种情况需要启动ARP请求()。 A、主机需要接收信息，但ARP表中没有源IP地址与MAC地址的映射关系 B、主机需要接收信息，但ARP表中没有目的IP地址与MAC地址的映射关系 C、主机需要发送信息，但ARP表中没有源IP地址与MAC地址的映射关系 D、主机需要发送信息，但ARP表中没有目的IP地址与MAC地址的映射关系 确定 231.对IP数据报分片的重组通常发生在()上。 A、源主机 B、目的主机 C、IP数据报经过的路由器 D、原主机或路由器 确定 232.对IP数据报的分片通常发生在()上。 A、源主机 B、目的主机 C、IP数据报经过的路由器 D、原主机或路由器 确定 233.使PING命令PING另一台主机，就算收到正确的应答，也不能说明()。 A、目的主机可以到达 B、PING报文经过的网络具有相同的MTU C、目的主机的ICMP软件和IP软件运行正常 D、PING报文经过的路由器路由选择正常 确定 234.路由器中的路由表()。 A、需要包含到达所有主机的完整路径信息 B、需要包含到达所有主机的下一步路径信息 C、需要包含到达目的网络的完整路径信息 D、需要包含到达目的网络的下一步路径信息 确定 235.为了保证连接的可靠性，TCP通常采用()。 A、3次握手 B、滑动窗口机制 C、自动重发机制 D、端口机制 确定 236.若网络形状是由站点和连接站点的链路组成的一个闭合环，则称这种拓扑结构为()。 A、星形拓扑 B、总线拓扑 C、环形拓扑 D、树形拓扑 确定 237.提供的服务是()。 A、网络技术咨询 B、全世界网站介绍 C、搜索引擎 D、新闻娱乐 确定 238.Internet域名与地址管理公司的简称为()。 A、ICANN B、CNNIC C、InterNIC D、ISOC 确定 239.DNS的作用()。 A、管理Internet上的域名 B、搜索域名的系统 C、实现IP地址到域名的转换 D、实现域名到IP地址的转换 确定 240.在使用浏览器浏览一个WWW网站时，通信双方必须遵循的其中一个协议是()。 A、SMTP协议 B、Telnet协议 C、FTP协议 D、HTTP协议 确定 241.电子邮件在原理上同()通信方式类似。 A、电话 B、传真 C、邮政 D、电视 确定 242.以下关于POP3协议正确的表述是()。 A、它是电子邮件发送过程中不可缺少的一个协议 B、它是电子邮件接收过程中不可缺少的一个协议 C、它只是电子邮件中的一个辅助协议 D、在Webmail中必须使用POP3协议 确定 243.FTP可以支持的文件类型为()。 A、ASCII B、EBCDIC C、图像文件 D、以上都可以 确定 244.下列软件中，不是WWW浏览器软件的是()。 A、NETSCAPE B、InternetExplorer C、MOSAIC D、WindowsXP 确定 245.电子邮件使用的主要协议有()。 A、SMTP B、POP C、MIME D、以上都是 确定 246.以下哪个不是WWW的组成部分()。 A．Internet B.Web服务器 C.浏览器 D.HTTP协议 确定 247.域名服务器上存储着Internet主机的()。 A、域名 B、IP地址 C、域名和IP地址 D、E-mail 确定 248.在Internet上，网页是采用()语言制作的。 A、C++ B、Pascal C、HTML D、HTTP 确定 249.FTP工作时使用()条TCP连接来完成文件的传输。 A、1 B、2 C、3 D、4 确定 250.以下说法正确的是()。 A、发件箱，暂存准备发出的邮件；已删除邮件箱，存放已经发出的邮件 B、发件箱，暂存准备发出的邮件；已删除邮件箱，存放准备删除的邮件 C、发件箱，存放已发出的邮件；已删除邮件箱，存放准备删除的邮件 D、以上都不正确 确定 251.FTP的进程端口号一般是()。 A、80 B、25 C、23 D、21 确定 252.HTTP是()。 A、超文本标记语言 B、超文本传输协议 C、搜索引擎 D、文件传输协议 确定 253.哪类地址分配给主干网()。 A、A类 B、B类 C、C类 D、D类 确定 254.哪类地址分配给区域网()。 A、A类 B、B类 C、C类 D、D类 确定 255.哪类地址分配给局域网()。 A、A类 B、B类 C、C类 D、D类 确定 256.哪类地址用于多址投递系统()。 A、A类 B、B类 C、C类 D、D类 确定 257.缺省的HTTP端口是()。 A、21 B、23 C、80 D、8080 确定 258.哪一种网络设备是因特网的主要互连设备()。 A、以太网交换机 B、集线器 C、路由器 D、调制解调器 确定 259.202.119.2.1X属于哪一类IP地址()。 A、A类 B、B类 C、C类 D、D类 确定 260.IP地址到物理地址的映射是什么协议完成的()。 A、IP协议 B、TCP协议 C、RARP协议 D、ARP协议 确定 261.Telnet使用的端口号是什么()。 A、20 B、21 C、23 D、25 确定 262.下列字段中,哪个不是IPv4报头中的字段()。 A、头长度 B、有效载荷长度 C、业务类型 D、标识符 确定 263.目前来看,下面哪些描述可以认为是IPv4的不足()。 A、IPv4地址空间即将耗尽 B、路由表急剧膨胀 C、无法提供多样的QOS D、网络安全令人担忧 确定 264.如果某IPv4网络的IP地址为192.168.1.200,子网掩码为255.255.255.0,那么该IP所在的子网ID为()。 A、192.168.1 B、192.168 C、192.168.1.200 D、192.168.1.255 确定 265.下列哪一个IPv6地址是错误地址()。 A、::FFFF B、::1 C、::1:FFFF D、::1::FFFF 确定 266.下列哪些地址是IPv4兼容的IPv6地址()。 A、::192.168.1.1 B、::FFFF:192.168.1.1 C、::202.9.0.1 D、::1000:192.17.1.1 确定 267.以电话拨号方式连入Internet时，不需要的硬件设备是()。 A、PC机 B、网卡 C、电话线 D、MODEM 确定 268.Internet上各种网络和各种不同计算机间相互通信的基础是()协议。 A、IPX B、HTTP C、TCP/IP D、X．25 确定 269.下面的合法IP地址是()。 A、220．144．280．78 B、220．144．38．78 C、220．144．350．78 D、220．144．31 确定 270.关于域名正确的说法是()。 A、没有域名主机不可能上网 B、一个IP地址只能对应一个域名 C、一个域名只能对应一个IP地址 D、域名可以随便取，只要不和其他主机同名即可 确定 271.Web检索工具是人们获取网络信息资源的主要检索工具和手段。以下()不属于Web检索工具的基本类型。 A、目录型检索工具 B、搜索引擎 C、多元搜索引擎 D、语言应答系统 确定 272.计算机网络最有吸引力的功能是()。 A、数据通信 B、资源共享 C、分布信息处理 D、提高系统可靠性 确定 273.IMP(接口信息处理机)、TIP(终端接口处理机)和通信链路构成()。 A、计算机网 B、资源子网 C、通信子网 D、局域网 确定 274.滑动窗口协议用于()的协议。 A、差错控制 B、流量控制 C、拥塞控制 D、链路管理 确定 275.Internet中，IP地址是用以圆点分隔的四个十进制数构成，每个数的取值范围为()。 A、1到127 B、1到202 C、1到255 D、0到255 确定 276.正确的Internet地址是()。 A、32．230．100 B、202．0．40．570 C、192．112．36．25 D、128．174．5．6．15 确定 277.以下正确的URL是()。 A、http://computer/index．htm B、file://c:\windows\test．htm C、mailto:test．21cn．com D、ftps://ftp．stu．edu．dn 确定 278.B类IP地址默认的网络掩码是()。 A、255．0．0．0 B、255．255．0．0 C、255．255．255．0 D、255．255．255．255 确定 279.综合业务数字网的缩写()。 A、PSTN B、DDN C、ISDN D、ASDL 确定 280.在下列给出的协议中，哪些是TCP/IP的应用层协议()。 A、DNS B、ARP C、UDP D、TCP 确定 281.在Windows2000中，用户可以通过在共享名的后面加字符()来隐藏共享文件夹。 A、@ B、$ C、& D、# 确定 282.在TCP/IP体系结构中，运输层流量控制采用()法。 A、慢启动 B、协商 C、三次握手 D、滑动窗口 确定 283.计算机网络的体系结构是指()。 A、网络数据交换的标准 B、网络的协议 C、网络层次结构与各层协议的集合 D、网络的层次结构 确定 284.OSI网络安全体系结构参考模型中增设的内容不包括()。 A、网络威胁 B、安全服务 C、安全机制 D、安全管理 确定 285.计算机病毒的核心是()。 A、引导模块 B、传染模块 C、表现模块 D、发作模块 确定 286.用一种病毒体含有的特定字符串对被检测对象进行扫描的病毒检查方法是()。 A、比较法 B、搜索法 C、病毒特征字识别法 D、分析法 确定 287.数据库安全系统特性中与损坏和丢失相关的数据状态是指()。 A、数据的完整性 B、数据的安全性 C、数据的独立性 D、数据的可用性 确定 288.网络安全()。 A、只与服务器相关 B、只与客户机有关 C、与两者都有关 D、都无关 确定 289.防止盗用IP行为是利用防火墙的()功能。 A、防御攻击的功能 B、访问控制功能 C、IP地址和MAC地址绑定功能 D、URL过滤功能 确定 290.如果内部网络的地址网段为192.168.1.0/24，需要用到防火墙的那个功能，才能使用户上网()。 A、地址映射 B、地址转换 C、IP地址和MAC地址绑定功能 D、URL过滤功能 确定 291.防火墙的性能指标参数中，那一项指标会直接影响到防火墙所能支持的最大信息点数()。 A、吞吐量 B、并发连接数 C、延时 D、平均无故障时间 确定 292.对于防火墙不足之处，描述错误的是()。 A、无法防护基于尊重作系统漏洞的攻击 B、无法防护端口反弹木马的攻击 C、无法防护病毒的侵袭 D、无法进行带宽管理 确定 293.F300-Pro是属于那个级别的产品()。 A、SOHO级(小型企业级) B、低端产品(中小型企业级) C、中段产品(大中型企业级) D、高端产品(电信级) 确定 294.防火墙对数据包进行状态检测包过滤是，不可以进行过滤的是()。 A、源和目的IP地址 B、源和目的端口 C、IP协议号 D、数据包中的内容 确定 295.当用户网络有多个公网出口时，需要用到XXXXXX防火墙的什么功能() A、OSPF B、H.323 C、DHCP D、PBR 确定 296.防火墙对要保护的服务器作端口映射的好处是()。 A、便于管理 B、提高防火墙的性能 C、提高服务器的利用率 D、隐藏服务器的网络结构，使服务器更加安全 确定 297.XXXXXX防火墙内核启动速度非常快，接上电源后多长时间就进入数据包转发()。 A、20秒 B、30秒 C、1分钟 D、超过5分钟 确定 298.内网用户通过防火墙访问公众网中的地址需要对源地址进行转换，规则中的动作应选择()。 A、Allow B、NAT C、SAT D、FwdFast 确定 299.为了方便管理，XXXXXX防火墙预定义多少个常用服务() A、200多个 B、100多个 C、50多个 D、30多个 确定 300.关于防火墙发展历程下面描述正确的是()。 A、第一阶段：基于路由器的防火墙 B、第二阶段：用户化的防火墙工具集 C、第三阶段：具有安全尊重作系统的防火墙 D、第四阶段：基于通用尊重作系统防火墙 确定 301.状态检测防火墙的优点()。 A、避免IP欺骗攻击 B、工作效率高 C、具有认证功能 D、具有内容过滤功能 确定 302.在防火墙的“访问控制”应用中，内网、外网、DMZ三者的访问关系为()。 A、内网可以访问外网 B、内网可以访问DMZ区 C、DMZ区可以访问内网 D、外网可以访问DMZ区 确定 303.XXXXXX防火墙提供的CoS/QoS(带宽管理)服务有那些特点()。 A、带宽限制/平均带宽 B、带宽保证 C、优先级控制 D、动态流量均衡 确定 304.以下不是Windows2000DHCP服务器中作用域项目的是()。 A、地址池 B、地址租约 C、保留区 D、作用域 确定 305.运行在Windows2003服务器上的DNS服务不能提供的功能是。() A、符合RFC标准 B、不支持ActiveDirectory C、提高了管理的方便性 D、支持动态更新协议 确定 306.IIS提供的服务不包括()。 A、Web服务 B、FTP服务 C、SMTP服务 D、DNS服务 确定 307.网络规划设计方案书中不包括()。 A、单位简介 B、用户需求分析 C、网络公司简介 D、可行性分析 确定 308.结构化综合布线系统中不包括以下哪个部分。() A、工作区子系统 B、设备间子系统 C、服务器子系统 D、管理子系统 确定 309.计算机网络向用户提供的最重要的功能是()和共享。 A、连通性 B、数据 C、信息 D、网络化 确定 310.来自信源的信号常称为()。 A、基带信号 B、带通信号 C、宽带信号 D、频带信号 确定 311.IETF是()。 A、因特网工程部 B、因特网研究部 C、因特网协会 D、因特网体系结构委员会 确定 312.IRTF是(). A、因特网工程部 B、因特网研究部 C、因特网协会 D、因特网体系结构委员会 确定 313.网络中报文的交换方式不包括()。 A、存储转发 B、电路交换 C、报文交换 D、分组交换 确定 314.()是主机或路由器发送数据帧所需要的时间。 A、发送时延 B、传播时延 C、处理时延 D、排队时延 确定 315.()是电磁波在信道中传播一定的距离需要花费的时间。 A、发送时延 B、传播时延 C、处理时延 D、排队时延 确定 316.()是主机或路由器在收到分组时要进行处理所花费的时间。 A、发送时延 B、传播时延 C、处理时延 D、排队时延 确定 317.以下不是网络协议三要素的是()。 A、语法 B、语义 C、同步 D、异步 确定 318.网络分层的好处不包括()。 A、各层之间是独立的 B、灵活性好 C、结构上不可分割 D、易于实现和维护 确定 319.物理层接口的特征不包括()。 A、机械特性 B、电气特性 C、功能特性 D、接口特性 确定 320.最基本的带通调制方法不包括()。 A、调幅 B、调频 C、调相 D、调制 确定 321.常用的信道利用技术不包括()。 A、频分复用 B、时分复用 C、幅分复用 D、波分复用 确定 322.数据链路层的三个基本问题是封装成帧、透明传输和()。 A、差错纠正 B、信息确认 C、载波监听 D、差错检测 确定 323.IETF认为，在设计PPP协议时必须考虑的内容不包括()。 A、流量控制 B、封装成帧 C、透明性 D、差错检测 确定 324.IETF认为，在设计PPP协议时必须考虑的内容包括()。 A、简单 B、流量控制 C、序号 D、多点线路 确定 325.使用网桥带来的好处不包括()。 A、过滤通信量，增大吞吐量 B、扩大了物理范围 C、提高了可靠性 D、适合于用户数和通信量很大的网络 确定 326.以下()项不是VLAN依据的标准。 A、端口号 B、协议 C、MAC地址 D、主机名 确定 327.IEEE802.1Q数据帧用()位表示VID。 A、10 B、11 C、12 D、14 确定 328.IEEE802.1QVLAN＿id最大为()。 A、256 B、1024 C、2048 D、4094 确定 329.以下()不能由用户自己创建或删除。 A、VLAN10 B、VLAN4094 C、VLAN1 D、VLAN1000 确定 330.网络层提供的两种服务是虚电路服务和()。 A、电路交换服务 B、逻辑服务 C、信息服务 D、数据报服务 确定 331.以下不是多播路由选择协议转发多播数据报时使用的方法()。 A、洪泛与剪除 B、隧道技术 C、基于核心的发现技术 D、NAT 确定 332.虚电路服务认为()。 A、可靠通信应当由网络来保证 B、不需要建立连接 C、每个分组都有终点的完整地址 确定 333.虚电路服务认为()。 A、可靠通信应当由网络来保证 B、不需要建立连接 C、每个分组都有终点的完整地址 D、每个分组独立选择路由进行转发 确定 334.与IP协议配套使用的四个协议不包括()。 A、ICMP B、IGMP C、ARP D、SMTP 确定 335.将网络互相连接起来要使用一些中间设备，物理层使用的中间设备叫做()。 A、转发器 B、网桥 C、路由器 D、网关 确定 336.将网络互相连接起来要使用一些中间设备，数据链路层使用的中间设备叫做()。 A、转发器 B、网桥 C、路由器 D、网关 确定 337.将网络互相连接起来要使用一些中间设备，网络层使用的中间设备叫做()。 A、转发器 B、网桥 C、路由器 D、网关 确定 338.将网络互相连接起来要使用一些中间设备，网络层以上使用的中间设备叫做()。 A、转发器 B、网桥 C、路由器 D、网关 确定 339.IP地址的编址方法共经过了三个历史阶段，不包括()。 A、分类的IP地址 B、掩码的划分 C、子网的划分 D、构成超网 确定 340.理想的路由算法不包括的特点是()。 A、算法必须是正确的 B、算法在计算上应该简单 C、算法不随网络拓扑的变化而变化 确定 341.()控制就是防止过多的数据注入到网络中，是一个全局性的过程。流量控制往往指点对点通信量的控制，是个端到端的问题。 A、拥塞 B、流量 C、软件 D、硬件 确定 342.1999年公布的因特网建议标准RFC2581定义了进行拥塞控制的四种算法，其中不正确的是()。 A、慢开始 B、拥塞控制 C、快重传 D、快恢复 确定 343.TCP运输连接的三个阶段不包括()。 A、连接建立 B、线路检测 C、数据传送 D、连接释放 确定 344.()为应用进程之间提供端到端的逻辑通信。 A、传输层 B、网络层 C、数据链路层 D、物理层 确定 345.当运输层采用面向连接的()协议时，尽管下面的网络是不可靠的，但这种逻辑通信信道就相当于一条全双工的可靠信道。 A、TCP B、UDP C、IP D、ICMP 确定 346.()在传送数据之前不需要先建立连接。对方的运输层在收到报文后，不需要给出任何确认。 A、TCP B、UDP C、IP D、ICMP 确定 347.路由器或交换机上的端口是()。 A、硬件端口 B、软件端口 确定 348.熟知端口号或系统端口号，数值一般()。 A、0~1023 B、1024~49151 C、49152~65535 D、49151~65535 确定 349.UDP的主要特点不包括()。 A、UDP是无连接的 B、UDP不保证可靠交付，同时也不使用拥塞控制 C、UDP是面向报文的 D、UDP是面向连接的 确定 350.UDP的首部开销小，只有()个字节. A、4 B、8 C、16 D、32 确定 351.每一条()连接只能有两个端点。 A、TCP B、UDP C、IP D、ICMP 确定 352.端口号拼接到()即构成了套接字。 A、IP地址 B、MAC地址 C、网络层 D、运输层 确定 353.TCP提供()通信。 A、全双工 B、半双工 C、单工 确定 354.以下不是RFC2581定义的拥塞控制算法的是() A、快开始 B、拥塞避免 C、快重传 D、快恢复 确定 355.根据域名服务器所起的作用，可以把域名服务器划分为四种不同类型的服务器，其中不包括 A、根域名服务器 B、顶级域名服务器 C、中间域名服务器 D、本地域名服务器 确定 356.根据配置管理功能的不同，交换机的工作模式不包括()。 A、用户模式 B、特权模式 C、配置模式 D、普通模式 确定 357.交换机的配置模式不包括()。 A、局部配置模式 B、接口配置模式 C、VLAN配置模式 D、线程配置模式 确定 358.交换机工作模式由用户模式进入特权模式的命令是()。 A、enable B、configureterminal C、vlan D、interface 确定 359.交换机在全局配置模式下，使用()命令进入接口配置模式。 A、enable B、configureterminal C、vlan D、interface 确定 360.交换机在全局配置模式下，使用()命令进入VLAN配置模式。 A、enable B、configureterminal C、vlan D、interface 确定 361.交换机在全局配置模式下，使用()命令进入线程配置模式。 A、lineconsole B、configureterminal C、vlan D、interface 确定 362.交换机由特权模式进入全局配置模式的命令是()。 A、enable B、configureterminal C、vlan D、interface 确定 363.网络中的计算机通过MAC地址来识别主机并相互通信。MAC地址是()使用的地址。 A、物理层 B、数据链路层 C、网络层 D、传输层 确定 364.MAC地址表中的MAC地址不包括()。 A、静态MAC地址 B、动态MAC地址 C、过滤地址 D、物理地址 确定 365.通过()命令可对Switchport模式进行配置。 A、Switchport B、interface C、configure D、enable 确定 366.三层交换机的端口默认当作二层端口使用，为了将端口配置成三层端口，必须执行()命令禁止二层操作，启用三层操作。 A、noSwitchport B、noport C、noshutdown D、enable 确定 367.交换机中MAC地址表中的动态MAC地址老化时间默认为()S。 A、300 B、100 C、60 D、500 确定 368.对交换机进行第一次配置必须使用以下()的配置方式。 A、通过带外对交换机进行管理(PC与交换机通过Console口直接相连) B、通过Telnet对交换机进行远程管理 C、通过Web对交换机进行远程管理 D、通过SNMP管理工作站对交换机进行管理 确定 369.交换机当前正在运行的配置文件保存在()中。 A、ROM B、FLASH C、DRAM D、NVRAM 确定 370.在IPsec中最主要的两个协议是不包括()。 A、鉴别首部AH B、封装安全有效载荷ESP C、RIP 确定 371.从网络传输的角度看，通常有两种不同的加密策略，其中不包括()。 A、链路加密 B、端到端加密 C、数据链路层加密 确定 372.目前因特网提供的音频/视频服务大体上可分为三种类型，其中不包括()。 A、流式存储音频/视频 B、流式实况音频/视频 C、交互式音频/视频 D、一般音频/视频 确定 373.在IP网络上打电话称为()的IP电话。 A、狭义 B、广义 确定 374.局域网中一般不使用的协议是()。 A、NetBEUI B、IPX/SPX C、HTTP D、TCP/IP 确定 375.以下不是选择通信协议的基本原则的是()。 A、尽量少的选用网络协议 B、协议的版本 C、协议的一致性 D、协议的先进性 确定 376.Windows2003中的共享权限不包括()。 A、读取 B、更改 C、完全控制 D、读写 确定]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[题库自动生成器]]></title>
    <url>%2F%2Fposts%2F202002041.html</url>
    <content type="text"><![CDATA[:::tip想做一个将文本处理的脚本，每次期末复习的效果感觉有点不好，在高中的时候，每天做题，感觉这样的效果会比较好一点。所以就想着能不能将期末的复习题文档转换成题库的形式。::: 需求需求很简单，给一个带有很多题的文档，然后这个应用可以将文档转换成题库，例如：假如是一道选择题，应用可以将这道选择题分解开，选项变成可以选择的按钮，假如选的是正确的答案，这个选项会有提示正确，反之则提示错误。以后努力可以支持更多的题型。 分析与设计暂时先不考虑文档的多样性。文档以txt格式，且格式是固定的。 我觉得最难的在于如何将这一道道选择题区分开，如何将选项区分开，如何提取出选项，题号，选项号，下面就围绕上述几个问题展开分析一下。 :::tip35.在系统间提供可靠的数据传输的层次是（D）。 A、物理层 B、数据层 C、网络层 D、传输层:::例如我现在拿到这样一道题，首先肯定是要取出35、D、A、B、C、D这些可以唯一确定一道题类似ID。首先要对文档要做的就是去除空格，空格又两种，中文和英文，需要注意；其次就是需要统一括号，希望就是默认的答案就在括号里，这样可以简化寻找答案。 如何区分每一道题首先要做的就是如何区分每一道题，一道题是作为一个独立的个体，必须要区分正确。每一道题的开头的都是（数字点非数字），可以以此简单的区分每一道题。代码也正是这样做的，写一个正则公式，找到所有的题号，就可以找到每道题起始的位置，则可以划分每一道题。 正则公式((\\d&#123;1,&#125;|[一二三])[.|、|．]&#123;1&#125;\\D),对应于上边的数字点非数字。一道题就是一个独立的单位，保存在ArrayList中。 实现代码如下 1234567891011121314151617181920212223242526public void Divition() &#123; flag = 0; String regex = &quot;((\\d&#123;1,&#125;|[一二三])[.|、|．]&#123;1&#125;\\D)&quot;; pattern = Pattern.compile(regex); matcher = pattern.matcher(str); int index=-1; int end=-1; while(matcher.find()) &#123; String s = matcher.group(); end=matcher.end()-2;//代表点的位置 if(s.charAt(0)==&#x27;一&#x27;||s.charAt(0)==&#x27;二&#x27;||s.charAt(0)==&#x27;三&#x27;) &#123; flag=0; &#125; else &#123; if(str.substring(end-flag-(s.length()-2), end).compareTo(limit[flag])&gt;0) &#123; flag++; &#125; &#125; if(index!=-1) &#123; whole.add(str.substring(index, end-flag-(s.length()-2))); &#125; index = end-flag-(s.length()-2);//解决第一道题不是个位数只取一位问题 &#125; end = str.length(); whole.add(str.substring(index,end));&#125; 在一道题中提取题目我觉得可以以遇到A为判断条件，但是这个A不能是题目中的单词，不能是括号中的正确答案。 在提取题目之前，我首先提取了答案，然后删掉这段答案，要不然在搜索的时候很可能与选项混淆。然后再找到第一个选项A的位置，在此之前的都是题目，正常在题目中是不会出现单独字母的（如果出现了，现在解决不了），所以只需要保证一个字母的前后都不是字母，就可以解决了。这是对于选择题来说的，对于判断题只需要删除掉正确答案就可以了。提取完题目就删掉题目了，只剩下选项了。 正则公式：([ＡＢＣＤABCDabcd]&#123;1&#125;[.|、|．]&#123;1&#125;) 代码如下： 123456789101112public String Subject(String s) &#123; String regex_T = &quot;([ＡＢＣＤABCDabcd]&#123;1&#125;[.|、|．]&#123;1&#125;)&quot;; Pattern pattern = Pattern.compile(regex_T); Matcher matcher = pattern.matcher(s); int index = -1; if (matcher.find()) &#123; index = matcher.start(); &#125; position = index; String cache = s.substring(0, index); return cache;&#125; 在题目中提取正确答案正确答案就在括号中，所以只需要找到括号，然后取出里面的字符就可以了。 正则公式：(\\([ＡＢＣＤABCDabcd]\\))，跟之前寻找A选项正好相反。 12345678910public String Result(String s) &#123; String regex_R = &quot;(\\([ＡＢＣＤABCDabcd]\\))&quot;; Pattern pattern = Pattern.compile(regex_R); Matcher matcher = pattern.matcher(s); if (matcher.find()) &#123; T += matcher.group().toString().charAt(1); &#125; s = s.replaceAll(regex_R, &quot;&quot;); return s;&#125; 提取出每一个选项题目提取完了，那就该提取选项了，碰到字母，并且这个字母是单独存在的。因为现在一道题中只剩下了选项，所以只需要找字母加上点或顿号等。 正则公式：([ＡＢＣＤABCDabcd]&#123;1&#125;[.|、|．]&#123;1&#125;) 判断题代码实现 1234567891011public String Option(String s) &#123; // TODO Auto-generated method stub String cache=&quot;&quot;; cache += &quot;&lt;input type=\&quot;radio\&quot; id=\&quot;&quot;+ID+&quot;-&quot;+&quot;T&quot;+&quot;\&quot; name=\&quot;xxx\&quot; /&gt;&quot;; cache += &quot;T&quot;; cache += &quot;\n&lt;input type=\&quot;radio\&quot; id=\&quot;&quot;+ID+&quot;-&quot;+&quot;F&quot;+&quot;\&quot; name=\&quot;xxx\&quot; /&gt;&quot;; cache += &quot;F&quot;; cache += &quot;\n&lt;br /&gt;\n&quot;; cache += &quot;&lt;/form&gt;\n&quot;; return cache;&#125; 选择题代码实现 1234567891011121314151617181920212223public String Option(String s) &#123; String regex_X = &quot;([ＡＢＣＤABCDabcd]&#123;1&#125;[.|、|．]&#123;1&#125;)&quot;; Pattern pattern = Pattern.compile(regex_X); Matcher matcher = pattern.matcher(s); int index = -1; String cache = &quot;&quot;; int end = -1; while (matcher.find()) &#123; end = matcher.start(); if (index != -1) &#123; cache += &quot;&lt;input type=\&quot;radio\&quot; id=\&quot;&quot; + ID + &quot;-&quot; + s.charAt(index) + &quot;\&quot; name=\&quot;xxx\&quot; /&gt;&quot;; cache += s.substring(index, end); cache += &quot;\n&lt;br /&gt;\n&quot;; &#125; index = end; &#125; end = s.length(); cache += &quot;&lt;input type=\&quot;radio\&quot; id=\&quot;&quot; + ID + &quot;-&quot; + s.charAt(index) + &quot;\&quot; name=\&quot;xxx\&quot; /&gt;&quot;; cache += s.substring(index, end); cache += &quot;\n&lt;br /&gt;\n&quot;; cache += &quot;&lt;/form&gt;\n&quot;; return cache;&#125; 实现类图采用java语言，用正则对文本进行判断，切割。 Handle+ str: String=””+ str: String=””+ out: String=””+ out: String=””~ pattern: Pattern=null~ pattern: Pattern=null~ matcher: Matcher=null~ matcher: Matcher=null~ whole: ArrayList&lt;String&gt; ~ whole: ArrayList&lt;String&gt; + Handle(s: String)+ Handle(s: String)+ Init(): void+ Init(): void+ Divition(): void+ Divition(): void+ merge(): void+ merge(): voidPrint~ file: String=null~ file: String=null+ Print(file: String)+ Print(file: String)+ out():void+ out():voidChoice+ choice: Choice+ choice: Choice~ str: String=null~ str: String=null~ ID: String=null~ ID: String=null+ out: String=””+ out: String=””~ T: char~ T: char~ position: int~ position: int~ pattern: Pattern=null~ pattern: Pattern=null~ matcher: Matcher=null~ matcher: Matcher=null+ run(s: String): String+ run(s: String): String+ TitleNumber(s: String): String+ TitleNumber(s: String): St…+ Option(s: String): String+ Option(s: String): String+ Subject(s: String): String+ Subject(s: String): String+ Result(s: String): String+ Result(s: String): String+ onClick(): String+ onClick(): StringJudgement+ judgement: Judgement+ judgement: Judgement+ ID: String=null+ ID: String=null+ str: String=null+ str: String=null~ T: char~ T: char+ out: String=””+ out: String=””~ pattern: Pattern=null~ pattern: Pattern=null~ matcher: Matcher=null~ matcher: Matcher=null+ run(s: String): String+ run(s: String): String+ TitleNumber(s: String): String+ TitleNumber(s: String): St…+ Subject(s: String): String+ Subject(s: String): String+ Result(s: String): String+ Result(s: String): String+ onClick(): String+ onClick(): StringClassification~ T: char~ T: char~ cache: String=null~ cache: String=null+ Result(s: String): void+ Result(s: String): void+ Function(s: String): String+ Function(s: String): Stri…Connect+ file: String=null+ file: String=null~ reader: BufferedReader=null~ reader: BufferedReader=null+ Connect(file: String)+ Connect(file: String)+ con(): void+ con(): voidMainMainUseUse«interface»Mold+ run(s: String): String+ run(s: String): String+ TitleNumber(s: String): String+ TitleNumber(s: String): Str…+ Option(s: String): String+ Option(s: String): String+ Subject(s: String): String+ Subject(s: String): String+ Result(s: String): String+ Result(s: String): String+ onClick(): String+ onClick(): StringUseUseUseUseUseUseUseUseUseUseViewer does not support full SVG 1.1 重构后的实现类图发现有点不符合开闭原则，代码重构后去除了classification类，这样把自己的特征都写到自己的类中。特征在Rule()方法 Handle+ str: String=””+ str: String=””+ out: String=””+ out: String=””~ pattern: Pattern=null~ pattern: Pattern=null~ matcher: Matcher=null~ matcher: Matcher=null~ whole: ArrayList&lt;String&gt; ~ whole: ArrayList&lt;String&gt; + Handle(s: String)+ Handle(s: String)+ Init(): void+ Init(): void+ Divition(): void+ Divition(): void+ merge(): void+ merge(): voidPrint~ file: String=null~ file: String=null+ Print(file: String)+ Print(file: String)+ out():void+ out():void+ Remove(file: String): String+ Remove(file: String): Stri…Choice+ choice: Choice+ choice: Choice~ str: String=null~ str: String=null~ ID: String=null~ ID: String=null+ out: String=””+ out: String=””~ T: char~ T: char~ position: int~ position: int~ pattern: Pattern=null~ pattern: Pattern=null~ matcher: Matcher=null~ matcher: Matcher=null+ run(s: String): String+ run(s: String): String+ TitleNumber(s: String): String+ TitleNumber(s: String): St…+ Option(s: String): String+ Option(s: String): String+ Subject(s: String): String+ Subject(s: String): String+ Result(s: String): String+ Result(s: String): String+ onClick(): String+ onClick(): String+ Rule(s: String): String+ Rule(s: String): StringJudgement+ judgement: Judgement+ judgement: Judgement+ ID: String=null+ ID: String=null+ str: String=null+ str: String=null~ T: char~ T: char+ out: String=””+ out: String=””~ pattern: Pattern=null~ pattern: Pattern=null~ matcher: Matcher=null~ matcher: Matcher=null+ run(s: String): String+ run(s: String): String+ TitleNumber(s: String): String+ TitleNumber(s: String): St…+ Subject(s: String): String+ Subject(s: String): String+ Result(s: String): String+ Result(s: String): String+ onClick(): String+ onClick(): String+ Rule(s: String): String+ Rule(s: String): StringConnect+ file: String=null+ file: String=null~ reader: BufferedReader=null~ reader: BufferedReader=null+ Connect(file: String)+ Connect(file: String)+ con(): void+ con(): voidMainMainUseUseUseUseUseUseUseUse«interface»Mold+ run(s: String): String+ run(s: String): String+ TitleNumber(s: String): String+ TitleNumber(s: String): Str…+ Option(s: String): String+ Option(s: String): String+ Subject(s: String): String+ Subject(s: String): String+ Result(s: String): String+ Result(s: String): String+ onClick(): String+ onClick(): String+ Rule(s: String): String+ Rule(s: String): StringViewer does not support full SVG 1.1 开发环境的搭建暂时先在本地测试 总结考虑到以后可能会有其他题型添加，就把一些功能分开写了，这样就可以很好的对程序扩充了；有的文档不仅有选择题还有判断题，先开始我是以题号作为ID的，最后我把判断和选择放到一起的时候，就出现了ID重复的问题，所以就用1-代表判断题，2-代表选择题，就可以解决不同题型ID重复的问题了，相同题型，假如说题号一样的话，就会出问题了，在现在这个代码还解决不了这样的问题。 样例一、判断 1.数据库安全控制的目的是防止非法对数据库的使用和对数据库的恶意破坏。 T F 确定 2.面向集合的操作方式是SQL语言的特点之一。 T F 确定 3.面向对象的操作方式是SQL语言的特点之一。 T F 确定 4.日志文件是用于数据库恢复的重要文件。 T F 确定 5.在登录日志文件时，应该先更新数据库，后登录日志文件。 T F 确定 6.飞机的座位与乘客之间的联系是一对一联系。 T F 确定 7.判断一个并发调度是否正确，可以用“可串行化”概念来解决。 T F 确定 8.对关系模型来说，范式级别越高，实际应用效果越好。 T F 确定 9.视图是关系数据库系统提供给用户以多种角度观察数据库中的数据的重要机制。 T F 确定 10.索引有助于提高数据检索的速度，因此建立索引的数量越多越好。 T F 确定 11.一个基本表最多只能有一个索引。 T F 确定 12.若希望某数据库中的全体用户都具有某个权限，较好的做法是创建一个角色并将此权限授给该角色。 T F 确定 13.当一个表的各记录中某列的字符长度不固定时常将该列定义为CHAR类型。 T F 确定 14.当一个表的各记录中某列的字符长度不固定时常将该列定义为VARCHAR类型。 T F 确定 15.若数据库关系设计中存在函数传递依赖，可能满足2NF，但一定不满足3NF。 T F 确定 二、多项选择题(共61小题) 1.从逻辑意义上讲，一个计算机网络是由()构成的。 A、通信子网 B、资源子网 C、局域网 D、广域网 确定 2.计算机网络的发展经历了()阶段。 A、远程联机系统 B、初期计算机网络 C、开放式标准化网络 D、中期计算机网络 确定 3.网络的发展趋势必将导致()三网合一，网络安全、服务质量、多媒体信息的快速传送将成为网络性能的关键问题。 A、计算机网络 B、通信网络 C、广播电视网络 D、无线网络 确定 4.网络拓扑结构是指节点相连形成的几何形状。网络常见的拓扑结构有()。 A、星型网络 B、总线型网络 C、环型网络 D、树型网络 确定 5.以地理分布范围为标准，计算机网络可分为()等。 A、局域网 B、城域网 C、广域网 D、校园网 确定 三、单选题 1.数据库管理系统的英文缩写是。 A.DB B.DBS C.DBMS D.DBSS 确定 2.是按照一定的数据模型组织的，长期储存在计算机内，可为多个用户共享的数据的集合。 A.数据库系统 B.数据库 C.关系数据库 D.数据库管理系统 确定 3.关系数据模型的三个组成部分中，不包括 A.完整性规则 B.数据结构 C.数据操作 D.并发控制 确定 4.关系代数表达式的优化策略中，首先要做的是 A.对文件进行预处理 B.尽早执行选择运算 C.执行笛卡儿积运算 D.投影运算 确定 5.事务有多个性质，其中不包括 A.一致性 B.惟一性 C.原子性 D.隔离性 确定 6.SQL语言通常称为。 A.结构化查询语言 B.结构化控制语言 C.结构化定义语言 D.结构化操纵语言 确定 7.如何构造出一个合适的数据逻辑结构是主要解决的问题。 A.关系数据库优化 B.数据字典 C.关系数据库规范化理论 D.关系数据库查询 确定 8.要保证数据库逻辑数据独立性，需要修改的是。 A.模式 B.模式与内模式的映射 C.模式与外模式的映射 D.内模式 确定 9.下列四项中，不属于数据库特点的是。 A.数据共享 B.数据完整性 C.数据冗余很高 D.数据独立性高 确定 10.学生社团可以接纳多名学生参加，但每个学生只能参加一个社团，从社团到学生之间的联系类型是。 A.多对多 B.一对一 C.多对一 D.一对多 确定 11.反映现实世界中实体及实体间联系的信息模型是 A.关系模型 B.层次模型 C.网状模型 D.E-R模型 确定 12.对表进行垂直方向的分割用的运算是。 A.交 B.投影 C.选择 D.连接 确定 13.在SQL中，用户可以直接操作的是。 A.基本表 B.视图 C.基本表或视图 D.基本表和视图 确定 14.对数据库并发操作有可能带来的问题包括 A.读出“脏数据” B.带来数据的冗余 C.未被授权的用户非法存取数据 D.破坏数据独立性 确定 15．数据管理技术的发展过程中，经历了人工阶段、文件系统阶段和数据库管理阶段，在这几个阶段中，数据独立性最高的是阶段。 A．文件系统 B．人工管理 C．数据库系统 D．数据项管理 确定]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>小项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[单一职责原则]]></title>
    <url>%2F%2Fposts%2F202002011.html</url>
    <content type="text"><![CDATA[:::tip设计模式的原则有的书上是六大原则，有的是七大原则，本次以七大原则介绍。设计模式一词是一个建筑学家提出的，可见不管做什么都是要精打细算的。::: 判断软件设计质量的标准高内聚，低耦合，执行这些原则也是为了使代码更加靠近这一标准。 单一职责原则（Single-Responsibility Principle） 定义：一个类只负责一个功能领域中相应的职责，或者可以定义为：就一个类而言，应该只有一个引起它变化的原因。 目的：为了实现高内聚。一个类承担的职责越多，被复用的可能性就越小，一个类承担的职责过多，就相当于把这些职责耦合在一起，当以职责发生变化时（即，功能），可能会影响到其他的职责工作，所以要将这些职责进行分离，将不同的职责封装在不同的类中，即将不同的变化原因封装在不同的类中。 优点： 可以降低类的复杂度，一个类只负责一项职责，其逻辑肯定比负责多项职责简单。 可读性高 可维护性高，修改代码的时候风险也小。如果接口的单一职责好，一个接口的修改只对应相应的实现类有影响，对其他接口无影响，提高了系统的扩展性和可维护性。 SRP例子问题背景，现在有一个客户管理系统，需要一个绘制客户表的工具。 123456public class Main &#123;//代码段1 public static void main(String[] args) &#123; System.out.println(&quot;This Main SRP&quot;); new CustomerChart().displayChart(); &#125;&#125; 12345678910111213141516import java.util.ArrayList;import java.util.List;public class CustomerChart &#123;//代码段2 protected List&lt;Customer&gt; findCustomers() &#123; //查找数据库 List&lt;Customer&gt; ret = new ArrayList&lt;Customer&gt;(); ret.add(new Customer(&quot;www&quot;,20)); ret.add(new Customer(&quot;mmm&quot;,26)); return ret; &#125; public void displayChart() &#123; for (Customer customer : findCustomers()) &#123; System.out.println(&quot;customer:&quot; + customer.name); &#125; &#125;&#125; 12345678public class Customer &#123;//代码段3 public String name; public int age; public Customer(String name,int age) &#123; this.name = name; this.age = age; &#125;&#125; 类图 CustomerChart# findCustomers(): List&lt;Customer&gt;+ displayChart(): void MainCustomer+ name: String+ age: int+ age: int+ Customer(name:String,age:int)UseUseUseUse 假如之前使用的是mysql数据库，现在要换成oracle怎么办？ 之前是把绘图和查询数据库放在了一起，当数据库发生改变时，需要修改数据库部分，但是绘图部分并没有改变，显然他们发生变化的原因并不一致，所以需要将他们两个隔离开来。 将代码段3数据库部分与绘图部分拆成两个类,形成代码段4和代码段5。 1234567891011public class CustomerChart &#123;//代码段4 public CustomerDao dao = null; public CustomerChart(CustomerDao dao) &#123; this.dao = dao; &#125; public void displayChart() &#123; for (Customer customer : dao.findCustomers()) &#123; System.out.println(&quot;customer:&quot; + customer.name); &#125; &#125;&#125; 1234567891011import java.util.ArrayList;import java.util.List;public class CustomerDao &#123;//代码段5 protected List&lt;Customer&gt; findCustomers() &#123; //查找数据库 List&lt;Customer&gt; ret = new ArrayList&lt;Customer&gt;(); ret.add(new Customer(&quot;www&quot;,20)); ret.add(new Customer(&quot;mmm&quot;,26)); return ret; &#125;&#125; 类图 CustomerChart+ customerDao: CustomerDao+ customerDao: CustomerDao+ displayChart(): void MainCustomer+ name: String+ age: int+ age: int+ Customer(name:String,age:int)UseUseCustomerDao# findCustomers(): List&lt;Customer&gt;UseUse为什么是聚合而不是依赖呢？为什么是聚合而不是依赖呢？]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[画UML类图]]></title>
    <url>%2F%2Fposts%2F202001301.html</url>
    <content type="text"><![CDATA[UML的分类先简单看一下UML图的分类。 结构型的图（Structure Diagram）是一种偏静态类型的图 类图（Class Diagram）用方框来表示类，用一些线来表示他们之间的关系。 对象图（Object Diagram）对象是类的实例化，方便表示对象之间的关系。 构件图（Component Diagram）构件图又叫组件图，主要描述一个系统的组成与关系。通常在服务器开发时使用。 部署图（Deployment Diagram）部署图是用来描述系统如何部署、本系统与其他系统是怎样的一种关系。通常在服务器开发时使用。 包图（Package Diagram）当类图很多的时候，可以将类放入包中，简化图。 行为型的图（Behavior Diagram）是一种偏动态类型的图 活动图（Activity Diagram）用圆边框表示一个“活动”，用箭头表示活动的先后顺序，类似于流程图。 状态机图（State Machine Diagram）状态机图又叫做转态图，主要用于描述复杂的对象或者模块，内部不同状态的转化过程。 顺序图（Sequence Diagram）可以描述系统的执行过程，常常用来表示系统中类、方法的调用过程。 通信图（Communication Diagram）通信图是顺序图的另外一种画法。 用例图（Use Case Diagram）用例图表达的是什么角色通过软件系统能做什么事情，通常用于软件开发的需求分析阶段。 时序图（Timing Diagram）时序图又叫时间图，表示某东西的状态随时间变化而变化的图，用时间线的方式表示事务状态变化。 UML类图之间的关系 类与类、接口之间的关系有六种。 泛化泛化关系实际上就是继承关系，表示一般与特殊的关系，他指定子类如何特化父类的所有特征和行为。 表示方法：带三角箭头的实线，箭头指向父类 代码：extends Classname+ field: type+ method(type): typeSubClassname+ field: type+ method(type): typeExtendsExtends 接口与实现是一种类与接口的关系，表示类时接口所有特征和行为的实现。 表示方法：带三角箭头的虚线，箭头指向接口。 代码表现：implements。 «interface»Name«interface»…Classname+ field: type+ method(type): type 依赖（Dependency）是一种使用关系，即一个类的实现需要另一个类的协助。但是需要的需要的那个类只是已局部变量存在，这就叫做依赖 表示方式：带普通箭头的虚线，指向被被依赖者。 StringStringTools+ subString(param:String)UseUse 关联（Association）是一种拥有关系，它使一个类知道另一个类的属性和方法。有单向关联和双向关联。关联其实也需要另一个类去协助，主要区别就是需要的那个类是以成员变量的形式存在。 代码体现：成员变量 表示方式：单向关联用带普通箭头的实线，指向被拥有者；双向关联用实现表示。 CouseStudent 聚合（Aggregation）关联又可细化成聚合和组合。 是整体与部分的关系，且部分可以离开整体而单独存在。如车和轮胎是整体和部分的关系，轮胎离开车仍然可以存在。 带空心菱形的实线，菱形指向整体 CarTyre 组合（Composition）是整体与部分的关系，但部分不能离开整体而单独存在。 表示方式：带实心菱形的实线，菱形指向整体。 PersonHead 访问权限符号表示 Mark Express | public| protected | private~ | friendly 常用的关键字 关键字 Express static 下划线 abstract 斜体 : 成员类型或方法返回值 = 默认值 以动物关系示例Animal+ drink(water:Water)WaterUseUseBird+ wing: WingMammalExtendsExtendsExtendsExtendsWingchicken+ method(type): typeExtendsExtendsRoastChikenExtendsExtendsWolfExtendsExtendssheepExtendsExtendsWolves&lt;&lt;Interface&gt;&gt;Price+ price(): int&lt;&lt;Interface&gt;&gt;…]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为Vuepress配置PWA]]></title>
    <url>%2F%2Fposts%2F202001271.html</url>
    <content type="text"><![CDATA[今天给博客配置了一个PWA，开始的时候按照官网的配置，以为就像是写文章一样，在本地测试就可以看到效果，结果踩了坑，一直都没有成功，最好找了好多的例子，发现我与他们的配置都差不多，就上传到github上，是可以使用的。原来本地是不能使用的，害我走了那么多弯路。 安装插件12yarn add -D @vuepress/plugin-pwa# OR npm install -D @vuepress/plugin-pwa 通过yarn或者npm都可以安装 使用插件123456module.exports = &#123; plugins: [&#x27;@vuepress/pwa&#x27;, &#123; serviceWorker: true,//用于缓存页面类容，供离线使用 updatePopup: true //用于刷新类容的弹窗 &#125;],&#125; 简单配置为了使网站完全兼容PWA，需要做两件事： 在.vuepress/public添加manifest.json文件和icons文件夹 在.vuepress/config.js添加正确的head links manifest.json的例子123456789101112131415161718192021&#123; &quot;name&quot;: &quot;srcrs&quot;,//用户主屏幕上的名字 &quot;short_name&quot;: &quot;srcrs&quot;,//当屏幕较小显示的短名字 &quot;icons&quot;: [//添加到主屏幕之后的图标，生成的web应用图标 &#123; &quot;src&quot;: &quot;/icons/android-chrome-192x192.png&quot;, &quot;sizes&quot;: &quot;192x192&quot;, &quot;type&quot;: &quot;image/png&quot; &#125;, &#123; &quot;src&quot;: &quot;/icons/android-chrome-512x512.png&quot;, &quot;sizes&quot;: &quot;512x512&quot;, &quot;type&quot;: &quot;image/png&quot; &#125; ], &quot;start_url&quot;: &quot;/index.html&quot;,//设置启动网址 &quot;display&quot;: &quot;standalone&quot;,//设置启动样式，隐藏浏览器的URL地址栏 &quot;background_color&quot;: &quot;#fff&quot;,//设置启动页面的背景颜色 &quot;theme_color&quot;: &quot;#3eaf7c&quot;//设置地址栏的颜色&#125; 在Vuepress完全兼容PWA的例子1234567891011 head: [ [&#x27;link&#x27;, &#123; rel: &#x27;icon&#x27;, href: &#x27;favicon.ico&#x27; &#125;],//站点图标 [&#x27;link&#x27;, &#123; rel: &#x27;manifest&#x27;, href: &#x27;/manifest.json&#x27; &#125;], [&#x27;meta&#x27;, &#123; name: &#x27;theme-color&#x27;, content: &#x27;#3eaf7c&#x27; &#125;], [&#x27;meta&#x27;, &#123; name: &#x27;apple-mobile-web-app-capable&#x27;, content: &#x27;yes&#x27; &#125;], [&#x27;meta&#x27;, &#123; name: &#x27;apple-mobile-web-app-status-bar-style&#x27;, content: &#x27;black&#x27; &#125;], [&#x27;link&#x27;, &#123; rel: &#x27;apple-touch-icon&#x27;, href: &#x27;/icons/apple-touch-icon-152x152.png&#x27; &#125;], [&#x27;link&#x27;, &#123; rel: &#x27;mask-icon&#x27;, href: &#x27;/icons/safari-pinned-tab.svg&#x27;, color: &#x27;#3eaf7c&#x27; &#125;], [&#x27;meta&#x27;, &#123; name: &#x27;msapplication-TileImage&#x27;, content: &#x27;/icons/msapplication-icon-144x144.png&#x27; &#125;], [&#x27;meta&#x27;, &#123; name: &#x27;msapplication-TileColor&#x27;, content: &#x27;#000000&#x27; &#125;]], 在public中添加站点图标，在icons中添加应该缺少的图片，部署之后就可以使用了。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>PWA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我身在历史的何处]]></title>
    <url>%2F%2Fposts%2F202001241.html</url>
    <content type="text"><![CDATA[对于我们中国人来说，也许今天过完才算是新的一年吧。前两天还是忙碌着的，没回家的人忙着回家、忙着挣钱，回家的人忙着办年货，今天总算都能休息了。暂且以此文对旧年的告别，对新年的迎接。 过去一年，想来思绪咋也回不过去，“怀旧空吟闻笛赋，到乡翻似烂柯人。”也不过如此吧。过去曾为“刷题”而活，然而仍然是技不如人，没能争取到名额，落败，说实话那时候挺难受的，因为毕竟自己真的有很用心的去做，那时的我以为，只要能把题做好，未来可期。也曾颓废过一段时间，不再刷题，可是人就是这样，不肯服输，知耻而后，背上包袱，又默默的刷了起来，即使不能去，有人会告诉我，你要真想去可以自费啊，其实，有些时候，并不是为了比赛而去比赛，而是为了证明自己可以。后来五月份，也是没能去成，那个是要求很高的比赛项目，还有其他一些问题，也没啥遗憾的吧。 那时候，知道了github，一番试用发现这真是个好玩的东西，html放到上去之后就可以通过网址来访问网页的内容，很神奇，没日没夜一个星期的时间才造出了自己的第一个博客，好看了还希望更好看，功能多了还希望更多，踩了很多的坑，走了很多的弯路，不过一切于己来说都是如此值得，因为这里有我。 我还有幸去了合肥科大讯飞，参观学习，看到了当今何为知识分子，何为高科技人才，吃住了几天，住在员工的宿舍楼里，两张床，有独立卫生间沐浴，吃饭就在员工餐厅里，饭菜还是比较实惠的，吃饱是不成问题的。我们中晚是按照一顿饭十块钱的标准，有时候还会多一点；早上要少一点，更多的是起不来，我只吃了一顿早饭，感觉也很不错。那是奋斗目标，我能感受的到，我也知道那很遥远，身是学生，希望就在，有个想头总是好的。 接下来又去了广东佛山，上次的参观学习，就是为了这次比赛。这是我头一次到南方去，包括合肥也是头一次去，虽然只有短短几天，但是受益匪浅，以学生之名义。这也是唯一说的出去的身份，让别人看的起的身份，因为是学生，所以还有希望。 今年这个春节有点不一样，第一次没有四处去拜年，我觉得这样的年，才算是放假，简单。武汉疫情，牵动着每一个人的心，家人天天说，看今天又涨了多少多少人，我也没事看些这个，有时候上上外网，看看又发些什么真假虚实的东西，这个春节一定要小心小心再小心，对自己负责，对家人负责。前线的医疗人员，一定要注意自身的安全，天佑你们。 过完年，分岔路渐行渐近，人生总要面临许许多多的抉择，每到这个时候，我总不知是Right or Left，稀里糊涂的上小学、初中、高中、大学，一路走到了现在。小时候不懂事，不知人生不易，后来懂事了，索性还不算太晚。为什么要读书，为何而读书，我想每个人都有自己的答案，我也有一份我的答案在心里。做过一些婚庆布场，那使我体会到什么是阶级，这是我们每个即将步入社会的学生都要面临的问题。《乡村里的中国》那位父亲几句真挚而朴素的话，让我没忍住，因为真实，自有其万钧之力。比起现在什么小哥哥、小姐姐之类影视视频，要强上不知多少倍，一个让你正视自己，一个让你迷惑自己。“书中自有黄金屋，书中自有颜如玉”，多少年了，古人说的话还是对的。 以前看着身边的哥哥姐姐与我一样还都是个孩子，现在有的孩子都多大了，有的成双成对，自己还是个孤家寡人，有时候有点不好，有时候也挺好，无拘无束。活到现在这个年纪，竟不知如何与异性交流了，小时候一起玩泥巴就是朋友，现在还不知要聊些什么了。我不属于特别能说的人，也不是很会来事，嘴拙，这辈子不知道还能治好不。这些年，学习也没学好，啥也没干好。新的一年，愿有新气象。 最后，送给自己八个字：少说多做，正眼看人。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图片转移与改进]]></title>
    <url>%2F%2Fposts%2F202001191.html</url>
    <content type="text"><![CDATA[画图以前用的hexo的插件mermaid，转移到vuepress之后就无法使用这个插件了，以前画的图就变成一片代码了，为了减少画图的挂的可能性，以后就用draw.io画图，嵌入svg图片，本来开始希望嵌入的是base64，但是最后发现它的代码长度比svg长了不少，就放弃了。采用这种方式引入图片有一个缺点，文章变得太长了，好处就是图片稳定性增加了。 在index.styl引入了样式覆盖，使得图片居中显示在文章中。 1svg&#123; margin:0 auto; display:block;&#125; 最近就在慢慢把图转化，发现以前做的有些图很不好，有些傻，不规范，又看了一些画图的规范，把以前不好的地方改进了一下。把图画好是个技术活。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>画图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[srcrs的2019]]></title>
    <url>%2F%2Fposts%2F201912311.html</url>
    <content type="text"><![CDATA[最近没熬夜了，早上起的早一点，感觉比以前舒服多了，每天就学习要考试的内容，一学期没怎么听过课，关键时候还是要争取一下的。虽然有时候做题很烦，但是很充实，看着天一点点的变亮，又看着它一点点昏沉，握不住，真握不住，一天天。 写完这篇，下次再写的就是明年的事了，过的好快啊，可惜的是，我依然是那个渺小的小朱。从今年五月份开始弄的这个博客站点，我觉得这是我今年最大的收获之一，这里有我，有我。记录生活的点滴，这就是最大的意义。 什么也不再想了，多少年的一个梦，醒了也好，心安（再一次让我认识到了自己）。历史的车轮还不是得往前开，2020小朱事业为重，向上奔。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[冬令]]></title>
    <url>%2F%2Fposts%2F201912151.html</url>
    <content type="text"><![CDATA[最近有点放纵自己了，都没在学习，迷上了斗地主，夜以继日的斗，最后输完了豆，觉也没睡好。今天是12月15号，阴历11月20号，是姥姥的生日，打个电话问候，突然想到了去年那个时候，也是这样打电话，就很想笑自己，还是聊不了几句话。我又想起了我们初中的一个数学老师，经常坐在讲台上，两眼出了神的看一个地方，就见他笑了，不知道想到了哪个有趣的事情。 临近期末，要好好复习，不能挂科，还剩下半个月左右，抓紧，地主也不要再斗了。17年上大学，马上20年就要来了，不知到从什么时候起，时光突然就加速了，而我已长成20多岁的小伙，有时候在电视中看到，某某20多岁，他们在做些什么，取得了什么样的成绩，我到时候也会这样吗？忽地一惊，自己比别人还大一岁。有时候，我们希望认识很多的人，在此前提，认识自己吧。 今天在食堂吃饭，看到熟悉的衣服，熟悉的颜色的学生在准备举行冬至包饺子的活动，回想起两年之前，我也同样是穿着同样的衣服，在做同样的事情。戴上眼镜，往人群扫过去，看了半天也没找到一个熟悉的面孔。其实那时候玩的也尴尬的很，很多人都不认识，我也是个天生嗨不起来的人。 昨天，班级聚餐唱了半首歌，记得上次在班级里唱歌还是在初中，仍然记得化学老师那老头看我们一脸不屑的样子，嘿嘿。今年就要过去了，马上人生又要面临又一个分叉路口，过往，渐行渐远。熟悉的人多年不曾联系，渐行渐淡，亲情多么奇妙，多么珍贵，多么无私。这也是人生很无奈的地方。着眼于当下，未来，才是正解。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java创建对象的五种方式]]></title>
    <url>%2F%2Fposts%2F201912011.html</url>
    <content type="text"><![CDATA[静态编译&amp;编码方式静态编译&amp;编码的方式是最常用的，也是我以前只知道的，特点就是A类必须要先存在。 1234567891011class A &#123; public void run() &#123; System.out.println(&quot;A&quot;); &#125;&#125;public class test &#123; public static void main(String[] args) &#123; A a = new A();//创建之前A类必须要存在 a.run(); &#125;&#125; 克隆方式克隆一个对象实现的关键就是使用Cloneable接口。 12345678910111213141516171819202122class B implements Cloneable&#123; public void run() &#123; System.out.println(&quot;B&quot;); &#125; @Override protected Object clone() throws CloneNotSupportedException &#123;//克隆必须要实现的接口 // TODO Auto-generated method stub return super.clone(); &#125;&#125;public class test &#123; public static void main(String[] args) &#123; B a = new B(); try &#123; B b = (B)a.clone();//这返回的是Object类型的对象，还要下转一下。 b.run(); &#125; catch (CloneNotSupportedException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125; 序列化和反序列化方式借助于Serializable接口实现创建对象，这个更前一种克隆方式实现原理差不多，都是对已经创建好的对象进行复制，但是并不是同一个对象，即不是在同一个地址。这种创建的对象不安全，因为必须把已有的实例对象放到一个文件中，这就导致了信息有可能泄露。 123456789101112131415161718192021222324252627import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.io.Serializable;class C implements Serializable&#123;//序列化和反序列化要实现的接口 public void run() &#123; System.out.println(&quot;C&quot;); &#125;&#125;public class test &#123; public static void main(String[] args) &#123; C a = new C(); try &#123; ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(&quot;data.obj&quot;)); out.writeObject(a); out.close(); ObjectInputStream in = new ObjectInputStream(new FileInputStream(&quot;data.obj&quot;)); C c = (C)in.readObject();//这返回的也是Object。 c.run(); &#125; catch (Exception e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125; 反射的方式方式112345678910111213141516171819202122import java.lang.reflect.Method;class D &#123; public void run() &#123; System.out.println(&quot;D&quot;); &#125;&#125;public class test &#123; public static void main(String[] args) &#123; try &#123; Object obj = Class.forName(&quot;D&quot;).newInstance();//Class.forName返回的是一个类，newInstance实例化一个对象 Class clazz = obj.getClass();//获得类型类 Method md = clazz.getMethod(&quot;run&quot;, null);//获取名为run的方法 md.invoke(obj);//运行方法 D d = (D)Class.forName(&quot;D&quot;).newInstance();//也可直接下转 d.run(); &#125; catch (Exception e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125; 方式212345678910111213141516171819import java.lang.reflect.Constructor;class E &#123; public void run() &#123; System.out.println(&quot;E&quot;); &#125;&#125;public class test &#123; public static void main(String[] args) &#123; try &#123; Constructor&lt;E&gt; constructor = E.class.getConstructor(); E e = constructor.newInstance(); e.run(); &#125; catch (Exception e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Socket实现多客户端与服务端交互]]></title>
    <url>%2F%2Fposts%2F201911281.html</url>
    <content type="text"><![CDATA[Socket可以有两种方式实现客户端与服务端的连接，一种是TCP，一种是UDP，本次用的TCP。设计思路无非是，服务端先搭建好一个地址和端口，然后客户端连接到这个地址和端口。中间也遇到了很多的问题，比如说多个 客户端怎么连接到一个服务端，这里只需要为每个用户开一个线程就可以解决。另外就是如何实现服务端作为通信的桥梁，接收一个客户端的信息到其余的客户端上，这里用的是HashMap，一个存放识别客户端的ID，一个存放客户端的Socket对象，这样，每次操作遍历所有的节点，就可以实现转发到不同的客户端上。 Server 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.io.PrintWriter;import java.net.ServerSocket;import java.net.Socket;import java.util.HashMap;import java.util.Iterator;public class Server &#123; private static final int PORT = 8888; public static HashMap&lt;String, Socket&gt; socketList = new HashMap&lt;&gt;(); static int t = 1; public static void main(String[] args) &#123; try &#123; ServerSocket server = new ServerSocket(PORT); System.out.println(&quot;server is listenning....&quot;); while (true) &#123; Socket socket = server.accept(); socketList.put(&quot;&quot; + t, socket); t++; new ServerThread(socket, socketList); &#125; &#125; catch (Exception e) &#123; // TODO: handle exception &#125; &#125;&#125;class ServerThread extends Thread &#123; private Socket client; private PrintWriter out; private HashMap&lt;String, Socket&gt; clientList = new HashMap&lt;&gt;(); public ServerThread(Socket socket, HashMap&lt;String, Socket&gt; socketList) throws IOException &#123; super(); client = socket; clientList = socketList; start(); &#125; @Override public void run() &#123; Socket socket; System.out.println(&quot;Client: &quot; + getName() + &quot; come in...&quot;); String str = &quot;&quot;; try &#123; BufferedReader reader = new BufferedReader(new InputStreamReader(client.getInputStream())); while ((str = reader.readLine()) != null) &#123; // 每当客户端连接上,就向相应的客户端进行回应 Iterator&lt;HashMap.Entry&lt;String, Socket&gt;&gt; entries = clientList.entrySet().iterator(); while (entries.hasNext()) &#123; HashMap.Entry&lt;String, Socket&gt; entry = entries.next(); // System.out.println(entry.getKey()); if (!String.valueOf(entry.getKey()).equals(&quot;&quot;)) &#123; // System.out.println(entry.getValue()); // System.out.println(&quot;-------------&quot;); socket = entry.getValue(); if (socket != client) &#123; try &#123; //out = new PrintWriter(socket.getOutputStream()); // 回复client的ID System.out.println(str); BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())); writer.write(str+&quot;\n&quot;); writer.flush(); //out.println(str + &quot;\n&quot;); //out.flush(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125; &#125; &#125; &#125; catch (IOException e1) &#123; // TODO Auto-generated catch block e1.printStackTrace(); &#125; &#125;&#125; Client 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.net.Socket;public class Client extends Thread&#123; private static final int PORT = 8888; public static void main(String[] args) &#123; try &#123; Socket socket = new Socket(&quot;127.0.0.1&quot;,PORT); new ReceiveServer(socket).start(); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); &#125; &#125;&#125;class ReceiveServer extends Thread &#123; private Socket socket; public ReceiveServer(Socket socket) &#123; // TODO Auto-generated constructor stub this.socket = socket; &#125; @Override public void run() &#123; // TODO Auto-generated method stub new SendServer(socket).start(); try &#123; BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream())); String str = &quot;&quot;; while(!socket.isClosed()&amp;&amp;(str = reader.readLine())!=null) &#123; System.out.println(str); &#125; &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); &#125; &#125;&#125;class SendServer extends Thread &#123; private Socket socket; public SendServer(Socket socket) &#123; // TODO Auto-generated constructor stub this.socket = socket; &#125; @Override public void run() &#123; // TODO Auto-generated method stub try &#123; BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())); String str = &quot;&quot;; while((str = reader.readLine())!=null&amp;&amp;!str.contains(&quot;bye&quot;)) &#123; writer.write(str + &quot;\n&quot;); writer.flush(); &#125; writer.write(&quot;bye&quot;+&quot;\n&quot;); writer.flush(); reader.close(); writer.close(); socket.close(); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>通信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[存在的意义]]></title>
    <url>%2F%2Fposts%2F201911251.html</url>
    <content type="text"><![CDATA[昨天看了在luogu上的一个大佬写的博客，写的关于算法内容，我完全都不知道说的那个东西是什么，看到有两篇杂记，就打开读了一下，里面讲的是自己从开始搞OI的经历，自己的想法，心理变化，周围的变化，其实感悟挺深的，突然觉得我们在这样搞算法题就好像是小打小闹，真不是一个世界的人，就是这么厉害的一个人（保送清华），也曾会为一道题久久解不出来而流泪，我还没有过，只是非常非常郁闷过，恨自己过，说明我还不够厉害。 我就在想，算法这个东西，是不是我们应该搞的东西，这两年，貌似也没搞别的东西了，可是效果也不是太好，难以拿得出手。真是不快乐的很。 上次给我妈打视频，特意在她面前炫耀了一下，我们在佛山获得的奖牌和证书，其实只是想让家里人知道，儿子在学校过的很好，不会让你们失望的，哪个父母不希望自己的孩子好。其实我知道能获得这个奖我付出的很少，有两个很厉害的队友，是我的幸运。我希望我可以抗下生活抛给我的一切，做个顶天立地的人，后来发现，有多么的不容易，有时候连自己小小的生活都搞不好。生活少不了不如意。 上次在办公室听一个老师跟另一个老师在谈他的刚满一岁的孩子，满满的父亲的幸福。也的确他可以给他孩子幸福，老师也算是个体很体面的职业吧。我的明天又在哪里呢，呵呵。 多年以后，且看今天，是怎样一番感受。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今天有点冷]]></title>
    <url>%2F%2Fposts%2F201911171.html</url>
    <content type="text"><![CDATA[突然一下就冷了起来，穿上了棉袄，外面还在下着小雨，刮着风，又一个冬天来了。今天窝在宿舍一天，也没有干个啥，感觉天一冷了，什么都不想干，倒还有点想家了。五点多天就黑了，六点多给我妈打个电话，没有人接，估计是还没有回家吧。 六点半我妈回了一个视频，是刚回来，聊一些家常，晚上还有节课，就没有再说什么了。看到有些人还在穿着薄衣服，真是感觉自己已不再年轻了，不过那一刻我也在偷偷乐着，我身暖心也暖。习惯了一个人，发现很少和别人交流了，感觉自己真的像一个山顶洞人，很危险啊。 这学期时间也不多了，大三过的快的很，明年不考研的话就该忙着找工作了，性格是个缺点，也还是三年之前哪个样吧，在与陌生人交流方面是我的弱项，但其实熟了之后，我还是很靠谱的。 从不想着幸运能够眷顾我，一分耕耘一分收获就行了]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[卸载Android微信的X5内核，如丝般顺滑]]></title>
    <url>%2Fposts%2F2019-11-15-cleanx5%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;微信Android版本，每次点击链接，都要卡半天，难顶啊，怎么办呢？安排！ 微信用的是腾讯自研的X5内核，也被称为TBS的腾讯浏览服务。 腾讯说X5内核相比于系统自带的Webview： 打开网页的速度更快，更省流量而且更安全…….等等一系列的优点。 X5内核取代的就是这个安卓手机都自带的WebView组件。这个组件是基于谷歌的Chromium内核开发。 步骤只需要几个步骤，就可以用自带的Webview，抛弃腾讯的X5内核。 第一步，从微信里面进入TBS的调试模式随便打开个聊天窗口，输入以下代码： debugtbs.qq.com 文字发出去后，再点击打开，就会进入TBS调试界面 接下来先点击【内核未被禁用】，微信会自动重启一次。 重启后，显示【内核已被禁用】。 第二步，清除TBS内核点击【清除TBS内核】，页面就会提示X5内核删除成功！ 现在，就能使用系统自带的Android Webview组件来浏览网页了，而且打开网页的速度真不是X5能比的。 注意：重新使用TBS内核如果想要恢复自带的X5内核，只要回到TBS的调试界面，点击【安装线上内核】就行。 经过对比，微信打开网页慢的锅，X5内核是背定了。]]></content>
      <categories>
        <category>Wechat</category>
      </categories>
      <tags>
        <tag>Wechat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看问题角度的重要性]]></title>
    <url>%2F%2Fposts%2F201911121.html</url>
    <content type="text"><![CDATA[:::tip看问题角度的不同，对于一个问题的看法和解决步骤就不一样，虽然也许最后可以获得正确的答案，但是相比较而言要曲折很多。::: 今天做了一道题，题意大概是这样的，一个演奏家要演奏一首歌，这首歌开始的时候有一个初始音量，还有一个最大音量，在演奏过程中不允许音量小于0或者是大于最大音量。演奏家要表演这首歌很多次，每次s他可以选择是调低音量还是调高音量，但是这个改变的音量每次是不一样的，但是固定的。问演奏家最后一次演奏的最大音量是多少？如果在演奏过程中如何都不能保证音量在正常范围内，就输出-1。 这道题，开始我总是关注如何取得最大的音量，本身也是没有错的，但是对于这道题来说，想的就有点不对了。我想着，每次选择不是提高就是降低，这就有两种可能，依次往下推，就是一个二叉树，最后只需要遍历最底层的叶子节点，找到一个最大值，就可解决这个问题了。但是这样做的结果是，几乎都超时了。所以这个方法是不可行的，因为每次我都要保存任何计算的结果，太占用空间的时间了。 而另一个关注的角度，是关注与能不能到达这个音量，如果能是一种情况，如果不能又是一种情况，这个将会给解题带来很大方便，因为只需要关注，到演奏第i首歌的时候，能不能演奏这个音量，而不管这个是怎么来的。 123456789101112131415161718192021222324252627282930313233343536373839#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;int f[55][1005];int main()&#123; int n,beginLevel,maxLevel; // freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin); cin &gt;&gt; n &gt;&gt; beginLevel &gt;&gt; maxLevel; for(int i=0;i&lt;=n;i++)&#123; fill(f[i],f[i]+maxLevel,0); &#125; f[0][beginLevel]=1; int m; for(int i=1;i&lt;=n;i++)&#123; cin &gt;&gt; m; for(int j=maxLevel;j&gt;=0;j--)&#123; if(j-m&gt;=0)&#123; f[i][j] = f[i][j]||f[i-1][j-m]; &#125; if(j+m&lt;=maxLevel)&#123; f[i][j] = f[i][j]||f[i-1][j+m]; &#125; &#125; &#125; int t=1; for(int i=maxLevel;i&gt;=0;i--)&#123; if(f[n][i]==1)&#123; cout &lt;&lt; i ; t=0; break; &#125; &#125; if(t)&#123; cout &lt;&lt; &quot;-1&quot;; &#125; // fclose(stdin); return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[梦回十年]]></title>
    <url>%2F%2Fposts%2F201910281.html</url>
    <content type="text"><![CDATA[这段时间过得真跟梦似的，有了大学里第一次外出学习的机会，到了外面，虽然知道自己会很菜，但是没想到菜的那么狠。连续好几天白天黑夜颠倒的，自己都有点摸不到北了，有时候会收获颇微，有时候感觉自己理解又加深了一点，总之一切在朝着好的方向发展的，甚感欣慰。 刷题，最近有一段时间都没有刷题了，这段时间忙完之后，还是要继续刷题的，按照自己定下的路径来，攻破自己的瓶颈。还有就是要学习Python，感觉生活中用的可能会多一点，会比较好玩一点，例如爬取网页中自己想要的数据，实现网站的自动登录（可以以此来思考制作短信验证码骚扰，嘿嘿）。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>心话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[滕王阁序]]></title>
    <url>%2F%2Fposts%2F201910161.html</url>
    <content type="text"><![CDATA[豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟(qi ji)遥临；宇文新州之懿(yi)范，襜帷暂住。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯（jian）。 时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑(can fei)于上路，访风景于崇阿；临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚(fu zhu)，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。 披绣闼(ta)，俯雕甍(meng)，山原旷其盈视，川泽纡其骇瞩。闾阎(lv yan)扑地，钟鸣鼎食之家；舸舰(ge jian)弥津，青雀黄龙之舳(zhu)。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨；雁阵惊寒，声断衡阳之浦。 遥襟甫(fu)畅，逸兴遄(chuan)飞。爽籁发而清风生，纤歌凝而白云遏(e)。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄(di mian)于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高北辰远。关山难越，谁悲失路之人？萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？ 嗟乎！时运不齐，命运多舛(chuan)。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸(he)辙以犹欢。北海虽赊，扶摇可接；东隅(yu)已逝，桑榆非晚。孟尝高洁，空余报国之情；阮(ruan)籍猖狂，岂效穷途之哭！ 勃，三尺微命，一介书生。无路请缨，等将军之弱冠；有怀投笔，慕宗悫(que)之长风。舍簪笏(zan hu)于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂(mei)，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？ 呜呼！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵具成。请洒潘江，各倾陆海云尔： 滕王高阁临江渚，佩玉鸣鸾罢歌舞。 画栋朝飞南浦云，珠帘暮卷西山雨。 闲云潭雨日悠悠，物换星移几度秋。 阁中弟子今何在？槛外长江空自流。 时隔多年，再读这篇《滕王阁序》，感慨颇多，虽不知意，但识其字，有感于心。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java连接数据库]]></title>
    <url>%2F%2Fposts%2F201910151.html</url>
    <content type="text"><![CDATA[思路java连接数据库，写一个能够实现交互程序必不可少的一个操作。首先我们要考虑几个问题 @flowstartst=&gt;start: 建立数据库并建立表process1=&gt;operation: 下载jdbc驱动process2=&gt;operation: 加载jdbc驱动process3=&gt;operation: 连接数据库e=&gt;end: 查询数据库 st-&gt;process1process1-&gt;process2process2-&gt;process3process3-&gt;e@flowend 建立数据库并建立表这个我使用的是mysql-5.5.28-winx64版本的数据库，数据库实验中我们学的就是这一种，在电脑上安装完之后，就可以在电脑的命令行中进行数据库的一些操作。创建一个数据库名字叫做m1。 1create database m1; 进入数据库m1，创建一个表名字叫做tb_stu,表结构如下。 123456use m1create table tb_stu（ number char(11), name varchar(50), age int(11), gender varchar(50)); 然后往表中插入一些数据 12345insert into tb_stu( number,name,age,gender)values( &#x27;jby_100001&#x27;,&#x27;zhangsan&#x27;,15,&#x27;1&#x27;); 这样表中就有一个数据了，但是一个太少了，又反复执行了上面的插入操作，最终形成了下表。 number name age gender jby_100001 zhangsan 15 1 jby_100002 lisi 29 0 jby_100003 wangwu 90 1 jby_100004 zhaoliu 45 1 接下来就是在java的IDE中操作了 下载MySQL的JDBC驱动进入MySQL的官网下载,点击下方链接。 MYSQL驱动 点击JDBC Driver for MySQL (Connector/J)后面的Download进入下载页面，但是却发现，在选择下载的版本里没有windows的版本，这个时候我们需要点击Looking for previous GA versions?,然后我们就可以选择mysql-connector-java-5.1.48.zip进行下载了，解压这个下载好的压缩包，里面的mysql-connector-java-5.1.40-bin.jar文件就是连接MySQL数据库的JDBC-数据库驱动了。 下面我们需要把这个驱动放到我们的项目文件中，我用的是eclipse，直接把这个驱动拖到项目中，然后还需要把驱动jar包build一下。 加载JDBC—MySQL驱动123456try &#123; Class.forName(&quot;com.mysql.jdbc.Driver&quot;);&#125;catch(Exception e)&#123;&#125; 首先来了解一下java:try&#123;&#125;catch()&#123;&#125;语句块的作用。 12345678try&#123; 可能会出现异常的代码； 这里的异常代码并不是指的是语法错误，指的是在写的时候判断不出来的错误&#125;catch(Exception e)&#123; try中代码异常就执行这部分中的代码， 每个异常类都是Exception的某个子类，所以可以判断。&#125; java连接MySQL数据库12345678910Connection con = null;String uri = &quot;jdbc:mysql://localhost:3306/数据库?useSSL=true&quot;;String user = &quot;root&quot; ;String password = &quot;&quot;;try &#123; con = DriverManager.getConnection(uri,user,password); &#125; catch (SQLException e) &#123;//SQL是Exception的子集，判断执行SQL异常错误。 System.out.println(e);//输出这个错误 &#125; connection是一个类型，主要连接数据库，可以创建一个连接数据库的对象。DriverManager.getConnection()方法用户试图建立到指定数据库URL的连接。 查询数据库123456ResultSet rs ;try &#123; Statement sql = con.createStatement();&#125;catch(SQLException)&#123;&#125;rs = sql.executeQuery(&quot;SELECT * FROM tb_stu&quot;); Statement声明一个SQL语句对象，然后让已创建连接的对象con调用createStatement()创建的这个SQL语句对象。 ResultSet按列组织数据构成，跟在数据库中现实的情况是一样的。 完整代码12345678910111213141516171819202122232425262728293031323334353637383940414243package demo;import java.sql.*;public class demo &#123; public static void main(String [] args) &#123; Connection con = null; Statement sql ; ResultSet rs ; try &#123; Class.forName(&quot;com.mysql.jdbc.Driver&quot;); &#125; catch (Exception e) &#123; &#125; String uri = &quot;jdbc:mysql://localhost:3306/m1?useSSL=true&quot;; String user = &quot;root&quot; ; String password = &quot;123&quot;; try &#123; con = DriverManager.getConnection(uri,user,password); &#125; catch (SQLException e) &#123; System.out.println(e); &#125; try &#123; sql = con.createStatement();//sql是一个SQL语句的对象 rs = sql.executeQuery(&quot;SELECT * FROM tb_stu&quot;); while(rs.next()) &#123; String number = rs.getString(1);//获取第n列结果数据 String name = rs.getString(2); int age = rs.getInt(3); String gender = rs.getString(4); System.out.printf(&quot;%s\t&quot;,number); System.out.printf(&quot;%s\t&quot;,name); System.out.printf(&quot;%d\t&quot;,age); System.out.printf(&quot;%s\n&quot;,gender); &#125; con.close(); &#125; catch(SQLException e) &#123; System.out.println(e); &#125; &#125;&#125; executeQuery()//执行查询语句，并保存结果。 Statement（声明一个SQL语句对象），有下面三种执行SQL语句的方法。 executeQuery() 用于产生单个结果集(ResultSet)，通常倍执行的语句就是select语句 executeUpdate() 用于执行insert,uodate,delete,DDL(定义语言)如：create，drop。 execute() 可用于执行任何SQL语句，返回一个boolean值，表明该执行是否返回ResultSet，是则是true，否则就是false。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分组背包]]></title>
    <url>%2F%2Fposts%2F201910111.html</url>
    <content type="text"><![CDATA[写在前面分组背包，实际上就是01背包的一个变种，像这种动态规划类型的题，都有固定的套路，也就是模板，但是前提是，得要看出来这是一道这种类型的题。 分组背包中的组，其实也就相当于01背包中物品的代价，组中的物品都相互冲突，只可以在这组中选择一个物品，或者一个都不选择。 具体到代码模板上 123456789for(int i=0;i&lt;n;i++)&#123; for(int j=m;j&gt;=0;j--)&#123; if(j&gt;=代价)&#123; for(int k=0;k&lt;组的长度;k++)&#123; f[j] = max(f[j],f[j-代价]+权重); &#125; &#125; &#125;&#125; 大致的分组背包模板就是这样的一个样子。 例题通天之分组背包通天之分组背包，题意说的很明显就是一个分组背包类型的题，所以，直接套模板就解决掉了。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;iostream&gt;#include &lt;algorithm&gt;#include&lt;vector&gt;using namespace std;struct Node&#123; int ai; int bi;&#125;;Node e;vector&lt;Node&gt; s[105];int f[1005];int main()&#123; int m, n; cin &gt;&gt; m &gt;&gt; n; int ai, bi, ci; for (int i = 0; i &lt; n; i++) &#123; cin &gt;&gt; ai &gt;&gt; bi &gt;&gt; ci; e.ai = ai; e.bi = bi; s[ci].push_back(e); &#125; fill(f, f + m + 1, 0); for (int i = 0; i &lt;= 100; i++) &#123; if (s[i].size() != 0) &#123; for (int j = m; j &gt;= 0; j--) &#123; for (auto k = s[i].begin(); k != s[i].end(); k++) &#123; e = *k; if (j &gt;= e.ai) &#123; f[j] = max(f[j], f[j - e.ai] + e.bi); &#125; &#125; &#125; &#125; &#125; cout &lt;&lt; f[m]; system(&quot;pause&quot;); return 0;&#125; 5倍经验日5倍经验日是以游戏大乐斗为背景出的一个题，这道题我感觉是一个分组背包的题，但是实际上，也可以以01背包来解决，因为药物是有限的，要想打赢，就必须的拿出足够的药物，要是不想打赢，就一个药物也不拿出来，因为既然拿出来也会输，还不如不拿出来。但是我还是考虑了输的很多种情况，得出的结果也是一样的。 比较坑的一点就是，当所剩余的药物不够的时候，也是要打的，虽然输了，但是还是要打的。 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;long long f[1005];int main()&#123; int n, x; cin &gt;&gt; n &gt;&gt; x; int lose, win, use; fill(f, f + x + 1, 0); for (int i = 0; i &lt; n; i++) &#123; cin &gt;&gt; lose &gt;&gt; win &gt;&gt; use; for (int j = x; j &gt;= 0; j--) &#123; if (j &gt;= use) &#123; for (int k = 0; k &lt;= use; k++) &#123; if (k == use) &#123; f[j] = max(f[j], f[j - k] + win); &#125; else &#123; f[j] = max(f[j], f[j - k] + lose); &#125; &#125; &#125; else &#123; f[j] = f[j] + lose; &#125; &#125; &#125; cout &lt;&lt; f[x] * 5; system(&quot;pause&quot;); return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[岁月神偷，只是不再是小时候]]></title>
    <url>%2F%2Fposts%2F201910071.html</url>
    <content type="text"><![CDATA[今天就是国庆假期的最后一天了，明天就要开始上课了，过的好快啊。昨天也给父亲买好了火车票，又要出去挣钱去了。看到父亲满头的白发，一瞬间觉得鼻子有点酸酸的，又回想起了过往，那时候他多年轻啊，转眼间就苍老了那么多，跟他相同的年龄头发都没他白的多，而我知道这是为啥。 今天也是九月九日重阳节，重阳节自上古时代就已经存在了，那时候秋季丰收，举行祭祀活动。而今又增加了敬老的内容，九是个位数字中最大的一个数，寄托着人们对于老人健康长寿的美好祝福。 岁月神偷，只是不再是小时候，憧憬未来，又何尝不恐惧未来。条条大路通罗马，哪里又是我的罗马？ 生存，生活。昨天点了一份外卖，过了好大一会而我才想起来，外面还在下着雨呢，这个时候点外卖多不合适啊，几次看到他们穿着雨衣，淋着雨，送着外卖，心里其实有点不是滋味的。生存之下，谁不是再为生活奔波卖命。 淋雨，我是知道那种滋味不好受。那时候从姥姥家回来的路上，走的时候还只是下着小雨，穿上雨衣还是可以走的，骑着自行车，走在路上，不一会儿雨就大了起来，本以为只是下一阵，哪想好久雨都未小，雨打在雨衣上，躺进衣服里。半路恰巧碰到老爹在路边，见我们如此，执意要留我们等雨停了再走，难中见真情，我感激一辈子。 所以，我不想让别人也淋雨。前两天一个老师的网络坏了，让我过去修，我正愁下这大雨咋去呢，给老师打个电话，说明来意，老师直说，你要现在有时间我开车来接你。己所不欲，勿施于人，世界将因你而更美好。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[租用游艇]]></title>
    <url>%2F%2Fposts%2F201910061.html</url>
    <content type="text"><![CDATA[题意简述长江上有n个游艇出租站，有一个游客想从上游1乘坐游艇到达n。每个站点到达另一个站点所需要的花费是不一样的，游客就想有没有一个好的方案，使所需要的花费最少。 题目分析这道题其实就是一个单源最短路径，即Dijkstra算法,是一道非常经典的算法题。难就难在如何存储数据信息，因为输入的是一个半矩阵，开始我还看不懂这个半矩阵代表什么意思，后来明白了，半矩阵的第一行就代表从第一个点到下游各个点所需要花费的钱，第二行就可以以此类推了。存储也让我受了一些挫折，找不到一个好的存储方式，最后我是以它们实际存在的意义，所建立一个二维方程组，假如第一行存储的是第一个点到其余个点之间的距离，那么我就用f[i][j]代表站点i到站点j之间的所需要花费的钱数（权重），例如f[1][3]代表站点1到站点3之间所要花费的钱数，以此类推。 接下来就是运用迪杰斯特拉算法的思想了，由局部最优推广到全局最优，列举f[1][x]，1到x之间的每一个可能的分割点y，取最优值，状态转移方程如下f[1][x]=min(f[1][x],f[1][y]+f[y][x]),直到x=n，就可以取到最优值了。 代码如下123456789101112131415161718192021222324252627282930#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int f[205][205];//i代表起始点，j代表终点int main()&#123; int n; cin &gt;&gt; n; for (int i = 0; i &lt; n; i++) &#123; fill(f[i], f[i] + n, 0); &#125; for (int i = 1; i &lt; n; i++)//下标都从1开始 &#123; for (int j = i + 1; j &lt;= n; j++) &#123; cin &gt;&gt; f[i][j]; &#125; &#125; for (int i = 3; i &lt;= n; i++) &#123; for (int j = 2; j &lt; i; j++) &#123; f[1][i] = min(f[1][i], f[1][j] + f[j][i]); &#125; &#125; cout &lt;&lt; f[1][n];//最终结果 // system(&quot;pause&quot;); return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[青蛙过河]]></title>
    <url>%2F%2Fposts%2F201910041.html</url>
    <content type="text"><![CDATA[题意简述青蛙过河，是一道很好的动态规划题，刚开始看的时候，发现有点读不清题意，看了好久才明白这道题是要干什么，怎么做。 有一条河将石墩A和石墩B隔开，河上有C区和D区，C区里有k个荷叶，D区里有h个石墩，有编号1至n的青蛙在石墩A上，按照一定的规则跳到石墩B上，问最多有多少只青蛙过河。规则如下： 石墩可以承受任意多只青蛙，荷叶只能承受一只青蛙； 青蛙可以：A→B(表示可以从A跳到B，下同)，A→C，A→D，C→B，D→B，D→C，C→D； 当一个石墩上有多只青蛙时，则上面的青蛙只能跳到比它大1号的青蛙上面。 分析过程开始忘了A也是石墩，就不知道青蛙是按照什么样的顺序过河，最后看到了A也是个石墩，所以青蛙也必须的按照由1到n的顺序过河，即按照编号从小到大。然后我就按照规则2画了一个他们之间可以转移的关系图，试着一步步去走。 用一个二维数组f[h][k]表示在不同的k和h下最多可以过河的青蛙数目，做如下假设分析： 假设h=0,k=0，那么此时只有A→B这条路径可以走，所以f[0][0]=1; 假设h=0,k=1，那么此时1号青蛙可以站到荷叶上，然后2号到B上，这样就有两个青蛙可以过河，所以f[0][1]=2; 假设h=1,k=0，那么这种和只有一个荷叶的情况是一样的，所以f[1][0]=2; 假设h=1，k=1，那么1号青蛙可以到C的第1个荷叶上，2号可以到D区的第一个石墩上，然后第一个荷叶上的1号青蛙可以到达第一个石墩上，然后三号青蛙就可以到达第一个荷叶上，这样4号青蛙就可以到达B石墩上，所以最后就有四个青蛙可以过河，f[1][1]=4; 然后依次的可以假设，但是要注意一个问题，同一个区域的石墩或者荷叶，是默认可以相互跳的，只有知道了这个后面才能够用手算的方式模拟出来。 什么时候可以让青蛙过的最多，那就是尽可能让第一个跳到石墩B上的青蛙编号达到最大。 但是，我也是够笨的，就是这样的列举，也找不到下一步与上一步之间的关系，最后看到了这样的一句话，每次都尽可能大的将第一个石墩上的青蛙数装到最多，然后再将剩余的石墩一个个都尽量装到最多。就是这一个个三个字让我明白了，假如说上一步是2个石墩，那么下一步是3个石墩，当剩余两个石墩上的青蛙数达到最大，可以将这些青蛙都放到这个空的石墩上。然后就又变成两个石墩的问题，可以一步步迭代下去。为什么？当最后一个青蛙只能够往石墩B上走时，这个时候，多出来一个石墩，最后一个青蛙是可以跳到这个石墩上的。 还有一个问题那时候，我没有考虑到，就是当没有石墩时，只有荷叶，那么f[0][k]=k+1。因为最后一个青蛙直接去石墩B上了。 这样这道题就基本已经出来了，最后其实还是可以用一个公式表示出来的，因为下一步都是等于上一步结果的2倍，但是，我用的是dp的方式写的。 代码12345678910111213141516171819#include &lt;iostream&gt;using namespace std;int f[10000][10000];int main()&#123; int h, k; //h代表石墩，k代表荷叶 cin &gt;&gt; h &gt;&gt; k; for (int i = 0; i &lt;= k; i++) &#123; f[0][i] = i + 1; &#125; for (int i = 1; i &lt;= h; i++) &#123; f[i][k] = f[i - 1][k] + f[i - 1][k]; &#125; cout &lt;&lt; f[h][k]; system(&quot;pause&quot;); return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[坏掉的项链]]></title>
    <url>%2F%2Fposts%2F201910031.html</url>
    <content type="text"><![CDATA[题目做一个简单的介绍，有一串项链，有三种颜色组成，分别是白色、红色和蓝色，用字母w、r、b代替，从某一个位置切断，输入这个断掉项链，然后让你找到一个断点，使这个断点开始左右两边的最长连续颜色最长，遇到不同的颜色就要终止，w可以代表红色也可以代表蓝色，就是找到这样的一个断点。 这道题，感觉和动态规划没有什么关系，看别人做的基本上也没有什么状态转移方程，或者我感觉那不是状态转移方程。有这样一个思路，就是列举每一个分割点，然后求出每个断点的左右两边的最长连续的颜色之和，找出一个最大值，那么这个断点也就是找到了，但是我觉得这个方法有可能会超时的，这个就相当于枚举法了。当数据量大的时候，这个方法是行不通的。可是，这个标签是有动态规划，实在是想不到有什么动态可以用的上。 中间我想到了一个这样的方法，就是把连续长度的颜色转换成数字，然后存放到一个数组中，但是这样处理有了一个问题，w不好处理，假如只有红色和蓝色，我只需要保正头和尾不一样就可以了，转换成数组直接求连个相邻的数最大值就可以，但是很无奈，又多出了一个白色，当位于两种相同颜色之间的时候，那这个w别无选择，只能够等于这种颜色，当位两种于不同颜色之间的时候，该选哪个呢？尤其是连续w的时候，我觉得很难处理。 最后看到了一个别人写的时间复杂度为O(n)的一种解法，觉得很好。他是这样考虑的，也是相当于一个一个遍历每一个切割点，为了处理好项链是一个环的问题，又在这个字符串的后面加上了这个字符串，设置几个变量：w,L,R,c,Max,w代表白色珠子的连续长度，c代表当前处理的字符,l代表当前字符左边最长的连续颜色相同的珠子,r代表当前字符右边最长连续颜色相同的珠子,Max代表每个断点左右两边L和R之和的最大值。 整个程序就是依靠于R（向右走），当遇到w时，不论右边是红色还是都是可以相连的，所以w和R都可以加一，当遇到字符的颜色和当前处理的字符相同的时候，w就需要归0了，而R还可以继续往上加，当遇到两个不同的字符的时候，就需要对一些值进行更新了，这个实际上每次是对上一个字符左右的最大值进行更新，因为第一个字符的右边就相当于第二个字符的左边，将整个项链的左右进行更新，从前到后，遍历每一个断点，但是这样处理会出现一个问题，就是当所有的珠子都为白色的时候，那么能取到项链的最大值会是n的二倍，超过了n，所以要在算最后结果的时候要排除这样的情况，在Max和n之间取一个最小值。 这到底是动规吗？有点像数论规律题。 代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;string&gt;using namespace std;int l = 0;//当前字符左边的的最大连续颜色相等的珠子数int r = 0; //当前字符右边的的最大连续颜色相等的珠子数int w = 0;//白色珠子的最大连续数int c = &#x27;x&#x27;;//代表当前需要处理的字符int Max = -1;//最终结果int main()&#123; int n; cin &gt;&gt; n; string s; cin &gt;&gt; s; s = s + s; for (int i = 0; i &lt; 2 * n; i++) &#123; if (s[i] == &#x27;w&#x27;) &#123; w++; r++; &#125; else if (s[i] == c) &#123; r++; w = 0; &#125; else &#123; Max = max(Max, l + r); l = r - w; r = w + 1; w = 0; c = s[i]; &#125; &#125; Max = max(Max, l + r); cout &lt;&lt; min(Max, n); return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从0开始-Redis入门]]></title>
    <url>%2Fposts%2F2019-10-01-Redis%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;Redis 是完全开源免费的，遵守 BSD 协议，是一个高性能的 key - value 数据库。 1.Redis 简介Redis 是完全开源免费的，遵守 BSD 协议，是一个高性能的 key - value 数据库。 Redis 与 其他 key - value 缓存产品有以下三个特点： 1. Redis 支持数据持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。 2. Redis 不仅仅支持简单的 key - value 类型的数据，同时还提供 list，set，zset，hash 等数据结构的存储。 3. Redis 支持数据的备份，即 master - slave 模式的数据备份。 2.Redis 优势 性能极高 – Redis 读的速度是 110000 次 /s, 写的速度是 81000 次 /s 。 丰富的数据类型 - Redis 支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。 原子性 - Redis 的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过 MULTI 和 EXEC 指令包起来。 其他特性 - Redis 还支持 publish/subscribe 通知，key 过期等特性。 3.Redis 数据类型Redis 支持 5 中数据类型：string（字符串），hash（哈希），list（列表），set（集合），zset（sorted set：有序集合）。 3.1 stringstring 是 redis 最基本的数据类型。一个 key 对应一个 value。 string 是二进制安全的。也就是说 redis 的 string 可以包含任何数据。比如 jpg 图片或者序列化的对象。 string 类型是 redis 最基本的数据类型，string 类型的值最大能存储 512 MB。 理解：string 就像是 java 中的 map 一样，一个 key 对应一个 value localhost:0&gt; set tfx helloredis2019 &quot;OK&quot; localhost:0&gt; get tfx &quot;helloredis2019&quot; 3.2 hashRedis hash 是一个键值对（key - value）集合。 Redis hash 是一个 string 类型的 key 和 value 的映射表，hash 特别适合用于存储对象。 理解：可以将 hash 看成一个 key - value 的集合。也可以将其想成一个 hash 对应着多个 string。 与 string 区别：string 是 一个 key - value 键值对，而 hash 是多个 key - value 键值对。 hash-key 可以看成是一个键值对集合的名字,在这里分别为其添加了 sub-key1 : value1、sub-key2 : value2、sub-key3 : value3 这三个键值对 localhost:0&gt;hset hash-key sub-key1 value1 &quot;1&quot; localhost:0&gt;hset hash-key sub-key2 value2 &quot;1&quot; localhost:0&gt;hset hash-key sub-key3 value3 &quot;1&quot; 获取 hash-key 这个 hash 里面的所有键值对 localhost:0&gt;hgetall hash-key 1) &quot;sub-key1&quot; 2) &quot;value1&quot; 3) &quot;sub-key2&quot; 4) &quot;value2&quot; 5) &quot;sub-key3&quot; 6) &quot;value3&quot; 删除 hash-key 这个 hash 里面的 sub-key2 键值对 localhost:0&gt;hdel hash-key sub-key2 &quot;1&quot; localhost:0&gt;hget hash-key sub-key2 null localhost:0&gt;hget hash-key sub-key1 &quot;value1&quot; localhost:0&gt;hgetall hash-key 1) &quot;sub-key1&quot; 2) &quot;value1&quot; 3) &quot;sub-key3&quot; 4) &quot;value3&quot; 3.3 listRedis 列表是简单的字符串列表，按照插入顺序排序，可以往列表的左边或者右边添加元素。 localhost:0&gt;rpush list-key value1 &quot;1&quot; localhost:0&gt;rpush list-key value2 &quot;2&quot; localhost:0&gt;rpush list-key value1 &quot;3&quot; localhost:0&gt;lrange list-key 0 -1 1) &quot;value1&quot; 2) &quot;value2&quot; 3) &quot;value1&quot; localhost:0&gt;lindex list-key 1 &quot;value2&quot; localhost:0&gt;lpop list-key &quot;value1&quot; localhost:0&gt;lrange list-key 0 -1 1) &quot;value2&quot; 2) &quot;value1&quot; list 是一个简单的字符串集合，和 Java 中的 list 相差不大，区别就是这里的 list 存放的是字符串。list 内的元素是可重复的。 3.4 setRedis 的 set 是字符串类型的无序集合。集合是通过哈希表实现的，因此添加、删除、查找的复杂度都是 O（1）。 localhost:0&gt;sadd key1 value1 &quot;1&quot; localhost:0&gt;sadd key1 value2 &quot;1&quot; localhost:0&gt;sadd key1 value3 &quot;1&quot; localhost:0&gt;sadd key1 value1 &quot;0&quot; localhost:0&gt;smembers key1 1) &quot;value2&quot; 2) &quot;value1&quot; 3) &quot;value3&quot; localhost:0&gt;sismember key1 value4 &quot;0&quot; localhost:0&gt;sismember key1 value1 &quot;1&quot; localhost:0&gt;srem key1 value2 &quot;1&quot; localhost:0&gt;srem key1 value2 &quot;0&quot; localhost:0&gt;smembers key1 1) &quot;value1&quot; 2) &quot;value3&quot; redis 的 set 与 java 中的 set 还是有点区别的。redis 的 set 是一个 key 对应着 多个字符串类型的 value，也是一个字符串类型的集合，但是和 redis 的 list 不同的是 set 中的字符串集合元素不能重复，但是 list 可以。 3.5 zsetredis zset 和 set 一样都是 字符串类型元素的集合，并且集合内的元素不能重复。 不同的是 zset 每个元素都会关联一个 double 类型的分数。redis 通过分数来为集合中的成员进行从小到大的排序。 zset 的元素是唯一的，但是分数（score）却可以重复。 localhost:0&gt;zadd zset-key 700 member1 &quot;1&quot; localhost:0&gt;zadd zset-key 800 member2 &quot;1&quot; localhost:0&gt;zadd zset-key 600 member2 &quot;0&quot; localhost:0&gt;zrange zset-key 0 -1 withscores 1) &quot;member2&quot; 2) &quot;600&quot; 3) &quot;member1&quot; 4) &quot;700&quot; localhost:0&gt;zrangebyscore zset-key 0 650 withscores 1) &quot;member2&quot; 2) &quot;600&quot; localhost:0&gt;zrem zset-key member1 &quot;1&quot; localhost:0&gt;zrem zset-key member1 &quot;0&quot; localhost:0&gt;zrange zset-key 0 -1 withscores 1) &quot;member2&quot; 2) &quot;600&quot; zset 是按照 分输的大小来排序的。 3.6 总结 类型简介 特性场景 string（字符串） 二进制安全可以包含任何数据，比如 jpg 图片或者序列化的对象，一个键最大能存储 521M Hash（哈希） 键值对集合，即编程语言中的 Map 类型适合存储对象，并且可以像数据库中 update 一样只修改某一项属性值存储、读取、修改用户属性 List（列表） 双向链表增删快，提供了操作某一段元素的 API 1、最新消息排行等功能（朋友圈的时间线）2、消息队列 Set（集合） 哈希表实现，元素不能重复添加删除查找的复杂度都是 O(1);为集合提供了求交集、并集、差集等操作共同好友；利用唯一性，统计访问网站的所有独立 ip；好友推荐时，根据 tag 求交集，大于某个阈值就可以推荐 Zset（有序集合） 将 Set 中的元素增加一个权重参数 score，元素按 score 有序排列数据插入集合时，已经进行天然排序排行榜；带权重的消息队列 4 发布订阅一般不用 Redis 做消息发布订阅。 Redis 发布订阅 (pub/sub) 是一种消息通信模式：发送者 (pub) 发送消息，订阅者 (sub) 接收消息。 Redis 客户端可以订阅任意数量的频道。 以下实例演示了发布订阅是如何工作的。在我们实例中我们创建了订阅频道名为 redisChat: localhost:0&gt;subscribe redisChat 切换到推送/订阅模式，关闭标签页来停止接收信息。 1) &quot;subscribe&quot; 2) &quot;redisChat&quot; 3) &quot;1&quot; 接下来先重新开启个 redis 客户端，然后在同一个频道 redisChat 发布两次消息，订阅者就能接收到消息。 localhost:0&gt;publish redisChat &quot;blog.iyu.pub&quot; &quot;1&quot; localhost:0&gt;publish redisChat &quot;hello redis&quot; &quot;1&quot; 在订阅者的客户端显示如下： localhost:0&gt;subscribe redisChat 切换到推送/订阅模式，关闭标签页来停止接收信息。 1) &quot;subscribe&quot; 2) &quot;redisChat&quot; 3) &quot;1&quot; 1) &quot;message&quot; 2) &quot;redisChat&quot; 3) &quot;blog.iyu.pub&quot; 1) &quot;message&quot; 2) &quot;redisChat&quot; 3) &quot;hello redis&quot; 5 事务redis 事务一次可以执行多条命令，服务器在执行命令期间，不会去执行其他客户端的命令请求。 事务中的多条命令被一次性发送给服务器，而不是一条一条地发送，这种方式被称为流水线，它可以减少客户端与服务器之间的网络通信次数从而提升性能。 Redis 最简单的事务实现方式是使用 MULTI 和 EXEC 命令将事务操作包围起来。 批量操作在发送 EXEC 命令前被放入队列缓存。 收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余命令依然被执行。也就是说 Redis 事务不保证原子性。 在事务执行过程中，其他客户端提交的命令请求不会插入到事务执行命令序列中。 一个事务从开始到执行会经历以下三个阶段： 开始事务。 命令入队。 执行事务。 以下是一个事务的例子， 它先以 MULTI 开始一个事务， 然后将多个命令入队到事务中， 最后由 EXEC 命令触发事务， 一并执行事务中的所有命令： localhost:0&gt;multi &quot;OK&quot; localhost:0&gt;set redismulti test1 &quot;QUEUED&quot; localhost:0&gt;get redismulti &quot;QUEUED&quot; localhost:0&gt;sadd redistag value1 value2 value3 &quot;QUEUED&quot; localhost:0&gt;smembers redistag &quot;QUEUED&quot; localhost:0&gt;exec 1) &quot;OK&quot; 2) &quot;test1&quot; 3) &quot;3&quot; 4) 1) &quot;value2&quot; 2) &quot;value1&quot; 3) &quot;value3&quot; 单个 Redis 命令的执行是原子性的，但 Redis 没有在事务上增加任何维持原子性的机制，所以 Redis 事务的执行并不是原子性的。 事务可以理解为一个打包的批量执行脚本，但批量指令并非原子化的操作，中间某条指令的失败不会导致前面已做指令的回滚，也不会造成后续的指令不做。 这是官网上的说明 From redis docs on transactions: It&#39;s important to note that even when a command fails, all the other commands in the queue are processed – Redis will not stop the processing of commands. 例如： localhost:0&gt;multi &quot;OK&quot; localhost:0&gt;set a a &quot;QUEUED&quot; localhost:0&gt;set b b &quot;QUEUED&quot; localhost:0&gt;set c c &quot;QUEUED&quot; localhost:0&gt;exec 1) &quot;OK&quot; 2) &quot;OK&quot; 3) &quot;OK&quot; 如果在 set b b 处失败，set a 已成功不会回滚，set c 还会继续执行。 命令 描述 DISCARD 取消事务，放弃执行事务块内的所有命令 EXEC 执行所有事务块内的命令 MULTI 标记一个事务块的开始 UNWATCH 取消 WATCH 命令对所有 key 的监视 WATCH key [key …] 监视一个 (或多个) key ，如果在事务执行之前这个 (或这些) key 被其他命令所改动，那么事务将被打断 6 持久化Redis 是内存型数据库，为了保证数据在断电后不会丢失，需要将内存中的数据持久化到硬盘上。 6.1 RDB 持久化将某个时间点的所有数据都存放到硬盘上。 可以将快照复制到其他服务器从而创建具有相同数据的服务器副本。 如果系统发生故障，将会丢失最后一次创建快照之后的数据。 如果数据量大，保存快照的时间会很长。 6.2 AOF 持久化将写命令添加到 AOF 文件（append only file）末尾。 使用 AOF 持久化需要设置同步选项，从而确保写命令同步到磁盘文件上的时机。这是因为对文件进行写入并不会马上将内容同步到磁盘上，而是先存储到缓冲区，然后由操作系统决定什么时候同步到磁盘。 选项同步频率always每个写命令都同步eyerysec每秒同步一次no让操作系统来决定何时同步 always 选项会严重减低服务器的性能 everysec 选项比较合适，可以保证系统崩溃时只会丢失一秒左右的数据，并且 Redis 每秒执行一次同步对服务器几乎没有任何影响。 no 选项并不能给服务器性能带来多大的提升，而且会增加系统崩溃时数据丢失的数量。 随着服务器写请求的增多，AOF 文件会越来越大。Redis 提供了一种将 AOF 重写的特性，能够去除 AOF 文件中的冗余写命令。 7 复制通过使用 slaveof host port 命令来让一个服务器成为另一个服务器的从服务器。 一个从服务器只能有一个主服务器，并且不支持主主复制。 7.1 连接过程（1）主服务器创建快照文件，即 RDB 文件，发送给从服务器，并在发送期间使用缓冲区记录执行的写命令。快照文件发送完毕之后，开始像从服务器发送存储在缓冲区的写命令。 （2）从服务器丢弃所有旧数据，载入主服务器发来的快照文件，之后从服务器开始接受主服务器发来的写命令。 （3）主服务器每执行一次写命令，就向从服务器发送相同的写命令。 7.2 主从链随着负载不断上升，主服务器无法很快的更新所有从服务器，或者重新连接和重新同步从服务器将导致系统超载。为了解决这个问题，可以创建一个中间层来分担主服务器的复制工作。中间层的服务器是最上层服务器的从服务器，又是最下层服务器的主服务器。 8 哨兵Sentinel（哨兵）可以监听集群中的服务器，并在主服务器进入下线状态时，自动从从服务器中选举处新的主服务器。 9 分片分片是将数据划分为多个部分的方法，可以将数据存储到多台机器里面，这种方法在解决某些问题时可以获得线性级别的性能提升。 假设有 4 个 Redis 实例 R0, R1, R2, R3, 还有很多表示用户的键 user:1, user:2, … , 有不同的方式来选择一个指定的键存储在哪个实例中。 最简单的是范围分片，例如用户 id 从 0 ~ 1000 的存储到实例 R0 中，用户 id 从 1001 ~ 2000 的存储到实例 R1中，等等。但是这样需要维护一张映射范围表，维护操作代价高。 还有一种是哈希分片。使用 CRC32 哈希函数将键转换为一个数字，再对实例数量求模就能知道存储的实例。 根据执行分片的位置，可以分为三种分片方式： 客户端分片：客户端使用一致性哈希等算法决定应当分布到哪个节点。 代理分片：将客户端的请求发送到代理上，由代理转发到正确的节点上。 服务器分片：Redis Cluster。]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[flowchart画流程图]]></title>
    <url>%2F%2Fposts%2F201909301.html</url>
    <content type="text"><![CDATA[开始和结束起止框，流程图开始和结束。 12[Variable]-&gt;start: [Text][Variable]-&gt;end: [Text] @flowstartst=&gt;start: Starte=&gt;end: End st-&gt;e@flowend 操作相当于处理框，在框中可以进行计算。 1[Variable]-&gt;operation: [Text] @flowstartprocess=&gt;operation: Operatione=&gt;end: End process-&gt;e@flowend 输入和输出输入和输出框，在里面可以进行输入和输出操作。 1[Variable]-&gt;inputoutput: [Text] @flowstartprocess=&gt;inputoutput: Inputoutpute=&gt;end: End process-&gt;e@flowend 子程序暂时不知道该怎么用 1[Variable]-&gt;subroutine: [Text] @flowstartprocess=&gt;subroutine: Subroutinee=&gt;end: End process-&gt;e@flowend 条件判断框，有两个出口，一个是满足条件的出口，一个是不满足条件的出口。 123[Variable]-&gt;condition: [Text][Variable]([yesText])-&gt;[Position][Variable]([noText])-&gt;[Position] @flowstartcond=&gt;condition: Process?process=&gt;operation: Processe=&gt;end: End cond(yes)-&gt;process-&gt;econd(no)-&gt;e@flowend 平行平行和操作开始的时候看的差不多，但平行是有两个出口的，而操作只有一个出口。 123[Variable]-&gt;parallel: [Text][Variable](path1,direction)-&gt;[Position][Variable](path1,direction)-&gt;[Position] @flowstartpara=&gt;parallel: parallel tasksprocess=&gt;operation: Processe=&gt;end: End para(path1,bottom)-&gt;process-&gt;epara(path2)-&gt;e@flowend]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>流程图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[动态规划之栈]]></title>
    <url>%2F%2Fposts%2F201909291.html</url>
    <content type="text"><![CDATA[今天在琢磨一道动态规划类型的题，感觉很不好，完全想不到思路，还是没有找到精髓，慢慢来吧，不断做，不断总结，相信总有一天能掌握的。 今天这道题的名字叫做栈（想看原题可以到《动态规划小山坡》找到），题目是这样描述的，有两个序列中间有一个栈，其中一个序列有n个数，需要通过这个栈，将这个每个数移动到另一个序列中，移动到栈中的数(也就是相当于push)可以立马弹出(对应pop)，也可以选择不弹出，可以继续往栈中存放数字，问可以生成多少种不同的序列。 起初我想的可简单了，这不就是将n个数进行全排列，而且问的只是有多少种不同的序列，也就是求一个具体的数目，那么我完全可以用数学公式来进行求啊，n*(n-1)/2就可以得出来结果，结果20分，我还想了很久，我觉得这样想的没有问题啊，最后发现这样想确实是不对的，因为压入栈中得数，栈底的数不可能比栈顶的数先出来，所以，这样的想法就有问题。 发现这样的问题之后，我就开始要朝别的想法出发了，从序列只有一个数列举到序列只有三个数，发现到n=3的时候还可以骗骗自己，然后到n=4的时候就比较复杂了，找不到上一步和下一步的一个关系，也就是所谓的状态转移方程，就跟汉诺塔一样，你无法将所有的结果用大脑想出来，但是我们可以想这一个结果要经过怎样的方法公式运算出来。 这道题有三种状态会不断更新，对应两种操作。三种状态分别是序列A，栈B，序列C，在数字不断在它们三者之间不断进行转换的时候，他们的所包含的数字个数都会更新的。对应的两种操作，push操作实际上实在栈B和序列C之间进行操作（原序列就是放在C中的），当进行入栈操作的时候，序列C数字的个数将会减一，栈B的个数将会加一；当进行出栈操作的时候，实际上是在序列A和栈B之间进行操作的，此时栈B的数字个数将会减一，序列A的个数将会加一。 发现没有，我们不需要考虑你中间是咋运行的，我只要最后的一个结果，那就是序列C中的数全部都转移到了序列A中，状态转移方程:F[i][j]=F[i-1][j]+F[i+1][j-1],解释一下i是代表栈B中的数字个数，j是代表序列C中数字的个数，那么通常的情况下，是不是只有这两种操作，只要能够算出两种操作的次数，那么就可以一层一层的算出来结果（特殊情况下还需要特殊处理），这个是不是和汉诺塔一样，我不需要知道你中间是怎么运行的，你只需要给我一个结果就可以了。 下面就要考虑一下边界条件了，当栈B中的数字个数为零时，是不可以进行出栈操作的（pop），当序列C中的数字个数为零时，不可以进行入栈操作（push），当序列C中的数全部转移到序列A中的时候，也就是得到了一种结果，要终止此次操作，这些都是边界条件。 下面就是开始写代码了，我是用了两种方法，一种是dfs，一种是dp，对比了一下两种代码，发现随着n的增大，dp的效率要明显高很多。 dp 1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;using namespace std;int arr[20][20];//两个下标分别代表栈B数字的个数和序列C数字的个数int main()&#123; int n;//序列C中数字的个数 cin &gt;&gt; n; for (int j = 0; j &lt;= n; j++)//这里为什么要j在第一层循环？我想的是出栈之前必须要进行入栈 &#123; for (int i = 0; i &lt;= n; i++) &#123; if (j == 0)//当序列C中没有数字了，那把栈中所有的数字移动到序列A中就结束了 &#123; arr[i][0] = 1;//因为从栈中出来的数只有一种结果 &#125; else if (i == 0) &#123; arr[0][j] = arr[1][j - 1];//当栈中没有数字时，要将序列C中的一个数字移动到栈B中 &#125; else &#123; arr[i][j] = arr[i - 1][j] + arr[i + 1][j - 1];//这种就是通常的情况了 &#125; &#125; &#125; cout &lt;&lt; arr[0][n];//要将序列C中的数字全部移动到序列A中 system(&quot;pause&quot;);//这个代码是在vscode运行需要这条语句，其他地方不需要 return 0;&#125; dfs 123456789101112131415161718192021222324252627#include &lt;iostream&gt;using namespace std;int t = 0;void dfs(int n, int x, int y, int z)&#123; if (y &lt; 0 || z &lt; 0)//边界条件 &#123; return; &#125; if (x == n)//找到一种结果 &#123; t++; return; &#125; dfs(n, x, y + 1, z - 1); //对应入栈操作 dfs(n, x + 1, y - 1, z); //对应出栈操作&#125;int main()&#123; int n;//初始序列C中的数字个数 cin &gt;&gt; n; dfs(n, 0, 0, n); cout &lt;&lt; t;//所有可能输出的数列个数 system(&quot;pause&quot;);//运行时需要删除 return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[动态规划小山坡]]></title>
    <url>%2F%2Fposts%2F201909281.html</url>
    <content type="text"><![CDATA[:::tip下面一段时间就要与动规开始较量了，有些事永远也逃避不过去，那就迎接挑战。::: 普及- 题目 AC 过河卒 YES 栈 YES 采药 YES 装箱问题 YES 开心的金明 YES 最大子段和 YES 红牌 YES 小A点菜 YES 坏掉的项链 YES 数字三角形 YES 青蛙过河 YES 租用游艇 YES NASA的食物计划 YES 属牛的抗议 YES 疯狂的采药 YES 神奇的四次方数 YES 最大加权矩形 NO 最大约数和 YES 通天之分组背包 YES 汤姆斯的天堂梦 NO 5倍经验日 YES A+B Problem（再升级） YES 音量调节 YES L国的战斗之间谍 YES 小书童——刷题大军 YES 【mc生存】卖东西 YES 美元汇率 NO 大朋友的数字 NO 砝码称重 NO 围栏木桩 NO 严酷的训练 NO Bessie的体重问题 NO 越越的组队 NO 搞笑世界杯 NO 总分 Score Inflation NO 又上锁妖塔 NO 晚餐队列安排 NO 手链Charm Bracelet NO 干草出售Hay For Sale NO 利润Profits NO 递增 NO 普及/提高- 题目 AC 导弹拦截 NO 书的复制 NO 合唱队形 NO 相似基因 NO Likecloud-吃、吃、吃 NO 最大正方形 NO 榨取kkksc03 NO 普及+/提高 题目 AC 加分二叉树 NO 字串距离 NO 尼克的任务 NO 方格取数 NO 传纸条 NO 乘积最大 NO 方格取数 NO 石子合并 NO 烹调方案 NO 金明的预算方案 NO 乌龟棋 NO 能量项链 NO 提高+/省选- 题目 AC 统计单词个数 NO 多米诺骨牌 NO 创意吃鱼法 NO 统计单词个数 NO]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动规</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[乱]]></title>
    <url>%2F%2Fposts%2F201909231.html</url>
    <content type="text"><![CDATA[近期感觉过的好乱啊，生活一下子感觉没有了节奏，以前还有心好好的看书，好多天也都没有看过了，练习算法呢，好久也没有练了，不是不想练而是练不下去了，太难了，想一道题，好久都没有思路，要开始补充点知识了，可是现在也没有那个心思了，不过要也不能放弃，调整心态，迎接挑战。 明天回家，好几个月都没有回去了。以前都是每周都要给家里打一个电话，准时周五，但是这个学期以来就没那么有规律了，有时候好久都不想打，也不知道为啥，其实这段时间，也是应该要多打打的，但是我没有，搞不懂。 这次的目的是参加表哥的婚礼，这个是一方面，另一个方面就是想把十一的时间腾出来。小时候我们总盼望着放学，盼望着回家，现在真的是都变了，虽然仍然想着放学，但是目的却是不一样的。现在我更想，把时间用在我觉得ok的地方。每天也仍然是如此，生活在继续，但是，在这有限的时间，我以对未来充满了迷茫。 山顶洞人是什么样的人？我想没有人能够给一个准确的答案吧。我也不想给出我的解释。时间会说明一切。我只想当接力棒传到了我的手中，我可以拿的更稳，我可以跑的更快。 接下来一段时间，还是要好好看书的，不管多忙，这总是好的。这个现实的社会，总能在书里或多或少的找到一些答案，人人都妄想当主角，不论是各行各业，可是名声在外啊，又有多少人能承受主角所承受的那些苦，但谁又不为此挤破了头。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树状数组]]></title>
    <url>%2F%2Fposts%2F201908311.html</url>
    <content type="text"><![CDATA[:::tip今天想学一学树状树了，老是看见别人在说可以用树状数组来解题，但是因为不知道是个什么东西，就没有太过关注，今天不知道蹦到哪根经了，所以这篇就来了。::: 树状数组解释与建立树状数组一定和树、数组有着不可分割的关系，事实也确实是如此。由于图用mermaid画了好久都没画出来就不画了假如有这样的一个数组primary[1…n]={1,2,3,4,5,6,7,8};用tree[1…n]来表示树状数组，则他们之间有着以下的关系： 12345678tree[1]=primary[1];tree[2]=primary[1]+primary[2];tree[3]=primary[3];tree[4]=primary[1]+primary[2]+primary[3]+primary[4];tree[5]=primary[5];tree[6]=primary[5]+primary[6];tree[7]=primary[7];tree[8]=primary[1]+primary[2]+primary[3]+primary[4]+primary[5]+primary[6]+primary[7]+primary[8]; 这样也许看的有点不是很明白 在数组的前面加上二进制编码 12345678(0001)tree[1];(0010)tree[2];(0011)tree[3];(0100)tree[4];(0101)tree[5];(0110)tree[6];(0111)tree[7];(1000)tree[8]; 由这个二进制编码可以发现，末尾为1的就只等于当前数组，从低位往高位数，有k个连续的0，就说明需要加2^k个数,所以这就需要如何知道这些个连续的0呢，引入了lowbit函数 1234int lowbit(int x)&#123; return x &amp; -x;&#125; &amp;是位运算，只有两个上下对应的二进制数都是1，结果才是1，否则为0.举几个例子吧第一个，假如说传入x=3。3的二进制(011)-3的二进制(101)结果为(001),那么就说明返回的是1 第二个，假如说传入x=4。4的二进制(100)-4的二进制(100)结果为(100),那么就说明返回的是4 那么这个函数可以干什么呢，可以判断这个primary[i]是否包含在tree[i]子集之中，如果被包含，那么就要把它加上，否则就要跳过。 接下来就把代码贴出来 1234567891011121314151617181920212223242526272829303132#include &lt;iostream&gt;using namespace std;int n;int primary[500050];//原数组int tree[500050];//树状数组int lowbit(int x)//判断是否属于此棵子树的子节点&#123; return x &amp; -x;&#125;void change(int x, int p)&#123; while (x &lt;= n)//添加一个节点，维护树状数组 &#123; tree[x] += p;//如果属于它的子节点就相加 x += lowbit(x);//跳过与选择 &#125; return;&#125;int main()&#123; cin &gt;&gt; n; for (int i = 1; i &lt;= n; i++) &#123; cin &gt;&gt; primary[i];//输入一个数组的值 change(i, primary[i]);//找它的根节点 &#125; for (int i = 1; i &lt;= n; i++)//输出 &#123; cout &lt;&lt; tree[i] &lt;&lt; &#x27; &#x27;; &#125; return 0;&#125; 这个就是一个最简单的树状数组的建立过程了，完全是建立。 树状数组可以干什么树状数组的时间效率非常的高，时间复杂度是nlogn，对于以下几种题型，优化的效果都很明显，高性能专用。 区间求和12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;iostream&gt;using namespace std;int n,m;//n代表有几个元素，m代表有几组求和区间int primary[500050];//原数组int tree[500050];//树状数组int lowbit(int x)//判断是否属于此棵子树的子节点&#123; return x &amp; -x;&#125;void change(int x, int p)&#123; while (x &lt;= n)//添加一个节点，维护树状数组 &#123; tree[x] += p;//如果属于它的子节点就相加 x += lowbit(x);//跳过与选择 &#125; return;&#125;int sum(int k)//求k之前的和&#123; int ans = 0; while (k &gt; 0) &#123; ans += tree[k]; k -= lowbit(k); &#125; return ans;&#125;int main()&#123; cin &gt;&gt; n; for (int i = 1; i &lt;= n; i++) &#123; cin &gt;&gt; primary[i];//输入一个数组的值 change(i, primary[i]);//找它的根节点 &#125; for(int i=1;i&lt;=m;i++)&#123; int l,r; cin &gt;&gt; l &gt;&gt; r; cout &lt;&lt; sum(r)-sum(l-1) &lt;&lt; endl;//这为什么要减1，自己可以试试 &#125; return 0;&#125; 更新中间某一个值再求区间和这种类型的题对应洛谷的P3374题 至于如何更新某一位置的值，可以使用上面的change函数，因为建造数组的时候，就是用这个函数一点点添加的，所以更改我们仍可以使用它。x对应所在的位置，p对应所要增加或者减少的值。 求逆序数没想到，树状数组也可以进行求逆序数，思想是这样的，把数组的值当作树状数组的下标，然后改变此下标值的大小为1(初始化所有数组的值都为0)，每次只需要判断此位置之前是否有比自己小的数，然后与添加了几个数(即i)相减，就可以求出这个数前面有几个比它大的。 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;iostream&gt;using namespace std;int n, m; //n代表有几个元素，m代表有几组求和区间int primary[500050]; //原数组int tree[500050]; //树状数组int lowbit(int x) //判断是否属于此棵子树的子节点&#123; return x &amp; -x;&#125;void change(int x, int p)&#123; while (x &lt;= n) //添加一个节点，维护树状数组 &#123; tree[x] += p; //如果属于它的子节点就相加 x += lowbit(x); //跳过与选择 &#125; return;&#125;int sum(int k) //求k之前的和&#123; int ans = 0; while (k &gt; 0) &#123; ans += tree[k]; k -= lowbit(k); &#125; return ans;&#125;int main()&#123; int ans = 0; cin &gt;&gt; n &gt;&gt; m; for (int i = 1; i &lt;= n; i++) &#123; int a; cin &gt;&gt; a;//输入一个值 change(a, 1);将所对应的位置改变为1 ans += i - sum(a);//逆序数求和 &#125; cout &lt;&lt; ans; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有依赖的背包问题]]></title>
    <url>%2F%2Fposts%2F201908301.html</url>
    <content type="text"><![CDATA[:::tip今天真是狗血啊，一道题弄着这么长的时间，还没有搞得很透彻，虽然AC了。我要狠狠的记住它。::: 金明的预算方案题目描述金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间金明自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过N元钱就行”。今天一早，金明就开始做预算了，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子： 主件 附件 电脑 打印机，扫描仪 书柜 图书 书桌 台灯，文具 工作椅 无 如果要买归类为附件的物品，必须先买该附件所属的主件。每个主件可以有0个、1个或2个附件。附件不再有从属于自己的附件。金明想买的东西很多，肯定会超过妈妈限定的N元。于是，他把每件物品规定了一个重要度，分为5等：用整数1-5表示，第5等最重要。他还从因特网上查到了每件物品的价格（都是10元的整数倍）。他希望在不超过N元（可以等于N元）的前提下，使每件物品的价格与重要度的乘积的总和最大。 设第j件物品的价格为v[j]，重要度为w[j]，共选中了k件物品，编号依次为j1,j2,...,jk,则所求的总和为： v[j1] * w[j1] + v[j2] * w[j2] + ... + v[jk] * w[jk]。 请你帮助小明设计一个满足要求的购物清单。 输入格式第一行，为里啷个正整数，用一个空格隔开： n,m (其中n代表总钱数，m为希望购买物品的个数。n&lt;32000,m&lt;60) 从第2行到第m+1行，第j行给出了编号为j-1的物品的基本数据，每行有3个非负整数 v,p,q (其中v表示该物品的价格，p表示该物品的重要度，q表示该物品的主件还是附件。如果q=0，表示该物品为主件，如果q&gt;0,表示该物品为附件，q是所属主件的编号。v&lt;1000,1&lt;=p&lt;=5) 输出格式一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值(不超过200000)。 输入输出样例输入 1234561000 5800 2 0400 5 1300 5 1400 3 0500 2 0 输出 12200 解题思路首先一看到这道题的难度等级是普及+/提高，我就有想跳过去的感觉，然后看到标签里是背包类型的，想着尝试一把，就这样过去了一天。 这道题与01背包有很大的不同，因为它牵扯到了一件物品与另一件物品的依赖关系，只有购买了这一件物品，才有选择购买不购买另一件物品的权力。 在本题中，只有购买了主件，才能购买附件。那么我就在想，如何才能知道，主件有没有被选中呢？（即被购买）我首先想到了做标记，但是要怎么标记呢？假如说，我强制选择了这个主件，那么就说明这个主件我已经购买了，然后就可以选择购买不购买附件，但是对于在附件中选择一个最优的情况，只能用总钱数-主件的价格来进行购买，否则就有可能出现抛弃主件的可能性，不对，即使这样，也有可能出现抛弃主件的情况，当附件价格很低而重要度很高，这就行不通了。 然后我就想着，看能不能在进行选择主件的时候进行特殊操作，设置一个标记项，当标记为1时，就说明是对主件操作，对主件操作时，需要用总钱数-主件的价格去购买附件，我刚刚才想到这个方法也是不行的，但是测试数据还是过了，我满怀希望的提交上去，一个大零蛋。 这样也不行啊，还是看看题解吧，看到他们写的思路都差不多，因为附件只有2个，所以对于每一主件的选择至多有5种情况。第一个，不选这个主件。第二，只选择主件。第三，选择主件和第一个附件。第四，选择主件和第二个附件。第五，选择主件和两个附件。但是我想了很久都不知道，要怎么实现这么多种情况的选择呢？看到题解中都写到，分组背包，01背包，依赖背包，我又赶紧去了解了一下自己不熟悉的，看着看着就困了还小眯了一会。醒来继续看。依赖背包通常和分组背包一起使用，因为可以在这一组中把所有可能的策略都列举出来，分组背包就是在这一组中，只选择一个或者一个都不选，所以可以利用这一特点。 如何把所有可以选择的策略存储下来，我也想了很久，先开始我是把数据存储下来，然后再想怎么列举所有的情况，难道我还要来个不完全排列吗？不会的，最后我想到，主件还照以前那样存储，但是附件在存储之前，需要和主件、包括主件中已存在的附件都要去组合一次，这样所有的情况都可以一个个嵌套，所有的情况就出来了。 剩下的用分组背包的套路就能够实现了，但是还不知道分组背包是怎么运行的，为什么在一组中就只选择一个。还要好好弄弄。下面就把代码贴出来。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;vector&gt;using namespace std;struct Node&#123; int v;//代表价格 int w;//代表价格与重要度的乘积&#125;;vector&lt;Node&gt; s[100];//用来存储的vector容器，下表组号Node e;int f[100000];//状态转移数组int a[100];//编号与组号的映射数组int main()&#123; int n, m;//n代表总钱数，m代表希望购买的物品个数 cin &gt;&gt; n &gt;&gt; m; int t = 0; for (int i = 1; i &lt;= m; i++) &#123; int v, p, q;//v物品价格，p重要度，q主附件编号 cin &gt;&gt; v &gt;&gt; p &gt;&gt; q; e.v = v;//价格 e.w = p * v;//权重 if (q == 0)//如果是主件直接往下一组存储 &#123; s[++t].push_back(e); a[i] = t;//保存编号对应的组号 &#125; else if (q &gt; 0)//这也是最精妙的部分 &#123; Node E; int length = s[a[q]].size(); for (int i = 0; i &lt; length; i++)//将所有的情况都列举一遍 &#123; E.v = e.v + s[a[q]][i].v; E.w = e.w + s[a[q]][i].w; s[a[q]].push_back(E); &#125; &#125; &#125; fill(f, f + 33000, 0);//状态转移数组初始值为0 for (int k = 1; k &lt;= t; k++)//组号 &#123; for (int i = n; i &gt;= 0; i--)//钱数 &#123; for (auto it = s[k].begin(); it != s[k].end(); it++)//组中的所有策略 &#123; e = *it; if (i &gt;= e.v) &#123; f[i] = max(f[i], f[i - e.v] + e.w); &#125; &#125; &#125; &#125; cout &lt;&lt; f[n];//最大值 return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[闲谈动态规划]]></title>
    <url>%2F%2Fposts%2F201908271.html</url>
    <content type="text"><![CDATA[:::tip动态规划是一门艺术，可是我感觉我连跑龙套的资格都不够，总是不解其中的奥秘。越是不会就要越迎难而上，我知道，只有攀上一座又一座的山丘，才能看到更美的风景。::: 写在前面动态规划的关键就是要找到状态转移方程，像汉诺塔问题，斐波那契数列问题，都可以看作是一个动态规划类型的问题。汉诺塔问题，当盘子很少的时候，也许自己脑子想一想，眼睛转一转，也许就能够算出答案，但是当盘子数超过一个手指头也许就并不那么好想了，这个时候我们就可以这样想了，假如盘子数有n个，当有人帮助我借助C，把A上面的n-1个盘子移到了B，然后再把A上面的一个盘子移到C，再把B上的n-1个盘子借助A移动到C，这样就解决了这个问题。至于中间这些盘子是怎么样移动的，那就可以交给电脑了。 还有就是斐波那契数列，这个状态转移方程是f[n]=f[n-1]+f[n-2](n&gt;=3)，初始化f[1]=1,f[2]=1。这个问题比较容易发现规律，一个数等于前边的两个数之和，那么这个问题就变得很简单了，不管你要求那个数，我只需要求两个数之和就可以了，然后直到求出那个数这个问题就可以解决了。 这两个问题都有一个共同点，那就是把大的问题化解成小的问题，有许多的步骤都是重复的，那么就可以只考虑走一步的时候该怎么走，然后就按照这样的方法一直走就可以解决这个问题了。 现在我还记得当初在做39级台阶的时候是怎么做的，可以走一步，也可以走两步，我就在想，如果这39步我都走1步的话，就只有一种方法，假如说我走37个1步，在走一个2步，这也可以走完这39级台阶，但是这个2步每放一个位置，那就是一种不同的方法这就有38中方法了，然后再想着我可以我可以走35个1步，再走两个2步，假如这两步在一起的话那就有36种走法，还有就是这2步不在一起，这一共有多少种走法呢？36*35/2种，因为这两个没有差别，所以得考虑到对称性，再看看这个是什么问题，排列组合呀，我像发现新大陆一样就那样稀里糊涂的写着，越到后面越头疼，咋个式子这么长啊，还需要我打上去，最后也是没搞出结果来。 现在想来也是觉得好笑的很。如今仅仅用递归解决这道题也很有局限性了。因为再递归的时候，会重复计算很多子问题，这就大大影响了运算速度，得用一个中间数组保存计算过程中已经算出了子问题的结果，在后面需要用到的时候，直接拿出来用就可以了。 现在有很多问题，不优化就很难解决了，这也是头疼的问题，但是得治，下面弄两个题。 题目描述台阶问题有N级的台阶，你一开始在底部，每次可以向上迈最多K级台阶（最少1级），问到达第N级台阶有多少种不同方式。 输入格式两个正整数N，K。 输出格式一个正整数，为不同方式数，由于答案可能很大，你需要输出ans mod 100003后的结果。 输入输出样例15 2 18 Z 解题思路这个问题，以前我还写过了，就是一个n叉树的问题，跟39级台阶也是一样，只不过，这个有了更多的走法，然后我就用帝国的方式写了，然后就LTE了，所以最后又学习了怎么用记忆化搜索做，怎么用动态规划的思想做。 代码记忆化搜索 1234567891011121314151617181920212223242526272829303132#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;int n,k;const int Max=1e6+3;//最大值long long f[Max];//保存中间结果int dfs(int c)//c代表还剩几步没有走&#123; if(c==0)&#123; return 1; &#125; if(f[c]!=-1)&#123;//假如之前已经计算过了，就不用再计算了 return f[c]; &#125; long long p=0; for(int i=1;i&lt;=k;i++)&#123; if(c-i&gt;=0)&#123; p=(p+dfs(c-i))%100003; &#125; &#125; f[c]=p;//当还剩c步的时候，有p种走法 return p;&#125;int main()&#123; cin &gt;&gt; n &gt;&gt; k; fill(f,f+Max,-1); f[0]=1; dfs(n); cout &lt;&lt; f[n]; return 0;&#125; 动态规划的写法 1234567891011121314151617181920#include&lt;iostream&gt;using namespace std;int n,k;const int Max=1e6+4;int f[Max];//状态转移数组，下表代表还剩几步，数组值代表走这几部有几种方法。int main()&#123; cin &gt;&gt; n &gt;&gt; k; fill(f,f+Max,0); f[0]=1; f[1]=1; for(int i=2;i&lt;=n;i++)&#123; for(int j=min(i,k);j&gt;=1;j--)&#123; f[i]+=f[i-j];//走j步后还剩下几步，因为方法数已经算出来所以直接一个嵌套一个。 f[i]%=100003; &#125; &#125; cout &lt;&lt; f[n]; return 0;&#125; 传球游戏上体育课的时候，小蛮的老师经常带着同学们一起做游戏。这次，老师带着同学们一起做传球游戏。 游戏规则是这样的：n个同学站成一个圆圈，其中的一个同学手里拿着一个球，当老师吹哨子时开始传球，每个同学可以把球传给自己左右的两个同学中的一个（左右任意），当老师再次吹哨子时，传球停止，此时，拿着球没有传出去的那个同学就是败者，要给大家表演一个节目。 聪明的小蛮提出一个有趣的问题：有多少种不同的传球方法可以使得从小蛮手里开始传的球，传了m次以后，又回到小蛮手里。两种传球方法被视作不同的方法，当且仅当这两种方法中，接到球的同学按接球顺序组成的序列是不同的。比如有三个同学1号、2号、3号，并假设小蛮为1号，球传了3次回到小蛮手里的方式有1-&gt;2-&gt;3-&gt;1和1-&gt;3-&gt;2-&gt;1，共2种。 输入格式一行，有两个用空格隔开的整数n,m(3&lt;=n&lt;=30,1&lt;=m&lt;=30)。 输出格式1个整数，表示符合题意的方法数。 输入输出样例13 3 12 解题思路这道题最开始我用递归的方式写的，因为每一个人都有向左走和向右走的权利，所以用递归写比较的简单，果断提交，LTE。一看n最大为30，那么递归一共要走多少个地方，30!，很明显，递归这道题并不能很好的解决。 然后就看到有人写个这样的状态转移方程f[i][j]=f[i-1][j-1]+f[i+1][j-1],这个状态转移方程我看了好久也不明白该怎么使用，最后还是想到了只走一步该怎么走，才想明白。i代表的第i个人，j代表的是还剩下几步可以走，那么这第i个人，可以由他的左边的那个人把球传给他，也可以由右边的那个人把球传给他，那么就只需要考虑一步就好了，（假设小蛮在1位置），不管怎么走，一定是由小蛮左边的同学把球传给他，或者是右边的同学把球传给他。 其实这也是个局部最优推广到全局最优，先假设只有1步，只有2步，直到推广到只有m步。 代码12345678910111213141516171819202122#include &lt;iostream&gt;#include &lt;cstring&gt;using namespace std;int f[32][32];int main()&#123; int n, m; cin &gt;&gt; n &gt;&gt; m; memset(f, 0, sizeof(f)); f[1][0] = 1; for (int i = 1; i &lt;= m; i++) &#123; f[1][i] = f[2][i - 1] + f[n][i - 1]; for (int j = 2; j &lt;= n - 1; j++) &#123; f[j][i] = f[j - 1][i - 1] + f[j + 1][i - 1]; &#125; f[n][i] = f[1][i - 1] + f[n - 1][i - 1]; &#125; cout &lt;&lt; f[1][m]; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一定是特别的缘分]]></title>
    <url>%2F%2Fposts%2F201908241.html</url>
    <content type="text"><![CDATA[:::tip一定是特别的缘分，才可以一路走来变成一家人。::: 今天又来到了中乐百花，昨天已经把舞台都搭好了，今天我们就帮点小忙，然后吃饭。我所做的是给新娘开门，当司仪说让我们有请新娘登场，所有的灯光都照到了我所开的这个门，可有意思了，还有点小紧张。从来没在这么大的酒店吃饭，也就那回事吧。 都说结婚是一个人一生当中最大的一件事，直到今天我才明白，才相信。结了婚就意味着身份的改变，一个男孩变成了丈夫，一个女孩变成了妻子；结了婚就意味着责任的改变，以前是为学习，现在，男孩要承担起家庭的责任，女孩也要为这个家庭做自己力所能及的事情；结了婚就意味着生活的改变，往日恋爱的甜蜜，终会被一日三餐、柴米油盐所归于平淡。 相爱相知，终成正果，多少人梦寐以求的事情啊，那是跋山涉水，越过了一道又一道一道坎，才能有今天啊！两人相识而站，“你愿意和站在你对面的男人······”，女孩说，我愿意。那一瞬间，我看到新娘眼里的泪珠在打转，在灯光的照耀下是那么的美，我知道，那就是幸福，就是爱。两人看着彼此，也许新娘那时候想到了能走到这一天是多么的不容易，忍不住了，就把头偏向别人看不到的地方，偷偷的抽泣几下，男孩伸出手，抹去新娘眼角的泪水，积攒着他们的幸福。 我何尝不泪眼朦胧，几次也被感动的想哭，也体会到了婚礼对于一个女孩来说有多么的重要，这一天是新的开始，是和过去说再见。昔日清纯少女，美丽的姑娘，就要变成妻子，母亲了。 艺术来源于生活，一点也不假。路遥写《平凡的世界》中孙少平去煤矿挖煤的那段部分，他真的去到一个煤矿中体验生活，好的小说中的人物，在生活中都会有一些影子的。有多少人会因为距离就跟宁一个人也许一生都难以相见了，当你看到比你个方面都好很多的人对待你喜欢的女孩好的时候，你是否会有一点绝望和无奈感。不远百里、千里，看到你喜欢的女孩和别的男孩独处一室，是否所有的解释都是多余？其实他们之间也没有什么，女孩不搭理，男孩尽力讨好。 最后她听说，他疯了，颓废了，整日喝酒胡混，她还不相信，直到最后她亲眼看到，才发现这早已不是自己当初认识的他了。直到现在她才发现，自己身边也就只剩下那个从开始到现在最不受自己待见的人，她很忙，而他永远任何事情他都能办的好好的，即使仍然挨骂挨打，有时生气也多不过三天就又跑过去找她，照顾她。最后她心里也就只剩下那个最不受自己待见的人了，慢慢的接受。说是要结婚，不知道最后结成没，大概能结成吧。 详情请见《主角》。 至此，我想那些认为最不愿意的事情，成为了现实，也许这就是生活吧，没有人可以跃出这座高山。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高精度快速幂模板]]></title>
    <url>%2F%2Fposts%2F201908121.html</url>
    <content type="text"><![CDATA[:::tip昨天在做一道题的时候，不只是昨天，现在有很多的题，不只是有一个思路就可以解决这个问题，还要考虑到性能的问题，所以现在做题很累，做着做着就想睡觉，这个想法可以解决，但是遇到数目较大的时候就很慢，甚至出错，自己还是需要加油。::: 昨天做的一道题叫做麦森数，这是求一个2^n-1的问题,要说n小的时候还可以计算，也许口算都可以算出来，但是当n=100，n=500,n=1500,要怎么去计算？这是个很有意思的问题。 主角登场题目描述形如2^p-1的素数称为麦森数，这时p一定也是素数。但反过来不一定，即如果p是个素数，2^p-1不一定也是素数。到1998年底，人们已找到了37个麦森数，最大的一个是p=3021377，它有909526位。麦森数有许多重要应用，它与完全数密切相关。 任务：从文件中输入p(1000 &lt; p &lt; 3100000)，计算2^p-1的位数和最后500位数字(用十进制高精度数表示) 输入格式文件中只包含一个整数p(1000 &lt; p &lt; 3100000) 输出格式第一行：十进制高精度数2^p-1的位数。 第2-11行：十进制高精度数2^p-1的最后500位数字。（每行输出50位，共输出10行，不足500位时高位补0） 不必验证2^p-1与p是否为素数。 输入输出样例输入 11279 输出 123456789101138600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087 思考过程拿到这个题，我并没有被吓倒，因为以前做过大数相乘的题，当位数太多的时候，可以使用数组来存储这个数的每一位数，然后模拟计算的过程。 首先要考虑的是怎么运算位数，这个我也想了很久，最后也没有用计数的方式实现出来。有这样一个数学公式n^p=10^q,其中n代表指数函数的底部，p代表指数部分，q代表十进制的位数-1，其实这个公式也很好理解，当左边的数为个位数时，右边的q就是一个小于1的数，当左边的数为三位数时，那么q的范围就是[2,3)，所以这个q只与位数差一，那么可以把等式化简，两边同取以10为底的对数，得到q=log10(n)*p,log在c++的&lt;cmath&gt;库函数中有相应的使用方式，所以位数可以直接使用公式计算出来 再一个就是保存后500位，放入一个长度为500的数组中（为了保险点可以将数组开的大一点），高位在后，低位在前。为什么不按照正常的顺序存储，却要反过来，其实这样做是有着极大的好处的。假如说把高位存在前面，那么当位数需要增加时，高位需要往前进一，可是高位已经到头了，前面没有位置可以放了，所以就必须得把其他数都往后移一位，这样当位数较大的时候，是不是很耗费时间与麻烦。把低位放在前面就可以解决这个麻烦了，数组开大一点，进位只需要往后走就可以了，可以扩充的很大。 存储好了，就要想怎么计算了。刚开始我用方法是每次运算的结果只与一个2相乘，当n=1200的时候，答案还是可以秒出的，但是最大值可是3100000，而我数十万的时候，答案就已经出来的很慢了，提交上去，当然会超时。然后看看题解，发现别人用的思想是一个叫做快速幂的东西，百度一下，找了很久才找到一个ppt，发现这个想法是真的好。 快速幂主要用的思想是这样，2^n=(2^(n-1)^2，画个图吧。其实主要用到的思想还是分治。 开始开始输入底数q,指数p输入底数q,指数p创建数组x,数组y,并初始化创建数组x,数组y,并初始化p!=0?p!=0?p&amp;1!=0?p&amp;1!=0?x与y相乘x与y相乘y与y相乘y与y相乘结果保存在x,x-1并输出结果保存在x,x-1并输出结束结束否否是是否否是是 这个是下面程序运行的一个流程图，对于理解这个思想很重要，x数组是存放最后的输出结果，y数组是每次都是对于上一次结果一个平方，当p等于偶数的时候，肯定最少包含一个偶次方项，等于奇次方项的时候，就要开始合并了，要不然下一次就会超出范围了，反正就是巧得很，最后能算出来结果。 代码段12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;cmath&gt;using namespace std;int x[1000];//保存结果 int y[1000];//从2开始后一项等于前一项的平方 int c[1000];//缓存中间结果 void operation(int x[],int y[])&#123; fill(c,c+1000,0); c[0]=x[0]+y[0];//x[0],y[0],c[0],保存数的位数 if(c[0]&gt;500)&#123;//超过500位的部分就不管了 c[0]=500; &#125; for(int i=0;i&lt;x[0];i++)&#123;//两个数模拟乘法运算 for(int j=0;j&lt;y[0];j++)&#123; c[i+j+1]+=x[i+1]*y[j+1]; if(c[i+j+1]&gt;=10)&#123; c[i+j+2]+=c[i+j+1]/10; c[i+j+1]%=10; &#125; &#125; &#125; for(int i=0;i&lt;=c[0];i++)&#123; x[i]=c[i]; &#125;&#125;int main()&#123; int p; cin &gt;&gt; p; cout &lt;&lt; (int)(log10(2)*p+1) &lt;&lt; endl;//运用数学公式计算指数函数的位数 fill(x,x+1000,0); fill(y,y+1000,0); x[0]=x[1]=y[0]=1; y[1]=2; while(p!=0)&#123; if(p&amp;1!=0)&#123;//位运算判断奇偶性 operation(x,y); &#125; p=p&gt;&gt;1;//逻辑除 operation(y,y); &#125; x[1]--;//-1 for(int i=500;i&gt;=1;i--)&#123; cout &lt;&lt; x[i] ; if((i-1)%50==0)&#123; cout &lt;&lt; endl; &#125; &#125; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>高性能</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MATLAB画图入门]]></title>
    <url>%2F%2Fposts%2F201908101.html</url>
    <content type="text"><![CDATA[:::tip由于数学建模的需要，就来学习一下怎么使用MATLAB进行画图。发现用它画的图还挺好看的，二维图形，三维图形，它都能够胜任，而且很美观，下面就是关于一些常见的图形应该怎么画。::: 二维平面图首先，在做每一个图像之前都要运行一下close all,这个可以关闭所有的图形窗口。x=linspace(a,b,N);x为变量的名称，linspace是均分计算指令，会将区间[a,b]均分成N个部分，形成一个等差数列，对变量x进行赋值。然后接下来就要写函数方程，例如y=sin(x),又增加了一个变量y，当x变化时，y也会随之而变化。 接下来就要使用plot这个函数，plot是MATLAB中一维曲线函数，再把之前的变量放入到plot中就可以绘制成一个二维图，例如:plot(x,y); 在[0,2*pi]中画一个sin(x)的图像 123x=linspace(0,2*pi,100);y=sin(x);plot(x,y); 在plot中，我们还可以定义曲线的颜色，线型等属性，plot(x,y,&#39;填写线型、标记符、颜色&#39;) 线型 说明 标记符 说明 颜色 说明 - 实线 + 加号符 r 红色 – 双划线 o 空心圆 g 绿色 ： 虚线 * 星号 b 蓝色 -. 点划线 . 实心圆 c 青绿色 x 叉号符 m 洋红色 s 正方形 y 黄色 d 菱形 k 黑色 ^ 上三角 w 白色 v 下三角 &lt; 左三角 &gt; 右三角 p 五角星 h 六边形 给图形添加标题 1title(&#x27;这里填写标题的名字&#x27;) 给图中的曲线加以说明 1legend(&#x27;说明1&#x27;,&#x27;说明2&#x27;,) 添加坐标轴的标签 12xlabel(&#x27;xxx&#x27;);ylabel(&#x27;xxx&#x27;); 添加文本注释 12text(x,y,&#x27;文本内容&#x27;)x，y为文本的的位置坐标 特殊坐标轴 123loglog：两个坐标轴都使用对数刻度semilogx：x使用对数刻度，y轴使用普通刻度semilogy：y使用对数刻度，x轴使用普通刻度 显示与关闭网格线 123grid on %显示网格线grid off %关闭网格线 子图在一个图片中画多个图像 12345678subplot(2,2,1); %将当前操作的图窗口，分成四部分，对第一部分操作plot(x1,y1);subplot(2,2,2); %对第二个部分操作plot(x2,y2);subplot(2,2,3); %对第三部分操作plot(x3,y3);subplot(2,2,4); %对第四部分操作plot(x4,y4); 调整图轴的范围 1axis([0,6,-1.2,1.2]); %将数轴的范围改成x从0到6，y从-1.2到1.2; 用bar制作一个长条图（条形图） 1234close allx=1:10;y=rand(size(x));bar(x,y); 如果已经知道资料的误差量，就可以用errorbar来作图（误差棒图） 1234x=linspace(0,2*pi);y=sin(x);e=std(y)*ones(size(x));errorbar(x,y,e); 对于变化剧烈的函数，可以使用fplot来绘制更加精密的图 1fplot(&#x27;sin(x)&#x27;,[0.02,0.2]); %[0.02,0.2]实绘图的范围 极坐标图形 123x=linspace(0,2*pi);r=cos(4*x);polar(x,r); 对于大量的资料，可以使用hist来显示资料的分情况和统计特性（以资料个数为距离）验证高斯乱数分 12x=randn(5000,1); %产生5000个 m=0，s=1的高斯乱数hist(x,20); %20代表长条的个数 rose以资料大小视为角度漫，在极坐标图中表示 12x=randn(1000,1);rose(x); stairs(x,y)画阶梯图 123x=linspace(0,10,50);y=sin(x).*exp(-x/3);stairs(x,y); stems针状图，常用作绘制数位讯号 123x=linspace(0,10,50);y=sin(x).*exp(-x/3);stem(x,y); stairs将资料点视为多边形的顶点,此种方法还必须得弄上颜色 123x=linspace(0,10,50);y=sin(x).*exp(-x/3);fill(x,y,&#x27;b&#x27;); feather将每一个资料点看作是复数，以箭头画出 123x=linspace(0,2*pi,20);y=cos(x)+i*sin(x);feather(y); compass也是以箭头发出，只不过这个是在极坐标之中 123x=linspace(0,2*pi,20);y=cos(x)+i*sin(x);compass(y); 三维图，立体绘图mesh可以画出立体网状图，plot可以画立体曲面图，产生的图形会依靠高度有不同的长度。 立体网状图12345x=linspace(-2,2,25); % x轴从-2到2，一共分成25个点y=linspace(-2,2,25); % 与x轴同理[xx,yy]=meshgrid(x,y); % x和y都是21*21的矩阵zz=xx.*exp(-xx.^2-yy.^2); % zz也是21*21的矩阵mesh(xx,yy,zz); 立体曲面图12345x=linspace(-2,2,25); % x轴从-2到2，一共分成25个点y=linspace(-2,2,25); % 与x轴同理[xx,yy]=meshgrid(x,y); % x和y都是21*21的矩阵zz=xx.*exp(-xx.^2-yy.^2); % zz也是21*21的矩阵surf(xx,yy,zz);]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>画图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[佛说缘已尽，天说缘未散]]></title>
    <url>%2F%2Fposts%2F201908061.html</url>
    <content type="text"><![CDATA[最近在看一本书，讲的是对中国佛教发展贡献较大的十位高僧，以及他们的故事。最让我感到神奇的就是他们与佛的缘分，好像所有的巧合都会成功（这么说会不会有一点不敬呢？），佛讲究一个缘，有缘之人一生也无法躲掉，无缘之人一生也难以有较高的造诣。 在中华几千年的历史长河中，由本土的和尚到西域众多佛教较发达的国家求经，也有西域的高僧到本土来宣扬佛法，但由于语言的不同，很多梵经我们都看不懂，需要经过翻译过来我们才能够学习。翻译是一个需要花费大量精力的一个工作，文化和风俗，生活和环境，为翻译工作带来了很多的困难。如罗什和真谛，他们都是西域的高僧，花费了大半辈子在做讲经和译经的工作,为我国的佛文化贡献了不可估量的价值。 罗什大师在圆寂之前发誓说，如果我译的经有一点错误，就请把我的舌头烧化，否则就请留下我的舌头，大师随后圆寂，火化之后果然留下了舌舍利。 真谛大师来中国的时候，那一二十年太乱了，感觉自己一事无成，心里难免觉得失望，也让他认为是不是我的佛缘不在这里呢？他是一个相信佛缘的人，长期以往，让他相信他的佛缘是不在中国的，坚定了这个信念之后，他就瞄准时机把弟子们都叫到一起，说过两天自己就要乘船回国了，你们一定要按照我平常交给你们的好好修行。弟子们都很不舍，几度挽留，但大师心已决定。 临别时日，船已经要开了，大师还站在船边，弟子们站在身后，有的已经哭出了声音，海风在击打着岸边，我想这里、一刻，真谛的内心也是不舍的，一身的才华却没有在这片土地舒展开来。船头在大声呼喊着，船马上就要开了，接连好几声之后，真谛才迈上缓慢的步伐登船。说来也奇怪，这个世界本来不会刮这个风向的，半个来月船也没有走出多远。这一天风变得奇大，掌帆的人使出了所有的力气，也不能够与风对抗，所以就任凭船在海上飘着。过了不知多久有人在叫喊着，船靠岸了！ 真谛出来一看果然靠岸了。听见人们议论纷纷，这得多久才能回到家啊，抱怨声不断，真谛再细神一看，原来是到了广州，这是他最先到中国来的落脚点，他想这一定是佛祖给我的提示，告诉我我的佛缘是在这，柳暗花明又一村，他高兴坏了，让人帮忙把万卷的梵经抬下来，在此落脚。事实也证明，就是在这，真谛译出了很多的名作。 我的缘又在哪里呢？我还不知道，所以我不是高僧。年复一年，日复一日，一天很快就过去了，再过20来天就要开学了，就是大三了，各种所要面对的事情交织在一起，让我有点不知如何是好，也有点无所适从，法显历经千辛万苦才求得真经，很多跟他一起去的师徒弟子们都命丧他乡。人要想做出一点事情来，就必须得吃得了别人不能吃的苦。 那些学长学姐们在学校备考，条件虽不是很好，但是他们都很努力。为了能够节省更多的时间用来学习，他们吃饭就在教学楼楼道里面吃，有的情侣两个人一起蹲在一个小桌子旁吃饭，考研之后，回想起来也很美好吧；有的女生则独自一人，蹲在楼梯道，用梯踏当作桌子，形影也稍显落寞，但是我相信，她们现在所有的付出，都将在未来如洪水般的收获。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于广度优先搜索的思考]]></title>
    <url>%2F%2Fposts%2F201908031.html</url>
    <content type="text"><![CDATA[:::tip最近在做关于广度优先搜索的题，平常接触关于深度优先搜索的题比较多一点，遇到bfs不知道该怎么下手了，所以就特意练了两天，有了一点处理的小想法，记录下来，免得以后忘记了。::: 写在前面做题期间才明白，为什么广度优先搜索是一个队列，特别是在做关于图的搜索的时候，有几个方向都可以走，如何找到到达某一个点的最短路径，把一个点（也就是当前所要操作的点）能一步操作就可以到达的点入队，所以上一个点到达下一个点只相差1，可以采用迭代的方式记录步数，并且求出的解也一定会是一个最优解。 关于广度优先搜索的题型一般有两个主要特征：①求最优解；②一个元素会有很多种处理方式。万变不离其宗，只要看到这道题有这两个主要特征，那么这就是一个bfs类型的题，距离解决问题也就不远了，有时候却也不是这样，因为部分情况下在搜索的过程中，有些数据处理也稍复杂，往往并不是不会搜索，而是中间的一些数据不知道怎么处理，要么就是太慢 通过不了测试点。 做这样类型的题首先要选择好合适的存储方式，然后建一个队列，先将起始点加入到队列之中，然后调用bfs()，当队列不为空的时候，就可以进行操作。取出队头元素，对队头元素进行处理，如果可以走到下一个点，就将这个点加入到队列之中，加上题中要求所必须的操作，知道队列为空的时候才结束，此时应该所有想实现的操作都已经完成，否则就是应该有bug了。 1234567891011121314//首先把起始点入队bfs();&#123; while(s.size())&#123; 取出队列的头元素; 类型 x = s.front(); s.pop(); for(int i=0;i&lt;n;i++)&#123; 所要操作的方法; 一些处理的方法，满足条件就要加入到队列之中; s.push(元素); &#125; &#125;&#125; 这个大概就是bfs()里的模板。 就题而论接下来就来看看几道题吧。 填涂颜色（洛谷P1162）题目描述 由数字00组成的方阵中，有一任意形状闭合圈，闭合圈由数字11构成，围圈时只走上下左右44个方向。现要求把闭合圈内的所有空间都填写成22.例如：6 \times 66×6的方阵（n=6n=6），涂色前和涂色后的方阵如下： 1234560 0 0 0 0 00 0 1 1 1 10 1 1 0 0 11 1 0 0 0 11 0 0 0 0 11 1 1 1 1 1 1234560 0 0 0 0 00 0 1 1 1 10 1 1 2 2 11 1 2 2 2 11 2 2 2 2 11 1 1 1 1 1 输入格式 每组测试数据第一行一个整数n(1 \le n \le 30)n(1≤n≤30)接下来nn行，由00和11组成的n \times nn×n的方阵。方阵内只有一个闭合圈，圈内至少有一个00。 输出格式 已经填好数字22的完整方阵。 思路分析这道题我们该怎么去做呢？这个方阵中只有两种状态，一种是0，一种是1，并且方阵中只有一个闭合圈，那么我们如果想找到哪些0在闭合圈之中是不好找的，但是我们却可以很容易找到哪些0不在闭合圈之中，在边界中找0，如果在边界中找不到0就说明1占领了整个边界，所以我们以边界0作为起始点，往方阵的内部去搜索，如果遇到了1就要终止，没有遇到1就可以往四个方向走，直到所有的点都走一遍。 我是这么想的，先把方阵中所有的0都转换为2，然后从四个边界开始搜索2，以2开始作为起始点，运用dfs或者bfs进行搜索，将圈外的2全部变为0然后就结束了。 代码dfs版本 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#include&lt;iostream&gt;using namespace std;int a[32][32];int b[4][2]= &#123;0,1,0,-1,1,0,-1,0&#125;;int n;void dfs(int x,int y) &#123; if(x&lt;0||y&lt;0||x&gt;n-1||y&gt;n-1||a[x][y]==1||a[x][y]==0) &#123; return; &#125; if(a[x][y]==2) &#123; a[x][y]=0; &#125; for(int i=0; i&lt;4; i++) &#123; dfs(x-b[i][0],y-b[i][1]); &#125;&#125;int main() &#123; cin &gt;&gt; n; for(int i=0 ; i &lt; n; i++) &#123; for(int j=0; j &lt; n; j++) &#123; cin &gt;&gt; a[i][j]; if(a[i][j]==0) &#123; a[i][j]=2; &#125; &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[k][0]==2) &#123; dfs(k,0); &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[0][k]==2) &#123; dfs(0,k); &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[k][n-1]==2) &#123; dfs(k,n-1); &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[n-1][k]) &#123; dfs(n-1,k); &#125; &#125; for(int i=0 ; i &lt; n; i++) &#123; for(int j=0; j &lt; n; j++) &#123; cout &lt;&lt; a[i][j] &lt;&lt; &#x27; &#x27;; &#125; if(i!=n-1)&#123; cout &lt;&lt; endl; &#125; &#125; return 0;&#125; bfs版本 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include&lt;iostream&gt;#include&lt;queue&gt;using namespace std;int a[32][32];int b[4][2]= &#123;0,1,0,-1,1,0,-1,0&#125;;int n;struct Node&#123; int ax; int ay;&#125;;queue&lt;Node&gt; s;bool isok(int x,int y)&#123; if(x&lt;0||y&lt;0||x&gt;n-1||y&gt;n-1||a[x][y]==1||a[x][y]==0) &#123; return false; &#125; return true;&#125;void bfs(int x,int y) &#123; while(s.size())&#123; Node E=s.front(); x=E.ax; y=E.ay; s.pop(); for(int i=0; i&lt;4; i++) &#123; if(isok(x-b[i][0],y-b[i][1]))&#123; a[x-b[i][0]][y-b[i][1]]=0; s.push((Node)&#123;x-b[i][0],y-b[i][1]&#125;); &#125; &#125; &#125;&#125;int main() &#123; cin &gt;&gt; n; for(int i=0 ; i &lt; n; i++) &#123; for(int j=0; j &lt; n; j++) &#123; cin &gt;&gt; a[i][j]; if(a[i][j]==0) &#123; a[i][j]=2; &#125; &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[k][0]==2) &#123; s.push((Node)&#123;k,0&#125;); a[k][0]=0; bfs(k,0); &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[0][k]==2) &#123; s.push((Node)&#123;0,k&#125;); a[0][k]=0; bfs(0,k); &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[k][n-1]==2) &#123; s.push((Node)&#123;k,n-1&#125;); a[k][n-1]=0; bfs(k,n-1); &#125; &#125; for(int k=0; k&lt;n; k++) &#123; if(a[n-1][k]==2) &#123; s.push((Node)&#123;n-1,k&#125;); a[n-1][k]=0; bfs(n-1,k); &#125; &#125; for(int i=0 ; i &lt; n; i++) &#123; for(int j=0; j &lt; n; j++) &#123; cout &lt;&lt; a[i][j] &lt;&lt; &#x27; &#x27;; &#125; if(i!=n-1)&#123; cout &lt;&lt; endl; &#125; &#125; return 0;&#125; 马的遍历题目描述（洛谷P1443） 有一个n*m的棋盘(1&lt;n,m&lt;=400)，在某个点上有一个马,要求你计算出马到达棋盘上任意一个点最少要走几步 输入格式 一行四个数据，棋盘的大小和马的坐标 输出格式 一个n*m的矩阵，代表马到达某个点最少要走几步（左对齐，宽5格，不能到达则输出-1） 思路分析这道题是以象棋棋盘为背景的一道题，前提你要知道马要怎么走，马走日，所以就会有八个方向走可以（-1,-2）,（-2,-1）,（1,-2）,（2,-1）,（2,1）,（1,2）,（-1,2）,（-2,1），那么有了可以走的方向就好弄了，只需要每个点都尝试一下这八个方向都能不能走就可以了，然后还要求起始点到达每个点的最少要走几步，我们可以采用二维数组的存储方式，将数组初始化为-1，因为当一个点不能够到达的时候，就是-1，马每走到一个点都是一个最短路径，已经走过的点就不能再走了，因为已经是最优的了。怎么记录当前走的是第几步，其实这也很好弄，马所走的下一个点所需要的步数就等于走到当前点所需要的步数+1。 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;cstdio&gt;#include&lt;queue&gt;using namespace std;int n,m;//棋盘大小int x,y;//马的坐标int dir[8][2]= &#123;-1,-2,-2,-1,1,-2,2,-1,2,1,1,2,-1,2,-2,1&#125;;int a[402][402];//棋盘bool vis[402][402];//标记当前点有没有被走过struct Node &#123; int ax;//横坐标 int ay;//纵坐标&#125;;queue&lt;Node&gt; s;void init() &#123;// for(int i=0;i&lt;n;i++)&#123;// fill(vis[i],vis[i]+m+1,false);// fill(a[i],a[i]+m+1,-1);//初始化// &#125; s.push((Node) &#123; x,y &#125;);//将起始点加入到队列之中 vis[x][y]=true;//标记已经走过 a[x][y]=0;//自身为0&#125;bool isok(int x,int y) &#123; if(vis[x][y]) &#123; //假如被走过 return false; &#125; if(x&lt;1||y&lt;1||x&gt;n||y&gt;m) &#123; //假如越界 return false; &#125; return true;&#125;void bfs(int x,int y) &#123; while(s.size()) &#123; //当队列不为空的时候 Node E=s.front();//取队头元素 s.pop();//队头出队列 Node e;//尝试所走的点 for(int i=0; i&lt;8; i++) &#123; e.ax=E.ax+dir[i][0]; e.ay=E.ay+dir[i][1]; if(isok(e.ax,e.ay))&#123; s.push(e);//一步可以到达的点加入到队列之中 vis[e.ax][e.ay]=true;//标记被走过 a[e.ax][e.ay]=a[E.ax][E.ay]+1;//记录步数 &#125; &#125; &#125;&#125;int main() &#123; cin &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y; init(); bfs(x,y); for(int i=1; i&lt;=n; i++) &#123; //输出结果 for(int j=1; j&lt;=m; j++) &#123; printf(&quot;%-5d&quot;,a[i][j]); &#125; cout &lt;&lt; endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>想法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于深度优先搜索的一些思考]]></title>
    <url>%2F%2Fposts%2F201907241.html</url>
    <content type="text"><![CDATA[:::tip最近在做一些关于深度优先搜索的题，可让我遭了不少的罪，觉得看着啊，没什么难的，网上教学的都说，深度优先搜索实际上就是一个栈，也的确就是这样。但是当我们实际操作过程中，总会遇到一些问题。::: 最早接触的深度优先搜索是一个二叉树。对一个二叉树来说，就是朝着某一个分支方向不断地向下搜索，走到头之后，往上回一步再走另一个方向。但是要真正的理解，并能熟练地运用和实现他并不是那么容易。 做这样类型的题，首先要选好一个合适的存储方式，方便去遍历它。例如一个图的遍历，如果不太大，选择二维数组会比较好一点，但是也要分析具体的情况，是用带记忆化的搜索还是用不带记忆化的搜索，都需要具体的去分析。 其次就是，要很清楚的掌控在搜索的过程中，每个变量发生的变化，哪些变量在更改后，在回溯的过程中还需要再改回去，哪些自己会改回去，这些变量的变化都要非常的清楚，否则遇到这类题将会比较难受。记得那时候，一个for循环里面嵌套着一个递归式子，这种代码我是看不懂的，那个时候两个递归的式子放到一起运行我也是看不懂的，什么时候运行下一段代码，怎么运行，我完全都搞不懂，怎么办呢，不能就这样放弃啊，最后我就在代码中输出一些变量的变换过程，然后在纸上自己画一画，才搞明白，哦，原来是这么回事啊。 学好dfs的关键就是要理解好八皇后这道题，最后会发现很多问题都可以借助八皇后的这一思想来解决，只需要根据题中的内容添加和修改一些代码就可以了。 下面就根据几道题来看看吧。 有一个N*N的棋盘，有N个棋子要放入在棋盘中，但是这些棋子的摆放是有要求的，棋盘中每行、每列有且只有一个，每条对角线(包括两条主对角线的所有平行线)上至多有一个棋子。问N盘N棋子有几种符合要求的摆放方法？ 首先要遇到的问题就是如何存储这个棋盘，棋盘就是一个二维平面图，可以油坐标确定点的位置，所以可以用一个一维数组的下标代表横坐标，该下标所存储的值代表纵坐标，这样就可以优化一下内存。还有就是棋盘中这么多的位置要怎么去填呢？可以一行一行的填，第一行从填在第一列，一直到第N列，找到个符合的位置就继续填第二行，一直填到第N行。 就以4皇后为例 Start12341234123412341234XXXXXXXXXXXXXXXXXXXXXXXXXX 可以从图中看到，当第一行放到第一个位置时，是找不到一个符合的摆放方式的，因此下一步就必须得尝试第一行放在第二列，由于篇幅的原因就不画出来了。从图中也可以看到第一行放到第一个位置，如果这个位置可以放，就可以考虑第二行的棋子该摆放在哪里了，第二行不能放在第一列，也不能放在第二列，但是第三列是可以放的，所以再考虑第三行的棋子该怎么放，结果没有一个棋子可以摆放到符合的位置，所以要返回到第二行，可以尝试放到第二个位置，等等。 代码的主要思想就是这样，下面把核心的代码贴出来 1234567891011121314151617181920212223242526272829bool isok(int row)&#123; for(int x=0;x!=row;x++)&#123; if(c[x]==c[row]||x+c[x]==row+c[row]||x-c[x]==row-c[row])&#123; return false; &#125; &#125; return true;&#125;void dfs(int n,int row)&#123; if(row==n)&#123; if(t++&lt;3)&#123; for(int i=0;i&lt;n;i++)&#123; cout &lt;&lt; c[i]+1 &lt;&lt; &#x27; &#x27;; &#125; cout &lt;&lt; endl; &#125; return ; &#125; else&#123; for(int x=0;x!=n;x++)&#123; c[row]=x; if(isok(row))&#123; dfs(n,row+1); &#125; &#125; &#125;&#125; 给定一个N*M方格的迷宫，迷宫里有T处障碍，障碍处不可通过。给定起点坐标和终点坐标，问: 每个方格最多经过1次，有多少种从起点坐标到终点坐标的方案。在迷宫中移动有上下左右四种方式，每次只能移动一个方格。数据保证起点上没有障碍。(1&lt;=N,M&lt;=5) 迷宫问题也是个很有意思的问题，在比赛中也有可能会遇得到，首先这个迷宫也和八皇后的棋盘一样都是一个二维平面图，所以也可以用二维数组来表示，题目中所给的有这样几条要解决的信息 ①障碍处不可通过，遇到障碍点是不可以通过的。②每个方格只可以经过一次，也就是前一步经过了这个方格，下一步遇到这个方格就变成障碍了。③有上下左右四种移动方式。 首要要考虑的就是存储了，这里我用的是一个二维数组来表示的，因为N和M的最大值也就是5，其次就是比较好实现上下左右的移动，只需要对下标值进行变动就可以了，还有就是可以很好的判断这个点是不是障碍点，不是障碍点我可以设置为0，是障碍点我可以设置为1，以及当我走过这一个障碍点的时候，就可以将它设置为1。四个方向，只需要一个二维数组保存四个方向的坐标要改变多少，向上走(-1,0),向下走(1,0),向左走(0,-1),向右走(0,1)。但是还要主意好边界的问题，不能够越界，下面以此例子画一个图 输入格式第一行N、M和T，N为行，M为列，T为障碍总数。第二行起点坐标SX,SY，终点坐标FX,FY。接下来T行，每行为障碍点的坐标。 输出格式给定起点坐标和终点坐标，问每个方格最多经过1次，从起点坐标到终点坐标的方案总数。 输入样例2 2 11 1 2 21 2 输出样例1 1,1越界了2,1越界了有障碍2,2越界了越界了走过一次成功向上走向上走向右走向右走向下走向下走向左走向左走向上走向上走向左走向左走向下走向下走向右走向右走 结果大家可以看到只有一种方案可以成功走到终点，从起点开始，每个点都有四个方向可以走，任何一个方向都可以去尝试，如果成功了就可以往下走，直到走到终点或者结束走不下去，另外还要注意一点，就是一点只能走一次的问题，当走过这个点就要改变这一点的状态，例如没有走过的点设为0，那么走过之后就要改变为1，然后，当从这个点往下要走的点全部走完之后，还要把这一点的状态改变回来，不能迷宫的原始状态。上面三个问题其实我已经说过了，怎么解决，下面把核心代码贴在下面 123456789101112131415161718192021int s[10][10];int dir[][2]=&#123;&#123;1,0&#125;,&#123;-1,0&#125;,&#123;0,1&#125;,&#123;0,-1&#125;&#125;;int sum=0;void dfs(int m,int n)&#123; if(m==fx&amp;&amp;n==fy)&#123; sum++; return ; &#125; for(int i=0;i&lt;4;i++)&#123; if(!s[m+dir[i][0]][n+dir[i][1]])&#123; if(m+dir[i][0]&gt;0&amp;&amp;n+dir[i][1]&gt;0)&#123; if(m+dir[i][0]&lt;=N&amp;&amp;n+dir[i][1]&lt;=M)&#123; s[m+dir[i][0]][n+dir[i][1]]=1; dfs(m+dir[i][0],n+dir[i][1]); s[m+dir[i][0]][n+dir[i][1]]=0; &#125; &#125; &#125; &#125;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>想法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[别人都在向上走而你们却在向下走——挖井人]]></title>
    <url>%2F%2Fposts%2F201907161.html</url>
    <content type="text"><![CDATA[:::tip有些事没有见过永远不知道那是个什么样，所以一直都无动于衷，永远不在乎，也从来不关注别人每天在做什么样的工作。职业没有贵贱，休要以有色的眼光看待任何一个人，任何一个职业，其实他们都很伟大。::: 昨天家里面在挖井，早上六点半起床，挖井的师傅们就已经在干活了。起初我以为挖井是使用机器来搅的，后来听说是人一直从地面挖下去，我还挺好奇，咋挖啊，那么深。先从地面上规划好井口的位置，在井口的两边各放一个叉子，把一个长长的滑轮架在上面，到了挖的深的时候，就把一个桶挂在滑轮上面，用来除土。 夏天也比较热，到了八九点的时候太阳正大，也比较的热，人也看不到了，上面的人在用力摇动着滑轮。中午吃个饭，然后我就睡觉了，一觉睡到了四点多，我都可服气，为什么回家来那么犯困。 起来又去看看他们挖的井，那时候外面可真跟个蒸炉一样，而他们仍然在干活，再看看下面的干活人，已经有好几个人高了，下面还在点着一个灯泡，头上满是灰，准确的说是黄土，而他们就在这一个狭小的空间工作，由于深度的越来越深，危险也就越来越大，因为土毕竟不是那么牢固，随时都会有塌方的危险，但是每一个行业都有它自己的解决办法，用长期的经验去处理。 到了五点多的时候，挖的已经快到九米了，但是底下的人不知道说了句什么，上面这位师傅赶紧说，“你快抓紧，我拉你上来，东西都别要了，快！”，我的心一下子就蹦蹦的跳了起来，滑轮在快速转动，我也想着滑轮快转啊，快转啊，下面的师傅上来了，上来了说头一句话，“差点就走了”，脸上仍然透漏着紧张，害怕，我也是惊魂未定，井里面不时传来砖块掉落的声音，地下有一部分坍塌了。 干了一天的活，有可能就因为这一个失误，这一天就算是白干，然后他们还想下去看看有没有挽救的可能，我父亲也害怕，不愿意让他们下去，最后他们就给他们有经验的师傅打电话，一会就过来了，要下去看看，我心里真不想他下去啊，太危险了。 下去了，说需要砖和钢筋来修，他的每一声叫喊，我的心都提到了嗓子眼上，稀里糊涂的在帮忙往桶里装砖，一会的工夫，地下就被他修好了，不塌方了，然后就是把刚才塌陷下去的东西再捞上来，一切在有条不紊的进行着，然后那名有经验的师傅就上来了，“可以下水泥管子了。”，直到管子下完我的心才算是定了下来，而那时已经是夜晚八点了。 期间有位师傅的电话响了，听内容应该是妻子让回家去吃饭，毕竟天色也不早了，突然我就有些羡慕，庆幸，惆怅了。 那时候在香河，在干活的时候被困到了停在20层楼的电梯中，我们一共是三个人，每个人的手机都没有了信号，完全是一个密闭的空间，跟外界只靠一个报障按钮联系，有个人想把电梯门抠开，另一个人赶忙叫住，别扣小心我们都掉下去，我心里害怕极了，被这么一说就更害怕了，我甚至想在手机里写遗言了，忘了当时写没写。那是我这辈子感觉离死亡最近的时候了，庆幸，我仍然在。 我很佩服那些挖井的师傅们，能够靠自己的手艺养活自己的家人，但是这个行业风险真的很大，非常的危险，但是为了生活而又不得不，愿幸运永远伴随着他们。 谨以此文献给那些挖井人。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>感想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[古往今来，莫衷一是]]></title>
    <url>%2F%2Fposts%2F201907131.html</url>
    <content type="text"><![CDATA[:::tip《饥饿》这篇文章看完了，觉得读不太懂这本书，也许是现在我们的生活变好了，难以体会到饥饿与死亡挂钩那种焦虑，但是我们又是相似的，都处在社会的最底层，都是一双手，两条腿。把最近所想所见所闻，写下来。::: 7月2号放假到今天已经是第11天了，小半个月了。放假那天上午还有一场考试，考的是组成原理，8点开考，一个多小时后就从考场出来了，这也正式宣告了大二已经结束了，说起来还有点莫名的感伤。回到寝室，把东西都整理好，等着老乡东西也准备好我们就出发，寝室里一个个都开始出发了，人渐少，稍显空。下午三点左右，我们就一起出发了。 学校每逢放假，出租车直接到学校里面来接人，这一趟可顶别人跑好几趟的，在外面的出租车都是按趟算钱，可在学校里面都是按人头算钱，而且比到外面别人跑一趟要的钱还多，因此我就和老乡走到了学校外面去。阳光很大，走出校门，外面还是正常的价格，而这仅仅不过间隔两里多长的路，顿时对这位出租车师傅没有宰我们产生了好感，难道我们本来就应该被宰吗？/疑惑。 父母给予孩子的爱永远是最无私的，最不求回报的。一只母狗和两只小狗，晚上在家里吃饭，把骨头扔到地上，母狗就坐在地上看着两条小狗吃，母亲说，看，每个父母都是一样的，把好的东西都留给了它的孩子，我不信，把骨头特意扔到了母狗的嘴边，可它，只看一眼骨头，又看了两眼两只小狗，就又把目光移到了一边；还有一次，母狗从外面不知道从哪弄来一大块骨头，上面还有一些肉，用嘴含着叼了回来，然后给它的小狗吃。不禁感慨万分，我们的父母又何尝不是这样？ 在这个世界上，挣钱对于有的人来说很容易，而对于有的人来说就很不容易了。炎炎烈日下，有的人面朝黄土背朝天，而有的人只需要动一动遥控器，三十多度的高温，挣点钱真的很不容易，我想没有任何一个人是真心愿意去干的，但是为了生活，为了家庭孩子，他们还是在咬着牙，拖着疲惫的身体，穿着汗水浸湿的衣服，有时候，我很不愿意看，因为一想到父母也曾是这样养活我，于心不忍。我觉得我很惭愧，这是我前进的动力，然而我做的并不够好。 在《饥饿》这本书中，我曾看到以为母亲的自述。“她对我说有时候她烧水时会往里面放点东西，石头啊，树枝啊，当然是趁孩子不注意的时候”，“孩子们只会看到我往里面放东西，他们会觉得我在做饭。于是我就说要晚一点饭才能做好，我让他们先睡一会儿，饭好了我叫醒他们。这样他们就能睡得更安稳了。” 这是一位母亲的养儿之道，而我该说些什么呢，问问为何你们的生活过的如此艰难？在他们国家，一名壮汉，干一天的活，挣的钱都不够家庭吃一天的饭，饭来张口的我们是难以体会一个家庭的难的。 还有我以前并不知道为什么那些国家那么穷，人们还要生那么多的孩子，生的多不就意味着多了一个饭碗，多了一个人吃饭。直到我看到有人说，孩子的死亡率很高，他们希望有孩子可以健康的长大成人，其实孩子死亡率高很多都是因为营养跟不上，简单的来说就是饿死的！那么少生一点，好好照顾，总不能能够长大的孩子都是抗饿的吧。 我是比较爱看一些名人的传记的，发现不论是英雄还是枭雄，他们都有着自己的过人之处，做一件事就做到极致，枭雄结交朋友的本领那真是数一数二，为了达到自己的目的，用各种手段，不论是见得人还是见不得人的，反正他们是成功达到了自己的目的。英雄枭雄一念之间，能够在这历史中留下自己印记，也足以让人佩服。自己若是能够达到他们的百分之一，也是不枉此生了。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>心话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装系统]]></title>
    <url>%2F%2Fposts%2F201907071.html</url>
    <content type="text"><![CDATA[目前我用过安装系统的方法只有两种，一种是PE盘安装，另一种是启动盘安装。 安装一个新系统不外乎有这么几个步骤。 ①设置U盘为第一启动项。 ②硬盘分区 ③安装系统 前提是准备工作要足，例如，你要是用PE盘安装的话，你事先就要将大白菜或者老毛桃等软件，将U盘制作成PE盘，然后把要安装的系统的系统放在U盘中即可。 还有一种就是把U盘制作成一个系统启动盘，这种方法安装比较简单，难的是分区，其实只要记住那些命令，也没什么难的。 先在电脑上准备好你要安装的系统，然后再在电脑上下载一个软碟通，待系统下载好之后，用软碟通写入到U盘中（刻录），等几分钟就可以刻录成功了，PE盘分区有图形界面，比较简单，而系统启动盘则需要用一些终端命令。 待系统出现需要将系统安装到何处时，按shift+F10,调出cmd，然后再命令行端口输入diskpart,按回车执行这条命令。 list disk这条指令的作用是列出所有的磁盘。 select disk 0选择0号磁盘，也就是要对0号磁盘进行操作。 clean清空硬盘内容。 create partition primary size=xxx(m) 创建分区，并设置大小。 active激活主分区，不激活到系统安装完激活也行。 format quick快速格式化分区。 convert mbr可以将磁盘格式改为mbr。 delete partition删除分区。 exit连续执行两次就可以推出命令行窗口。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>安装系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu系统尝鲜]]></title>
    <url>%2F%2Fposts%2F201907041.html</url>
    <content type="text"><![CDATA[:::tip闲来无事，给电脑换了一个系统，本来想弄一个双系统的，由于c盘太小了，就直接换了一个。把电脑上的重要信息都保存下来，放在e盘中，u盘到时候要做成系统盘，所以不能够存东西。最后系统安装好了，由于没有分区，电脑上所有的东西都没了，绝望啊，两年的记录就这么被我败了。::: ubuntu这个系统第一眼看上去，就是比较简洁、大气，操作方式有图形界面和终端界面，图形界面和我们安卓手机上的图标样式有些相似，毕竟都是基于Linux的嘛。我所接触的电脑都是windows的，一时间换个这样的还有点找不到北，光光网络就让我折腾了一个晚上，而且也没搞出个结果出来。 我用的是台式机，为了方便使用与携带方便，我就买了一个wifi信号接收器，在windows上用的是好好的，网速也还算是比较稳定，然后换到ubuntu，显示未找到wifi信号器，在我的眼中，windows支持的驱动，Linux应该也会支持吧，我以为是这样，结果天亮了还是没有网。 后来在网上看到，说我这款接收器是不支持Linux系统的，做了一夜无用功。得了吧，插上网线先试试这个系统好不好用首先要做的就是把windows中常用的软件都下载下来，像写博客用的git，nodejs，vscode都少不了，想尝试用ssh的方式作于travis-ci的验证方式，所以就找了一篇教程去实验。Linux和windows有这样一个区别，wondows中在某一文件夹中bash，产生的新文件还是在那个文件夹中，但是Linux却不一样，生成的新文件都不知道跑到哪个地方去了，太复杂了。 windows系统装在分区上，Linux是分区装在系统上，我不理解这样一句话。 用了一两天乌班图系统感觉实在是太差了，果断又想换回windows，没想到这一路也是这么的波折。在windows中，我可以将U盘制作成PE盘，我可以将U盘制作成系统启动盘，很容易就可以对系统进行更换，但是在Linux中我却有点无所适从，U盘插上去只能读却不能写，开始不了解，为什么这么奇怪，后来知道它们所采用的存储格式是不一样的，windows采用的是FAT16，FTA32，NFS等，Linux采用的存储格式是ETX4，ETX3等，所以我的U盘插上去只是一个读取的状态，甚至不可以读。到现在也不知道Linux怎么往U盘里存东西，所以说windows在我们的生活中是不可或缺的，很容易上手。 为了制作启动盘，我不得不去用一下我老表的电脑，制作好系统启动盘进行安装，首先要对硬盘进行格式化，而windows转化成Linux我却没有这样做，方法放在下一篇安装系统进行说明。 不断折腾，不断熟悉。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那时年少不轻狂]]></title>
    <url>%2F%2Fposts%2F201906161.html</url>
    <content type="text"><![CDATA[:::tip今天是父亲节，记得在去年的时候，这一天我写了一个推算父亲节的程序，一转眼也已经一年了。这说明，从我接触写程序也已经一年了，虽然现在会的比以前多了一点，但是还是感觉不是那么够，惶恐感萦绕左右，我说这些干啥呢。::: 我儿时的记忆都比较模糊了，只记得为数不多的几个记忆片段，现在想一想，说不出来是比较怀念，还是感慨时光的流逝。姥姥对我说，我小时候，是那种哭都只会在被窝里哭的人，其实这事我记得，我想大多数人应该也都会有过这样的经历。小时侯，父母在外，把我一个人扔到姥姥家，每次他们打电话过来，我都不愿意接，因为一接就会忍不住去哭，那时候也不知道是怎么想的。一次看到电视上在播关于留守儿童，记者让孩子们对自己爸爸妈妈说几句话，很多都是还没说出口，眼泪就已经止不住的流，父母看到这样的情景心里该有多么的心疼与无奈。但是生活就是这样，有时候你没得选择。 小时候我就不属于那种会哭的孩子有奶吃的人，安安静静的就像个小姑娘，从来很少张口从父母要东西。在被窝里哭的人，从来不把自己的内心向别人说起，也许那个人还没出现吧。去年科目四考完在等车回家的时候，别人神情，话语上都流露着喜悦，有人就问我，你驾照考完了难道不高兴吗？我说，我高兴啊。就是这样的一个性格，除了脸红不好意思能看出来，其他的真的嗨不起来。 有时候，我就很想不通，为什么以前在一起上学的伙伴，彼此关系都很好，毕业分开后就会变得生疏，是不是只有我一个人是这样？直到我上次听一个长辈说，他以前也有很要好的朋友，最后换了工作后，就基本上没有联系了。原来不止我一个人是这样。在不同的环境中，每个人的想法生活都会有很大的不同，时间长了，有隔阂也在所难免。永远不要叫醒一个正在装睡的人，因为美好会随着清醒而破碎。 饥饿是上帝对那些以某种方式冒犯过他的人的合理惩罚。“神父，那为什么上帝要惩罚我呢？”，“我想你其实比其他人更清楚答案是什么。”，这是我在一本书中看到的一段对话。真正的饥饿是思想上饥饿，不吃饱饭，哪里还有心思考虑什么思想不思想呢？想想在我们中国还是挺不错的，至少很少有人会饿肚子（不敢说的太绝对），但是现在仅仅吃饱饭也还是不够的，吃饱了就要多思考。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>心话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[着色问题]]></title>
    <url>%2F%2Fposts%2F201906111.html</url>
    <content type="text"><![CDATA[:::tip图的着色问题其实就是一个排列问题，用最少的颜色数，使一个图中两两相连的顶点颜色都不相同。::: 着色问题是什么着色问题又叫做图的着色问题，是最著名的NP-完全问题之一。给定一个无向图G=(V,E)，其中V为顶点集合，E为边集合，图的着色问题即为将V分为K个颜色组，每个组形成一个独立集，即其中没有相邻的集合。(其实就是相邻的顶点颜色都不相同)其优化版本是希望获得最小的K值(最小的颜色种数)。假设有这样关系的五个顶点，你将如何找出最小的颜色种数。 aaddeebbcc 如何解决这个问题首先我们需要考虑这样的几个问题,存储，着色，搜索方式，结束条件，我是这样考虑的。 Start结束条件搜索方式存储方式是否着色n个点着色-1/自然数邻接表广度优先 首先我们要考虑的就是如何将这个图存储下来，这里我选择的是邻接表，因为这里存储的是边，只需要判断这条边的两个顶点颜色是否相同，比较方便，还有就是我如何区分已经着色的点和未着色的点，初始化将未着色的点都标记为-1，将已经着色的点标记为自然数，每个数都代表一种颜色。 还有就是我采用什么样的策略对各个点都着色，我是这样想的，先把第一个点拿出来，对它标记尝试标记一种颜色，然后判断和它相连的点是否有和它相同的颜色，如果没有就可以把第二点拿出来，尝试填一种颜色，一步步往下走，如果这几种颜色不能使这些点都着不同的颜色，就再加入一种颜色，直到找到最小的颜色数，使这几个点都可以着不同的颜色结束。 下面将演示对于上图五个点只有两种颜色的情况，从a点开始着色，一个着色序列可以为abdce Start1010101010XXXXXXXXXXXX 这便是当有两种颜色时的情况，发现是不能使这五个点都着色的。 代码实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include&lt;bits/stdc++.h&gt;using namespace std;const int Max=1e6+3;typedef struct EdgeNode&#123; int to;&#125;;int flag[Max];//未着色-1,着色自然数vector&lt;EdgeNode&gt; s[Max];void build(int n)//初始化&#123; fill(flag,flag+n+2,-1);&#125;bool isok(int row)//row顶点是否可以着这种颜色&#123; for(auto it=s[row].begin();it!=s[row].end();it++)&#123; EdgeNode E=*it; if(flag[row]==flag[E.to])&#123; return false; &#125; &#125; return true;&#125;int t=1;//标记项,只要找到一个着色序列就可以了void bfs(int row,int n,int m)//给每个顶点着色&#123; if(row==n&amp;&amp;t)&#123; t--; return ; &#125; for(int i=0;i&lt;m&amp;&amp;t;i++)&#123; flag[row]=i; if(isok(row))&#123; bfs(row+1,n,m); &#125; &#125;&#125;int main()&#123; int n,m;//顶点和边的个数 cin &gt;&gt; n &gt;&gt;m; for(int k=0;k&lt;m;k++)&#123;//存储图 int i,j; cin &gt;&gt; i &gt;&gt; j; EdgeNode e; e.to=j-1; s[i-1].push_back(e); e.to=i-1; s[j-1].push_back(e); &#125; int x=1;//颜色数 while(t!=0)&#123; build(n); bfs(0,n,x); x=t&gt;0?x+1:x; &#125; cout &lt;&lt; x; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>回溯</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gulp与InstantClick]]></title>
    <url>%2F%2Fposts%2F201906041.html</url>
    <content type="text"><![CDATA[:::tip最近又在折腾这个博客，虽然快考试了，但是一直也不知道要复习什么，无聊就瞎折腾吧。博客的源文件中的文件中有大量的空白，虽然是一些空格，但是也会占据空间，影响加载速度，本次目的就是为了提高加载速度。::: 为什么我要去掉评论第一个方面就是要提高加载速度，因为评论功能使用的是第三方的，当页面加载的时候，评论功能也是要加载的，在tools.pingdom.com中测试网站速度的时候，发现评论占据了大量的时间。第二个方面就是，博客中基本上就是我自己看，也很少有其他的人看，所以评论在那里就非常的尴尬，去掉影响也不是很大。 gulp压缩gulp是基于流的自动化构建工具，里面包含了众多的插件，使用哪个只要安装就可以使用，最后只要要创建一定的规则就可以使用这些插件。 首先我们要先安装的就是gulp执行npm install gulp 然后依次执行以下命令12345npm install gulp-htmlclean//在不改变html结构下缩小npm install gulp-htmlmin//压缩htmlnpm install gulp-clean-css//压缩cssnpm install gulp-uglify//压缩jsnpm install gulp-imagemin//压缩图片 网上很多用gulp压缩css插件都用的是gulp-minify-css,这在gulp4.0已经被放弃，所以上使用上面的css压缩插件 然后再在博客根目录中创建gulpfile.js文件这是文件中的内容 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748var gulp = require(&#x27;gulp&#x27;);var cleancss = require(&#x27;gulp-clean-css&#x27;);var uglify = require(&#x27;gulp-uglify&#x27;);var htmlmin = require(&#x27;gulp-htmlmin&#x27;);var htmlclean = require(&#x27;gulp-htmlclean&#x27;);var imagemin = require(&#x27;gulp-imagemin&#x27;);// 压缩 public 目录 html文件gulp.task(&#x27;minify-html&#x27;, function() &#123; return gulp.src(&#x27;./public/**/*.html&#x27;) .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest(&#x27;./public&#x27;))&#125;);// 压缩 public 目录 css文件gulp.task(&#x27;minify-css&#x27;, function() &#123; return gulp.src(&#x27;./public/**/*.css&#x27;) .pipe(cleancss(&#123; compatibility: &#x27;ie8&#x27; &#125;)) .pipe(gulp.dest(&#x27;./public&#x27;));&#125;);// 压缩 public/js 目录 js文件gulp.task(&#x27;minify-js&#x27;, function() &#123; return gulp.src(&#x27;./public/js/**/*.js&#x27;) .pipe(uglify()) .pipe(gulp.dest(&#x27;./public/js&#x27;));&#125;);// 压缩图片gulp.task(&#x27;minify-images&#x27;, function() &#123; return gulp.src(&#x27;./public/images/**/*.*&#x27;) .pipe(imagemin( [imagemin.gifsicle(&#123;&#x27;optimizationLevel&#x27;: 3&#125;), imagemin.jpegtran(&#123;&#x27;progressive&#x27;: true&#125;), imagemin.optipng(&#123;&#x27;optimizationLevel&#x27;: 7&#125;), imagemin.svgo()], &#123;&#x27;verbose&#x27;: true&#125;)) .pipe(gulp.dest(&#x27;./public/images&#x27;))&#125;);// 默认任务gulp.task(&#x27;default&#x27;, gulp.parallel( &#x27;minify-html&#x27;,&#x27;minify-css&#x27;,&#x27;minify-js&#x27;,&#x27;minify-images&#x27;)); 使用方法顺序不能错了 123hexo cleanhexo ggulp InstantClick是什么InstantClick在网上都被别人叫做神器，可以假装网站运行的速度很快，当你的鼠标移动到你要点的那个按钮，后台就会自动开启预浏览模式，也就是当鼠标浮动在按钮之上时，你要点击的事件在后台就已经开始运行了(也许都已经运行完成了)，当你再点击的时候速度当然会提升很多。具体原理是这样，但是我在使用的时候也没真真切切感觉速度有多么质的飞跃，没啥感觉。再练习一下流程图吧。 Start点击浮动在按钮上页面加载完毕End InstantClick实现方法首先需要下载创建instantclick.min.js文件instantclick.min.js,直接点击就可以跳转到文件页面，直接点击右键另存为就可以了，或者创建instantclick.min.js文件，把链接中的内容复制下来放到里面也可以。把新创建的文件放在themes/next/source/js/src中。 如何使用InstantClick路径themes/layout/_layout.swig，打开_layout.swig在最下面的body(这里怕乱码就不用标签写了)上面，添加以下代码 1234&lt;script src=&quot;/js/src/instantclick.min.js&quot; data-no-instant&gt;&lt;/script&gt;&lt;script data-no-instant&gt;InstantClick.init(true);&lt;/script&gt;//里面是true就是默认所有都不预加载&lt;/body&gt;//不包括&lt;/html&gt;//不包括，只为了好找 这时候，我们就已经完成了，部署到github上，看看效果吧。hexo博客似乎不支持，我原先以为成功了，原来一直都没有，true原来是所有都不预加载。备方案：直接在原位置引用这段就可以了 1&lt;script src=&quot;//instant.page/1.2.2&quot; type=&quot;module&quot; integrity=&quot;sha384-2xV8M5griQmzyiY3CDqh1dn4z3llDVqZDqzjzcY+jCBCk/a5fXJmuZ/40JJAPeoU&quot;&gt;&lt;/script&gt;]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[真想把一辈子都写在这]]></title>
    <url>%2F%2Fposts%2F201906011.html</url>
    <content type="text"><![CDATA[:::tip此刻又到夜晚十一点多了，上了大学后，很少在十二点以前睡觉了，晚上吃完饭就在宿舍里坐着，看会书，玩会手机时间就走到了现在。小时候总希望时间能走快点，快点放假，快点长大，现在多想时间能走慢一点，一周，晃眼就过去了，在这流年中多想收获能更多一点。::: 前两天我做了很错的一件事，给ofo交了押金，可怜的是车都锁都没开，还扣了我一块钱。开始真是关于ofo的一点新闻都不知道，到了退押金的时候，填支付宝账号我还感觉挺好的，填完之后就感觉不好了，退款竟然还有个排名，我排到了一千五百多万以后，到百度上查咋回事，全部都是关于ofo不退押金的问题，心里凉了半截，ofo客服的电话永远是打不同状态，ofo在线客服永远都是50人以上，现在直接联系不到ofo。 这两天观察每天大约能够前进一万人，照这进度我要等多少年啊。这么大的公司，说不行就不行了，不想干了为何还要收我的押金呢，公然的进行诈骗，然而却无可奈何，找支付宝(因为是通过支付宝平台交的)跟你玩踢皮球，投诉到12315，到现在也没有受理，这个社会是怎么了，为什么就没有人能够管管呢，当个人的权益受到侵害时，很难去维护自己的权益，事实就是这样。 最近一直在看一本叫做《饥饿》的书，开始以为大概是一本小说，看的时候，原来真的讲的是饥饿，作者是一名阿根廷人，周游过世界上很多国家。开始的时候，一直都看不明白，一直在说贫穷国家的人吃不饱饭，觉得看着可没意思，也正如作者在书中说过一句话，朋友要买房，我能告诉他在非洲还有很多人吃不饱饭，没地方住？ 看到现在，终于觉得有点意思了，尤其是在采访他们对话的时候，会很不了解为什么有人还会这样想，作者问，如果让你实现一个愿望，你愿意得到什么东西？我想要一头奶牛，这样我就可以让孩子每天喝上牛奶了，多余的还可以卖掉。就是这么的简单，但是在那个国度里，他们却无可奈何，这跟我想要回押金的无奈是一样的，孩子普遍都营养不良，这是往好听得说，说不好听的那就是饿的，因为饥饿，很多孩子在五岁之前就已经夭折了。 原来这个世界就是这样的，少数人在控制着多数人，强大如美国也逃脱不了。 现在我的博客就是我学习的动力，我有一个想法，当我步履蹒跚时，在回过头去看一遍，那时又会有何种心情呢？写下的日记，不管是高兴地还是不高兴地，都已经忘得差不多了，但是现在我却不想去看了，也许已经找不到了吧，写了那么多又怎样呢，到头来一场空。现在又是一个新的开始。 世人熙熙，皆为利来；世人往往，皆为利往。望着窗外的黑夜，微微凉风能让一颗浮躁的心平静，走自己的路，像一个蜗牛一样，也许很慢，但是我从不停下。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>心话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[进程同步之生产者与消费者关系]]></title>
    <url>%2F%2Fposts%2F201906012.html</url>
    <content type="text"><![CDATA[:::tip社会发展到今天，电子产品一天也离不开我们的生活。通常程序(APP)是不可以并发运行的，如果并发运行将会因为程序执行速度的不同，结果就不可控制了，但是日常生活中我们常需要程序一起运行，例如我想听歌，还想查看网页，进程概念由此而生。::: 什么是进程进程的定义，站在不同的角度就会有不同的定义，较为经典的有以下几种。 进程是程序的一次执行。 进程是一个程序及其数据在处理机上顺序执行时所发生的活动。 进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个基本单位。 在引入了进程实体概念之后，传统OS中的定义为：进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。 什么进程实体？进程实体程序段相关数据PCB 由程序段，相关数据段和PCB(进程控制块)组成。 进程的特征进程特征动态性并发性独立性异步性 进程的三种基本状态就绪就绪阻塞阻塞执行执行进程调度进程调度时间片完时间片完I/O请求I/O请求I/O完成I/O完成 假如说是五种状态，就在加入挂起和激活状态就可以了，其实也还是根据上边这个图来的。 为什么要引入生产者与消费者关系举一个例子吧。 123int a = 2,b = 3;① a = a + b;② b = a * b; 把①和②当做两个进程，当他们两个顺序执行时可以得到的结果是a=5,b=15，这个才是正常的。但是当两者随着运算顺序的不同，得到的结果也相异，有以下三种情况 进程①比进程②运算的快的时候 a=5,b=15 当进程①跟进程②同时运行的时候 a=5,b=6 当进程①比进程②运算慢的时候 a=8,b=6 这还只是两个进程，有三种结果，当程序多的时候，结果的基数也会变得很大，但是我们要的只是正确的那一个，所以我们要防止这种情况出现，生产者与消费者关系就可以很好的解决这样的情况。 生产者与消费者关系生产者和消费者中间还有一个缓冲区，生产者生产完的东西就放在缓冲区里，消费者获取东西也要从缓冲区里面取。但是它们之间必须要有这样的约定，不允许生产者向一个一个已经装满了商品且尚未取走的缓冲池投放产品，不允许消费者从一个空的缓冲池取产品。 缓冲池1缓冲池1缓冲池2缓冲池2缓冲池3缓冲池3生产者生产者22113344消费者消费者 生产者可以选择1或4把生产的产品放进去，消费者可以选择2或3买走商品。 程序代码实现123456while(true)&#123; 进入区; 临界区; 退出去; 剩余区;&#125; 实现原理，当生产者要生产东西的时候，需要判断是否有消费者正在买东西，如果没有消费者就在找找在缓冲池中还有空的缓冲区不，有就放进去，没有就结束。当消费者要买东西时，需要判断是否有生产者正在生产东西，如果没有进去找一个不是空的买，然后结束。思路流程图如下。 123int n;//代表缓冲区的数量int num=n;//代表缓冲池还剩几个空缓冲区int flag=0;//标记当前临界区即缓冲池是否有人访问 开始开始生产者/消费者生产者/消费者flag=0?flag=0?flag=1flag=1生产者？生产者？num&lt;n?num&lt;n?num&gt;0?num&gt;0?num=num+1num=num+1flag=0flag=0结束结束num=num-1num=num-1是是否否是是是是否否否否 代码 1234567891011121314151617181920212223242526272829303132333435363738394041#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; int m;//代表有几个满缓冲池 int n;//代表缓冲区的数量 int flag;//标记当前临界区即缓冲池是否有人访问,0是没人,1是有人 int key;//输入1和2，代表生产者或者消费者 cin &gt;&gt; n &gt;&gt; m &gt;&gt; key &gt;&gt; flag; int num=m;//代表缓冲池有几个慢缓冲区 if(key==1)&#123; if(!flag)&#123; flag=1; if(num&lt;n)&#123; cout &lt;&lt; &quot;生产者找到个空缓冲池放进去&quot;; num+=1; &#125; else&#123; cout &lt;&lt; &quot;已经满了&quot;; &#125; flag=0; &#125; &#125; else&#123; if(!flag)&#123; flag=1; if(num&gt;0)&#123; cout &lt;&lt; &quot;消费者找到了个满缓冲区买走&quot;; num-=1; &#125; else&#123; cout &lt;&lt; &quot;空的&quot;; &#125; flag=0; &#125; &#125; if(flag)&#123; cout &lt;&lt; &quot;被占用&quot;; &#125; return 0;&#125;]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>进程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TSP货郎问题]]></title>
    <url>%2F%2Fposts%2F201905291.html</url>
    <content type="text"><![CDATA[:::tip前有八皇后，后有货郎。货郎问题，给定n个城市的集合，从一个城市到另一个城市的距离为正整数，求一条最短且每个城市恰好经过一次的巡回路线。::: 问题引入某售货员要到若干城市去推销商品，各城市间的距离已知。他要选定一条从驻地出发经过所有的城市最后回到驻地的周游路线，使得总的路程最短。下图就是这几个城市间的距离关系。 1122334477994422551313 问题分析从一个城市出发，每个城市都要走一遍，最后还要回到出发的城市，上面这个图一共有四个城市，那么我该怎么走呢，首先我要选择一个起点吧，我就选从1这个点出发，那么下一个点，就要选择1的邻接点了，可以看到2,3,4都与1直接相连，那么我就在选择去2吧，到了2之后，又要向下一个城市出发了，与2邻接的点有1,3,4，但是1我们已经走过了，如果所有的城市都走过了，就可以回到1，但是现在3,4点还没走，所以只能选择3,4点了，那我就选择走3吧，到达3之后，就只剩4没走了，所以直接从3到达4，此时所有的点我们都已经走完了，我们要回到出发的那个点,即1。1-2-3-4-1,这个便是其中的一种情况。其实，我们求得就是这n城市的一个排列，而所有的情况有n!我们要在这么多的情况中，找到一条最短的回路，这条路径也叫做哈密顿回路。这便是当从1开始走的所有情况 1234342423434232 解决办法既然哪条回路是最短的我也不知道，那么我把所有的情况都列举一遍，看看哪条路径长度是最短的，那么这条回路就是一条最短的哈密顿回路，抱着这样的思路就开始写吧。 实现步骤存储方式12345const int N=110;//假设最大的结点数int s[N][N];//存储边的长度int a[N];//保存每次排列的结果int b[N];//保存最终的排列结果int Min=1e6+2;//保存最小的权值 初始化123456void build(int n)&#123; fill(s[0],s[0]+(n+1)*(n+1),0); fill(a,a+N,0); fill(b,b+N,0);&#125; 排列组合未优化版下面实现排列的思想是这样的，在第一行有n列，选择其中一列放下，再在第二行选择一个位置，但是这个位置不可以和第一行放在同一列，直到n行都排完，则实现了排列一次，然后就按照这个路径求它的权值，直到找到一个最小的权值。 123456789101112131415161718192021222324252627282930313233343536bool isok(int c)&#123; for(int i=0;i!=c;i++)&#123; if(a[i]==a[c])&#123;//只要不在同一列就可 return false; &#125; &#125; return true;&#125;void sddr(int row,int n)&#123; if(row&gt;n) return ;//当行数大于n时结束，不允许越界 if(row==n)&#123; int sum=0;//保存当前的权值 for(int i=0;i&lt;n;i++)&#123; sum += s[a[i-1]][a[i]] &#125; sum += s[a[n-1]][a[0]]; if(sum&lt;Min)&#123;//如果当前的权值sum小于最小的权值Min则要进行更新 Min=sum; for(int i=0;i&lt;n;i++)&#123; b[i]=a[i]; &#125; &#125; cout &lt;&lt; endl; return ; &#125; else&#123; for(int i=0;i&lt;n;i++)&#123; a[row]=i+1;//第row行放在第几列 if(isok(row))&#123;//判断row行的第i+1列是否可以放 sddr(row+1,n);//如果可以放就下一行 &#125; &#125; &#125;&#125; 但是这样是没有优化的，必须把每条路径求出来之后，才能知道总的路径长度，下一篇在分析下怎么优化剪枝，具有未来判断性。]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>回溯</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何用Markdown画流程图]]></title>
    <url>%2F%2Fposts%2F201905281.html</url>
    <content type="text"><![CDATA[:::tip在写博客中发现了一个问题，发现很多问题的解决思路都使用都是用文字来表达的，但是文字的缺点就是太抽象，不容易理解，所以就想着用别的方法来改善表达的方式，这时候我想到了流程图，而强大的Markdown也可以做流程图。::: 此种方法只针对next主题用户，其他主题没用过，不提供方法。 首先需要安装安装插件1npm install hexo-filter-mermaid-diagrams 在你的博客目录下，用git执行这条命令。然后就只需要在themes/next/_config.yml主题的配置文件中将 12mermaid: enable: true mermaid开启即可 在markdown使用mermaid12345···mermaid graph 流程图的方向 流程图的内容···使用的时候，需要将点换成反引号，下面都同理 流程图的方向 TB和TD 表示从上到下 BT和DT 表示从下到上 RL 表示从右到左 LR 表示从左到右 示例 1234···mermaid graph LR A --&gt; B··· 效果 12graph LRA --&gt; B 流程图的基本图形示例 12345678···mermaid graph LR id[带文本的矩形] id4(带文本的不对称的矩形) id3&gt;带文本的不对称的矩形] id1&#123;带文本的菱形&#125; id2((带文本的圆形))··· 效果 123456graph LRid[带文本的矩形]id4(带文本的不对称的矩形)id3&gt;带文本的不对称的矩形]id1&#123;带文本的菱形&#125;id2((带文本的圆形)) 节点之间连接线的种类 A –&gt; B A带箭头指向B A — B A不带箭头指向B A -.- B A用虚线指向B A -.-&gt; B A带箭头虚线指向B A ==&gt; B A用加粗的箭头指向B A – 描述 — B A不带箭头指向B并在中间加上文字描述 A – 描述 –&gt; B A带箭头指向B并在中间加上文字描述 A -. 描述 .-&gt; B A用带箭头的虚线指向B并在中间加上文字描述 A == 描述 ==&gt; B A用加粗的箭头指向B并在中间加上文字描述 示例 123456789101112···mermaid graph LR A[A] --&gt; B[B] A1[A] --- B1[B] A4[A] -.- B4[B] A5[A] -.-&gt; B5[B] A7[A] ==&gt; B7[B] A2[A] -- 描述 --- B2[B] A3[A] -- 描述 --&gt; B3[B] A6[A] -. 描述 .-&gt; B6[B] A8[A] == 描述 ==&gt; B8[B]··· 效果 12345678910graph LRA[A] --&gt; B[B] A1[A] --- B1[B] A4[A] -.- B4[B] A5[A] -.-&gt; B5[B] A7[A] &#x3D;&#x3D;&gt; B7[B] A2[A] -- 描述 --- B2[B] A3[A] -- 描述 --&gt; B3[B] A6[A] -. 描述 .-&gt; B6[B] A8[A] &#x3D;&#x3D; 描述 &#x3D;&#x3D;&gt; B8[B] 子流程图使用规范 1234···subgraph title graph 流程图方向 end··· 示例 12345678910111213···mermaid graph TB c1--&gt;a2 subgraph one a1--&gt;a2 end subgraph two b1--&gt;b2 end subgraph three c1--&gt;c2 end··· 效果 1234567891011graph TB c1--&gt;a2 subgraph one a1--&gt;a2 end subgraph two b1--&gt;b2 end subgraph three c1--&gt;c2 end 写法实例绘制一个流程图，找出A、B、C三个数中最大的一个数 示例 1234567891011121314···mermaid graph LR start[开始] --&gt; input[输入A,B,C] input --&gt; conditionA&#123;A是否大于B&#125; conditionA -- YES --&gt; conditionC&#123;A是否大于C&#125; conditionA -- NO --&gt; conditionB&#123;B是否大于C&#125; conditionC -- YES --&gt; printA[输出A] conditionC -- NO --&gt; printC[输出C] conditionB -- YES --&gt; printB[输出B] conditionB -- NO --&gt; printC[输出C] printA --&gt; stop[结束] printC --&gt; stop printB --&gt; stop··· 效果 123456789101112graph LR start[开始] --&gt; input[输入A,B,C] input --&gt; conditionA&#123;A是否大于B&#125; conditionA -- YES --&gt; conditionC&#123;A是否大于C&#125; conditionA -- NO --&gt; conditionB&#123;B是否大于C&#125; conditionC -- YES --&gt; printA[输出A] conditionC -- NO --&gt; printC[输出C] conditionB -- YES --&gt; printB[输出B] conditionB -- NO --&gt; printC[输出C] printA --&gt; stop[结束] printC --&gt; stop printB --&gt; stop]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Markdown语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Prim算法最小生成树]]></title>
    <url>%2F%2Fposts%2F201905271.html</url>
    <content type="text"><![CDATA[:::tip前几天在用Prim算法建最小生成树的时候，一直都没有实现，今天上实验课的时候，突发灵感，又去尝试了一下，可能是因为之前在解决单源最短路径的时候，觉得这两种算法有一些相似，也确实是如此。::: Prim算法历史Prim算法(普里姆算法)，用于构造最小生成树，该算法与1930年由捷克数学家沃伊捷赫·亚尔尼克发现的，在1957年由美国计算机科学家罗伯特·普里姆独立发现，1959年艾兹格·迪科斯彻再次发现了该算法。所以普里姆又被叫做DJP算法、亚尔尼克算法或普里姆-亚尔尼克算法。 Prim算法思想Prim算法是典型的以点建树，需要有两个集合，一个是边集合，一个是点集合。点集合保存已经连接它最短路径的点，以后每次从未在点集合中的点找距离已经在点集合中最近的点，直到所有的点都在点集合中结束。边集合就用于保存选中的那些边，两点成线，当选中一个点，也就选中了一条边。 测试问题：有一无向图，给出其中的一些边，问，其中哪几条边可以构成最小生成树。 输入12345674 61 2 22 3 22 4 11 3 53 4 31 4 4 输出1231 2 22 4 12 3 2 代码如下1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#include&lt;bits/stdc++.h&gt;using namespace std;const int Max=1e4+2;vector&lt;int&gt; q;//保存已选中的点typedef struct EdgeNode//边的存储&#123; int to; double w;&#125;;typedef struct Node//已选中的边的存储&#123; int form;//起始点 int to;//终止点 int w;//权值&#125;;vector&lt;Node&gt; G;vector&lt;EdgeNode&gt; s[Max];bool vis[Max];//代表此点是否已加入到集合中void build()&#123; fill(vis,vis+Max,false);&#125;void sddr(int n)&#123; vis[1]=true;//标记此点已在集合中 q.push_back(1);//先将点1加入到集合中 while(q.size()!=n)&#123; int Min=Max;//代表选中距离最近点的权值 int v1=-1;//代表起始点 int v2=-1;//代表选中点的编号 for(int i=0;i&lt;q.size();i++)&#123;//寻找一个最近的点 for(auto it=s[q[i]].begin();it!=s[q[i]].end();it++)&#123; EdgeNode E; E=*it; if(Min&gt;E.w&amp;&amp;!vis[E.to])&#123; Min=E.w; v1=q[i]; v2=E.to; &#125; &#125; &#125; vis[v2]=true;//标记选中的点在集合中 q.push_back(v2);//加入到集合中 Node g; g.form=v1; g.to=v2; g.w=Min; G.push_back(g);//将选择的边存储下来 &#125;&#125;int main()&#123; build(); int n,m; cin &gt;&gt; n &gt;&gt; m; for(int k=1;k&lt;=m;k++)&#123; int i,j; double w; cin &gt;&gt; i &gt;&gt; j &gt;&gt; w; EdgeNode e; e.to=j; e.w=w; s[i].push_back(e); e.to=i; s[j].push_back(e); &#125; sddr(n); cout &lt;&lt; endl; for(auto it=G.begin();it!=G.end();it++)&#123; Node g=*it; cout &lt;&lt; g.form &lt;&lt; &#x27; &#x27; &lt;&lt; g.to &lt;&lt; &#x27; &#x27; &lt;&lt; g.w &lt;&lt; endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>最小生成树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[单源最短路径]]></title>
    <url>%2F%2Fposts%2F201905261.html</url>
    <content type="text"><![CDATA[单源最短路径，顾名思义，就是从一个地点到多个地点的最短距离，生活中也比较常见，例如当你选择但你想去某地旅游的时候，是不是要分析一下，当你下火车的地点一定，要按照怎样的游玩顺序，走最短的路，游玩最多的景点。没错，这个算法就是来解决这个问题的————Dijkstra算法。 Dijkstra算法历史Dijkstra算法的中文名字叫做迪杰斯特拉，是由荷兰计算机科学家狄克斯特拉于1959年提出，解决从一个顶点到其余顶点最短路径的算法。 Dijkstra算法思想我就以邻接表来表达吧。在多个顶点选择一个源点即起始顶点，初始化每个顶点到达这个起始点距离都为无穷大，从这个起始点开始，找它的邻接点，如果两个点能够直通，就更新它们之间的距离，并且下一次，就以上一次的终点为起始点，向下寻找，如果存在更短的路径，就更新它们的距离，直到每个点到达源点之间的距离都是最短的时候结束。关于不是直通的最短路径是怎么回事举个例子吧，例如&lt;1,2&gt;=31和2之间的距离是3，下面有&lt;1,4&gt;=1和&lt;4,2&gt;=1通过点4将点1和点2连接起来，并且距离为2，所以就要此时就要更新&lt;1,2&gt;=2了。 题目描述给出一个有向图，请从某一点出发到所有点的最短路径长度。 输入样例第一行输入三个整数n,m,c,分别代表顶点个数，输入边的个数，起始点第二行输入m行边，三个整数i,j,w 12345674 6 11 2 22 3 22 4 11 3 53 4 31 4 4 输出样例只需要输出源点到各个点的距离即可，空格相隔。 10 2 4 3 代码如下1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#include&lt;bits/stdc++.h&gt;#define inf 0x3f3f3f3f//极大值using namespace std;const int Max=1e5+4;//假设顶点的最大值bool vis[Max];//标记一个点是否在操作队列中int dis[Max];//存储各个点到达源点的最短距离typedef struct EdgeNode&#123; int to; int w;&#125;;//存储每个顶点的邻接点vector&lt;EdgeNode&gt; s[Max];//顶点,下标代表起始点void SPFA(int c)&#123; queue&lt;int&gt; q;//要进行操作的队列 dis[c]=0;//初始化 vis[c]=true;//在队列中 q.push(c); while(!q.empty())&#123;//如果队列不为空就执行 int x=q.front();//获取队列头元素值 q.pop();//弹出头元素 for(auto it=s[x].begin();it!=s[x].end();it++)&#123; EdgeNode E=*it;//遍历这个顶点的邻接点 if(dis[x]+E.w&lt;dis[E.to])&#123; dis[E.to]=dis[x]+E.w; if(!vis[E.to])&#123;//如果这个终点没有被加入队列,就要加入 vis[E.to]=true; q.push(E.to); &#125; &#125; &#125; vis[x]=false;//操作完，标记已不再队列中 &#125;&#125;void init()&#123;//初始化 memset(vis,false,sizeof(vis)); memset(dis,inf,sizeof(dis));&#125;int main()&#123; init(); int n,m,c; cin &gt;&gt; n &gt;&gt; m &gt;&gt; c;//n个点,m条边,c源点 for(int k=1;k&lt;=m;k++)&#123;//输入m条边 int i,j,w; cin &gt;&gt; i &gt;&gt; j &gt;&gt; w; EdgeNode e; e.to=j; e.w=w; s[i].push_back(e); &#125; SPFA(c); for(int i=1;i&lt;=n;i++)&#123;//输出源点到达各个顶点的最短距离 cout &lt;&lt; dis[i] &lt;&lt; &#x27; &#x27;; &#125; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>贪心算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转眼还有一个月就要期末了]]></title>
    <url>%2F%2Fposts%2F201905251.html</url>
    <content type="text"><![CDATA[还以为刚开学呢这学期过的好快啊，还有一个月就已经要期末考试了。穿着棉袄到学校，现在穿着短袖都觉得热，尤其是这几天，天气实在是太热了，在教室里上课，整个人都是迷糊的一个状态，心里烦躁。看着一个个差不多都是这种状态，觉得挺有意思的。这一学期做了什么，把记忆往回转一转，没有什么值得引以为豪的事情，在学业方面呢，也不是很满意。年前买了一个阅读器，到现在也粗读了几本书，仍然在坚持着没事的时候看书，在这个花花世界中静下心来，也很欣慰。 吐槽一下计算机科学与技术，是一个学的很广泛的专业，基本上关于计算机的都会接触一部分，所以导致我们学的都比较杂，学的兴趣也不是那么高了，像这学期学的《操作系统》和《计算机组成原理》都是比较原理方面的，用户点击键盘的一个字符，为什么在显示器就能显示这个字符等类似讨论这样的问题。相比较而言，我更加喜欢《操作系统》，掌握那些规则你就可以解决问题，但是计算机组成原理我觉得就不是如此了，我觉得很杂，没什么规律可言。像那些实验课，也只是去耗时间了，程序设计自己在私底下做了很多，就不说了，像计算机组成原理实验，都不知道那个机箱实际可以干什么，线要按照图上的连，要这样这样，好了，可是这样做的意义是什么，学的并没有在实验中体现。 要开始复习了以往每到快考试的前一个月，我都要去找个地方复习了，因为那时候我们还学习数学，而我又对它有些偏爱，所以想考的好一点。但是这学期呢，数学就没有了，而要背的一个也不少，毛概啊，教育学啊(学个计算机还要学教育学)，都是要背的科目，对了，还有英语，也要背，大学里最后的一次学校组织的英语考试，一定不要挂科了。把手上的事情都要放一放了，前段时间折腾blog，现在也基本上没什么事情了，代码也要少敲了(即使本来就不多)。 发生的变化我觉得变化还是挺大的把，首先是我脸又圆了。在不同的环境就会有不同的心情，不同的感受，看见过不一样的人，遇见过不一样的事，人是会发生改变的。当从小乡村走出的时候，哦，原来世界是这样的大，渐渐的发现，每个人都是不一样的，我那小小的眼界，宛如一叶障目再现。因此，从高中开始，我就想得要做出些改变了，虽然这几年也不是那么好，但是我问心无愧。那时候，一位女老师背后说我就知道死学，知道后，我本就不坚强的心，更加产生怀疑了，是不是我真的那么笨啊，原来你们眼中，我就像个傻子。说实话，我还很伤心了一段，更多的是一种羞愧感。现在，想想那时候真是傻啊。我怎么做，是我的事情，你怎么看，是你的事情。现在，如果再听到类似的，我想我能够很好的应对了。这也算是一点成长吧。 最后现在，我正在听着李宗盛的《山丘》，越过山丘，一定会看到不一样的风景，成为想成为了的人。是有点唯心主义了吧。但是，谁不是踏过一个又一个山丘，才成就现在。自信，没什么大不了。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>话流年</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[最小生成树]]></title>
    <url>%2F%2Fposts%2F201905221.html</url>
    <content type="text"><![CDATA[:::tip最近老师在讲贪心算法的应用，最小生成树是其中最经典的应用之一，有时候知道其中的思想，但是用代码实现起来还是很有差距的，中午弄了几个小时prim算法建最小生成树，但是最后还是没搞懂其中的关键，最后无法判断两个点是否是连通的，决定以后就用Kruskal来解决这类问题吧。::: 迷之想法中午用vector版本邻接表存储的无向图，我的想法是这样的，对每一个顶点域邻接的部分从小到大排序，这样求一个顶点到邻接点的最短距离直接取第一个点就好，等用完了这个点，就将它从该位置移除，与此同时，还要将它的主对角线对称位置也移除，就这样一步步运行下去，但是到最后，还是判断不了添加完的的多个点是否是连通状态，结果就卡在这了。 迷之代码采用存储的方式12345678const int Max=1e4+2;typedef struct EdgeNode&#123; int to; int w;&#125;;vector&lt;EdgeNode&gt; s[Max];//存储方式vector&lt;bool&gt; f; 输入的方式123456789101112int n,m; cin &gt;&gt; n &gt;&gt; m;//n代表点数,m代表边数 for(int k=0;k&lt;m;k++)&#123; int i,j,w; cin &gt;&gt; i &gt;&gt; j &gt;&gt; w; EdgeNode e; e.to=j; e.w=w; s[i].push_back(e); e.to=i; s[j].push_back(e); &#125; 对邻接点按权值从小到大排序1234567bool cmp(EdgeNode x,EdgeNode y)&#123; return x.w&lt;y.w;&#125;for(int i=1;i&lt;=n;i++)&#123; sort(s[i].begin(),s[i].end(),cmp); &#125; 处理并入点过程123456789101112131415161718192021222324252627282930int v=0;vector&lt;int&gt; E;E.push_back(1);f[1]=true;while(v!=5)&#123; int key=0; for(int i=0;i&lt;E.size();i++)&#123; if(s[E[key]][0].w&gt;s[E[i]][0].w)&#123; key=i;//找到已并入的点的最近点 &#125; &#125; f[s[E[key]][0].to]=true;//声明此点已被使用 E.push_back(s[E[key]][0].to);//将该点并入 cout &lt;&lt;&quot;选：&quot;&lt;&lt; E[key] &lt;&lt; &#x27; &#x27; &lt;&lt; s[E[key]][0].to &lt;&lt; &#x27; &#x27; &lt;&lt; s[E[key]][0].w &lt;&lt; endl; int j=0; for(;j&lt;s[s[E[key]][0].to].size();j++)&#123; if(s[s[E[key]][0].to][j].to==E[key])&#123; break; &#125; &#125;//找到它关于主对角线的点 s[s[E[key]][0].to].erase(s[s[E[key]][0].to].begin()+j); s[E[key]].erase(s[E[key]].begin());//删除 v++;&#125; for(int i=1;i&lt;=n;i++)&#123; for(auto it=s[i].begin();it!=s[i].end();it++)&#123; EdgeNode e=*it; cout &lt;&lt; i &lt;&lt; &#x27; &#x27; &lt;&lt; e.to &lt;&lt; &#x27; &#x27; &lt;&lt; e.w &lt;&lt; endl; &#125;&#125; 记录下来，以后发现能解决了，再办它。 构建最小生成树prim算法建造最小生成树的时间复杂度是O(n^2),而Kruskal的时间复杂度是eloge，当边比较少时用Kruskal效率会很好，以后边多的时候，也用它凑合着用吧，因为它主要消耗的时间就是排序，排完序后一切都好说，还有就是并查集了。 例题假设有6个顶点，10条边，6个顶点分别用1，2，3，4，5，6表示，边的输入x y w起点、终点、权值，问其中一颗最小生成树的组合，并求它的权值。输入如下 12345678910116 101 2 61 3 11 4 52 3 52 5 35 3 65 6 66 3 46 4 24 3 5 代码如下123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include&lt;bits/stdc++.h&gt;using namespace std;const int Max=1e4+2;int f[Max];int e=0;//代表此刻边的数目int sum=0;//权值之和typedef struct EdgeNode&#123; int from; int to; int w;&#125;;vector&lt;EdgeNode&gt; s;void build(int n)&#123; for(int i=1;i&lt;=n;i++)&#123; f[i]=i; &#125;&#125;bool cmp(EdgeNode x,EdgeNode y)&#123; return x.w&lt;y.w;&#125;int Find(int w)&#123; return f[w]==w?w:f[w]=Find(f[w]);&#125;bool che(int from,int to)&#123; return Find(from)==Find(to);&#125;void mer(int from,int to,int p)&#123; if(!che(from,to))&#123; f[f[from]]=f[to]; sum+=s[p].w; cout &lt;&lt; &quot;边有:&quot; &lt;&lt; from &lt;&lt; &#x27; &#x27; &lt;&lt; to &lt;&lt; &#x27; &#x27; &lt;&lt; s[p].w &lt;&lt; endl; e++; &#125;&#125;int main()&#123; int n,m; cin &gt;&gt; n &gt;&gt; m; build(n); for(int k=0;k&lt;m;k++)&#123; int i,j,w; cin &gt;&gt; i &gt;&gt; j &gt;&gt; w; EdgeNode g; g.from=i; g.to=j; g.w=w; s.push_back(g); &#125; sort(s.begin(),s.end(),cmp); int p=0; while(e!=n-1)&#123; mer(s[p].from,s[p].to,p);//将边一个个送入去尝试 p++; &#125; cout &lt;&lt; &quot;最小权值为：&quot; &lt;&lt; sum; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>图论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图的几种存储方式]]></title>
    <url>%2F%2Fposts%2F201905201.html</url>
    <content type="text"><![CDATA[:::tip图在数据结构中比较重要，但是了解的却非常的少，所以现在就重新再学习一遍。图的存储结构用的最多的就是邻接矩阵了，因为简单，只需要开一个二维数组就可以了，但是边的数量非常的少时，空间就比较浪费了，所以为了提高效率，就必须做出改变，下面就来一一说说吧。::: 邻接矩阵邻接矩阵比较简单，也更加的直观，二维数组的下标就是代表一组坐标，例如a[x][y] (x,y)就是在这个矩阵中的一个坐标，当a[x][y]=1时代表这两个点之间有连线，当a[x][y]=0时代表这两个点之间没有连线，代码如下(默认以无向图为例) 12345678910111213141516171819202122#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; int n,m;//n代表有几个点,m代表有几条边 cin &gt;&gt; n &gt;&gt; m; int a[n+1][n+1];//不用数组0下标 fill(a[0],a[0]+(n+1)*(n+1),0);//将数组初始化为0 for(int i=0; i&lt;m; i++)&#123; int x,y; cin &gt;&gt; x &gt;&gt; y; a[x][y]=1; a[y][x]=1; &#125; for(int i=1; i&lt;=n; i++)&#123; for(int j=1; j&lt;=n; j++)&#123; cout &lt;&lt; a[i][j] &lt;&lt; &#x27; &#x27;; &#125; cout &lt;&lt; endl; &#125; return 0;&#125; 邻接表邻接表开始我也不是很理解，不知道如何用代码实现，看着那个图好像是那么回事，无法下手。做这个之前，需要先了解一下，构成邻接表需要哪些东西，一个顶点域，顶点的下标就是代表起始点，还有一部分数据域，里面的内容是从顶点到哪个顶点，还有权值，还有指向下一顶点的指针，代码如下(默认以有向图为例) 1234567891011121314151617181920212223242526272829303132333435#include&lt;bits/stdc++.h&gt;using namespace std;const int Max=1e4+3;typedef struct ENode&#123; int to;//终止点 int w;//权值 ENode *next;//指向下一终止点&#125;;typedef struct VNode&#123; int from;//开始点，实际上没用到 ENode *first;//指向终止点&#125;;VNode adjlist[Max];//初始化顶点int main()&#123; int n,m;//n代表有几个顶点,m代表有几条边 cin &gt;&gt; n &gt;&gt; m; for(int k=0;k&lt;m;k++)&#123; int i,j,w;//i代表起点,j代表终点,w代表权值 cin &gt;&gt; i &gt;&gt; j &gt;&gt; w; ENode *p=new ENode; p-&gt;to=j; p-&gt;w=w; p-&gt;next=adjlist[i].first; adjlist[i].first=p; &#125; for(int i=1;i&lt;=n;i++)&#123; for(ENode *k=adjlist[i].first;k!=NULL;k=k-&gt;next)&#123; printf(&quot;%d %d %d\n&quot;,i,k-&gt;to,k-&gt;w); &#125; &#125; return 0;&#125; vector版本邻接表如果上面的邻接表不好理解的话，这个vector版本绝对是适合大多数人的，比较好实现。实现原理是这样的，定义一个一维结构体容器，一维数组的下标代表起始点，结构体包括终止点和权值，这样对于同一起始点的就可以放在同一行了，实现起来很容易，代码如下(有向图) 1234567891011121314151617181920212223242526272829303132#include&lt;bits/stdc++.h&gt;using namespace std;const int Max=1e4+3;typedef struct ENode&#123; int to; int w;&#125;;vector&lt;ENode&gt; s[Max];int main()&#123; int n,m;//n代表起点,m代表终点 cin &gt;&gt; n &gt;&gt; m; for(int i=0;i&lt;n;i++)&#123; s[i].clear(); &#125; for(int k=0;k&lt;m;k++)&#123; int i,j,w; cin &gt;&gt; i &gt;&gt; j &gt;&gt; w; ENode e; e.to=j; e.w=w; s[i].push_back(e); &#125; for(int i=1;i&lt;=n;i++)&#123; for(auto it=s[i].begin();it!=s[i].end();it++)&#123; ENode k=*it; printf(&quot;%d %d %d\n&quot;,i,k.to,k.w); &#125; &#125; return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>图论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[并查集]]></title>
    <url>%2F%2Fposts%2F201905181.html</url>
    <content type="text"><![CDATA[最小生成树是数据结构中一个经典的问题，一次在刷题的过程中遇到了这类的问题，那时候遇到这类问题就很迷茫。建立最小生成树有两种方法，一种是以点建树，每次都选择最近的点，即prim算法；另一种是以边建树，每次都选择最短的边，即kruskal算法，prim算法可以不借助并查集就可建树，但是当我们用kruskal算法是就需要用到并查集了。 并查集的的作用并查集的作用是判断两个顶点之间是否是连通状态。 并查集的思想初始有N个各不相同的集合，输入其中的一些边，使其中的顶点相互连通，直至所有的顶点都相互连通，成为一个集合，若他们的权值之和最小，则说明这是一颗最小生成树。还是用通俗的语言来说吧。亲戚关系，现在有三个原本互相不认识的人聚到了一起，他们分别是A,B,C；随着三人之间的更加熟悉，A和B是亲戚关系（即A和B之间是连通的，他们合并到一个集合），B和C之间也是亲戚关系，所以A和C之间也是亲戚，所以A、B、C都是亲戚关系，即他们都是连通的（三者是同一个集合），这个时候我们怎么知道他们三个是亲戚关系？只需要从他们之中找出一个代表，A二大爷和B大表叔是同一个人X，这个时候两个人就以X为枢纽建立了亲戚关系，为了方便，每次把最后一个并入到集合中的人，当做枢纽X。 并查集的代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include&lt;iostream&gt;using namespace std;const int Max=1e5+2;//假设结点的最大数目不超过Maxint fa[Max];void build(int n)//初始化,n个人都在不同的集合&#123; for(int i=1;i&lt;=n;i++)&#123; fa[i]=i; &#125; return ;&#125;int Find(int m)//这个函数作用是寻找他们枢纽X,一定要用int&#123; return fa[m]==m?m:fa[m]=Find(fa[m]);&#125;bool che(int x,int y)//判断两个点是否属于同一个集合，即亲戚关系&#123; return Find(x)==Find(y);&#125;void mer(int x,int y)//如果不是亲戚关系就把他们合并到一起&#123; if(!che(x,y))&#123; fa[fa[x]]=fa[y]; &#125; return ;&#125;int main()&#123; int n; cin &gt;&gt; n; build(n); int p;//假设要输入p条边 cin &gt;&gt; p; while(p--)&#123; int x,y; cin &gt;&gt; x &gt;&gt; y; mer(x,y); &#125; int q;//检查两个点是否已经连通 cin &gt;&gt; q; while(q--)&#123; int x,y; cin &gt;&gt; x &gt;&gt; y; if(che(x,y))&#123; cout &lt;&lt; &quot;Yse&quot; &lt;&lt; endl; &#125; else&#123; cout &lt;&lt; &quot;No&quot; &lt;&lt; endl; &#125; &#125; return 0;&#125; 如果想要做最小生成树，只要将输入的边保存下来，然后排序，一个个输入，直到五个结点都在同一个集合中，对上面程序做简要的添加删除即可。]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>最小生成树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[贪心算法思想]]></title>
    <url>%2F%2Fposts%2F201905182.html</url>
    <content type="text"><![CDATA[:::tip贪心这个词在我们的生活中随处可见，贪心像是大自然万物特有的，而人将这发展到了极致。得到了想要的东西，还想要更好的东西，永无止境，所以又有一个词：知足常乐。只不过现在所有你想要的都摆在了你的面前，你要怎么选择呢？::: 什么是贪心算法贪心算法顾名思义，就是一个字“贪”，就像小时候吃饭一样，满桌子的菜，总是先吃你最爱吃的，然后爱吃的吃完了怎么办呢，在吃你第二爱吃的······直到肚子里吃饱。这个是一个生活中很有意思的一个场景。简单的说，贪心算法，对于一个特定的问题，选择一定的策略，按照这个策略一步步的执行下去，直到得到结果。这个策略一定是最优的，但是得到的结果却不一定是最优的，所以贪心算法有它的局限性。 贪心算法适用的范围适用范围我就用举例子的方式说吧，有一个小偷，背着一个背包去商店抢东西，每个物品都包括两部分，价值和重量，问这个这个小偷在背包不破的情况下最多可以拿几件物品。这个是背包问题的一个转化，以前让求最大的价值，现在让求最多可以装多少个物品。那么我现在就把所有的物品按照重量的顺序从小到大排序，每次都选择一个重量最轻的，然后判断这个物品的重量是否大于我背包剩余的容量，如果不大于，那么我就可以放进去，直到放不进去为止，很显然，这样下来我求的结果一定是最优的。还有就是买东西给钱的问题，首先就假设不管要给多少钱，我的钱数一定都是够的，要不然就会出现所有的钱数加起来也不够给的情况。现在去超时买东西，花了123块钱，现在你的身上有100、50、20、10、5、2、1这几种纸币，假设每种纸币个数都无限，现在你想要用最少的纸币数来给钱，那么该怎么给呢？肯定是每次从身上掏出一样小于所付钱数的最大面值，按照这样的策略，每次也会得到最优的结果，就算是纸币数有限也是可以的，因为我每次选择的都是最优的啊。 数据结构中的贪心算法数据结构中的最优前缀码、最小生成树和单源最短路径等问题都是贪心算法的典型应用 最优前缀码就是哈夫曼编码这个算法我也是在电脑上自己动手实现过，整段代码也是将近有两百行，实现了可以将一篇文章按照每个字符出现的频率编码，而且有了这个编码结果也可以实现解码的。为了方便我是以英文做的，貌似汉语弄得意义不大，英文总共就有26，加上一些标点符号也没有几个。下面就把大致框架放在下面吧 123456789101112131415161718192021222324252627282930313233typedef struct Node&#123; //保存每个节点的内容，存储 int weight; int parent; int lchild; int rchild; char car;&#125; Node;void selectMin(Node a[],int k,int &amp;s1,int &amp;s2)&#123; //每次都选择两个最小的&#125;void Huffmantree(Node huffmantree[],int n,int x[],int &amp;t)&#123; // 包括了这棵树的初始化，以及中间值的一些转化&#125;//哈夫曼编码的核心过程void HuffmanCode(Node huffmantree[],int t)&#123;&#125;//这个是解码的过程void dfs(Node huffmantree[],int m,int temp)&#123; //将所建立的哈弗慢树它的字符用01来表示,用递归寻找树的叶子节点&#125; void Code(int t)&#123;&#125;int main()&#123; int x[27]= &#123;0&#125;;//x的下标代表26个英文字母 int t=0;//t是代表有多少种不同的字符 Node *huffmantree=new Node[2*27-1]; Huffmantree(huffmantree,27,x,t);//哈夫曼建树过程 dfs(huffmantree,2*t-2,temp); //深度遍历算出他们的路径 Code(t);//编码 HuffmanCode(huffmantree,t); return 0;&#125;]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>贪心算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github搭建博客感想与遇到的坑]]></title>
    <url>%2F%2Fposts%2F201905161.html</url>
    <content type="text"><![CDATA[:::tip世上本没有路，走的人多了，也便成了路。世上还有很多美好的地方，从未踏足，当你选择，抬起右脚的时候，黑暗中，却不知前方是深坑还是平地，硬着头皮踩吧，大不了从头再来。::: 过程从上周六开始，就在弄这个东西，每天都会去实现一些东西，一路上，虽然走了很多的弯路，但是，现在我的心里还是很高兴的，一步步hexo框架，本地与github相连接，添加一些小功能，换主题，改背景，持续集成CI。。。。一幕幕，说起来都是泪啊，有时候，为了一个很小的问题，我都要去花费很长时间才能解决掉，掉进坑去，再爬起来，掉进坑去，再爬起来。所幸的是，也算是有了一个结果。 遇到的一些坑我是用hexo框架来做的 先就拿本地与github相连接来说吧好多教程上根目录配置文件都是这样的 12345deploy: type: git repository: git@github.com:xxx/xxx.github.io.git branch: master xxx代表用户名 是可以不需要密码就可以相互连接的，但是到我这，不行，起初我还不知道ssh有何用啊，就一直以为是ssh的问题，结果就是怎么着也不行，最后改成了这样的才行 12345deploy: type: git repository: https://github.com/xxx/xxx.github.io.git branch: master xxx代表用户名 结果一下子就成功了，唉，现在想想，当时是真的傻啊。 还有就是添加小功能了比方说，点击有小爱心了，按照教程完完整整的执行，hexo s一下，怀着兴奋的心情本地一打开，我点点点，啥也没有啊，再刷新一下，还是没有，最后好像不知道是文件放的位置有问题还是js文件已经失效了，最后又弄了好长时间才弄好 next主题动态背景问题平常我们见到的都是一动不动的背景，更多的是看网页中的一些内容，突然看见别人有个动态背景的博客，觉得好羡慕啊，自己也要弄一个，怀着这样的心情，就去做了，看了好多网上的都是老版的next主题，与现在的v7版本，有了一些改变，结果就是各种的出错，看了好多都是这样的 1canvas_nest: true 让把canvas_next后面添加一个true，结果添加上去就开始报错现在已经变成了这样 1234567canvas_nest: enable: true onmobile: true # display on mobile or not color: &quot;0,0,255&quot; # RGB values, use &#x27;,&#x27; to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 99 # the number of lines 需要把enable后面改成true，但仅仅如此就可以实现动态背景吗？试一下，结果是不行的，我们要这样做 12在_config.yml中有这么一段：# Dependencies: https://github.com/theme-next/theme-next-canvas-nest 说明要想实现，下要下载这个文件的，我们只需要执行以下命令即可 1git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest next提供了四种动态背景，其他三种的使用方法大致相同 源文件保存问题做完以上之后，我又想到了一个问题，我们的博客源文件不是一直在我们的电脑上，假如有一天，电脑不在身边或者坏了，那么我们该怎么办呢？对，我们要把代码备份起来，很多人的实现方式是在github上再添加一个分支，用于保存源代码。好，那我也去这么做吧，git branch hexo创建一个新分支hexo，git checkout hexo将指针指向hexo，git add .暂存所有文件，然后git commit -m &quot;说明此次更改原因&quot;将暂存区内容提交到本地版本库，最后git push origin hexo将所有文件提交到github上，好吧，传是传上去了，那么我拉下来还能不能用呢？首先要将hexo分支设置成主分支，git clone github的地址将github保存的源文件克隆下来，执行以下三条指令，npm install hexo,npm install,npm install hexo-deployer-git,这时候再在本地检查一下拉下来的源文件是否是否还是原来的样子，三条指令依次执行 heox clean,hexo g,hexo s,这时候本地服务器就已经搭建成功了，再打开一看，咦，我的动态背景消失了，这时候我就知道了，我掉坑去了，找了一天还是找我班一个大神解决的。 上传到github上next文件中是空的这个问题是next文件中隐藏了一个.git文件，只要删除就好了 动态效果没了这个问题是lib中也会隐藏一个.git文件，下面是路径：根目录名\themes\next\source\lib\canvas-nest，删除就好，不不，还有另外一个问题，很重要，在上面花了很长的时间，.gitignore这个文件里面配置的是，在上传过程中哪些文件需要忽略掉，哪些文件很重要，动态效果没了，就是由这两个问题产生的，这个文件的路径是：根目录名\themes\next，这个是next主题，所以就是next，将里面配置文件保存成如下 1234567.DS_Store.idea/*.log*.imlyarn.lockpackage-lock.jsonnode_modules/ 其实就是将下面的一大块都删除掉，这时候，我再上传代码到hexo分支时，发现我的动态文件就不会消失了 接下来在说说持续集成CI听到这个名字是不是感觉很高大上，事实上它所实现的，也很能方便我们日常使用博客。假如没有这个东西，我们每次写我们写完博客要怎么操作呢？假如现在是在master分支，好，我现在要使用三条指令将文章更新到github的master分支中，分别是hexo clean,hexo g,hexo d;接下来我还要更新我的hexo源代码分支，需要四条指令git checkout hexo,git add .,git commit -m &quot;更新&quot;,git push origin hexo,整整需要7条指令，那么我们用持续集成CI需要几条呢？3条就够了，git add .,git commit -m &quot;更新&quot;,git push origin hexo，让我们更新博客变得更加的简单了，有了更多的时间花费在如何写博客上，而不是去敲打命令，给大家提供一个网址，那上面讲的持续集成CI还不错， 1https://easyhexo.com/1-Hexo-install-and-config/1-5-continuous-integration.html#%E4%BB%80%E4%B9%88%E6%98%AF%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%EF%BC%9F 执行 hexo 时 -bash: hexo: command not found 出现这样的命令怎么办？这是环境变量所导致的。在你的博客根目录中找到如下类似目录并复制下来E:\github\srcrs.github.io\node_modules\hexo\bin打开控制面板\系统和安全\系统\高级系统设置\环境变量在xxx的用户变量下和系统变量下对path变量进行编辑，新建，将刚才复制的路径添加进去。然后再重新bash就可以解决了]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown语法介绍]]></title>
    <url>%2F%2Fposts%2F201905131.html</url>
    <content type="text"><![CDATA[:::tip博客是好不容易弄好了，但是又有一个问题来了，如何写文章放在上面呢，从百度上了解到，需要用到markdown编辑器，这里我就直接用vscode写的，它可以读写.md文档，下面就是markdown的一些语法介绍。::: 标题123456# 这个是一级标题## 这个是二级标题### 这个是三级标题#### 这个是四级标题##### 这个是五级标题###### 这个是六级标题 这个是一级标题这个是二级标题这个是三级标题这个是四级标题这个是五级标题这个是六级标题字体1234**字体加粗***斜体****斜体加粗***~~字体加删除线~~ 字体加粗斜体斜体加粗字体加删除线 引用123&gt;引用内容1&gt;&gt;&gt;引用内容2&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;引用3 引用内容1 引用内容2 引用3 分割线12345三个或三个以上的-或*组成-------******* 这个是效果 图片1![图片alt](图片地址 &quot;图片title&quot;) 超链接1[超链接名](超链接地址 &quot;超链接title&quot;) 超链接title可以添加也可以不添加例如百度 列表 无序表用- + *中的任何一种都可以 -列表内容 -和内容间要有一个空格 123- 列表内容1+ 列表内容2* 列表内容3 列表内容1 列表内容2 列表内容3 有序列表数字加上一个英文状态下的点就好了例：1.列表内容 注意：“1.”和“列表内容间要有空格” 1231. 列表内容12. 列表内容23. 列表内容3 列表内容1 列表内容2 列表内容3 列表嵌套 1234在父层的基础上，子层在开头添加两个空格无序有序都是适用的- 列表父 - 列表子 列表父 列表子 表格 两种方法 第一种 12345name | 价格 | 数量 -|-|-香蕉 | $1 | 5 |苹果 | $1 | 6 |草莓 | $1 | 7 | name 价格 数量 香蕉 $1 5 苹果 $1 6 草莓 $1 7 第二种 12345name | 价格 | 数量 -:|:-:| -:香蕉 | $1 | 5 |苹果 | $1 | 6 |草莓 | $1 | 7 | name 价格 数量 香蕉 $1 5 苹果 $1 6 草莓 $1 7 可以观察一下效果图，冒号在哪边内容就是在表格中的哪一边，当只有-默认是靠左的 代码单行代码用一个两个反引号包括起来 1`代码内容` 代码内容用一对3个反引号组成 12这是一段代码这是另一段代码]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Markdown语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Go从B站学起》第一讲:Go环境搭建]]></title>
    <url>%2Fposts%2F2019-05-01-go_learn%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;B站为了Go语言在中国的推广做出了不可磨灭的贡献。 &emsp;&emsp;但是，作为一名Go小白，怎样从零开始呢？ &emsp;&emsp;首先就是搭建Go语言环境。 &emsp;&emsp;Go官网：https://golang.google.cn &emsp;&emsp;这里教程以在Ubuntu上搭建Go环境为例： 下载Go压缩包&emsp;&emsp;点击https://golang.google.cn/dl/下载 go$VERSION.$OS-$ARCH.tar.gz &emsp;&emsp;当前最新版本为go1.12.4.linux-amd64 解压Go压缩包：tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz 配置环境变量：nano /etc/profile &emsp;&emsp;在/etc/profile的最后面加上 export PATH=$PATH:/usr/local/go/bin &emsp;&emsp;让配置文件生效： source /etc/profile 验证Go环境go version &emsp;&emsp;OK，安装完成。下一讲，你懂的，Hello World!!!(手动滑稽)]]></content>
      <categories>
        <category>Go</category>
      </categories>
      <tags>
        <tag>Go</tag>
        <tag>B站</tag>
        <tag>Bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM参数]]></title>
    <url>%2Fposts%2F2019-03-10-JVM-JVM%E5%8F%82%E6%95%B0%2F</url>
    <content type="text"><![CDATA[JVM 参数使用手册 内存分配相关Xms 英文释义：Initial heap size(in bytes) 中文释义：堆区初始值 使用方法：-Xms2g 或 -XX:InitialHeapSize=2048m Xmx 英文释义：Maximum heap size(in bytes) 中文释义：堆区最大值 使用方法：-Xmx2g 或 -XX:MaxHeapSize=2048m Xmn 英文释义：Maximum new generation size(in bytes) 中文释义：新生代最大值 使用方法：-Xmn512m 或 -XX:MaxNewSize=512m PermSize、MetaspaceSize 英文释义：Initial size of permanent generation(in bytes) 中文释义：永久代（元空间）初始值 使用方法：-XX:PermSize=128m（1.7 之前版本）、-XX:MetaspaceSize=128m（1.7 之后版本） MaxPermSize、MetaspaceSize 英文释义：Maximum size of permanent generation(in bytes) 中文释义：永久代（元空间）最大值 使用方法：-XX:MaxPermSize=256m（1.7之前版本）、-XX：MaxMetaspaceSize=256m（1.7之后版本） Xss 英文释义：Thread Stack Size(in Kbytes) 中文释义：线程栈最大值 使用方法：-Xss256k 或 -XX:ThreadStackSize=256k GC 策略相关SurvivorRatio 英文释义：Rato of eden/survivor space size 中文释义：Eden 区和 Survivor 的比值 使用方法：-XX:SurvivorRatio=6 使用经验：默认值为 8，假如设为 6，则表示每个 Survivor 区跟 Eden 区的比值为1:6，每个 Survivor 区占新生代的八分之一 PretenureSizeThreshold 英文释义：Maximum size in bytes of objects allocated in DefNew generation;zero means no maximum 中文释义：可以在新生代直接分配的对象最大值，0表示没有最大值 使用方法：-XX:PretenureSizeThreshold=1000000 使用经验：设置该参数，可以使大于这个值的对象直接在老年代分配，避免在 Eden 区和 Survivor 区发生大量的内存复制，该参数只对 Serial 和 ParNew 收集器有效，Parallel Scavenge并不认识该参数 MaxTenuringThreshold 英文释义：Maximum value fo tenuring threshold 中文释义：新生代最大年龄 使用方法：-XX:MaxTenuringThreshold=10 使用经验：每个对象在坚持过一次Minor GC之后，年龄就增加1，当超过这个参数值时就进入老年代，最大支持15 ParallelGCThreads 英文释义：Number of parallel threads parallel gc will use 中文释义：并行执行gc的线程数 使用方法：-XX:ParallelGCThreads=16 UseSerialGC 英文释义：Use the Serial garbage collector 中文释义：新生代使用 Serial 垃圾收集器 使用方法：开启 -XX:+UseSerialGC、关闭 -XX:-UseSerialGC 使用经验：虚拟机在运行在 Client 模式下的默认值，老年代将会使用 SerialOld 垃圾收集器 UseParNewGC 英文释义：Use parallel threads in the new generation 中文释义：新生代使用 ParNew 垃圾收集器 使用方法：开启 -XX:+UseParNewGC、关闭 -XX:-UseParNewGC 使用经验：老年代将使用 Serial Old 收集器 CMSParallelRemarkEnabled 英文释义：Whether parallel remark enabled (only if ParNewGC) 中文释义：是否启用并行标记（仅限于ParNewGC） 使用方法：开启 -XX:+CMSParallelRemarkEnabled、关闭 -XX:-CMSParallelRemarkEnabled UseParallelGC 英文释义：Use the Parallel Scavenge garbage collector 中文释义：新生代使用 Parallel Scavenge 垃圾收集器 使用方法：开启 -XX:+UseParallelGC、关闭 -XX:-UseParallelGC 使用经验：Linux下1.6,1.7,1.8 默认开启（1.9 后默认启用 G1 收集器），老年代将会使用 Serial Old 垃圾收集器 UseAdaptiveSizePolicy 英文释义：Use adaptive generation sizing policies 中文释义：自适应调节策略，动态调整 Java 堆中各个区域的大小以及进入老年代的年龄 使用方法：开启 -XX:+UseAdaptiveSizePolicy、关闭 -XX:-UseAdaptiveSizePolicy MaxTimeRatio 英文释义： 中文释义：GC 时间占总时间的比率，默认值为 99，即允许 1% 的 GC 时间。仅在 Parallel Scavenge 收集器时生效。 使用方法：-XX:MaxTimeRatio=99 MaxGCPauseMillis 英文释义：Adaptive size policy maximum GC pause time goal in millisecond, or (G1 Only) the maximum GC time per MMU time slice 中文释义：自适应策略的最大GC暂停时间目标（以毫秒为单位），或（仅G1）每个MMU时间片的最大GC时间 使用方法：-XX:MaxGCPauseMillis=200 UseParallelOldGC 英文释义：Use the Parallel Old garbage collector 中文释义：老年代使用 Parallel Old 收集器 使用方法：开启 -XX:+UseParallelOldGC、关闭 -XX:-UseParallelOldGC 使用经验：新生代将使用 Parallel Scavenge 收集器 UseConcMarkSweepGC 英文释义：Use Concurrent Mark-Sweep GC in the old generation 中文释义：老年代使用 CMS 收集器 使用方法：开启 -XX:+UseConcMarkSweepGC、关闭 -XX:-UseConcMarkSweepGC 使用经验：年轻代将会使用 ParNew 收集器，如果出现&quot;Concurrent Mode Failure&quot;，会使用 Serial Old 收集器 CMSInitiatingOccupancyFraction 英文释义：Percentage CMS generation occupancy to start a CMS collection cycle. A negative value means that CMSTriggerRatio is used 中文释义：触发执行 CMS 回收的老年代内存空间占用的百分比，负值表示使用 CMSTriggerRatio 设置的值 使用方法：-XX:+CMSInitiatingOccupancyFraction=75 UseCMSInitiatingOccupancyOnly 英文释义：Only use occupancy as a criterion for staring a CMS collection 中文释义：只根据占用情况作为开始执行CMS收集的标准 使用方法：开启 -XX:+UseCMSInitiatingOccupancyOnly、关闭 -XX:-UseCMSInitiatingOccupancyOnly UseCMSCompactAtFullCollection 英文释义：Use Mark-Sweep-Compact algorithm at full collections 中文释义：设置 CMS 收集器在完成垃圾收集后是否要进行一次碎片整理 使用方法：开启 -XX:+UseCMSCompactAtFullCollection、关闭 -XX:-UseCMSCompactAtFullCollection CMSFullGCsBeforeCompaction 英文释义：Number of CMS full collection done before compaction if &gt; 0 中文释义：设置 CMS 收集器在进行若干次垃圾收集后再启动一次内存碎片整理。 使用方法：-XX:CMSFullGCsBeforeCompaction=1 CMSClassUnloadingEnabled 英文释义：Whether class unloading enabled when using CMS GC 中文释义：当使用CMS GC时是否启用类卸载功能 使用方法：开启 -XX:+CMSClassUnloadingEnabled、关闭 -XX:-CMSClassUnloadingEnabled UseG1GC 英文释义：Use the Garbage-First garbage collector 中文释义：使用G1垃圾收集器 使用方法：开启 -XX:+UseG1GC、关闭 -XX:-UseG1GC 使用经验：JDK 1.9 后默认选择的垃圾收集器 DisableExplicitGC 英文释义：Ignore calls to System.gc() 中文释义：禁用 System.gc() 触发FullGC 使用方法：开启 -XX:+DisableExplicitGC、关闭 -XX:-DisableExplicitGC 使用经验：不建议开启，如果开启了这个参数可能会导致对外内存无法及时回收造成对外内存溢出 GC日志相关Xloggc 英文释义：GC log file 中文释义：GC日志文件路径 使用方法：-Xloggc:/data/gclog/gc.log UseGCLogFileRotation 英文释义：Rotate gclog files(for long running applications). It requires -Xloggc: 中文释义：滚动GC日志文件，须配置Xloggc 使用方法：开启 -XX:+UseGCLogFileRotation、关闭 -XX:-UseGCLogFileRotation NumberOfGCLogFiles 英文释义：Number of gclog files in rotation(default:0,no rotation) 中文释义：滚动 GC日志文件数，默认0，不滚动 使用方法：-XX:NumberOfGCLogFiles=4 GCLogFileSize 英文释义：GC log file size,requires UseGCLogFileRotation. Set to 0 to only trigger rotation via jcmd 中文释义：GC文件滚动大小，需配置UseGCLogFileRotation，设置为0表示仅通过jcmd命令触发 使用方法：-XX:GCLogFileSize=100k PrintGCDetails 英文释义：Print more details at garbage collection 中文释义：GC时打印更多详细信息 使用方法：开启 -XX:+PrintGCDetails、关闭 -XX:-PrintGCDetails 使用经验：可以通过jinfo -flag [+|-]PrintGCDetails 或 jinfo -flag PrintGCDetails= 来动态开启或设置值 PrintGCDateStamps 英文释义：Print date stamps at garbage collection 中文释义：GC时打印时间戳信息 使用方法：开启 -XX:+PrintGCDateStamps、关闭 -XX:-PrintGCDateStamps 使用经验：可以通过jinfo -flag [+|-] PrintGCDateStamps 或 jinfo -flag PrintGCDateStamps=来动态开启或设置值 PrintTenuringDistribution 英文释义：Print tenuring age information 中文释义：打印存活实例年龄信息 使用方法：开启 -XX:+PrintTenuringDistribution、关闭 -XX:-PrintTenuringDistribution PrintGCApplicationStoppedTime 英文释义：Print the time of application has been stopped 中文释义：打印应用暂停时间 使用方法：开启 -XX:+PrintGCApplicationStoppedTime、关闭 -XX:-PrintGCApplicationStoppedTime PrintHeapAtGC 英文释义：Print heap layout before and after each GC 中文释义：GC前后打印堆区使用信息 使用方法：开启 -XX:+PrintHeapAtGC、关闭 -XX:-PrintHeapAtGC 异常相关HeapDumpOnOutOfMemoryError 英文释义：Dump heap to file when java.lang.OutOfMemoryError is thrown 中文释义：抛出内存溢出错误时导出堆信息到指定文件 使用方法：开启 -XX:+HeapDumpOnOutOfMemoryError、关闭 -XX:-HeapDumpOnOutOfMemoryError 使用经验：可以通过 jinfo -flag [+|-]HeapDumpOnOutOfMemoryError 或 jinfo -flag HeapDumpOnOutOfMemoryError= 来动态开启或设置值 HeapDumpPath 英文释义：When HeapDumpOnOutOfMemoryError is on, the path(filename or directory) of the dump file(defaults to java_pid.hprof in the working directory) 中文释义：当 HeapDumpOnOutOfMemoryError 开启的时候，dump 文件的保存路径，默认为工作目录下的 java_pid.hprof 文件 使用方法：-XX:HeapDumpPath=/data/dump/jvm.dump 其他server 英文释义：server mode 中文释义：服务端模式 使用方法：-server TieredCompilation 英文释义：Enable tiered compilation 中文释义：启用多层编译 使用方法：开启 -XX:+TieredCompilation、关闭 -XX:-TieredCompilation]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-锁优化策略]]></title>
    <url>%2Fposts%2F2019-03-09-JVM-%E9%94%81%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 1 自旋锁背景：互斥同步对性能最大的影响是阻塞，挂起和恢复线程都需要转入内核态中完成；并且通常情况下，共享数据的锁定状态只持续很短的一段时间，为了这很短的一段时间进行上下文切换并不值得。 原理：当一条线程需要请求一把已经被占用的锁时，并不会进入阻塞状态，而是继续持有CPU执行权等待一段时间，该过程称为『自旋』。 优点：由于自旋等待锁的过程线程并不会引起上下文切换，因此比较高效； 缺点：自旋等待过程线程一直占用CPU执行权但不处理任何任务，因此若该过程过长，那就会造成CPU资源的浪费。 自适应自旋：自适应自旋可以根据以往自旋等待时间的经验，计算出一个较为合理的本次自旋等待时间。 2 锁清除编译器会清除一些使用了同步，但同步块中没有涉及共享数据的锁，从而减少多余的同步。 3 锁粗化若有一系列操作，反复地对同一把锁进行上锁和解锁操作，编译器会扩大这部分代码的同步块的边界，从而只使用一次上锁和解锁操作。 4 轻量级锁本质：使用CAS取代互斥同步。 背景：『轻量级锁』是相对于『重量级锁』而言的，而重量级锁就是传统的锁。 轻量级锁与重量级锁的比较： 重量级锁是一种悲观锁，它认为总是有多条线程要竞争锁，所以它每次处理共享数据时，不管当前系统中是否真的有线程在竞争锁，它都会使用互斥同步来保证线程的安全； 而轻量级锁是一种乐观锁，它认为锁存在竞争的概率比较小，所以它不使用互斥同步，而是使用CAS操作来获得锁，这样能减少互斥同步所使用的『互斥量』带来的性能开销。 实现原理： 对象头称为『Mark Word』，虚拟机为了节约对象的存储空间，对象处于不同的状态下，Mark Word中存储的信息也所有不同。 Mark Word中有个标志位用来表示当前对象所处的状态。 当线程请求锁时，若该锁对象的Mark Word中标志位为01（未锁定状态），则在该线程的栈帧中创建一块名为『锁记录』的空间，然后将锁对象的Mark Word拷贝至该空间；最后通过CAS操作将锁对象的Mark Word指向该锁记录； 若CAS操作成功，则轻量级锁的上锁过程成功； 若CAS操作失败，再判断当前线程是否已经持有了该轻量级锁；若已经持有，则直接进入同步块；若尚未持有，则表示该锁已经被其他线程占用，此时轻量级锁就要膨胀成重量级锁。 前提：轻量级锁比重量级锁性能更高的前提是，在轻量级锁被占用的整个同步周期内，不存在其他线程的竞争。若在该过程中一旦有其他线程竞争，那么就会膨胀成重量级锁，从而除了使用互斥量以外，还额外发生了CAS操作，因此更慢！ 5 偏向锁作用：偏向锁是为了消除无竞争情况下的同步原语，进一步提升程序性能。 与轻量级锁的区别：轻量级锁是在无竞争的情况下使用CAS操作来代替互斥量的使用，从而实现同步；而偏向锁是在无竞争的情况下完全取消同步。 与轻量级锁的相同点：它们都是乐观锁，都认为同步期间不会有其他线程竞争锁。 原理：当线程请求到锁对象后，将锁对象的状态标志位改为01，即偏向模式。然后使用CAS操作将线程的ID记录在锁对象的Mark Word中。以后该线程可以直接进入同步块，连CAS操作都不需要。但是，一旦有第二条线程需要竞争锁，那么偏向模式立即结束，进入轻量级锁的状态。 优点：偏向锁可以提高有同步但没有竞争的程序性能。但是如果锁对象时常被多条线程竞争，那偏向锁就是多余的。 偏向锁可以通过虚拟机的参数来控制它是否开启。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-类加载]]></title>
    <url>%2Fposts%2F2019-03-08-JVM-%E7%B1%BB%E5%8A%A0%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 1 类加载的时机1.1 类的生命周期 一个类从加载进内存到卸载出内存为止，一共经历7个阶段： 加载——&gt;验证——&gt;准备——&gt;解析——&gt;初始化——&gt;使用——&gt;卸载 其中，类加载包括5个阶段： 加载——&gt;验证——&gt;准备——&gt;解析——&gt;初始化 在类加载的过程中，以下3个过程称为连接： 验证——&gt;准备——&gt;解析 因此，JVM的类加载过程也可以概括为3个过程： 加载——&gt;连接——&gt;初始化 加载、验证、准备、初始化和卸载这 5 个阶段的顺序是确定的，类的加载过程必须按照这种顺序按部就班地开始（注意是“开始”，而不是“进行”或“完成”），而解析阶段则不一定：它在某些情况下可以在初始化后再开始，这是为了支持 Java 语言的运行时绑定。 C/C++在运行前需要完成预处理、编译、汇编、链接；而在Java中，类加载(加载、连接、初始化)是在程序运行期间完成的。 在程序运行期间进行类加载会稍微增加程序的开销，但随之会带来更大的好处——提高程序的灵活性。Java语言的灵活性体现在它可以在运行期间 动态扩展 ，所谓动态扩展就是在运行期间 动态加载 和 动态连接 。 1.2 类加载的时机1.2.1 类加载过程中每个步骤的顺序我们已经知道，类加载的过程包括：加载、连接、初始化，连接又分为：验证、准备、解析，所以说类加载一共分为5步：加载、验证、准备、解析、初始化。 其中加载、验证、准备、初始化的 开始 顺序是依次进行的，这些步骤开始之后的过程可能会有重叠。 而解析过程会发生在初始化过程中。 1.2.2 类加载过程中“初始化”开始的时机JVM规范中只定义了类加载过程中初始化过程开始的时机，加载、连接过程都应该在初始化之前开始(解析除外)，这些过程具体在何时开始，JVM规范并没有定义，不同的虚拟机可以根据具体的需求自定义。 初始化开始的时机： 在运行过程中遇到如下字节码指令时，如果类尚未初始化，那就要进行初始化：new、getstatic、putstatic、invokestatic。 这四个指令对应的Java代码场景是： 通过new创建对象； 读取、设置一个类的静态成员变量（不包括final修饰的静态变量）； 调用一个类的静态成员函数。 使用java.lang.reflect进行反射调用的时候，如果类没有初始化，那就需要初始化； 当初始化一个类的时候，若其父类尚未初始化，那就先要让其父类初始化，然后再初始化本类； 当虚拟机启动时，虚拟机会首先初始化带有main方法的类，即主类； Java 虚拟机规范没有强制约束类加载过程的第一阶段（即：加载）什么时候开始，但对于“初始化”阶段，有着严格的规定。有且仅有 5 种情况必须立即对类进行“初始化”： (1)在遇到 new、putstatic、getstatic、invokestatic 字节码指令时，如果类尚未初始化，则需要先触发其初始化。 (2)对类进行反射调用时，如果类还没有初始化，则需要先触发其初始化。 (3)初始化一个类时，如果其父类还没有初始化，则需要先初始化父类。 (4)虚拟机启动时，用于需要指定一个包含 main() 方法的主类，虚拟机会先初始化这个主类。 (5)当使用 JDK 1.7 的动态语言支持时，如果一个 java.lang.invoke.MethodHandle 实例最后的解析结果为 REF_getStatic、REF_putStatic、REF_invokeStatic 的方法句柄，并且这个方法句柄所对应的类还没初始化，则需要先触发其初始化。 这 5 种场景中的行为称为对一个类进行主动引用，除此之外，其它所有引用类的方式都不会触发初始化，称为被动引用。 1.2.3 主动引用 与 被动引用JVM规范中要求在程序运行过程中，“当且仅当”出现上述4个条件之一的情况才会初始化一个类。如果间接满足上述初始化条件是不会初始化类的。 其中，直接满足上述初始化条件的情况叫做 主动引用 ；间接满足上述初始化过程的情况叫做 被动引用 。 那么，只有当程序在运行过程中满足主动引用的时候才会初始化一个类，若满足被动引用就不会初始化一个类。 1.2.4 被动引用的场景示例Demo1 public class Fu&#123; public static String name = &quot;听风行&quot;; static&#123; System.out.println(&quot;父类被初始化！&quot;); &#125; &#125; public class Zi&#123; static&#123; System.out.println(&quot;子类被初始化！&quot;); &#125; &#125; public static void main(String[] args)&#123; System.out.println(Zi.name); &#125; &#125; 输出结果： 父类被初始化！ 听风行 原因分析： 本示例看似满足初始化时机的第一条：当要获取某一个类的静态成员变量的时候如果该类尚未初始化，则对该类进行初始化。 但由于这个静态成员变量属于Fu类，Zi类只是间接调用Fu类中的静态成员变量，因此Zi类调用name属性属于间接引用，而Fu类调用name属性属于直接引用，由于JVM只初始化直接引用的类，因此只有Fu类被初始化。 Demo2 public class A&#123; public static void main(String[] args)&#123; Fu[] arr = new Fu[10]; &#125; &#125; 输出结果： 并没有输出“父类被初始化！” 原因分析： 这个过程看似满足初始化时机的第一条：遇到new创建对象时若类没被初始化，则初始化该类。 但现在通过new要创建的是一个数组对象，而非Fu类对象，因此也属于间接引用，不会初始化Fu类。 Demo3 public class Fu&#123; public static final String name = &quot;听风行&quot;; static&#123; System.out.println(&quot;父类被初始化！&quot;); &#125; &#125; public class A&#123; public static void main(String[] args)&#123; System.out.println(Fu.name); &#125; &#125; &#125; 输出结果： 听风行 原因分析： 本示例看似满足类初始化时机的第一个条件：获取一个类静态成员变量的时候若类尚未初始化则初始化类。 但是，Fu类的静态成员变量被final修饰，它已经是一个常量。被final修饰的常量在Java代码编译的过程中就会被放入它被引用的class文件的常量池中（这里是A的常量池）。所以程序在运行期间如果需要调用这个常量，直接去当前类的常量池中取，而不需要初始化这个类。 Demo4 /** * 被动引用 Demo1: * 通过子类引用父类的静态字段，不会导致子类初始化。 */ class SuperClass &#123; static &#123; System.out.println(&quot;SuperClass init!&quot;); &#125; public static int value = 123; &#125; class SubClass extends SuperClass &#123; static &#123; System.out.println(&quot;SubClass init!&quot;); &#125; &#125; public class NotInitialization &#123; public static void main(String[] args) &#123; System.out.println(SubClass.value); // SuperClass init! &#125; &#125; 对于静态字段，只有直接定义这个字段的类才会被初始化，因此通过其子类来引用父类中定义的静态字段，只会触发父类的初始化而不会触发子类的初始化。 Demo5 /** * 被动引用 Demo2: * 通过数组定义来引用类，不会触发此类的初始化。 */ public class NotInitialization &#123; public static void main(String[] args) &#123; SuperClass[] superClasses = new SuperClass[10]; &#125; &#125; 这段代码不会触发父类的初始化，但会触发“[L 全类名”这个类的初始化，它由虚拟机自动生成，直接继承自 java.lang.Object，创建动作由字节码指令 newarray 触发。 Demo6 /** * 被动引用 Demo3: * 常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发定义常量的类的初始化。 */ class ConstClass &#123; static &#123; System.out.println(&quot;ConstClass init!&quot;); &#125; public static final String HELLO_BINGO = &quot;Hello Bingo&quot;; &#125; public class NotInitialization &#123; public static void main(String[] args) &#123; System.out.println(ConstClass.HELLO_BINGO); &#125; &#125; 编译通过之后，常量存储到 NotInitialization 类的常量池中，NotInitialization 的 Class 文件中并没有 ConstClass 类的符号引用入口，这两个类在编译成 Class 之后就没有任何联系了。 1.2.5 接口的初始化(接口的加载过程)接口和类都需要初始化，接口和类的初始化过程基本一样，不同点在于：类初始化时，如果发现父类尚未被初始化，则先要初始化父类，然后再初始化自己；但接口初始化时，并不要求父接口已经全部初始化，只有程序在运行过程中用到当父接口中的东西时才初始化父接口。 当一个类在初始化时，要求其父类全部都已经初始化过了，但是一个接口在初始化时，并不要求其父接口全部都完成了初始化，当真正用到父接口的时候才会初始化。 2 类加载的过程通过之前的介绍可知，类加载过程共有5个步骤，分别是：加载、验证、准备、解析、初始化。其中，验证、准备、解析称为连接。下面详细介绍这5个过程JVM所做的工作。 2.1 加载注意：“加载”是“类加载”过程的第一步，不能混淆这两个名词。 在加载过程中，JVM主要做3件事情： (1)通过一个类的全限定名来获取这个类的二进制字节流，即class文件： 在程序运行过程中，当要访问一个类时，若发现这个类尚未被加载，并满足类初始化时机的条件时，就根据要被初始化的这个类的全限定名找到该类的二进制字节流，开始加载过程。 (2)将二进制字节流的存储结构转化为特定的数据结构，存储在方法区中；[将二进制字节流所代表的静态结构转化为方法区的运行时数据结构] (3)在内存中创建一个代表该类的java.lang.Class类型的对象，作为方法区这个类的各种数据的访问入口。 接下来程序在运行过程中所有对该类的访问都通过这个类对象，也就是这个Class类型的类对象是提供给外界访问该类的接口。 (1)获取二进制字节流 JVM规范对于加载过程给予了较大的宽松度。一般二进制字节流都从已经编译好的本地class文件中读取，此外还可以从以下地方读取： a.从压缩包zip中读取，如：Jar、War、Ear等。 b.从网络中获取，从网络中获取二进制字节流。如：Applet。 c.通过动态代理计数生成代理类的二进制字节流 d.从其它文件中动态生成，如：从JSP文件中生成Class类。 e.从数据库中读取，将二进制字节流存储至数据库中，然后在加载时从数据库中读取。有些中间件会这么做，用来实现代码在集群间分发。如：有些中间件服务器可以选择把程序安装到数据库中来完成程序代码在集群间的分发。 (2)类 和 数组加载过程的区别？ 数组也有类型，称为“数组类型”。如： String[] str = new String[10]; 这个数组的数组类型是Ljava.lang.String，而String只是这个数组中元素的类型。 当程序在运行过程中遇到new关键字创建一个数组时，由JVM直接创建数组类，再由类加载器创建数组中的元素类。 而普通类的加载由类加载器完成。既可以使用系统提供的引导类加载器，也可以使用用户自定义的类加载器。 a.非数组类加载阶段可以使用系统提供的引导类加载器，也可以由用户自定义的类加载器完成，开发人员可以通过定义自己的类加载器控制字节流的获取方式（如重写一个类加载器的 loadClass() 方法） b.数组类本身不通过类加载器创建，它是由 Java 虚拟机直接创建的，再由类加载器创建数组中的元素类。 (3)加载过程的注意点 a.JVM规范并未给出类在方法区中存放的数据结构 类完成加载后，二进制字节流就以特定的数据结构存储在方法区中，但存储的数据结构是由虚拟机自己定义的，JVM规范并没有指定。 b.JVM规范并没有指定Class对象存放的位置 在二进制字节流以特定格式存储在方法区后，JVM会创建一个java.lang.Class类型的对象，作为本类的外部接口。既然是对象就应该存放在堆内存中，不过JVM规范并没有给出限制，不同的虚拟机根据自己的需求存放这个对象。HotSpot将Class对象存放在方法区。 c.加载阶段和连接阶段是交叉的 通过之前的介绍可知，类加载过程中每个步骤的开始顺序都有严格限制，但每个步骤的结束顺序没有限制。也就是说，类加载过程中，必须按照如下顺序开始： 加载、连接、初始化，但结束顺序无所谓，因此由于每个步骤处理时间的长短不一就会导致有些步骤会出现交叉。 虚拟机规范未规定 Class 对象的存储位置，对于 HotSpot 虚拟机而言，Class 对象比较特殊，它虽然是对象，但存放在方法区中。 加载阶段与连接阶段的部分内容交叉进行，加载阶段尚未完成，连接阶段可能已经开始了。但这两个阶段的开始实践仍然保持着固定的先后顺序。 2.2 验证验证阶段比较耗时，它非常重要但不一定必要，如果所运行的代码已经被反复使用和验证过，那么可以使用-Xverify:none参数关闭，以缩短类加载时间。 2.2.1 验证的目的验证是为了保证二进制字节流中的信息符合虚拟机规范，并没有安全问题。验证阶段确保 Class 文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。 为什么需要验证？ 虽然Java语言是一门安全的语言，它能确保程序猿无法访问数组边界以外的内存、避免让一个对象转换成任意类型、避免跳转到不存在的代码行，如果出现这些情况，编译无法通过。也就是说，Java语言的安全性是通过编译器来保证的。 但是我们知道，编译器和虚拟机是两个独立的东西，虚拟机只认二进制字节流，它不会管所获得的二进制字节流是哪来的，当然，如果是编译器给它的，那么就相对安全，但如果是从其它途径获得的，那么无法确保该二进制字节流是安全的。通过上文可知，虚拟机规范中没有限制二进制字节流的来源，那么任意来源的二进制字节流虚拟机都能接受，为了防止字节流中有安全问题，因此需要验证！ 2.2.2 验证的过程（1）文件格式验证 这个阶段主要验证输入的二进制字节流是否符合class文件结构的规范。二进制字节流只有通过了本阶段的验证，才会被允许存入到方法区中。 本验证阶段是基于二进制字节流的，而后面的三个验证阶段都是在方法区中进行，并基于类特定的数据结构的。 通过上文可知，加载开始前，二进制字节流还没进方法区，而加载完成后，二进制字节流已经存入方法区。而在文件格式验证前，二进制字节流尚未进入方法区，文件格式验证通过之后才进入方法区。也就是说，加载开始后，立即启动了文件格式验证，本阶段验证通过后，二进制字节流被转换成特定数据结构存储至方法区中，继而开始下阶段的验证和创建Class对象等操作。这个过程印证了：加载和验证是交叉进行的。 验证字节流是否符合 Class 文件格式的规范，并且能被当前版本的虚拟机处理，验证点如下： a.是否以魔数 0XCAFEBABE 开头 b.主次版本号是否在当前虚拟机处理范围内 c.常量池是否有不被支持的常量类型 d.指向常量的索引值是否指向了不存在的常量 e.CONSTANT_Utf8_info 型的常量是否有不符合 UTF8 编码的数据 f....... （2）元数据验证 本阶段对方法区中的字节码描述信息进行语义分析，确保其符合Java语法规范。 （3）字节码验证 本阶段是验证过程的最复杂的一个阶段。对方法体进行语义分析，保证方法在运行时不会出现危害虚拟机的事件。 （4）符号引用验证，本阶段验证发生在解析阶段，确保解析能正常执行。 2.3 准备准备阶段是正式为类变量（或称“静态成员变量”）分配内存并设置初始值的阶段。这些变量（不包括实例变量）所使用的内存都在方法区中进行分配。 准备阶段完成两件事情： (1)为已经在方法区中的类中的静态成员变量分配内存 类的静态成员变量也存储在方法区中。 (2)为静态成员变量设置初始值 初始值为0、false、null等。 示例1： public static String name = “听风行”; 在准备阶段，JVM会在方法区中为name分配内存空间，并赋上初始值null。 给name赋上”柴毛毛”是在初始化阶段完成的。 示例2: public static final String name = “听风行”; 被final修饰的常量如果有初始值，那么在编译阶段就会将初始值存入constantValue属性中，在准备阶段就将constantValue的值赋给该字段。 2.4 解析解析阶段是虚拟机将常量池中的符号引用替换为直接引用的过程。 2.5 初始化类初始化阶段是类加载过程的最后一步，是执行类构造器() 的过程。 () 方法由编译器自动产生，收集类中static{}代码块中的类变量赋值语句和类中静态成员变量的赋值语句。在准备阶段，类中静态成员变量已经完成了默认初始化，而在初始化阶段，clinit()方法对静态成员变量进行显示初始化。 () 方法是由编译器自动收集类中的所有类变量的赋值动作和静态语句块（static {} 块）中的语句合并产生的，编译器收集的顺序是由语句在源文件中出现的顺序所决定的。 初始化过程的注意点： clinit()方法中静态成员变量的赋值顺序是根据Java代码中成员变量的出现的顺序决定的。 静态代码块能访问出现在静态代码块之前的静态成员变量，无法访问出现在静态代码块之后的成员变量。 静态代码块能给出现在静态代码块之后的静态成员变量赋值。 构造函数init()需要显示调用父类构造函数，而类的构造函数clinit()不需要调用父类的类构造函数，因为虚拟机会确保子类的clinit()方法执行前已经执行了父类的clinit()方法。 如果一个类/接口中没有静态代码块，也没有静态成员变量的赋值操作，那么编译器就不会生成clinit()方法。 接口也需要通过clinit()方法为接口中定义的静态成员变量显示初始化。 接口中不能使用静态代码块。 接口在执行clinit()方法前，虚拟机不会确保其父接口的clinit()方法被执行，只有当父接口中的静态成员变量被使用到时才会执行父接口的clinit()方法。 虚拟机会给clinit()方法加锁，因此当多条线程同时执行某一个类的clinit()方法时，只有一个方法会被执行，其它的方法都被阻塞。并且，只要有一个clinit()方法执行完，其它的clinit()方法就不会再被执行。因此，在同一个类加载器下，同一个类只会被初始化一次。 静态语句块中只能访问定义在静态语句块之前的变量，定义在它之后的变量，在前面的静态语句块中可以赋值，但不能访问。如下方代码所示： public class Test { static { i = 0; // 给变量赋值可以正常编译通过 System.out.println(i); // 这句编译器会提示“非法向前引用” } static int i = 1; } () 方法不需要显式调用父类构造器，虚拟机会保证在子类的 () 方法执行之前，父类的 () 方法已经执行完毕。 由于父类的 () 方法先执行，意味着父类中定义的静态语句块要优先于子类的变量赋值操作。如下方代码所示： static class Parent &#123; public static int A = 1; static &#123; A = 2; &#125; &#125; static class Sub extends Parent &#123; public static int B = A; &#125; public static void main(String[] args) &#123; System.out.println(Sub.B); // 输出 2 &#125; () 方法不是必需的，如果一个类没有静态语句块，也没有对类变量的赋值操作，那么编译器可以不为这个类生成 () 方法。 接口中不能使用静态代码块，但接口也需要通过 () 方法为接口中定义的静态成员变量显式初始化。但接口与类不同，接口的 () 方法不需要先执行父类的 () 方法，只有当父接口中定义的变量使用时，父接口才会初始化。 虚拟机会保证一个类的 () 方法在多线程环境中被正确加锁、同步。如果多个线程同时去初始化一个类，那么只会有一个线程去执行这个类的 () 方法。 3 类加载器3.1 类与类加载器类加载器的作用：将class文件加载进JVM的方法区，并在方法区中创建一个java.lang.Class对象作为外界访问这个类的接口。 类与类加载器的关系：比较两个类是否相等，只有当这两个类由同一个加载器加载才有意义；否则，即使同一个class文件被不同的类加载器加载，那这两个类必定不同，即通过类的Class对象的equals执行的结果必为false。 任意一个类，都由加载它的类加载器和这个类本身一同确立其在 Java 虚拟机中的唯一性，每一个类加载器，都有一个独立的类名称空间。 因此，比较两个类是否“相等”，只有在这两个类是由同一个类加载器加载的前提下才有意义，否则，即使这两个类来源于同一个 Class 文件，被同一个虚拟机加载，只要加载它们的类加载器不同，那么这两个类就必定不相等。 这里的“相等”，包括代表类的 Class 对象的 equals() 方法、isInstance() 方法的返回结果，也包括使用 instanceof 关键字做对象所属关系判定等情况。 3.2 类加载器种类JVM提供如下三种类加载器： （1）启动类加载器（Bootstrap ClassLoader）: 负责加载Java_Home\lib中的class文件。 负责将存放在 &lt;JAVA_HOME&gt;\lib 目录中的，并且能被虚拟机识别的（仅按照文件名识别，如 rt.jar，名字不符合的类库即使放在 lib 目录中也不会被加载）类库加载到虚拟机内存中。 （2）扩展类加载器（Extension ClassLoader）: 负责加载Java_Home\lib\ext目录下的class文件。 负责加载 &lt;JAVA_HOME&gt;\lib\ext 目录中的所有类库，开发者可以直接使用扩展类加载器。 （3）应用程序类加载器（Application ClassLoader）: 负责加载用户classpath下的class文件。 由于这个类加载器是 ClassLoader 中的 getSystemClassLoader() 方法的返回值，所以一般也称它为“系统类加载器”。它负责加载用户类路径（classpath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。 当然，如果有必要，还可以加入自己定义的类加载器。 3.3 双亲委派模型3.3.1 双亲委派模型的定义双亲委派模型是描述类加载器之间的层次关系。它要求除了顶层的启动类加载器外，其余的类加载器都应当有自己的父类加载器。（父子关系一般不会以继承的关系实现，而是以组合关系来复用父加载器的代码） 3.3.2 工作过程如果一个类加载器收到了加载类的请求，它首先将请求交由父类加载器加载；若父类加载器加载失败，当前类加载器才会自己加载类。 如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把这个请求委派给父类加载器去完成，每一个层次的类加载器都是如此，因此所有的加载请求最终都应该传送到顶层的启动类加载器中，只有当父加载器反馈自己无法完成这个加载请求（找不到所需的类）时，子加载器才会尝试自己去加载。 在 java.lang.ClassLoader 中的 loadClass() 方法中实现该过程。 3.3.3 作用像java.lang.Object这些存放在rt.jar中的类，无论使用哪个类加载器加载，最终都会委派给最顶端的启动类加载器加载，从而使得不同加载器加载的Object类都是同一个。 相反，如果没有使用双亲委派模型，由各个类加载器自行去加载的话，如果用户自己编写了一个称为 java.lang.Object 的类，并放在 classpath 下，那么系统将会出现多个不同的 Object 类，Java 类型体系中最基础的行为也就无法保证。 3.3.4 原理双亲委派模型的代码在java.lang.ClassLoader类中的loadClass函数中实现，其逻辑如下： 首先检查类是否被加载； 若未加载，则调用父类加载器的loadClass方法； 若该方法抛出ClassNotFoundException异常，则表示父类加载器无法加载，则当前类加载器调用findClass加载类； 若父类加载器可以加载，则直接返回Class对象；]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-类文件结构]]></title>
    <url>%2Fposts%2F2019-03-07-JVM-%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 1 JVM的“无关性”Java具有平台无关性，也就是任何操作系统都能运行Java代码。之所以能实现这一点，是因为Java运行在虚拟机之上，不同的操作系统都拥有各自的Java虚拟机，因此Java能实现“一次编写，处处运行”。 而JVM不仅具有平台无关性，还具有语言无关性。 平台无关性是指不同操作系统都有各自的JVM，而语言无关性是指Java虚拟机能运行除Java以外的代码！ (1)平台无关性：任何操作系统都能运行 Java 代码 (2)语言无关性： JVM 能运行除 Java 以外的其他代码 这听起来非常惊人，但JVM对能运行的语言是有严格要求的。首先来了解下Java代码的运行过程。 Java源代码首先需要使用Javac编译器编译成.class文件，然后启动JVM执行.class文件，从而程序开始运行。 也就是JVM只认识.class文件，它并不管何种语言生成了.class文件，只要.class文件符合JVM的规范就能运行。 因此目前已经有Scala、JRuby、Jython等语言能够在JVM上运行。它们有各自的语法规则，不过它们的编译器都能将各自的源码编译成符合JVM规范的class文件，从而能够借助JVM运行它们。 Java 语言中的各种变量、关键字和运算符号的语义最终都是由多条字节码命令组合而成的， 因此字节码命令所能提供的语义描述能力肯定会比 Java 语言本身更加强大。 因此，有一些 Java 语言本身无法有效支持的语言特性，不代表字节码本身无法有效支持。 2 Class文件结构class文件是二进制文件，它的内容具有严格的规范，文件中没有任何空格，全是连续的0/1。class文件中的所有内容被分为两种类型：无符号数 和 表。 (1)无符号数：它表示Class文件中的值，这些值没有任何类型，但有不同的长度。根据这些值长度的不同分为：u1、u2、u4、u8，分别代表1字节的无符号数、2字节的无符号数、4字节的无符号数、8字节的无符号数。 (2)表：由多个无符号数或者其他表作为数据项构成的符合数据类型。class文件中所有数据（即无符号数）要么单独存在，要么由多个无符号数组成二维表。即class文件中的数据要么是单个值，要么是二维表。 2.1 class文件的组织结构魔数 本文件的版本信息 常量池 访问标志 类索引、父类索引、接口索引集合 字段表集合 方法表集合 属性表集合 2.1.1 Class文件的构成1：魔数class文件的头4个字节称为魔数，用来表示这个class文件的类型。 魔数的作用就相当于文件后缀名，只不过后缀名容易被修改，不安全，因此在class文件中标示文件类型比较合适。 class文件的魔数是用16进制表示的“CAFEBABE”，非常具有浪漫主义色彩！ 2.1.2 Class文件的构成2：版本信息紧接着魔数的4个字节是版本号。5-6 字节表示次版本号，7-8 字节表示主版本号，它表示当前class文件中使用的是哪个版本的JDK。 在高版本的JVM上能够运行低版本的class文件，但在低版本的JVM上无法运行高版本的class文件，即使该class文件中没有用到任何高版本JDK的特性也无法运行，虚拟机也必需拒绝执行超过其版本号的 Class 文件。 2.1.3 Class文件的构成3：常量池2.1.3.1 常量池的定义紧接着版本号之后的就是常量池。常量池中存放两种类型的常量： （1）字面值常量 字面值常量即我们在程序中定义的字符串、被final修饰的值。 （2）符号引用 符号引用就是我们定义的各种名字：类和接口的全限定名、字段的名字和描述符、方法的名字和描述符 2.1.3.2 常量池的特点（1）常量池长度不固定 常量池的大小是不固定的，因此常量池开头放置一个u2类型的无符号数，用来存储当前常量池的容量。JVM根据这个值就知道常量池的头尾来。 注： 这个值是从1开始的，若为5表示池中有4个常量。 （2）常量池中的常量由表来表示 常量池的每一项常量都是一个表，表开始的第一位是一个 u1 类型的标志位（tag），代表当前这个常量属于哪种常量类型。 常量池开头有个常量池容量计数器，接下来就全是一个个常量了，只不过常量都是由一张张二维表构成，除了记录常量的值以外，还记录当前常量的相关信息。 常量池是class文件的资源仓库 常量池是与本class中其它部分关联最多的部分 常量池是class文件中空间占用最大的部分之一 2.1.3.3 常量池中常量的类型刚才介绍了，常量池中的常量大体上分为：字面值常量 和 符号引用。在此基础上，根据常量的数据类型不同，又可以被细分为14种常量类型。这14种常量类型都有各自的二维表示结构。每种常量类型的头1个字节都是tag，用于表示当前常量属于14种类型中的哪一个。 类型 tag 描述 CONSTANT_utf8_info 1 UTF-8编码的字符串 CONSTANT_Integer_info 3 整型字面量 CONSTANT_Float_info 4 浮点型字面量 CONSTANT_Long_info 5 长整型字面量 CONSTANT_Double_info 6 双精度浮点型字面量 CONSTANT_Class_info 7 类或接口的符号引用 CONSTANT_String_info 8 字符串类型字面量 CONSTANT_Fieldref_info 9 字段的符号引用 CONSTANT_Methodref_info 10 类中方法的符号引用 CONSTANT_InterfaceMethodref_info 11 接口中方法的符号引用 CONSTANT_NameAndType_info 12 字段或方法的符号引用 CONSTANT_MethodHandle_info 15 表示方法句柄 CONSTANT_MethodType_info 16 标识方法类型 CONSTANT_InvokeDynamic_info 18 表示一个动态方法调用点 以CONSTANT_Class_info常量（此类型的常量代表一个类或者接口的符号引用）为例，它的二维表示结构如下： 类型 名称 数量 u1 tag 1 u2 name_index 1 tag是标志位，用于区分常量类型，表示当前常量的类型(当前常量为CONSTANT_Class_info，因此tag的值应为7，表示一个类或接口的全限定名)； name_index 是一个索引值，它指向常量池中一个 CONSTANT_Utf8_info 类型常量，此常量代表这个类（或接口）的全限定名，这里 name_index 值若为 0x0002，也即是指向了常量池中的第二项常量。表示这个类或接口全限定名的位置。它的值表示指向常量池的第几个常量。它会指向一个CONSTANT_Utf8_info类型的常量，CONSTANT_Utf8_info的二维表结构如下： 类型 名称 数量 u1 tag 1 u2 length 1 u1 bytes length CONSTANT_Utf8_info表示字符串常量； tag表示当前常量的类型，这里应该是1；length表示这个字符串的长度；bytes为这个字符串的内容（采用缩略的UTF8编码） 问：为什么Java中定义的类、变量名字必须小于64K？ 类、接口、变量等名字都属于符号引用，它们都存储在常量池中。而不管哪种符号引用，它们的名字都由CONSTANT_Utf8_info类型的常量表示，这种类型的常量使用u2存储字符串的长度。由于2字节最多能表示65535个数，因此这些名字的最大长度最多只能是64K。 问：什么是UTF-8编码？什么是缩略UTF-8编码？ 前者每个字符使用3个字节表示，而后者把128个ASKII码用1字节表示，某些字符用2字节表示，某些字符用3字节表示。 2.1.4 Class文件的构成4：访问标志在常量池之后是2字节的访问标志。访问标志是用来表示这个class文件是类还是接口、是否被public修饰、是否被abstract修饰、是否被final修饰等。 由于这些标志都由是/否表示，因此可以用0/1表示。 访问标志为2字节，可以表示16位标志，但JVM目前只定义了8种，未定义的直接写0. 2.1.5 Class文件的构成5：类索引、父类索引、接口索引集合类索引、父类索引、接口索引集合是用来表示当前class文件所表示类的名字、父类名字、接口们的名字。 它们按照顺序依次排列，类索引和父类索引各自使用一个u2类型的无符号常量，这个常量指向CONSTANT_Class_info类型的常量，该常量的bytes字段记录了本类、父类的全限定名。 由于一个类的接口可能有好多个，因此需要用一个集合来表示接口索引，它在类索引和父类索引之后。这个集合头两个字节表示接口索引集合的长度，接下来就是接口的名字索引。 类索引和父类索引都是一个 u2 类型的数据，而接口索引集合是一组 u2 类型的数据的集合，Class 文件中由这三项数据来确定类的继承关系。类索引用于确定这个类的全限定名，父类索引用于确定这个类的父类的全限定名。 由于 Java 不允许多重继承，所以父类索引只有一个，除了 java.lang.Object 之外，所有的 Java 类都有父类，因此除了 java.lang.Object 外，所有 Java 类的父类索引都不为 0。一个类可能实现了多个接口，因此用接口索引集合来描述。这个集合第一项为 u2 类型的数据，表示索引表的容量，接下来就是接口的名字索引。 类索引和父类索引用两个 u2 类型的索引值表示，它们各自指向一个类型为 CONSTANT_Class_info 的类描述符常量，通过该常量总的索引值可以找到定义在 CONSTANT_Utf8_info 类型的常量中的全限定名字符串。 2.1.6 Class文件的构成6：字段表的集合2.1.6.1 什么是字段表集合？字段表集合用于存储本类所涉及到的成员变量，包括实例变量和类变量，但不包括方法中的局部变量。 每一个字段表只表示一个成员变量，本类中所有的成员变量构成了字段表集合。 2.1.6.2 字段表结构的定义 类型 名称 数量 说明 u2 access_flags 1 字段的访问标志，与类稍有不同 u2 name_index 1 字段名字的索引 u2 descriptor_index 1 描述符，用于描述字段的数据类型。 基本数据类型用大写字母表示； 对象类型用“L 对象类型的全限定名”表示。 u2 attributes_count 1 属性表集合的长度 u2 attributes attributes_count 属性表集合，用于存放属性的额外信息，如属性的值。 access_flags：字段的访问标志。在Java中，每个成员变量都有一系列的修饰符，和上述class文件的访问标志的作用一样，只不过成员变量的访问标志与类的访问标志稍有区别。 name_index：本字段名字的索引。指向一个CONSTANT_Class_info类型的常量，这里面存储了本字段的名字等信息。 descriptor_index：描述符。用于描述本字段在Java中的数据类型等信息（下面详细介绍）。 attributes_count：属性表集合的长度。 attributes：属性表集合。到descriptor_index为止是字段表的固定信息，光有上述信息可能无法完整地描述一个字段，因此用属性表集合来存放额外的信息，比如一个字段的值（下面会详细介绍）。 2.1.6.3 什么是描述符？成员变量（包括静态成员变量和实例变量）和 方法都有各自的描述符。 对于字段而言，描述符用于描述字段的数据类型； 对于方法而言，描述符用于描述字段的数据类型、参数列表、返回值。 在描述符中，基本数据类型用大写字母表示，对象类型用“L对象类型的全限定名”表示，数组用“[数组类型的全限定名”表示。 描述方法时，将参数根据上述规则放在()中，()右侧按照上述方法放置返回值。而且，参数之间无需任何符号。 2.1.6.4 字段表集合的注意点字段表集合中不会出现从父类（或接口）中继承而来的字段，但有可能出现原本 Java 代码中不存在的字段，譬如在内部类中为了保持对外部类的访问性，会自动添加指向外部类实例的字段。 一个class文件的字段表集合中不能出现从父类/接口继承而来的字段； 一个class文件的字段表集合中可能会出现程序没有定义的字段 如编译器会自动地在内部类的class文件的字段表集合中添加外部类对象的成员变量，供内部类访问外部类。 Java中只要两个字段名字相同就无法通过编译。但在JVM规范中，允许两个字段的名字相同但描述符不同的情况，并且认为它们是两个不同的字段。 2.1.7 Class文件的构成7：方法表的集合在class文件中，所有的方法以二维表的形式存储，每张表来表示一个函数，一个类中的所有方法构成方法表的集合。 方法表的结构和字段表的结构一致，只不过访问标志和属性表集合的可选项有所不同。 volatile 关键字 和 transient 关键字不能修饰方法，所以方法表的访问标志中没有 ACC_VOLATILE 和 ACC_TRANSIENT 标志。 方法表的属性表集合中有一张Code属性表，用于存储当前方法经编译器编译过后的字节码指令。 方法表集合的注意点 如果本class没有重写父类的方法，那么本class文件的方法表集合中是不会出现父类/父接口的方法表； 本class的方法表集合可能出现程序猿没有定义的方法 编译器在编译时会在class文件的方法表集合中加入类构造器和实例构造器。 重载一个方法需要有相同的简单名称和不同的特征签名。JVM的特征签名和Java的特征签名有所不同： Java特征签名：方法参数在常量池中的字段符号引用的集合 JVM特征签名：方法参数＋返回值 2.1.8 Class文件的构成8：属性表的集合每个属性对应一张属性表，属性表的结构如下： 类型 名称 数量 u2 attribute_name_index 1 u4 attribute_length 1 u1 info attribute_length]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-JVM性能调优]]></title>
    <url>%2Fposts%2F2019-03-06-JVM-JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 在高性能硬件上部署程序，目前主要有两种方式： (1)通过 64 位 JDK 来使用大内存；(2)使用若干个 32 位虚拟机建立逻辑集群来利用硬件资源。 1 使用 64 位 JDK 管理大内存堆内存变大后，虽然垃圾收集的频率减少了，但每次垃圾回收的时间变长。 如果堆内存为14 G，那么每次 Full GC 将长达数十秒。如果 Full GC 频繁发生，那么对于一个网站来说是无法忍受的。 对于用户交互性强、对停顿时间敏感的系统，可以给 Java 虚拟机分配超大堆的前提是有把握把应用程序的 Full GC 频率控制得足够低，至少要低到不会影响用户使用。 可能面临的问题： (1)内存回收导致的长时间停顿； (2)现阶段，64位 JDK 的性能普遍比 32 位 JDK 低； (3)需要保证程序足够稳定，因为这种应用要是产生堆溢出几乎就无法产生堆转储快照（因为要产生超过 10GB 的 Dump 文件），哪怕产生了快照也几乎无法进行分析； (4)相同程序在 64 位 JDK 消耗的内存一般比 32 位 JDK 大，这是由于指针膨胀，以及数据类型对齐补白等因素导致的。 2 使用 32 位 JVM 建立逻辑集群在一台物理机器上启动多个应用服务器进程，每个服务器进程分配不同端口， 然后在前端搭建一个负载均衡器，以反向代理的方式来分配访问请求。 考虑到在一台物理机器上建立逻辑集群的目的仅仅是为了尽可能利用硬件资源，并不需要关心状态保留、热转移之类的高可用性能需求， 也不需要保证每个虚拟机进程有绝对的均衡负载，因此使用无 Session 复制的亲合式集群是一个不错的选择。 我们仅仅需要保障集群具备亲合性，也就是均衡器按一定的规则算法（一般根据 SessionID 分配） 将一个固定的用户请求永远分配到固定的一个集群节点进行处理即可。 可能遇到的问题： (1)尽量避免节点竞争全局资源，如磁盘竞争，各个节点如果同时访问某个磁盘文件的话，很可能导致 IO 异常； (2)很难高效利用资源池，如连接池，一般都是在节点建立自己独立的连接池，这样有可能导致一些节点池满了而另外一些节点仍有较多空余； (3)各个节点受到 32 位的内存限制； (4)大量使用本地缓存的应用，在逻辑集群中会造成较大的内存浪费，因为每个逻辑节点都有一份缓存，这时候可以考虑把本地缓存改成集中式缓存。 3 调优案例分析与实战3.1 场景描述一个小型系统，使用 32 位 JDK，4G 内存，测试期间发现服务端不定时抛出内存溢出异常。 加入 -XX:+HeapDumpOnOutOfMemoryError（添加这个参数后，堆内存溢出时就会输出异常日志）， 但再次发生内存溢出时，没有生成相关异常日志。 3.2 分析在 32 位 JDK 上，1.6G 分配给堆，还有一部分分配给 JVM 的其他内存，直接内存最大也只能在剩余的 0.4G 空间中分出一部分， 如果使用了 NIO，JVM 会在 JVM 内存之外分配内存空间，那么就要小心“直接内存”不足时发生内存溢出异常了。 3.3 直接内存的回收过程直接内存虽然不是 JVM 内存空间，但它的垃圾回收也由 JVM 负责。 垃圾收集进行时，虚拟机虽然会对直接内存进行回收， 但是直接内存却不能像新生代、老年代那样，发现空间不足了就通知收集器进行垃圾回收， 它只能等老年代满了后 Full GC，然后“顺便”帮它清理掉内存的废弃对象。 否则只能一直等到抛出内存溢出异常时，先 catch 掉，再在 catch 块里大喊 “System.gc()”。 要是虚拟机还是不听，那就只能眼睁睁看着堆中还有许多空闲内存，自己却不得不抛出内存溢出异常了。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-内存分配与回收策略]]></title>
    <url>%2Fposts%2F2019-03-05-JVM-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E4%B8%8E%E5%9B%9E%E6%94%B6%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 Java所承诺的自动内存管理主要是针对对象内存的回收和对象内存的分配。 对象的内存分配，就是在堆上分配（也可能经过 JIT 编译后被拆散为标量类型并间接在栈上分配），对象主要分配在新生代的 Eden 区上，少数情况下可能直接分配在老年代，分配规则不固定，取决于当前使用的垃圾收集器组合以及相关的参数配置。 在Java虚拟机的五块内存空间中，程序计数器、Java虚拟机栈、本地方法栈内存的分配和回收都具有确定性，一半都在编译阶段就能确定下来需要分配的内存大小，并且由于都是线程私有，因此它们的内存空间都随着线程的创建而创建，线程的结束而回收。也就是这三个区域的内存分配和回收都具有确定性。 而Java虚拟机中的方法区因为是用来存储类信息、常量 静态变量，这些数据的变动性较小，因此不是Java内存管理重点需要关注的区域。 而对于堆，所有线程共享，所有的对象都需要在堆中创建和回收。虽然每个对象的大小在类加载的时候就能确定，但对象的数量只有在程序运行期间才能确定，因此堆中内存的分配具有较大的不确定性。此外，对象的生命周期长短不一，因此需要针对不同生命周期的对象采用不同的内存回收算法，增加了内存回收的复杂性。 综上所述：Java自动内存管理最核心的功能是堆内存中对象的分配与回收。 1 对象优先在 Eden 区中分配目前主流的垃圾收集器都会采用分代回收算法，因此需要将堆内存分为新生代和老年代。 在新生代中为了防止内存碎片问题，因此垃圾收集器一般都选用“复制”算法。因此，堆内存的新生代被进一步分为：Eden区＋Survior1区＋Survior2区。 每次创建对象时，首先会在Eden区中分配。 若Eden区已满，则在Survior1区中分配。 若Eden区＋Survior1区剩余内存太少，导致对象无法放入该区域时，就会启用“分配担保”，将当前Eden区＋Survior1区中的对象转移到老年代中，然后再将新对象存入Eden区。 大多数情况下，对象在新生代 Eden 区中分配。当 Eden 区没有足够空间进行分配时，虚拟机将发起一次 Minor GC。 Minor GC vs Major GC/Full GC： Minor GC：回收新生代（包括 Eden 和 Survivor 区域），因为 Java 对象大多都具备朝生夕灭的特性，所以 Minor GC 非常频繁，一般回收速度也比较快。 Major GC / Full GC: 回收老年代，出现了 Major GC，经常会伴随至少一次的 Minor GC，但这并非绝对。Major GC 的速度一般会比 Minor GC 慢 10 倍 以上。 在 JVM 规范中，Major GC 和 Full GC 都没有一个正式的定义，所以有人也简单地认为 Major GC 清理老年代，而 Full GC 清理整个内存堆。 2 大对象直接进入老年代所谓“大对象”就是指一个占用大量连续存储空间的对象，如数组。 大对象是指需要大量连续内存空间的 Java 对象，如很长的字符串或数据。 当发现一个大对象在Eden区＋Survior1区中存不下的时候就需要分配担保机制把当前Eden区＋Survior1区的所有对象都复制到老年代中去。 我们知道，一个大对象能够存入Eden区＋Survior1区的概率比较小，发生分配担保的概率比较大，而分配担保需要涉及到大量的复制，就会造成效率低下。 因此，对于大对象我们直接把他放到老年代中去，从而就能避免大量的复制操作。 那么，什么样的对象才是“大对象”呢？ 通过-XX:PretrnureSizeThreshold参数设置大对象 该参数用于设置大小超过该参数的对象被认为是“大对象”，直接进入老年代。 注意： 该参数只对Serial和ParNew收集器有效。 一个大对象能够存入 Eden 区的概率比较小，发生分配担保的概率比较大，而分配担保需要涉及大量的复制，就会造成效率低下。 虚拟机提供了一个 -XX:PretenureSizeThreshold 参数，令大于这个设置值的对象直接在老年代分配，这样做的目的是避免在 Eden 区及两个 Survivor 区之间发生大量的内存复制。（还记得吗，新生代采用复制算法回收垃圾） 3 生命周期较长的对象进入老年代(长期存活的对象将进入老年代)JVM 给每个对象定义了一个对象年龄计数器。当新生代发生一次 Minor GC 后，存活下来的对象年龄 +1，当年龄超过一定值时，就将超过该值的所有对象转移到老年代中去。使用 -XXMaxTenuringThreshold 设置新生代的最大年龄，只要超过该参数的新生代对象都会被转移到老年代中去。 老年代用于存储生命周期较长的对象，那么我们如何判断一个对象的年龄呢？ 新生代中的每个对象都有一个年龄计数器，当新生代发生一次MinorGC后，存活下来的对象的年龄就加一，当年龄超过一定值时，就将超过该值的所有对象转移到老年代中去。 使用-XXMaxTenuringThreshold设置新生代的最大年龄 设置该参数后，只要超过该参数的新生代对象都会被转移到老年代中去。 4 相同年龄的对象内存超过Survior内存一半的对象进入老年代(动态对象年龄判定)如果当前新生代的Survior中，年龄相同的对象的内存空间总和超过了Survior内存空间的一半，那么所有年龄相同的对象和超过该年龄的对象都被转移到老年代中去。无需等到对象的年龄超过MaxTenuringThreshold才被转移到老年代中去。 5 “分配担保”策略详解(空间分配担保)JDK 6 Update 24 之前的规则是这样的： 在发生 Minor GC 之前，虚拟机会先检查老年代最大可用的连续空间是否大于新生代所有对象总空间， 如果这个条件成立，Minor GC 可以确保是安全的； 如果不成立，则虚拟机会查看 HandlePromotionFailure 值是否设置为允许担保失败， 如果是，那么会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小， 如果大于，将尝试进行一次 Minor GC,尽管这次 Minor GC 是有风险的； 如果小于，或者 HandlePromotionFailure 设置不允许冒险，那此时也要改为进行一次 Full GC。 JDK 6 Update 24 之后的规则变为： 只要老年代的连续空间大于新生代对象总大小或者历次晋升的平均大小，就会进行 Minor GC，否则将进行 Full GC。 通过清除老年代中废弃数据来扩大老年代空闲空间，以便给新生代作担保。 当垃圾收集器准备要在新生代发起一次MinorGC时，首先会检查“老年代中最大的连续空闲区域的大小 是否大于 新生代中所有对象的大小？”，也就是老年代中目前能够将新生代中所有对象全部装下？ 若老年代能够装下新生代中所有的对象，那么此时进行MinorGC没有任何风险，然后就进行MinorGC。 若老年代无法装下新生代中所有的对象，那么此时进行MinorGC是有风险的，垃圾收集器会进行一次预测：根据以往MinorGC过后存活对象的平均数来预测这次MinorGC后存活对象的平均数。 如果以往存活对象的平均数小于当前老年代最大的连续空闲空间，那么就进行MinorGC，虽然此次MinorGC是有风险的。 如果以往存活对象的平均数大于当前老年代最大的连续空闲空间，那么就对老年代进行一次Full GC，通过清除老年代中废弃数据来扩大老年代空闲空间，以便给新生代作担保。 这个过程就是分配担保。 注意： 分配担保是老年代为新生代作担保； 新生代中使用“复制”算法实现垃圾回收，老年代中使用“标记-清除”或“标记-整理”算法实现垃圾回收，只有使用“复制”算法的区域才需要分配担保，因此新生代需要分配担保，而老年代不需要分配担保。 总结一下有哪些情况可能会触发 JVM 进行 Full GC： (1)System.gc() 方法的调用 此方法的调用是建议 JVM 进行 Full GC，注意这只是建议而非一定，但在很多情况下它会触发 Full GC，从而增加 Full GC 的频率。通常情况下我们只需要让虚拟机自己去管理内存即可，我们可以通过 -XX:+ DisableExplicitGC 来禁止调用 System.gc()。 (2)老年代空间不足 老年代空间不足会触发 Full GC操作，若进行该操作后空间依然不足，则会抛出错误： java.lang.OutOfMemoryError: Java heap space (3)永久代空间不足 JVM 规范中运行时数据区域中的方法区，在 HotSpot 虚拟机中也称为永久代（Permanet Generation），存放一些类信息、常量、静态变量等数据，当系统要加载的类、反射的类和调用的方法较多时，永久代可能会被占满，会触发 Full GC。如果经过 Full GC 仍然回收不了，那么 JVM 会抛出错误信息：java.lang.OutOfMemoryError: PermGen space (4)CMS GC 时出现 promotion failed 和 concurrent mode failure promotion failed，就是上文所说的担保失败，而 concurrent mode failure 是在执行 CMS GC 的过程中同时有对象要放入老年代，而此时老年代空间不足造成的。 (5)统计得到的 Minor GC 晋升到旧生代的平均大小大于老年代的剩余空间]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-HotSpot垃圾收集器]]></title>
    <url>%2Fposts%2F2019-03-04-JVM-HotSpot%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 HotSpot 虚拟机提供了多种垃圾收集器，每种收集器都有各自的特点，虽然我们要对各个收集器进行比较，但并非为了挑选出一个最好的收集器。我们选择的只是对具体应用最合适的收集器。 1 新生代垃圾收集器(1)Serial 垃圾收集器（单线程） 只开启一条 GC 线程进行垃圾回收，并且在垃圾收集过程中停止一切用户线程(Stop The World)。一般客户端应用所需内存较小，不会创建太多对象，而且堆内存不大，因此垃圾收集器回收时间短，即使在这段时间停止一切用户线程，也不会感觉明显卡顿。因此 Serial 垃圾收集器适合客户端使用。由于 Serial 收集器只使用一条 GC 线程，避免了线程切换的开销，从而简单高效。 (2)ParNew 垃圾收集器（多线程） ParNew 是 Serial 的多线程版本。由多条 GC 线程并行地进行垃圾清理。但清理过程依然需要 Stop The World。ParNew 追求“低停顿时间”,与 Serial 唯一区别就是使用了多线程进行垃圾收集，在多 CPU 环境下性能比 Serial 会有一定程度的提升；但线程切换需要额外的开销，因此在单 CPU 环境中表现不如 Serial。 (3)Parallel Scavenge 垃圾收集器（多线程） Parallel Scavenge 和 ParNew 一样，都是多线程、新生代垃圾收集器。但是两者有巨大的不同点： Parallel Scavenge：追求 CPU 吞吐量，能够在较短时间内完成指定任务，因此适合没有交互的后台计算。 ParNew：追求降低用户停顿时间，适合交互式应用。 吞吐量 = 运行用户代码时间 / (运行用户代码时间 + 垃圾收集时间) 追求高吞吐量，可以通过减少 GC 执行实际工作的时间，然而，仅仅偶尔运行 GC 意味着每当 GC 运行时将有许多工作要做，因为在此期间积累在堆中的对象数量很高。单个 GC 需要花更多的时间来完成，从而导致更高的暂停时间。而考虑到低暂停时间，最好频繁运行 GC 以便更快速完成，反过来又导致吞吐量下降。 通过参数 -XX:GCTimeRadio 设置垃圾回收时间占总 CPU 时间的百分比。 通过参数 -XX:MaxGCPauseMillis 设置垃圾处理过程最久停顿时间。 通过命令 -XX:+UseAdaptiveSizePolicy 开启自适应策略。我们只要设置好堆的大小和 MaxGCPauseMillis 或 GCTimeRadio，收集器会自动调整新生代的大小、Eden 和 Survivor 的比例、对象进入老年代的年龄，以最大程度上接近我们设置的 MaxGCPauseMillis 或 GCTimeRadio。 2 老年代垃圾收集器(1)Serial Old 垃圾收集器（单线程） Serial Old 收集器是 Serial 的老年代版本，都是单线程收集器，只启用一条 GC 线程，都适合客户端应用。它们唯一的区别就是：Serial Old 工作在老年代，使用“标记-整理”算法；Serial 工作在新生代，使用“复制”算法。 (2)Parallel Old 垃圾收集器（多线程） Parallel Old 收集器是 Parallel Scavenge 的老年代版本，追求 CPU 吞吐量。 (3)CMS 垃圾收集器 CMS(Concurrent Mark Sweep，并发标记清除)收集器是以获取最短回收停顿时间为目标的收集器（追求低停顿），它在垃圾收集时使得用户线程和 GC 线程并发执行，因此在垃圾收集过程中用户也不会感到明显的卡顿。 初始标记：Stop The World，仅使用一条初始标记线程对所有与 GC Roots 直接关联的对象进行标记。 并发标记：使用多条标记线程，与用户线程并发执行。此过程进行可达性分析，标记出所有废弃对象。速度很慢。 重新标记：Stop The World，使用多条标记线程并发执行，将刚才并发标记过程中新出现的废弃对象标记出来。 并发清除：只使用一条 GC 线程，与用户线程并发执行，清除刚才标记的对象。这个过程非常耗时。 并发标记与并发清除过程耗时最长，且可以与用户线程一起工作，因此，总体上说，CMS 收集器的内存回收过程是与用户线程一起并发执行的。 CMS 的缺点：a.吞吐量低b.无法处理浮动垃圾，导致频繁 Full GCc,使用“标记-清除”算法产生碎片空间 对于产生碎片空间的问题，可以通过开启 -XX:+UseCMSCompactAtFullCollection，在每次 Full GC 完成后都会进行一次内存压缩整理，将零散在各处的对象整理到一块。设置参数 -XX:CMSFullGCsBeforeCompaction告诉 CMS，经过了 N 次 Full GC 之后再进行一次内存整理。 3 G1 通用垃圾收集器G1 是一款面向服务端应用的垃圾收集器，它没有新生代和老年代的概念，而是将堆划分为一块块独立的 Region。当要进行垃圾收集时，首先估计每个 Region 中垃圾的数量，每次都从垃圾回收价值最大的 Region 开始回收，因此可以获得最大的回收效率。 从整体上看， G1 是基于“标记-整理”算法实现的收集器，从局部（两个 Region 之间）上看是基于“复制”算法实现的，这意味着运行期间不会产生内存空间碎片。 这里抛个问题👇：一个对象和它内部所引用的对象可能不在同一个 Region 中，那么当垃圾回收时，是否需要扫描整个堆内存才能完整地进行一次可达性分析？ 并不！每个 Region 都有一个 Remembered Set，用于记录本区域中所有对象引用的对象所在的区域，进行可达性分析时，只要在 GC Roots 中再加上 Remembered Set 即可防止对整个堆内存进行遍历。 如果不计算维护 Remembered Set 的操作，G1 收集器的工作过程分为以下几个步骤： 初始标记：Stop The World，仅使用一条初始标记线程对所有与 GC Roots 直接关联的对象进行标记。 并发标记：使用一条标记线程与用户线程并发执行。此过程进行可达性分析，速度很慢。 最终标记：Stop The World，使用多条标记线程并发执行。 筛选回收：回收废弃对象，此时也要 Stop The World，并使用多条筛选回收线程并发执行。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-垃圾收集策略与算法]]></title>
    <url>%2Fposts%2F2019-03-03-JVM-%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AD%96%E7%95%A5%E4%B8%8E%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 Java虚拟机的内存模型分为五个部分，分别是：程序计数器、Java虚拟机栈、本地方法栈、堆、方法区。 这五个区域既然是存储空间，那么为了避免Java虚拟机在运行期间内存存满的情况，就必须得有一个垃圾收集者的角色，不定期地回收一些无效内存，以保障Java虚拟机能够健康地持续运行。 这个垃圾收集者就是平常我们所说的“垃圾收集器”，那么垃圾收集器在何时清扫内存？清扫哪些数据？这就是接下来我们要解决的问题。 程序计数器、Java虚拟机栈、本地方法栈都是线程私有的，也就是每条线程都拥有这三块区域，而且会随着线程的创建而创建，随着线程的结束而销毁。那么，垃圾收集器在何时清扫这三块区域的问题就解决了。 此外，Java虚拟机栈、本地方法栈中的栈帧会随着方法的开始而入栈，方法的结束而出栈，并且每个栈帧中的本地变量表都是在类被加载的时候就确定的。因此以上三个区域的垃圾收集工作具有确定性，在这几个区域内不需要过多考虑回收的问题，因为方法结束或者线程结束时，内存自然就跟随着回收了。垃圾收集器能够清楚地知道何时清扫这三块区域中的哪些数据。 然而，堆和方法区中的内存清理工作就没那么容易了。只有在程序运行期间才能知道会创建哪些对象，这部分内存的分配和回收都是动态的，垃圾收集器所关注的正是这部分内存。 堆和方法区所有线程共享，并且都在JVM启动时创建，一直得运行到JVM停止时。因此它们没办法根据线程的创建而创建、线程的结束而释放。 堆中存放JVM运行期间的所有对象，虽然每个对象的内存大小在加载该对象所属类的时候就确定了，但究竟创建多少个对象只有在程序运行期间才能确定。 方法区中存放类信息、静态成员变量、常量。类的加载是在程序运行过程中，当需要创建这个类的对象时才会加载这个类。因此，JVM究竟要加载多少个类也需要在程序运行期间确定。 因此，堆和方法区的内存回收具有不确定性，因此垃圾收集器在回收堆和方法区内存的时候花了一些心思。 1 堆内存的回收1.1 如何判定哪些对象需要回收？在对堆进行对象回收之前，首先要判断哪些是无效对象。我们知道，一个对象不被任何对象或变量引用，那么就是无效对象，需要被回收。一般有两种判别方式： (1)引用计数法 每个对象都有一个计数器，当这个对象被一个变量或另一个对象引用一次，该计数器加一；若该引用失效则计数器减一。当计数器为0时，就认为该对象是无效对象。 在对象头维护着一个 counter 计数器，对象被引用一次则计数器 +1；若引用失效则计数器 -1。当计数器为 0 时，就认为该对象无效了。 引用计数算法的实现简单，判定效率也很高，在大部分情况下它都是一个不错的算法。但是主流的 Java 虚拟机里没有选用引用计数算法来管理内存，主要是因为它很难解决对象之间循环引用的问题。 例如：对象 objA 和 objB 都有字段 instance，令 objA.instance = objB 并且 objB.instance = objA，由于它们互相引用着对方，导致它们的引用计数都不为 0，于是引用计数算法无法通知 GC 收集器回收它们。 (2)可达性分析法 所有和GC Roots直接或间接关联的对象都是有效对象，和GC Roots没有关联的对象就是无效对象。 GC Roots是指： Java虚拟机栈所引用的对象(栈帧中局部变量表中引用类型的变量所引用的对象) 方法区中静态属性引用的对象 方法区中常量所引用的对象 本地方法栈所引用的对象 GC Roots 并不包括堆中对象所引用的对象，这样就不会有循环引用的问题。 两者对比： 引用计数法虽然简单，但存在一个严重的问题，它无法解决循环引用的问题。 因此，目前主流语言均使用可达性分析方法来判断对象是否有效。 1.2 回收无效对象的过程对于可达性分析中不可达的对象，也并不是没有存活的可能。 当JVM筛选出失效的对象之后，并不是立即清除，而是再给对象一次重生的机会，具体过程如下： （1）判断该对象是否覆盖了finalize()方法 JVM 会判断此对象是否有必要执行 finalize() 方法，如果对象没有覆盖 finalize() 方法，或者 finalize() 方法已经被虚拟机调用过，那么视为“没有必要执行”。那么对象基本上就真的被回收了。 如果对象被判定为有必要执行 finalize() 方法，那么对象会被放入一个 F-Queue 队列中，虚拟机会以较低的优先级执行这些 finalize()方法，但不会确保所有的 finalize() 方法都会执行结束。如果 finalize() 方法出现耗时操作，虚拟机就直接停止指向该方法，将对象清除。 若已覆盖该方法，并该对象的finalize()方法还没有被执行过，那么就会将finalize()扔到F-Queue队列中； 若未覆盖该方法，则直接释放对象内存。 （2）执行F-Queue队列中的finalize()方法 虚拟机会以较低的优先级执行这些finalize()方法们，也不会确保所有的finalize()方法都会执行结束。如果finalize()方法中出现耗时操作，虚拟机就直接停止执行，将该对象清除。 （3）对象重生或死亡 如果在执行finalize()方法时，将this赋给了某一个引用，那么该对象就重生了。如果没有，那么就会被垃圾收集器清除。 注意： 强烈不建议使用finalize()函数进行任何操作！如果需要释放资源，请使用try-finally。因为finalize()不确定性大，开销大，无法保证顺利执行。 任何一个对象的 finalize() 方法只会被系统自动调用一次，如果对象面临下一次回收，它的 finalize() 方法不会被再次执行，想继续在 finalize() 中自救就失效了。 2 Java中引用的种类判定对象是否存活与“引用”有关。在 JDK 1.2 以前，Java 中的引用定义很传统，一个对象只有被引用或者没有被引用两种状态，我们希望能描述这一类对象：当内存空间还足够时，则保留在内存中；如果内存空间在进行垃圾手收集后还是非常紧张，则可以抛弃这些对象。很多系统的缓存功能都符合这样的应用场景。 在 JDK 1.2 之后，Java 对引用的概念进行了扩充，将引用分为了以下四种。不同的引用类型，主要体现的是对象不同的可达性状态reachable和垃圾收集的影响。 Java中根据生命周期的长短，将引用分为4类。 2.1 强引用（Strong Reference）类似 “Object obj = new Object()” 这类的引用，就是强引用，只要强引用存在，垃圾收集器永远不会回收被引用的对象。但是，如果我们错误地保持了强引用，比如：赋值给了 static 变量，那么对象在很长一段时间内不会被回收，会产生内存泄漏。 我们平时所使用的引用就是强引用。 A a = new A(); 也就是通过关键字new创建的对象所关联的引用就是强引用。 只要强引用存在，该对象永远也不会被回收。 2.2 软引用（Soft Reference）软引用是一种相对强引用弱化一些的引用，可以让对象豁免一些垃圾收集，只有当 JVM 认为内存不足时，才会去试图回收软引用指向的对象。JVM 会确保在抛出 OutOfMemoryError 之前，清理软引用指向的对象。软引用通常用来实现内存敏感的缓存，如果还有空闲内存，就可以暂时保留缓存，当内存不足时清理掉，这样就保证了使用缓存的同时，不会耗尽内存。 只有当堆即将发生OOM异常时，JVM才会回收软引用所指向的对象。 软引用通过SoftReference类实现。 软引用的生命周期比强引用短一些。 2.3 弱引用（Weak Reference）弱引用的强度比软引用更弱一些。当 JVM 进行垃圾回收时，无论内存是否充足，都会回收只被弱引用关联的对象。 只要垃圾收集器运行，软引用所指向的对象就会被回收。 弱引用通过WeakReference类实现。 弱引用的生命周期比软引用短。 2.4 虚引用（Phantom Reference）虚引用也叫幽灵引用或者幻影引用，它和没有引用没有区别，无法通过虚引用访问对象的任何属性或函数。 一个对象关联虚引用唯一的作用就是在该对象被垃圾收集器回收之前会受到一条系统通知。 虚引用通过PhantomReference类来实现。 它是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响。它仅仅是提供了一种确保对象被 finalize 以后，做某些事情的机制，比如，通常用来做所谓的 Post-Mortem 清理机制。 3 方法区的内存回收如果使用复制算法实现堆的内存回收，堆就会被分为新生代和老年代，新生代中的对象“朝生夕死”，每次垃圾回收都会清除掉大量的对象；而老年代中的对象生命较长，每次垃圾回收只有少量的对象被清除掉。 由于方法区中存放生命周期较长的类信息、常量、静态变量，因此方法区就像是堆的老年代，每次垃圾收集的只有少量的垃圾被清除掉。 方法区中主要清除两种垃圾： 废弃常量 废弃的类 3.1 如何判定废弃常量？清除废弃的常量和清除对象类似，只要常量池中的常量不被任何变量或对象引用，那么这些常量就会被清除掉。比如，一个字符串 “blog” 进入了常量池，但是当前系统没有任何一个 String 对象引用常量池中的 “blog” 常量，也没有其它地方引用这个字面量，必要的话，”blog”常量会被清理出常量池。 3.2 如何废弃废弃的类？清除废弃类的条件较为苛刻： (1)该类的所有对象都已被清除 (2)该类的java.lang.Class对象没有被任何对象或变量引用,无法在任何地方通过反射访问该类的方法 只要一个类被虚拟机加载进方法区，那么在堆中就会有一个代表该类的对象：java.lang.Class。这个对象在类被加载进方法区的时候创建，在方法区中该类被删除时清除。 (3)加载该类的ClassLoader已经被回收 4 垃圾收集算法知道了判定一个对象是无效对象、判定一个类是废弃类、判定一个常量是废弃常量的方法，也就是知道了垃圾收集器会清除哪些数据，那么接下来介绍如何清除这些数据。 4.1 标记-清除算法首先利用刚才介绍的方法判断需要清除哪些数据，并给它们做上标记；然后清除被标记的数据。 标记的过程：遍历所有的 GC Roots，然后将所有 GC Roots 可达的对象标记为存活的对象。 清除的过程：将遍历堆中所有的对象，将没有标记的对象全部清除掉。与此同时，清除那些被标记过的对象的标记，以便下次的垃圾回收。 分析不足： 这种算法标记和清除过程效率都很低，而且清除完后存在大量碎片空间，导致无法存储大对象，降低了空间利用率。 （1）效率问题：标记和清除两个过程的效率都不高。 （2）空间问题：标记清除之后会产生大量不连续的内存碎片，碎片太多可能导致以后需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。 4.2 复制算法（新生代）为了解决效率问题，“复制”收集算法出现了。它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块内存用完，需要进行垃圾收集时，就将存活者的对象复制到另一块上面，然后将第一块内存全部清除。 将内存分成两份，只将数据存储在其中一块上。当需要回收垃圾时，也是首先标记出废弃的数据，然后将有用的数据复制到另一块内存上，最后将第一块内存全部清除。 分析： 这种算法避免了碎片空间，但内存被缩小了一半。而且每次都需要将有用的数据全部复制到另一片内存上去，效率不高。 优点：不会有内存碎片的问题。 缺点：内存缩小为原来的一半，浪费空间。 解决空间利用率问题： 在新生代中，由于大量的对象都是“朝生夕死”，也就是一次垃圾收集后只有少量对象存活，因此我们可以将内存划分成三块：Eden、From Survivor（Survior1）、To Survivor（Survior2），内存大小分别是8:1:1。分配内存时，只使用Eden和一块Survior1。当发现Eden+Survior1的内存即将满时，JVM会发起一次MinorGC，清除掉废弃的对象，并将所有存活下来的对象复制到另一块Survior2中。那么，接下来就使用Survior2+Eden进行内存分配。 回收时，将 Eden 和 Survivor 中还存活的对象一次性复制到另外一块 Survivor 空间上，最后清理掉 Eden 和刚才使用的 Survivor 空间。这样只有 10% 的内存被浪费。 通过这种方式，只需要浪费10%的内存空间即可实现带有压缩功能的垃圾收集方法，避免了内存碎片的问题。 但是，当一个对象要申请内存空间时，发现Eden+Survior中剩下的空间无法放置该对象，此时需要进行Minor GC，如果MinorGC过后空闲出来的内存空间仍然无法放置该对象，那么此时就需要将对象转移到老年代中，这种方式叫做“分配担保”。无法保证每次回收都只有不多于 10% 的对象存活，当 Survivor 空间不够，需要依赖其他内存（指老年代）进行分配担保。 什么是分配担保？ 当JVM准备为一个对象分配内存空间时，发现此时Eden+Survior中空闲的区域无法装下该对象，那么就会触发MinorGC，对该区域的废弃对象进行回收。但如果MinorGC过后只有少量对象被回收（依然有超过 10% 的对象存活），仍然无法装下新对象，那么此时需要将Eden+Survior中的所有对象都转移到老年代中，然后再将新对象存入Eden区。这个过程就是“分配担保”。 4.3 标记-整理算法（老年代）在回收垃圾前，首先将所有废弃的对象做上标记，然后将所有未被标记的对象移到一边，最后清空另一边区域即可。 标记：它的第一个阶段与标记/清除算法是一模一样的，均是遍历 GC Roots，然后将存活的对象标记。 整理：移动所有存活的对象，且按照内存地址次序依次排列，然后将末端内存地址以后的内存全部回收。因此，第二阶段才称为整理阶段。 分析： 它是一种老年代的垃圾收集算法。老年代中的对象一般寿命比较长，因此每次垃圾回收会有大量对象存活，因此如果选用“复制”算法，每次需要复制大量存活的对象，会导致效率很低。而且，在新生代中使用“复制”算法，当Eden+Survior中都装不下某个对象时，可以使用老年代的内存进行“分配担保”，而如果在老年代使用该算法，那么在老年代中如果出现Eden+Survior装不下某个对象时，没有其他区域给他作分配担保。因此，老年代中一般使用“标记-整理”算法。 4.4 分代收集算法将内存划分为老年代和新生代。老年代中存放寿命较长的对象，新生代中存放“朝生夕死”的对象。然后在不同的区域使用不同的垃圾收集算法。 根据对象存活周期的不同，将内存划分为几块。一般是把 Java 堆分为新生代和老年代，针对各个年代的特点采用最适当的收集算法。 新生代：复制算法老年代：标记-清除算法、标记-整理算法]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-HotSpot虚拟机对象探秘]]></title>
    <url>%2Fposts%2F2019-03-02-JVM-HotSpot%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%B9%E8%B1%A1%E6%8E%A2%E7%A7%98%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 1 对象的内存模型一个对象从逻辑角度看，它由成员变量和成员函数构成，从物理角度来看，对象是存储在堆中的一串二进制数，这串二进制数的组织结构如下: 在 HotSpot 虚拟机中，对象的内存布局分为以下 3 块区域： （1）对象头（Header） （2）实例数据（Instance Data） （3）对齐填充（Padding） 1.1 对象头对象头中记录了对象在运行过程中所需要使用的一些数据： (1)哈希码 (2)GC分代年龄 (3)锁状态标志 (4)线程持有的锁 (5)偏向线程ID (6)偏向时间戳 此外，对象头中可能还包含类型指针。通过该指针能确定这个对象所属哪个类。 此外，如果对象是一个数组，那么对象头中还要包含数组长度。 1.2 实例数据实例数据部分就是成员变量的值，其中包含父类的成员变量和本类的成员变量。 1.3 对齐填充用于确保对象的总长度为8字节的整数倍。 HotSpot要求对象的总长度必须是8字节的整数倍。由于对象头一定是8字节的整数倍，但实例数据部分的长度是任意的，因此需要对齐补充字段确保整个对象的总长度为8的整数倍。 对齐填充并不是必然存在，也没有特别的含义，它仅仅起着占位符的作用。 2 对象的创建过程当虚拟机遇到一条含有new的指令时，会进行一系列对象创建的操作： （1）检查常量池中是否有即将要创建的这个对象所属的类的符号引用； 若常量池中没有这个类的符号引用，说明这个类还没有被定义！抛出ClassNotFoundException； 若常量池中有这个类的符号引用，则进行下一步工作； （2）进而检查这个符号引用所代表的类是否已经被JVM加载、解析和初始化过； 若该类还没有被加载，就找该类的class文件，并加载进方法区； 若该类已经被JVM加载，则准备为对象分配内存； （3）根据方法区中该类的信息确定该类所需的内存大小； 一个对象所需的内存大小是在这个对象所属类被定义完就能确定的！且一个类所生产的所有对象的内存大小是一样的！JVM在一个类被加载进方法区的时候就知道该类生产的每一个对象所需要的内存大小。 （4）从堆中划分一块对应大小的内存空间给新的对象；分配堆中内存有两种方式： a)指针碰撞 如果 Java 堆中内存绝对规整（说明采用的是“复制算法”或“标记整理法”），空闲内存和已使用内存中间放着一个指针作为分界点指示器，那么分配内存时只需要把指针向空闲内存挪动一段与对象大小一样的距离，这种分配方式称为“指针碰撞”。 如果JVM的垃圾收集器采用复制算法或标记-整理算法，那么堆中空闲内存是完整的区域，并且空闲内存和已使用内存之间由一个指针标记。那么当为一个对象分配内存时，只需移动指针即可。因此，这种在完整空闲区域上通过移动指针来分配内存的方式就叫做“指针碰撞”。 b)空闲列表 如果 Java 堆中内存并不规整，已使用的内存和空闲内存交错（说明采用的是标记-清除法，有碎片），此时没法简单进行指针碰撞， VM 必须维护一个列表，记录其中哪些内存块空闲可用。分配之时从空闲列表中找到一块足够大的内存空间划分给对象实例。这种方式称为“空闲列表”。 如果JVM的垃圾收集器采用标记-清除算法，那么堆中空闲区域和已使用区域交错，因此需要用一张“空闲列表”来记录堆中哪些区域是空闲区域，从而在创建对象的时候根据这张“空闲列表”找到空闲区域，并分配内存。 综上所述：JVM究竟采用哪种内存分配方法，取决于它使用了何种垃圾收集器。 （5）为对象中的成员变量赋上初始值(默认初始化)； （6）设置对象头中的信息； （7）调用对象的构造函数进行初始化：分配完内存后，为对象中的成员变量赋上初始值，设置对象头信息，调用对象的构造函数方法进行初始化。 此时，整个对象的创建过程就完成了。 3 对象的访问方式所有对象的存储空间都是在堆中分配的，但是这个对象的引用却是在堆栈中分配的。也就是说在建立一个对象时两个地方都分配内存，在堆中分配的内存实际建立这个对象，而在堆栈中分配的内存只是一个指向这个堆对象的指针（引用）而已。 引用类型的变量中存放的是一个地址，那么根据地址类型的不同，对象有不同的访问方式： (1)句柄访问方式 堆中需要有一块叫做“句柄池”的内存空间，用于存放所有对象的地址和所有对象所属类的类信息，句柄中包含了对象实例数据与类型数据各自的具体地址信息。 引用类型的变量存放的是该对象在句柄池中的地址（reference）。访问对象时，首先需要通过引用类型的变量找到该对象的句柄，然后根据句柄中对象的地址再访问对象。 (2)直接指针访问方式 引用类型的变量直接存放对象的地址，从而不需要句柄池，通过引用能够直接访问对象。 但对象所在的内存空间中需要额外的策略存储对象所属的类信息的地址。 比较: HotSpot采用直接指针方式访问对象，因为它只需一次寻址操作，从而在性能上比句柄访问方式快一倍。但它需要额外的策略来存储对象在方法区中类信息的地址。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JVM-JVM内存结构]]></title>
    <url>%2Fposts%2F2019-03-01-JVM-JVM%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[一直零零散散的学习JVM，看完就忘了，这里做个JVM的入门记录。 Java 虚拟机（Java Virtual Machine=JVM）的内存空间分为5个部分，分别是： 1.程序计数器 2.Java 虚拟机栈 3.本地方法栈 4.堆 5.方法区 JDK 1.8 同 JDK 1.7 比，最大的差别就是：元数据区取代了永久代。元空间的本质和永久代类似，都是对 JVM 规范中方法区的实现。不过元空间与永久代之间最大的区别在于：元数据空间并不在虚拟机中，而是使用本地内存。 1 程序计数器（PC 寄存器）1.1 程序计数器的定义程序计数器是一块较小的内存空间，是当前线程正在执行的字节码的行号指示器，即当前线程正在执行的那一条字节码指令的地址。 注： 若当前线程正在执行的是一个本地方法，那么此时程序计数器为空（Undefined）。 1.2 程序计数器的作用程序计数器有两个作用： （1）字节码解释器通过改变程序计数器来依次读取指令，从而实现代码的流程控制，如：顺序执行、选择、循环、异常处理。 （2）在多线程的情况下，程序计数器用于记录当前线程执行的位置，从而当线程被切换回来的时候，就能够知道该线程上次运行到哪儿了。 1.3 程序计数器的特点（1）一块较小的内存空间 （2）线程私有，每条线程都有自己的一个程序计数器。 （3）唯一一个不会出现OutOfMemoryError的内存区域。 （4）生命周期随着线程的创建而创建，随着线程的结束而销毁。 2 Java虚拟机栈（JVM Stack）（Java 栈）2.1 Java虚拟机栈的定义Java虚拟机栈是描述Java方法运行过程的内存模型。 Java虚拟机栈会为每一个即将运行的Java方法创建一块叫做“栈帧”的区域，这块区域用于存储该方法在运行过程中所需要的一些信息，这些信息包括： （1）局部变量表 （2）存放基本数据类型变量、引用类型的变量、returnAddress类型的变量。 （3）操作数栈 （4）动态链接 （5）方法出口信息 2.2 压栈出栈过程当一个方法即将被运行时，Java虚拟机栈首先会在Java虚拟机栈中为该方法创建一块“栈帧”，栈帧中包含局部变量表、操作数栈、动态链接、方法出口信息等。当方法在运行过程中需要创建局部变量时，就将局部变量的值存入栈帧的局部变量表中。 Java 虚拟机栈的栈顶的栈帧是当前正在执行的活动栈，也就是当前正在执行的方法，PC 寄存器也会指向这个地址。只有这个活动的栈帧的本地变量可以被操作数栈使用，当在这个栈帧中调用另一个方法，与之对应的栈帧又会被创建，新创建的栈帧压入栈顶，变为当前的活动栈帧。方法结束后，当前栈帧被移出，栈帧的返回值变成新的活动栈帧中操作数栈的一个操作数。如果没有返回值，那么新的活动栈帧中操作数栈的操作数没有变化。 由于Java 虚拟机栈是与线程对应的，数据不是线程共享的，因此不用关心数据一致性问题，也不会存在同步锁的问题。 当这个方法执行完毕后，这个方法所对应的栈帧将会出栈，并释放内存空间。 注意： 人们常说，Java的内存空间分为“栈”和“堆”，栈中存放局部变量，堆中存放对象。 这句话不完全正确！这里的“堆”可以这么理解，但这里的“栈”只代表了Java虚拟机栈中的局部变量表部分。真正的Java虚拟机栈是由一个个栈帧组成，而每个栈帧中都拥有：局部变量表、操作数栈、动态链接、方法出口信息等。 2.3 Java 虚拟机栈的特点（1）局部变量表的创建是在方法被执行的时候，随着栈帧的创建而创建。而且，局部变量表的大小在编译时期就确定下来了，在创建的时候只需分配事先规定好的大小即可。此外，在方法运行的过程中局部变量表的大小是不会发生改变的。 （2）Java 虚拟机栈会出现两种异常：StackOverFlowError 和 OutOfMemoryError。 a) StackOverFlowError： 若Java虚拟机栈的内存大小不允许动态扩展，那么当线程请求栈的深度超过当前Java虚拟机栈的最大深度的时候，就抛出StackOverFlowError异常。 b) OutOfMemoryError： 若Java虚拟机栈的内存大小允许动态扩展，且当线程请求栈时内存用完了，无法再动态扩展了，此时抛出OutOfMemoryError异常。 （3）Java虚拟机栈也是线程私有的，每个线程都有各自的Java虚拟机栈，而且随着线程的创建而创建，随着线程的结束而销毁。 注：StackOverFlowError和OutOfMemoryError的异同？ StackOverFlowError表示当前线程申请的栈超过了事先定好的栈的最大深度，但内存空间可能还有很多。而OutOfMemoryError是指当线程申请栈时发现栈已经满了，而且内存也全都用光了。 3 本地方法栈（C 栈）3.1 本地方法栈的定义本地方法栈是为 JVM 运行 Native 方法准备的空间，由于很多 Native 方法都是用 C 语言实现的，所以它通常又叫 C 栈。 本地方法栈和Java虚拟机栈实现的功能类似，只不过本地方法区是本地方法运行的内存模型。 3.2 栈帧变化过程本地方法被执行的时候，在本地方法栈也会创建一个栈帧，用于存放该本地方法的局部变量表、操作数栈、动态链接、方法出口信息等。 方法执行结束后，相应的栈帧也会出栈，并释放内存空间。 也会抛出 StackOverFlowError 和 OutOfMemoryError 异常。 如果 Java 虚拟机本身不支持 Native 方法，或是本身不依赖于传统栈，那么可以不提供本地方法栈。如果支持本地方法栈，那么这个栈一般会在线程创建的时候按线程分配。 4 堆4.1 堆的定义堆是用来存放对象的内存空间，几乎所有的对象都存储在堆中。 4.2 堆的特点（1）线程共享，整个 Java 虚拟机只有一个堆，所有的线程都访问同一个堆。而程序计数器、Java 虚拟机栈、本地方法栈都是一个线程对应一个的。 （2）在虚拟机启动时创建。 （3）垃圾回收的主要场所。 （4）可以进一步细分为：新生代(Eden区 、From Survior 、To Survivor)、老年代。 新生代又可被分为：Eden、From Survior、To Survior。不同的区域存放具有不同生命周期的对象。这样可以根据不同的区域使用不同的垃圾回收算法，从而更具有针对性，更高效。 （5）堆的大小既可以固定也可以扩展，但对于主流的虚拟机，堆的大小是可扩展的，因此当线程请求分配内存，但堆已满，且内存已满无法再扩展时，就抛出 OutOfMemoryError。 注意: Java 堆所使用的内存不需要保证是连续的。而由于堆是被所有线程共享的，所以对它的访问需要注意同步问题，方法和对应的属性都需要保证一致性。 5 方法区5.1 方法区的定义Java 虚拟机规范中定义方法区是堆的一个逻辑部分。 方法区中存放以下信息： （1）已经被虚拟机加载的类信息、 （2）常量 （3）静态变量 （4）即时编译器编译后的代码 5.2 方法区的特点（1）线程共享：方法区是堆的一个逻辑部分，因此和堆一样，都是线程共享的。整个虚拟机中只有一个方法区。 （2）永久代：方法区中的信息一般需要长期存在，而且它又是堆的逻辑分区，因此用堆的划分方法，我们把方法区称为老年代（“永久代”）。 （3）内存回收效率低：方法区中的信息一般需要长期存在，回收一遍内存之后可能只有少量信息无效。对方法区的内存回收的主要目标是：对常量池的回收 和 对类型的卸载。 （4）Java虚拟机规范对方法区的要求比较宽松：和堆一样，允许固定大小，也允许可扩展的大小，还允许不实现垃圾回收。 5.3 运行时常量池方法区中存放三种数据：类信息、常量、静态变量、即时编译器编译后的代码。其中常量存储在运行时常量池中。 一般在一个类中通过public static final来声明一个常量。这个类被编译后便生成Class文件，这个类的所有信息都存储在这个class文件中。 当这个类被Java虚拟机加载后，.class文件中的常量就存放在方法区的运行时常量池中。而且在运行期间，可以向常量池中添加新的常量。如：String类的intern()方法就能在运行期间向常量池中添加字符串常量。 当运行时常量池中的某些常量没有被对象引用，同时也没有被变量引用，那么就需要垃圾收集器回收。 6 直接内存（堆外内存）直接内存是除Java虚拟机之外的内存，但也有可能被Java使用。 6.1 操作直接内存在NIO中引入了一种基于通道和缓冲的IO方式。它可以通过调用本地方法直接分配Java虚拟机之外的内存，然后通过一个存储在Java堆中的 DirectByteBuffer 对象直接操作该内存，而无需先将外面内存中的数据复制到堆中再操作，从而提升了数据操作的效率。 直接内存的大小不受Java虚拟机控制，但既然是内存，当内存不足时就会抛出OOM（OutOfMemoryError ）异常。 6.2 直接内存与堆内存比较（1）直接内存申请空间耗费更高的性能 （2）直接内存读取 IO 的性能要优于普通的堆内存。 （3）直接内存作用链： 本地 IO -&gt; 直接内存 -&gt; 本地 IO （4）堆内存作用链：本地 IO -&gt; 直接内存 -&gt; 非直接内存 -&gt; 直接内存 -&gt; 本地 IO 注意：服务器管理员在配置虚拟机参数时，会根据实际内存设置-Xmx等参数信息，但经常忽略直接内存，使得各个内存区域总和大于物理内存限制，从而导致动态扩展时出现OutOfMemoryError异常。 7 总结Java虚拟机的内存模型中一共有两个“栈”，分别是：Java虚拟机栈和本地方法栈。 两个“栈”的功能类似，都是方法运行过程的内存模型。并且两个“栈”内部构造相同，都是线程私有。 只不过Java虚拟机栈描述的是Java方法运行过程的内存模型，而本地方法栈是描述Java本地方法运行过程的内存模型。 Java虚拟机的内存模型中一共有两个“堆”，一个是原本的堆，一个是方法区。方法区本质上是属于堆的一个逻辑部分。堆中存放对象，方法区中存放类信息、常量、静态变量、即时编译器编译的代码。 堆是Java虚拟机中最大的一块内存区域，也是垃圾收集器主要的工作区域。 程序计数器、Java虚拟机栈、本地方法栈是线程私有的，即每个线程都拥有各自的程序计数器、Java虚拟机栈、本地方法栈。并且他们的生命周期和所属的线程一样。 而堆、方法区是线程共享的，在Java虚拟机中只有一个堆、一个方法栈。并在JVM启动的时候就创建，JVM停止才销毁。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WPS政府版最全整理集合]]></title>
    <url>%2Fposts%2F2019-01-20-wpsgov%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;WPS2019的政府版本已经更新了4个地区，可以下载。 使用方法： （1）把那行xxxx单位的字去了的方法： \Program Files (x86)\Kingsoft\WPS Office\11.8.2.8053\oem 替换图片就行了 （2）简单去广告方法： 首先打开控制面板，假装要卸载wps.然后卸载，wps会问你卸载原因。这时候你就选择广告太多，这时候会弹出彻底关闭广告的弹窗。 （3）赠送个人版的序列号： 序列号1：9DP6T-9AGWG-KWV33-9MPC8-JDCVF 序列号2：THUV2-32HH7-6NMHN-PTX7Y-QQCTH 序列号3：R7AKQ-KLBXV-RNX3F-BPACQ-NQDGE 1.广东省：广东省政府机关单位： http://wpspro.support.wps.cn/gov/guangdong/ WPS Office 2016 专用版（10.8.0.6423） 潮州市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/chaozhou/ WPS Office 2019 专业增强版（11.8.2.8053） 惠州市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/huizhou/ WPS Office 2019 专业版（11.8.2.7978） 中山市政府党政机关： http://wpspro.support.wps.cn/gov/guangdong/zhongshan/ WPS Office 2016 专业版（10.8.0.6470） 珠海市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/zhuhai/ WPS Office 2016 专业增强版（10.8.2.6726） 佛山市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/foshan/ （需要密码才能进入） 茂名市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/maoming/ WPS Office 2019 专业增强版（11.8.2.8053） 河源市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/heyuan/ WPS Office 2016 专业版（10.8.2.6837） 揭阳市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/jieyang/ WPS Office 2016 专业版（10.8.0.6423） 肇庆市党政机关单位： http://wpspro.support.wps.cn/gov/guangdong/zhaoqing/ WPS Office 2016 专业增强版（10.8.2.6613） 2.重庆市：重庆市政府机关单位： http://wpspro.support.wps.cn/gov/chongqing/ WPS Office 2016 专用版（10.8.2.6762） 铜梁区党政机关单位： http://wpspro.support.wps.cn/gov/chongqing/tongliang/ WPS Office 2019 铜梁区党政机关专业版（11.8.2.8053） 巴南区党政机关单位： http://wpspro.support.wps.cn/gov/chongqing/banan/ WPS Office 2016 专业增强版（10.8.2.6837） 沙坪坝区政府机关单位： http://wpspro.support.wps.cn/gov/chongqing/shapingba/ WPS Office 2016 专用版（10.8.2.6837） 荣昌区政府机关单位： http://wpspro.support.wps.cn/gov/chongqing/rongchang/ WPS Office 2016 专业版（10.8.0.6206） 云阳县政府机关单位： http://wpspro.support.wps.cn/gov/chongqing/yunyang/ WPS Office 2016 专业版（10.8.2.6726） 奉节县政府机关单位： http://wpspro.support.wps.cn/gov/chongqing/fengjie/ WPS Office 2016 专业增强版（10.8.0.6206） 巫溪县党政机关单位： http://wpspro.support.wps.cn/gov/chongqing/wuxi/ WPS Office 2016 专业版（10.8.0.6206） 秀山县党政机关单位： http://wpspro.support.wps.cn/gov/chongqing/xiushan/ WPS Office 2016 专用版（10.8.2.6666） 3.海南省：海南省党政机关单位： http://wpspro.support.wps.cn/gov/hainan/ WPS Office 2016 专业版（10.8.2.6784） 三亚市党政机关单位： http://wpspro.support.wps.cn/gov/hainan/sanya/ WPS Office 2016 专业版（10.8.2.6784） 4.云南省：云南省党政机关单位： http://wpsupdate.ynxgj.gov.cn:21009/wps_download/index.html WPS Office 2016 专业增强版（10.8.2.6837） 5.山东省：山东省部分省级预算单位： http://wpspro.support.wps.cn/gov/shandong/ WPS Office 2016 专业版（版本号：10.8.2.6726） 德州市党政机关单位： http://wpspro.support.wps.cn/gov/shandong/dezhou/ WPS Office 2016 专业版（版本号：10.8.2.6837） 日照市党政机关单位： http://wpspro.support.wps.cn/gov/shandong/rizhao/ WPS Office 2016 专业版（版本号：10.8.2.6948） 莱芜市党政机关单位： http://wpspro.support.wps.cn/gov/shandong/laiwu/ WPS Office 2016 专业版（版本号：10.8.2.6870） 烟台市党政机关单位： http://wpspro.support.wps.cn/gov/shandong/yantai/ WPS Office 2016 专业版（版本号：10.8.2.6726） 枣庄市党政机关单位： http://wpspro.support.wps.cn/gov/shandong/zaozhuang/ WPS Office 2016 专业版（版本号：10.8.2.6949） 威海市党政机关单位： http://wpspro.support.wps.cn/gov/shandong/weihai/ WPS Office2019 （版本号：11.8.2.7978） 6.山西省：晋城市政府机关单位： http://wpspro.support.wps.cn/gov/shanxi/jincheng/ WPS Office 2016 专业版（10.8.0.6870） 运城市党政机关单位： http://wpspro.support.wps.cn/gov/shanxi/yuncheng/ WPS Office 2016 运城市党政机关专用版（10.8.0.6058） 国家税务总局山西省税务局： http://wpspro.support.wps.cn/gov/shanxi/shuiwu/ WPS Office 2016 专业版（10.8.0.6423） 7.广西省：广西省党政机关单位： http://wpspro.support.wps.cn/gov/guangxi/ WPS Office 2016 专用版（10.8.2.6666） 8.吉林省：吉林市党政机关单位： http://wpspro.support.wps.cn/gov/jilin/ WPS Office 2016 专用版（10.8.0.6501） 9.湖南省：长沙市党政机关单位： http://wpspro.support.wps.cn/gov/hunan/changsha/ WPS Office 2016 专业版（10.8.0.6058） 10.四川省：四川省政府机关单位： http://wpspro.support.wps.cn/gov/sichuan/ WPS Office 2016 专业版（10.8.2.6784） 成都市党政机关单位： http://wpspro.support.wps.cn/gov/sichuan/chengdu/ WPS Office 2016 专业版（10.8.0.6058） 雅安市党政机关单位： http://wpspro.support.wps.cn/gov/sichuan/yaan/ WPS Office 2016 专业版（10.8.0.6058） 广元市教育行业： http://wpspro.support.wps.cn/gov/sichuan/guangyuan/ WPS Office 2016 广元市教育专用版（10.8.0.6253） 11.辽宁省：辽宁省直机关政府单位： http://wpspro.support.wps.cn/gov/liaoning/ WPS_Office_2016_辽宁省直机关政府专用版 沈阳市党政机关单位： http://wpspro.support.wps.cn/gov/liaoning/shenyang/ WPS Office 2013 专业增强版（9.1.0.5026） 12.黑龙江省：黑龙江省直党政机关： http://wpspro.support.wps.cn/gov/heilongjiang/ WPS Office 2016 专业版（版本号：10.8.2.6870） 大庆市党政机关单位： http://wpspro.support.wps.cn/gov/heilongjiang/daqing/ WPS Office 2016 专业版（版本号：10.8.2.6666） 绥化市党政机关单位： http://wpspro.support.wps.cn/gov/heilongjiang/suihua/ WPS Office 2016 专业版（版本号：10.8.2.6784） 13.福建省：福建省党政机关单位： http://wpspro.support.wps.cn/gov/fujian/ WPS Office 2016 福建省直试用版（10.8.0.6501） 泉州市党政机关单位： http://wpspro.support.wps.cn/gov/fujian/quanzhou/ WPS Office 2016 专业增强版（10.8.0.6058） 福州市党政机关单位： http://wpspro.support.wps.cn/gov/fujian/fuzhou/ WPS Office 2016 专业增强版（10.8.0.6058） 厦门市党政机关单位： http://wpspro.support.wps.cn/gov/fujian/xiamen/ WPS Office 2016 专业版和专业增强版（10.8.0.6501） 14.江西省：江西省党政机关单位： http://wpspro.support.wps.cn/gov/jiangxi/ WPS Office 2016 江西省电子政务专版（10.8.0.6294） 15.西藏自治区：西藏自治区党政机关单位： http://wpspro.support.wps.cn/gov/xizang/ WPS Office 2016 专业版（10.8.2.6666） 16.北京市：西城区政府机关单位： http://wpspro.support.wps.cn/gov/beijing/xicheng/ WPS Office 2016 专业版（10.8.0.6253） 平谷区政府机关单位： http://wpspro.support.wps.cn/gov/beijing/pinggu/ WPS Office 2016 专业版（10.8.2.6726） 石景山区党政机关单位： http://wpspro.support.wps.cn/gov/beijing/shijingshan/ WPS Office 2016 专业版（10.8.0.6058） 17.安徽省：六安市政府机关单位： http://wpspro.support.wps.cn/gov/anhui/liuan/ WPS Office 2016 专业增强版（10.8.0.6253） 18.湖北省：武汉市党政机关单位： http://wpspro.support.wps.cn/gov/hubei/wuhan/ WPS Office 2016 专业增强版（10.8.2.6837） 19.各其他企业单位：中国能源建设股份有限公司： http://wpspro.support.wps.cn/enterprise/ceec/ WPS Office 2016 专业增强版（10.8.2.6784） 中国铁建： http://wpspro.support.wps.cn/enterprise/crcc/ WPS Office（10.8.0.6470） 石家庄市人力资源和社会保障局： http://www.sjzrs.gov.cn/col/1515395624617/2018/02/11/1518329562990.html WPS Office 2016 专业版（10.8.0.5562）]]></content>
      <categories>
        <category>IT</category>
        <category>WPS</category>
      </categories>
      <tags>
        <tag>IT</tag>
        <tag>WPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用深度学习识别12306图片验证码]]></title>
    <url>%2Fposts%2F2019-01-12-12306_captcha%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近在写12306抢票软件，发现图片验证码绕不过，开始用手动输入图片验证码的方式去登录12306账户，幸好，只有登录的时候需要验证图片，下单的时候不需要图片验证码识别，成功购票！ &emsp;&emsp;但是，怎么能这么轻易的放过图片验证码呢？这里，学以致用，如何使用深度学习去识别12306图片验证码呢？ &emsp;&emsp;12306的图片验证码是从8个图片中找到要求的物体，如下图所示： &emsp;&emsp;统计了1000个左右的样本图片，发现12306的图片类别只有80个，如下列表： 药片 中国结 仪表盘 公交卡 冰箱 创可贴 刺绣 剪纸 印章 卷尺 双面胶 口哨 啤酒 安全帽 开瓶器 手掌印 打字机 护腕 拖把 挂钟 排风机 文具盒 日历 本子 档案袋 棉棒 樱桃 毛线 沙包 沙拉 海报 海苔 海鸥 漏斗 烛台 热水袋 牌坊 狮子 珊瑚 电子秤 电线 电饭煲 盘子 篮球 红枣 红豆 红酒 绿豆 网球拍 老虎 耳塞 航母 苍蝇拍 茶几 茶盅 菠萝 蒸笼 薯条 蚂蚁 蜜蜂 蜡烛 蜥蜴 订书机 话梅 调色板 跑步机 路灯 辣椒酱 金字塔 钟表 铃铛 锅铲 锣 锦旗 雨靴 鞭炮 风铃 高压锅 黑板 龙舟 &emsp;&emsp;通过一轮又一轮的训练12306的图片，生成了识别的模型。关于具体的模型训练，此处省略一亿字。 &emsp;&emsp;由于是小白，这里图片的识别不是很高，没有达到100%，测试总体的准确率在75% - 85% 之间，还有完善的空间。 &emsp;&emsp;这里，在本地搭建了个临时访问的web网站，可以体验体验图片的识别。 &emsp;&emsp;请用电脑浏览器打开 http://idl.free.idcfengye.com/ 演示：&emsp;&emsp;打开上面的演示地址： &emsp;&emsp;演示的图片验证码文件： &emsp;&emsp;上传文件之后，跳到显示识别出来的结果的页面： &emsp;&emsp;OK，最后有个问题，最近一直在思考：Deep Learning 真的是泡沫吗？]]></content>
      <categories>
        <category>图片识别</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>12306</tag>
        <tag>深度学习</tag>
        <tag>验证码</tag>
        <tag>图片识别</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派安装Tensorflow]]></title>
    <url>%2Fposts%2F2018-12-03-raspberrypi_tensorflow%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;树莓派如何安装Tensorflow呢？ &emsp;&emsp;官方提供的方式感觉太复杂，这里按照如下步骤，也能完成Tensorflow在树莓派上的安装。 # 安装驱动 sudo apt install libatlas-base-dev # 安装TensorFlow pip3 install tensorflow &emsp;&emsp;安装TensorFlow的时候会自动下载安装依赖的工具，如：numpy，tensorboard，markdown 等等。 &emsp;&emsp;如果下载很慢，可以去 piwheels网站 上下载。 &emsp;&emsp;如果现实cv2导入错误，可以去之前的博客文章《python3安装opencv爬坑步骤》找到解决方法 &emsp;&emsp;实现Hello World: import tensorflow as tf hello = tf.constant(&#39;Hello, TensorFlow!&#39;) sess = tf.Session() print(sess.run(hello)) &emsp;&emsp; &emsp;&emsp;OK，大功告成！]]></content>
      <categories>
        <category>Tensorflow</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>raspberry pi</tag>
        <tag>pi</tag>
        <tag>raspbian</tag>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派配置WIFI信息]]></title>
    <url>%2Fposts%2F2018-12-01-raspberrypi_wifi%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;树莓派如何配置WIFI信息？ &emsp;&emsp;通过配置wpa_supplicant.conf可以设置要连接的无线网。 sudo nano /etc/wpa_supplicant/wpa_supplicant.conf &emsp;&emsp;在文件末尾出添加一下代码，并替换掉ssid_name以及password即可。 network=&#123; ssid=&quot;ssid_name&quot; key_mgmt=WPA-PSK psk=&quot;password&quot; &#125; &emsp;&emsp;添加多个无线网络配置,只要添加多个network即可。 network=&#123; ssid=&quot;SSID1&quot; psk=&quot;passwordl&quot; id_str=&quot;ssidl&quot; &#125; network=&#123; ssid=&quot;SSID2&quot; psk=&quot;password2&quot; id_str=&quot;ssid2&quot; &#125; &emsp;&emsp;如果有多个网络，可以添加优先级选项来选择具体连接哪一个网络。具有最高优先级的范围内的网络将是优先连接的网络。 network=&#123; ssid=&quot;SSID1&quot; psk=&quot;password1&quot; priority=1 id_str=&quot;ssid1&quot; &#125; network=&#123; ssid=&quot;SSID2&quot; psk=&quot;password2&quot; priority=2 id_str=&quot;ssid2&quot; &#125; &emsp;&emsp;添加没有密码的WIFI网络，只要将key_mgmt设置为NONE network=&#123; ssid=&quot;ssid_name&quot; key_mgmt=NONE &#125;]]></content>
      <categories>
        <category>IT</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>raspberry pi</tag>
        <tag>pi</tag>
        <tag>raspbian</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HashMap]]></title>
    <url>%2Fposts%2F2019-01-04-HashMap%2F</url>
    <content type="text"><![CDATA[HashMap采用key/value存储结构，每个key对应唯一的value，查询和修改的速度都很快，能达到O(1)的平均时间复杂度。它是非线程安全的，且不保证元素存储的顺序； 简介HashMap采用key/value存储结构，每个key对应唯一的value，查询和修改的速度都很快，能达到O(1)的平均时间复杂度。它是非线程安全的，且不保证元素存储的顺序； 继承体系 HashMap实现了Cloneable，可以被克隆。 HashMap实现了Serializable，可以被序列化。 HashMap继承自AbstractMap，实现了Map接口，具有Map的所有功能。 存储结构 在Java中，HashMap的实现采用了（数组 + 链表 + 红黑树）的复杂结构，数组的一个元素又称作桶。 在添加元素时，会根据hash值算出元素在数组中的位置，如果该位置没有元素，则直接把元素放置在此处，如果该位置有元素了，则把元素以链表的形式放置在链表的尾部。 当一个链表的元素个数达到一定的数量（且数组的长度达到一定的长度）后，则把链表转化为红黑树，从而提高效率。 数组的查询效率为O(1)，链表的查询效率是O(k)，红黑树的查询效率是O(log k)，k为桶中的元素个数，所以当元素数量非常多的时候，转化为红黑树能极大地提高效率。 源码解析属性/** * The default initial capacity - MUST be a power of two. * 默认的初始容量为16 */ static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16 /** * The maximum capacity, used if a higher value is implicitly specified * by either of the constructors with arguments. * MUST be a power of two &lt;= 1&lt;&lt;30. * 最大的容量为2的30次方 */ static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30; /** * The load factor used when none specified in constructor. * 默认的装载因子 */ static final float DEFAULT_LOAD_FACTOR = 0.75f; /** * The bin count threshold for using a tree rather than list for a * bin. Bins are converted to trees when adding an element to a * bin with at least this many nodes. The value must be greater * than 2 and should be at least 8 to mesh with assumptions in * tree removal about conversion back to plain bins upon * shrinkage. * 当一个桶中的元素个数大于等于8时进行树化 */ static final int TREEIFY_THRESHOLD = 8; /** * The bin count threshold for untreeifying a (split) bin during a * resize operation. Should be less than TREEIFY_THRESHOLD, and at * most 6 to mesh with shrinkage detection under removal. * 当一个桶中的元素个数小于等于6时把树转化为链表 */ static final int UNTREEIFY_THRESHOLD = 6; /** * The smallest table capacity for which bins may be treeified. * (Otherwise the table is resized if too many nodes in a bin.) * Should be at least 4 * TREEIFY_THRESHOLD to avoid conflicts * between resizing and treeification thresholds. * 当桶的个数达到64的时候才进行树化 */ static final int MIN_TREEIFY_CAPACITY = 64; /** * The table, initialized on first use, and resized as * necessary. When allocated, length is always a power of two. * (We also tolerate length zero in some operations to allow * bootstrapping mechanics that are currently not needed.) * 数组，又叫作桶（bucket） */ transient Node&lt;K,V&gt;[] table; /** * Holds cached entrySet(). Note that AbstractMap fields are used * for keySet() and values(). * 作为entrySet()的缓存 */ transient Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet; /** * The number of key-value mappings contained in this map. * 元素的数量 */ transient int size; /** * The number of times this HashMap has been structurally modified * Structural modifications are those that change the number of mappings in * the HashMap or otherwise modify its internal structure (e.g., * rehash). This field is used to make iterators on Collection-views of * the HashMap fail-fast. (See ConcurrentModificationException). * 修改次数，用于在迭代的时候执行快速失败策略 */ transient int modCount; /** * The next size value at which to resize (capacity * load factor). * 当桶的使用数量达到多少时进行扩容，threshold = capacity * loadFactor * @serial */ // (The javadoc description is true upon serialization. // Additionally, if the table array has not been allocated, this // field holds the initial array capacity, or zero signifying // DEFAULT_INITIAL_CAPACITY.) int threshold; /** * The load factor for the hash table. * 装载因子 * @serial */ final float loadFactor; （1）容量 容量为数组的长度，亦即桶的个数，默认为16，最大为2的30次方，当容量达到64时才可以树化。 （2）装载因子 装载因子用来计算容量达到多少时才进行扩容，默认装载因子为0.75。 （3）树化 树化，当容量达到64且链表的长度达到8时进行树化，当链表的长度小于6时反树化。 Node内部类Node是一个典型的单链表节点，其中，hash用来存储key计算得来的hash值。 /** * Basic hash bin node, used for most entries. (See below for * TreeNode subclass, and in LinkedHashMap for its Entry subclass.) */ static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; &#123; final int hash; final K key; V value; Node&lt;K,V&gt; next; Node(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; this.hash = hash; this.key = key; this.value = value; this.next = next; &#125; public final K getKey() &#123; return key; &#125; public final V getValue() &#123; return value; &#125; public final String toString() &#123; return key + &quot;=&quot; + value; &#125; public final int hashCode() &#123; return Objects.hashCode(key) ^ Objects.hashCode(value); &#125; public final V setValue(V newValue) &#123; V oldValue = value; value = newValue; return oldValue; &#125; public final boolean equals(Object o) &#123; if (o == this) return true; if (o instanceof Map.Entry) &#123; Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o; if (Objects.equals(key, e.getKey()) &amp;&amp; Objects.equals(value, e.getValue())) return true; &#125; return false; &#125; &#125; TreeNode内部类这个类继承自LinkedHashMap中的Entry类。 TreeNode是一个典型的树型节点，其中，prev是链表中的节点，用于在删除元素的时候可以快速找到它的前置节点。 // 位于HashMap中 /** * Entry for Tree bins. Extends LinkedHashMap.Entry (which in turn * extends Node) so can be used as extension of either regular or * linked node. */ static final class TreeNode&lt;K,V&gt; extends LinkedHashMap.Entry&lt;K,V&gt; &#123; TreeNode&lt;K,V&gt; parent; // red-black tree links TreeNode&lt;K,V&gt; left; TreeNode&lt;K,V&gt; right; TreeNode&lt;K,V&gt; prev; // needed to unlink next upon deletion boolean red; &#125; // 位于LinkedHashMap中，典型的双向链表节点 static class Entry&lt;K,V&gt; extends HashMap.Node&lt;K,V&gt; &#123; Entry&lt;K,V&gt; before, after; Entry(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; super(hash, key, value, next); &#125; &#125; HashMap()构造方法空参构造方法，全部使用默认值。 /** * Constructs an empty &lt;tt&gt;HashMap&lt;/tt&gt; with the default initial capacity * (16) and the default load factor (0.75). */ public HashMap() &#123; this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted &#125; HashMap(int initialCapacity)构造方法调用HashMap(int initialCapacity, float loadFactor)构造方法，传入默认装载因子。 /** * Constructs an empty &lt;tt&gt;HashMap&lt;/tt&gt; with the specified initial * capacity and the default load factor (0.75). * * @param initialCapacity the initial capacity. * @throws IllegalArgumentException if the initial capacity is negative. */ public HashMap(int initialCapacity) &#123; this(initialCapacity, DEFAULT_LOAD_FACTOR); &#125; HashMap(int initialCapacity, float loadFactor)构造方法判断传入的初始容量和装载因子是否合法，并计算扩容门槛，扩容门槛为传入的初始容量往上取最近的2的n次方。 /** * Constructs an empty &lt;tt&gt;HashMap&lt;/tt&gt; with the specified initial * capacity and load factor. * * @param initialCapacity the initial capacity * @param loadFactor the load factor * @throws IllegalArgumentException if the initial capacity is negative * or the load factor is nonpositive */ public HashMap(int initialCapacity, float loadFactor) &#123; // 检查传入的初始容量是否合法 if (initialCapacity &lt; 0) throw new IllegalArgumentException(&quot;Illegal initial capacity: &quot; + initialCapacity); if (initialCapacity &gt; MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; // 检查装载因子是否合法 if (loadFactor &lt;= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException(&quot;Illegal load factor: &quot; + loadFactor); this.loadFactor = loadFactor; // 计算扩容门槛 this.threshold = tableSizeFor(initialCapacity); &#125; /** * Returns a power of two size for the given target capacity. */ static final int tableSizeFor(int cap) &#123; // 扩容门槛为传入的初始容量往上取最近的2的n次方 int n = cap - 1; n |= n &gt;&gt;&gt; 1; n |= n &gt;&gt;&gt; 2; n |= n &gt;&gt;&gt; 4; n |= n &gt;&gt;&gt; 8; n |= n &gt;&gt;&gt; 16; return (n &lt; 0) ? 1 : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1; &#125; put(K key, V value)方法添加元素的入口。 /** * Associates the specified value with the specified key in this map. * If the map previously contained a mapping for the key, the old * value is replaced. * * @param key key with which the specified value is to be associated * @param value value to be associated with the specified key * @return the previous value associated with &lt;tt&gt;key&lt;/tt&gt;, or * &lt;tt&gt;null&lt;/tt&gt; if there was no mapping for &lt;tt&gt;key&lt;/tt&gt;. * (A &lt;tt&gt;null&lt;/tt&gt; return can also indicate that the map * previously associated &lt;tt&gt;null&lt;/tt&gt; with &lt;tt&gt;key&lt;/tt&gt;.) */ public V put(K key, V value) &#123; // 调用hash(key)计算出key的hash值 return putVal(hash(key), key, value, false, true); &#125; /** * Computes key.hashCode() and spreads (XORs) higher bits of hash * to lower. Because the table uses power-of-two masking, sets of * hashes that vary only in bits above the current mask will * always collide. (Among known examples are sets of Float keys * holding consecutive whole numbers in small tables.) So we * apply a transform that spreads the impact of higher bits * downward. There is a tradeoff between speed, utility, and * quality of bit-spreading. Because many common sets of hashes * are already reasonably distributed (so don&#39;t benefit from * spreading), and because we use trees to handle large sets of * collisions in bins, we just XOR some shifted bits in the * cheapest possible way to reduce systematic lossage, as well as * to incorporate impact of the highest bits that would otherwise * never be used in index calculations because of table bounds. */ static final int hash(Object key) &#123; int h; // 如果key为null，则hash值为0，否则调用key的hashCode()方法 // 并让高16位与整个hash异或，这样做是为了使计算出的hash更分散 return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16); &#125; /** * Implements Map.put and related methods. * * @param hash hash for key * @param key the key * @param value the value to put * @param onlyIfAbsent if true, don&#39;t change existing value * @param evict if false, the table is in creation mode. * @return previous value, or null if none */ final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) &#123; Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i; // 如果桶的数量为0，则初始化 if ((tab = table) == null || (n = tab.length) == 0) // 调用resize()初始化 n = (tab = resize()).length; // (n - 1) &amp; hash 计算元素在哪个桶中 // 如果这个桶中还没有元素，则把这个元素放在桶中的第一个位置 if ((p = tab[i = (n - 1) &amp; hash]) == null) // 新建一个节点放在桶中 tab[i] = newNode(hash, key, value, null); else &#123; // 如果桶中已经有元素存在了 Node&lt;K,V&gt; e; K k; // 如果桶中第一个元素的key与待插入元素的key相同，保存到e中用于后续修改value值 if (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != null &amp;&amp; key.equals(k)))) e = p; else if (p instanceof TreeNode) // 如果第一个元素是树节点，则调用树节点的putTreeVal插入元素 e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value); else &#123; // 遍历这个桶对应的链表，binCount用于存储链表中元素的个数 for (int binCount = 0; ; ++binCount) &#123; // 如果链表遍历完了都没有找到相同key的元素，说明该key对应的元素不存在，则在链表最后插入一个新节点 if ((e = p.next) == null) &#123; p.next = newNode(hash, key, value, null); // 如果插入新节点后链表长度大于8，则判断是否需要树化，因为第一个元素没有加到binCount中，所以这里-1 if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; &#125; // 如果待插入的key在链表中找到了，则退出循环 if (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) break; p = e; &#125; &#125; // 如果找到了对应key的元素 if (e != null) &#123; // existing mapping for key // 记录下旧值 V oldValue = e.value; // 判断是否需要替换旧值 if (!onlyIfAbsent || oldValue == null) // 替换旧值为新值 e.value = value; // 在节点被访问后做点什么事，在LinkedHashMap中用到 afterNodeAccess(e); // 返回旧值 return oldValue; &#125; &#125; // 到这里了说明没有找到元素 // 修改次数加1 ++modCount; // 元素数量加1，判断是否需要扩容 if (++size &gt; threshold) // 扩容 resize(); // 在节点插入后做点什么事，在LinkedHashMap中用到 afterNodeInsertion(evict); // 没找到元素返回null return null; &#125; （1）计算key的hash值； （2）如果桶（数组）数量为0，则初始化桶； （3）如果key所在的桶没有元素，则直接插入； （4）如果key所在的桶中的第一个元素的key与待插入的key相同，说明找到了元素，转后续流程（9）处理； （5）如果第一个元素是树节点，则调用树节点的putTreeVal()寻找元素或插入树节点； （6）如果不是以上三种情况，则遍历桶对应的链表查找key是否存在于链表中； （7）如果找到了对应key的元素，则转后续流程（9）处理； （8）如果没找到对应key的元素，则在链表最后插入一个新节点并判断是否需要树化； （9）如果找到了对应key的元素，则判断是否需要替换旧值，并直接返回旧值； （10）如果插入了元素，则数量加1并判断是否需要扩容； resize()方法扩容方法 /** * Initializes or doubles table size. If null, allocates in * accord with initial capacity target held in field threshold. * Otherwise, because we are using power-of-two expansion, the * elements from each bin must either stay at same index, or move * with a power of two offset in the new table. * * @return the table */ final Node&lt;K,V&gt;[] resize() &#123; // 旧数组 Node&lt;K,V&gt;[] oldTab = table; // 旧容量 int oldCap = (oldTab == null) ? 0 : oldTab.length; // 旧扩容门槛 int oldThr = threshold; int newCap, newThr = 0; if (oldCap &gt; 0) &#123; if (oldCap &gt;= MAXIMUM_CAPACITY) &#123; // 如果旧容量达到了最大容量，则不再进行扩容 threshold = Integer.MAX_VALUE; return oldTab; &#125; else if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp; oldCap &gt;= DEFAULT_INITIAL_CAPACITY) // 如果旧容量的两倍小于最大容量并且旧容量大于默认初始容量（16），则容量扩大为两部，扩容门槛也扩大为两倍 newThr = oldThr &lt;&lt; 1; // double threshold &#125; else if (oldThr &gt; 0) // initial capacity was placed in threshold // 使用非默认构造方法创建的map，第一次插入元素会走到这里 // 如果旧容量为0且旧扩容门槛大于0，则把新容量赋值为旧门槛 newCap = oldThr; else &#123; // zero initial threshold signifies using defaults // 调用默认构造方法创建的map，第一次插入元素会走到这里 // 如果旧容量旧扩容门槛都是0，说明还未初始化过，则初始化容量为默认容量，扩容门槛为默认容量*默认装载因子 newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); &#125; if (newThr == 0) &#123; // 如果新扩容门槛为0，则计算为容量*装载因子，但不能超过最大容量 float ft = (float)newCap * loadFactor; newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); &#125; // 赋值扩容门槛为新门槛 threshold = newThr; // 新建一个新容量的数组 @SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;) Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap]; // 把桶赋值为新数组 table = newTab; // 如果旧数组不为空，则搬移元素 if (oldTab != null) &#123; // 遍历旧数组 for (int j = 0; j &lt; oldCap; ++j) &#123; Node&lt;K,V&gt; e; // 如果桶中第一个元素不为空，赋值给e if ((e = oldTab[j]) != null) &#123; // 清空旧桶，便于GC回收 oldTab[j] = null; // 如果这个桶中只有一个元素，则计算它在新桶中的位置并把它搬移到新桶中 // 因为每次都扩容两倍，所以这里的第一个元素搬移到新桶的时候新桶肯定还没有元素 if (e.next == null) newTab[e.hash &amp; (newCap - 1)] = e; else if (e instanceof TreeNode) // 如果第一个元素是树节点，则把这颗树打散成两颗树插入到新桶中去 ((TreeNode&lt;K,V&gt;)e).split(this, newTab, j, oldCap); else &#123; // preserve order // 如果这个链表不止一个元素且不是一颗树 // 则分化成两个链表插入到新的桶中去 // 比如，假如原来容量为4，3、7、11、15这四个元素都在三号桶中 // 现在扩容到8，则3和11还是在三号桶，7和15要搬移到七号桶中去 // 也就是分化成了两个链表 Node&lt;K,V&gt; loHead = null, loTail = null; Node&lt;K,V&gt; hiHead = null, hiTail = null; Node&lt;K,V&gt; next; do &#123; next = e.next; // (e.hash &amp; oldCap) == 0的元素放在低位链表中 // 比如，3 &amp; 4 == 0 if ((e.hash &amp; oldCap) == 0) &#123; if (loTail == null) loHead = e; else loTail.next = e; loTail = e; &#125; else &#123; // (e.hash &amp; oldCap) != 0的元素放在高位链表中 // 比如，7 &amp; 4 != 0 if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; &#125; &#125; while ((e = next) != null); // 遍历完成分化成两个链表了 // 低位链表在新桶中的位置与旧桶一样（即3和11还在三号桶中） if (loTail != null) &#123; loTail.next = null; newTab[j] = loHead; &#125; // 高位链表在新桶中的位置正好是原来的位置加上旧容量（即7和15搬移到七号桶了） if (hiTail != null) &#123; hiTail.next = null; newTab[j + oldCap] = hiHead; &#125; &#125; &#125; &#125; &#125; return newTab; &#125; （1）如果使用是默认构造方法，则第一次插入元素时初始化为默认值，容量为16，扩容门槛为12； （2）如果使用的是非默认构造方法，则第一次插入元素时初始化容量等于扩容门槛，扩容门槛在构造方法里等于传入容量向上最近的2的n次方； （3）如果旧容量大于0，则新容量等于旧容量的2倍，但不超过最大容量2的30次方，新扩容门槛为旧扩容门槛的2倍； （4）创建一个新容量的桶； （5）搬移元素，原链表分化成两个链表，低位链表存储在原来桶的位置，高位链表搬移到原来桶的位置加旧容量的位置； TreeNode.putTreeVal(…)方法]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>源码分析</tag>
        <tag>Map</tag>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派修改镜像源]]></title>
    <url>%2Fposts%2F2018-12-02-raspberrypi_source%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;树莓派如何修改镜像源呢？ &emsp;&emsp;树莓派内置的镜像源，访问很慢，这里修改成国内访问速度快的镜像源。 &emsp;&emsp;一、树莓派基金会提供的源 &emsp;&emsp;/etc/apt/sources.list.d/raspi.list里的软件源是树莓派基金会单独（非Raspbian开发者）提供/维护的软件源，主要包括raspi-config、minecraftpi、树莓派桌面环境、内核固件驱动等少量软件。 &emsp;&emsp;1.Debian 8 Jessie 中科大 deb https://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ jessie main ui 清华 deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/debian/ jessie main ui 默认官方源 deb http://archive.raspberrypi.org/debian/ jessie main ui &emsp;&emsp;2.Debian 9 Stretch 中科大 deb https://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui 清华 deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/debian/ stretch main ui 默认官方源 deb http://archive.raspberrypi.org/debian/ stretch main ui &emsp;&emsp;二、Raspbian源 &emsp;&emsp;raspbian这个源是由独立开发者维护的，与树莓派基金会并无直接联系。国内源比较多，选择一个与自己延迟最小或连接速度最好或物理距离最短的即可。无需担心各个软件源内容上会有不同，基本上各个站点每天都会同步一次，绝大部分情况下某软件安装不了与用了哪个站点提供的源无关。通常位于/etc/apt/sources.list &emsp;&emsp;1.Debian 8 Jessie 中科大 deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi 清华 deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi 大连东软 deb http://mirrors.neusoft.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi 重庆大学 deb http://mirrors.cqu.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi 浙江大学 deb http://mirrors.zju.edu.cn/raspbian/raspbian/ jessie main contrib non-free rpi 阿里云 deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free rpi 搜狐 deb http://mirrors.sohu.com/raspbian/raspbian/ jessie main contrib non-free rpi 元智大学（中国台湾） deb http://ftp.cse.yzu.edu.tw/Linux/raspbian/raspbian/ jessie main contrib non-free rpi 新加坡国立大学 deb http://mirror.nus.edu.sg/raspbian/raspbian/ jessie main contrib non-free rpi 北陆先端科学技术大学院大学（日本知名镜像站，日常出口带宽2g） deb http://ftp.jaist.ac.jp/raspbian/ jessie main contrib non-free rpi 牛津大学 deb http://mirror.ox.ac.uk/sites/archive.raspbian.org/archive/raspbian/ jessie main contrib non-free rpi 美国Berkely大学 deb http://mirrors.ocf.berkeley.edu/raspbian/raspbian/ jessie main contrib non-free rpi 美国俄克拉荷马大学 deb http://reflection.oss.ou.edu/raspbian/raspbian/ jessie main contrib non-free rpi 南非知名软件源 deb http://mirror.liquidtelecom.com/raspbian/raspbian/ jessie main contrib non-free rpi 默认源（带重定向by mirrorbrain） deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi 官方源 deb https://archive.raspbian.org/raspbian/ jessie main contrib non-free rpi &emsp;&emsp;2.Debian 9 Stretch 中科大 deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi 清华 deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi 大连东软 deb http://mirrors.neusoft.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi 重庆大学 deb http://mirrors.cqu.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi 浙江大学 deb http://mirrors.zju.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi 阿里云 deb http://mirrors.aliyun.com/raspbian/raspbian/ stretch main contrib non-free rpi 搜狐 deb http://mirrors.sohu.com/raspbian/raspbian/ stretch main contrib non-free rpi 元智大学（中国台湾） deb http://ftp.cse.yzu.edu.tw/Linux/raspbian/raspbian/ stretch main contrib non-free rpi 新加坡国立大学 deb http://mirror.nus.edu.sg/raspbian/raspbian/ stretch main contrib non-free rpi 北陆先端科学技术大学院大学（日本知名镜像站，日常出口带宽2g） deb http://ftp.jaist.ac.jp/raspbian/ stretch main contrib non-free rpi 牛津大学 deb http://mirror.ox.ac.uk/sites/archive.raspbian.org/archive/raspbian/ stretch main contrib non-free rpi 美国Berkely大学 deb http://mirrors.ocf.berkeley.edu/raspbian/raspbian/ stretch main contrib non-free rpi 美国俄克拉荷马大学 deb http://reflection.oss.ou.edu/raspbian/raspbian/ stretch main contrib non-free rpi 南非知名软件源 deb http://mirror.liquidtelecom.com/raspbian/raspbian/ stretch main contrib non-free rpi 默认源（带重定向by mirrorbrain） deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi 官方源 deb https://archive.raspbian.org/raspbian/ stretch main contrib non-free rpi &emsp;&emsp;这里提供个raspbian官方镜像列表 : https://www.raspbian.org/RaspbianMirrors]]></content>
      <categories>
        <category>IT</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>raspberry pi</tag>
        <tag>pi</tag>
        <tag>raspbian</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CopyOnWriteArrayList 源码分析]]></title>
    <url>%2Fposts%2F2019-01-03-CopyOnWriteArrayList%2F</url>
    <content type="text"><![CDATA[CopyOnWriteArrayList是ArrayList的线程安全版本，内部也是通过数组实现，每次对数组的修改都完全拷贝一份新的数组来修改，修改完了再替换掉老数组，这样保证了只阻塞写操作，不阻塞读操作，实现读写分离。 简介CopyOnWriteArrayList是ArrayList的线程安全版本，内部也是通过数组实现，每次对数组的修改都完全拷贝一份新的数组来修改，修改完了再替换掉老数组，这样保证了只阻塞写操作，不阻塞读操作，实现读写分离。 继承体系 CopyOnWriteArrayList实现了List, RandomAccess, Cloneable, java.io.Serializable等接口。 CopyOnWriteArrayList实现了List，提供了基础的添加、删除、遍历等操作。 CopyOnWriteArrayList实现了RandomAccess，提供了随机访问的能力。 CopyOnWriteArrayList实现了Cloneable，可以被克隆。 CopyOnWriteArrayList实现了Serializable，可以被序列化。 源码分析主要属性/** * The lock protecting all mutators * 用于修改时加锁 */ final transient ReentrantLock lock = new ReentrantLock(); /** * The array, accessed only via getArray/setArray. * 真正存储元素的地方，只能通过getArray()/setArray()访问 */ private transient volatile Object[] array; （1）lock 用于修改时加锁，使用transient修饰表示不自动序列化。 （2）array 真正存储元素的地方，使用transient修饰表示不自动序列化，使用volatile修饰表示一个线程对这个字段的修改另外一个线程立即可见。 问题：为啥没有size字段？ CopyOnWriteArrayList()构造方法创建空数组： /** * Creates an empty list. */ public CopyOnWriteArrayList() &#123; setArray(new Object[0]); &#125; /** * Sets the array. */ final void setArray(Object[] a) &#123; array = a; &#125; CopyOnWriteArrayList 构造方法如果c是CopyOnWriteArrayList类型，直接把它的数组赋值给当前list的数组，注意这里是浅拷贝，两个集合共用同一个数组。 如果c不是CopyOnWriteArrayList类型，则进行拷贝把c的元素全部拷贝到当前list的数组中。 /** * Creates a list containing the elements of the specified * collection, in the order they are returned by the collection&#39;s * iterator. * * @param c the collection of initially held elements * @throws NullPointerException if the specified collection is null */ public CopyOnWriteArrayList(Collection&lt;? extends E&gt; c) &#123; Object[] elements; if (c.getClass() == CopyOnWriteArrayList.class) //如果c也是CopyOnWriteArrayList类型,直接把它的数组拿过来使用 elements = ((CopyOnWriteArrayList&lt;?&gt;)c).getArray(); else &#123; // 否则调用其toArray()方法将集合元素转化为数组 elements = c.toArray(); // c.toArray might (incorrectly) not return Object[] (see 6260652) // 这里c.toArray()返回的不一定是Object[]类型,详细原因见ArrayList里面的分析 if (elements.getClass() != Object[].class) elements = Arrays.copyOf(elements, elements.length, Object[].class); &#125; setArray(elements); &#125; CopyOnWriteArrayList(E[] toCopyIn)构造方法把toCopyIn的元素拷贝给当前list的数组。 /** * Creates a list holding a copy of the given array. * * @param toCopyIn the array (a copy of this array is used as the * internal array) * @throws NullPointerException if the specified array is null */ public CopyOnWriteArrayList(E[] toCopyIn) &#123; setArray(Arrays.copyOf(toCopyIn, toCopyIn.length, Object[].class)); &#125; add(E e)方法添加一个元素到末尾。 /** * Appends the specified element to the end of this list. * * @param e element to be appended to this list * @return &#123;@code true&#125; (as specified by &#123;@link Collection#add&#125;) */ public boolean add(E e) &#123; final ReentrantLock lock = this.lock; // 加锁 lock.lock(); try &#123; // 获取旧数组 Object[] elements = getArray(); int len = elements.length; // 将旧数组元素拷贝到新数组中 // 新数组大小是旧数组大小加1 Object[] newElements = Arrays.copyOf(elements, len + 1); // 将元素放在最后一位 newElements[len] = e; setArray(newElements); return true; &#125; finally &#123; // 释放锁 lock.unlock(); &#125; &#125; （1）加锁； （2）获取元素数组； （3）新建一个数组，大小为原数组长度加1，并把原数组元素拷贝到新数组； （4）把新添加的元素放到新数组的末尾； （5）把新数组赋值给当前对象的array属性，覆盖原数组； （6）解锁； add(int index, E element)方法添加一个元素在指定索引处。 /** * Inserts the specified element at the specified position in this * list. Shifts the element currently at that position (if any) and * any subsequent elements to the right (adds one to their indices). * * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public void add(int index, E element) &#123; final ReentrantLock lock = this.lock; // 加锁 lock.lock(); try &#123; // 获取旧数组 Object[] elements = getArray(); int len = elements.length; // 检查是否越界, 可以等于len if (index &gt; len || index &lt; 0) throw new IndexOutOfBoundsException(&quot;Index: &quot;+index+ &quot;, Size: &quot;+len); Object[] newElements; int numMoved = len - index; if (numMoved == 0) // 如果插入的位置是最后一位,那么拷贝一个n+1的数组, 其前n个元素与旧数组一致 newElements = Arrays.copyOf(elements, len + 1); else &#123; // 如果插入的位置不是最后一位,那么新建一个n+1的数组 newElements = new Object[len + 1]; // 拷贝旧数组前index的元素到新数组中 System.arraycopy(elements, 0, newElements, 0, index); // 将index及其之后的元素往后挪一位拷贝到新数组中 // 这样正好index位置是空出来的 System.arraycopy(elements, index, newElements, index + 1, numMoved); &#125; // 将元素放置在index处 newElements[index] = element; setArray(newElements); &#125; finally &#123; // 释放锁 lock.unlock(); &#125; &#125; （1）加锁； （2）检查索引是否合法，如果不合法抛出IndexOutOfBoundsException异常，注意这里index等于len也是合法的； （3）如果索引等于数组长度（也就是数组最后一位再加1），那就拷贝一个len+1的数组； （4）如果索引不等于数组长度，那就新建一个len+1的数组，并按索引位置分成两部分，索引之前（不包含）的部分拷贝到新数组索引之前（不包含）的部分，索引之后（包含）的位置拷贝到新数组索引之后（不包含）的位置，索引所在位置留空； （5）把索引位置赋值为待添加的元素； （6）把新数组赋值给当前对象的array属性，覆盖原数组； （7）解锁； addIfAbsent(E e)方法添加一个元素如果这个元素不存在于集合中。 /** * Appends the element, if not present. * * @param e element to be added to this list, if absent * @return &#123;@code true&#125; if the element was added */ public boolean addIfAbsent(E e) &#123; // 获取元素数组, 取名为快照 Object[] snapshot = getArray(); // 检查如果元素不存在,直接返回false // 如果存在再调用addIfAbsent()方法添加元素 return indexOf(e, snapshot, 0, snapshot.length) &gt;= 0 ? false : addIfAbsent(e, snapshot); &#125; /** * A version of addIfAbsent using the strong hint that given * recent snapshot does not contain e. */ private boolean addIfAbsent(E e, Object[] snapshot) &#123; final ReentrantLock lock = this.lock; // 加锁 lock.lock(); try &#123; // 重新获取旧数组 Object[] current = getArray(); int len = current.length; // 如果快照与刚获取的数组不一致 // 说明有修改 if (snapshot != current) &#123; // Optimize for lost race to another addXXX operation // 重新检查元素是否在刚获取的数组里 int common = Math.min(snapshot.length, len); for (int i = 0; i &lt; common; i++) // 到这个方法里面了, 说明元素不在快照里面 if (current[i] != snapshot[i] &amp;&amp; eq(e, current[i])) return false; if (indexOf(e, current, common, len) &gt;= 0) return false; &#125; // 拷贝一份n+1的数组 Object[] newElements = Arrays.copyOf(current, len + 1); // 将元素放在最后一位 newElements[len] = e; setArray(newElements); return true; &#125; finally &#123; // 释放锁 lock.unlock(); &#125; &#125; （1）检查这个元素是否存在于数组快照中； （2）如果存在直接返回false，如果不存在调用addIfAbsent(E e, Object[] snapshot)处理; （3）加锁； （4）如果当前数组不等于传入的快照，说明有修改，检查待添加的元素是否存在于当前数组中，如果存在直接返回false; （5）拷贝一个新数组，长度等于原数组长度加1，并把原数组元素拷贝到新数组中； （6）把新元素添加到数组最后一位； （7）把新数组赋值给当前对象的array属性，覆盖原数组； （8）解锁； get(int index)获取指定索引的元素，支持随机访问，时间复杂度为O(1)。 /** * &#123;@inheritDoc&#125; * * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public E get(int index) &#123; // 获取元素不需要加锁 // 直接返回index位置的元素 // 这里是没有做越界检查的, 因为数组本身会做越界检查 return get(getArray(), index); &#125; @SuppressWarnings(&quot;unchecked&quot;) private E get(Object[] a, int index) &#123; return (E) a[index]; &#125; /** * Gets the array. Non-private so as to also be accessible * from CopyOnWriteArraySet class. */ final Object[] getArray() &#123; return array; &#125; （1）获取元素数组； （2）返回数组指定索引位置的元素； remove(int index)方法删除指定索引位置的元素。 /** * Removes the element at the specified position in this list. * Shifts any subsequent elements to the left (subtracts one from their * indices). Returns the element that was removed from the list. * * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public E remove(int index) &#123; final ReentrantLock lock = this.lock; // 加锁 lock.lock(); try &#123; // 获取旧数组 Object[] elements = getArray(); int len = elements.length; E oldValue = get(elements, index); int numMoved = len - index - 1; if (numMoved == 0) // 如果移除的是最后一位 // 那么直接拷贝一份n-1的新数组, 最后一位就自动删除了 setArray(Arrays.copyOf(elements, len - 1)); else &#123; // 如果移除的不是最后一位 // 那么新建一个n-1的新数组 Object[] newElements = new Object[len - 1]; // 将前index的元素拷贝到新数组中 System.arraycopy(elements, 0, newElements, 0, index); // 将index后面(不包含)的元素往前挪一位 // 这样正好把index位置覆盖掉了, 相当于删除了 System.arraycopy(elements, index + 1, newElements, index, numMoved); setArray(newElements); &#125; return oldValue; &#125; finally &#123; // 释放锁 lock.unlock(); &#125; &#125; （1）加锁； （2）获取指定索引位置元素的旧值； （3）如果移除的是最后一位元素，则把原数组的前len-1个元素拷贝到新数组中，并把新数组赋值给当前对象的数组属性； （4）如果移除的不是最后一位元素，则新建一个len-1长度的数组，并把原数组除了指定索引位置的元素全部拷贝到新数组中，并把新数组赋值给当前对象的数组属性； （5）解锁并返回旧值； size()方法返回数组的长度。 /** * Returns the number of elements in this list. * * @return the number of elements in this list */ public int size() &#123; // 获取元素个数不需要加锁 // 直接返回数组的长度 return getArray().length; &#125; 总结（1）CopyOnWriteArrayList使用ReentrantLock重入锁加锁，保证线程安全； （2）CopyOnWriteArrayList的写操作都要先拷贝一份新数组，在新数组中做修改，修改完了再用新数组替换老数组，所以空间复杂度是O(n)，性能比较低下； （3）CopyOnWriteArrayList的读操作支持随机访问，时间复杂度为O(1)； （4）CopyOnWriteArrayList采用读写分离的思想，读操作不加锁，写操作加锁，且写操作占用较大内存空间，所以适用于读多写少的场合； （5）CopyOnWriteArrayList只保证最终一致性，不保证实时一致性； 问题:为什么CopyOnWriteArrayList没有size属性？因为每次修改都是拷贝一份正好可以存储目标个数元素的数组，所以不需要size属性了，数组的长度就是集合的大小，而不像ArrayList数组的长度实际是要大于集合的大小的。 比如，add(E e)操作，先拷贝一份n+1个元素的数组，再把新元素放到新数组的最后一位，这时新数组的长度为len+1了，也就是集合的size了。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>List</tag>
        <tag>Collection</tag>
        <tag>源码分析</tag>
        <tag>CopyOnWriteArrayList</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinkedList 源码分析]]></title>
    <url>%2Fposts%2F2019-01-02-LinkedList%2F</url>
    <content type="text"><![CDATA[LinkedList是一个以双向链表实现的List，它除了作为List使用，还可以作为队列或者栈来使用，它是怎么实现的呢？让我们一起来学习吧。 问题（1）LinkedList只是一个List吗？ （2）LinkedList还有其它什么特性吗？ （3）LinkedList为啥经常拿出来跟ArrayList比较？ 简介LinkedList是一个以双向链表实现的List，它除了作为List使用，还可以作为队列或者栈来使用，它是怎么实现的呢？ 继承体系 通过继承体系，我们可以看到LinkedList不仅实现了List接口，还实现了Queue和Deque接口，所以它既能作为List使用，也能作为双端队列使用，当然也可以作为栈使用。 源码分析主要属性// 元素个数 transient int size = 0; /** * Pointer to first node. * Invariant: (first == null &amp;&amp; last == null) || * (first.prev == null &amp;&amp; first.item != null) * * 链表首节点 */ transient Node&lt;E&gt; first; /** * Pointer to last node. * Invariant: (first == null &amp;&amp; last == null) || * (last.next == null &amp;&amp; last.item != null) * * 链表尾节点 */ transient Node&lt;E&gt; last; 属性很简单，定义了元素个数size和链表的首尾节点。 主要内部类典型的双链表结构： private static class Node&lt;E&gt; &#123; E item; Node&lt;E&gt; next; Node&lt;E&gt; prev; Node(Node&lt;E&gt; prev, E element, Node&lt;E&gt; next) &#123; this.item = element; this.next = next; this.prev = prev; &#125; &#125; 主要构造方法/** * Constructs an empty list. */ public LinkedList() &#123; &#125; /** * Constructs a list containing the elements of the specified * collection, in the order they are returned by the collection&#39;s * iterator. * * @param c the collection whose elements are to be placed into this list * @throws NullPointerException if the specified collection is null */ public LinkedList(Collection&lt;? extends E&gt; c) &#123; this(); addAll(c); &#125; 两个构造方法也很简单，可以看出是一个无界的队列。 添加元素作为一个双端队列，添加元素主要有两种，一种是在队列尾部添加元素，一种是在队列首部添加元素，这两种形式在LinkedList中主要是通过下面两个方法来实现的。 /** * Links e as first element. * 从队列首添加元素 */ private void linkFirst(E e) &#123; // 首节点 final Node&lt;E&gt; f = first; // 创建新节点，新节点的next是首节点 final Node&lt;E&gt; newNode = new Node&lt;&gt;(null, e, f); // 让新节点作为新的首节点 first = newNode; // 判断是不是第一个添加的元素，如果是就把last也置为新节点，否则把原首节点的prev指针置为新节点 if (f == null) last = newNode; else f.prev = newNode; // 元素个数加1 size++; // 修改次数加1，说明这是一个支持fail-fast的集合 modCount++; &#125; /** * Links e as last element. * 从队列尾添加元素 */ void linkLast(E e) &#123; // 队列尾节点 final Node&lt;E&gt; l = last; // 创建新节点，新节点的prev是尾节点 final Node&lt;E&gt; newNode = new Node&lt;&gt;(l, e, null); // 让新节点成为新的尾节点 last = newNode; // 判断是不是第一个添加的元素，如果是就把first也置为新节点，否则把原尾节点的next指针置为新节点 if (l == null) first = newNode; else l.next = newNode; // 元素个数加1 size++; // 修改次数加1 modCount++; &#125; /** * Inserts the specified element at the beginning of this list. * * @param e the element to add */ public void addFirst(E e) &#123; linkFirst(e); &#125; /** * Appends the specified element to the end of this list. * * &lt;p&gt;This method is equivalent to &#123;@link #add&#125;. * * @param e the element to add */ public void addLast(E e) &#123; linkLast(e); &#125; // Deque operations /** * Inserts the specified element at the front of this list. * 作为无界队列，添加元素总是会成功的 * * @param e the element to insert * @return &#123;@code true&#125; (as specified by &#123;@link Deque#offerFirst&#125;) * @since 1.6 */ public boolean offerFirst(E e) &#123; addFirst(e); return true; &#125; /** * Inserts the specified element at the end of this list. * * @param e the element to insert * @return &#123;@code true&#125; (as specified by &#123;@link Deque#offerLast&#125;) * @since 1.6 */ public boolean offerLast(E e) &#123; addLast(e); return true; &#125; 典型的双链表在首尾添加元素的方法了。 上面是作为双端队列来看，它的添加元素分为首尾添加元素，那么，作为List呢？ 作为List，是要支持在中间添加元素的，主要是通过下面这个方法实现的。 /** * Inserts element e before non-null Node succ. * 在节点succ之前添加元素 */ void linkBefore(E e, Node&lt;E&gt; succ) &#123; // assert succ != null; // succ是待添加节点的后继节点 ， 找到待添加节点的前置节点 final Node&lt;E&gt; pred = succ.prev; // 在其前置节点和后继节点之间创建一个新节点 final Node&lt;E&gt; newNode = new Node&lt;&gt;(pred, e, succ); // 修改后继节点的前置指针指向新节点 succ.prev = newNode; // 判断前置节点是否为空，如果为空，说明是第一个添加的元素，修改first指针，否则修改前置节点的next为新节点 if (pred == null) first = newNode; else pred.next = newNode; // 修改元素个数 size++; // 修改次数加1 modCount++; &#125; /** * Returns the (non-null) Node at the specified element index. * 寻找index位置的节点 */ Node&lt;E&gt; node(int index) &#123; // assert isElementIndex(index); // 因为是双链表，所以根据index是在前半段还是后半段决定从前遍历还是从后遍历 // 这样index在后半段的时候可以少遍历一半的元素 if (index &lt; (size &gt;&gt; 1)) &#123; // 如果是在前半段，就从前遍历 Node&lt;E&gt; x = first; for (int i = 0; i &lt; index; i++) x = x.next; return x; &#125; else &#123; // 如果是在后半段， 就从后遍历 Node&lt;E&gt; x = last; for (int i = size - 1; i &gt; index; i--) x = x.prev; return x; &#125; &#125; /** * Inserts the specified element at the specified position in this list. * Shifts the element currently at that position (if any) and any * subsequent elements to the right (adds one to their indices). * 在指定index位置处添加元素 * * @param index index at which the specified element is to be inserted * @param element element to be inserted * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public void add(int index, E element) &#123; // 判断是否越界 checkPositionIndex(index); // 如果index是在队列尾节点之后的一个位置 // 把新节点直接添加到尾节点之后 // 否则调用linkBefore()方法在中间添加节点 if (index == size) linkLast(element); else linkBefore(element, node(index)); &#125; 在中间添加元素的方法，典型的双链表在中间添加元素的方法。 添加元素的三种方式大致如下图所示： 在队列首尾添加元素很高效，时间复杂度为O(1)。 在中间添加元素比较低效，首先要先找到插入位置的节点，再修改前后节点的指针，时间复杂度为O(n)。 删除元素作为双端队列，删除元素也有两种方式，一种是队列首删除元素，一种是队列尾删除元素。 作为List，又要支持中间删除元素，所以删除元素一个有三个方法，分别如下： /** * Unlinks non-null first node f. * 删除首节点 */ private E unlinkFirst(Node&lt;E&gt; f) &#123; // assert f == first &amp;&amp; f != null; // 首节点的元素值 final E element = f.item; // 首节点的next指针 final Node&lt;E&gt; next = f.next; // 添加首节点的内容，协助GC f.item = null; f.next = null; // help GC // 把首节点的next作为新的首节点 first = next; // 如果只有一个元素，删除了，把last也置为空，否则把next的前置指针置为空 if (next == null) last = null; else next.prev = null; // 元素个数减1 size--; // 修改次数加1 modCount++; // 返回删除的元素 return element; &#125; /** * Unlinks non-null last node l. * // 删除尾节点 */ private E unlinkLast(Node&lt;E&gt; l) &#123; // assert l == last &amp;&amp; l != null; // 尾节点的元素值 final E element = l.item; // 尾节点的前置指针 final Node&lt;E&gt; prev = l.prev; // 清空尾节点的内容，协助GC l.item = null; l.prev = null; // help GC // 让前置节点成为新的尾节点 last = prev; // 如果只有一个元素，删除了把first置为空 // 否则把前置节点的next置为空 if (prev == null) first = null; else prev.next = null; // 元素个数减1 size--; // 修改次数加1 modCount++; // 返回删除的元素 return element; &#125; /** * Unlinks non-null node x. * 删除指定节点x */ E unlink(Node&lt;E&gt; x) &#123; // assert x != null; // x的元素值 final E element = x.item; // x的前置节点 final Node&lt;E&gt; next = x.next; // x的后置节点 final Node&lt;E&gt; prev = x.prev; // 如果前置节点为空，说明是首节点，让first指向x的后置节点，否则修改前置节点的next为x的后置节点 if (prev == null) &#123; first = next; &#125; else &#123; prev.next = next; x.prev = null; &#125; // 如果后置节点为空，说明是尾节点，让last指向x的前置节点， 否则修改后置节点的prev为x的前置节点 if (next == null) &#123; last = prev; &#125; else &#123; next.prev = prev; x.next = null; &#125; // 清空x的元素值，协助GC x.item = null; // 元素个数减1 size--; // 修改次数加1 modCount++; // 返回删除的元素 return element; &#125; /** * Removes and returns the first element from this list. * remove的时候如果没有元素抛出异常 * * @return the first element from this list * @throws NoSuchElementException if this list is empty */ public E removeFirst() &#123; final Node&lt;E&gt; f = first; if (f == null) throw new NoSuchElementException(); return unlinkFirst(f); &#125; /** * Removes and returns the last element from this list. * remove的时候如果没有元素抛出异常 * * @return the last element from this list * @throws NoSuchElementException if this list is empty */ public E removeLast() &#123; final Node&lt;E&gt; l = last; if (l == null) throw new NoSuchElementException(); return unlinkLast(l); &#125; /** * Retrieves and removes the first element of this list, * or returns &#123;@code null&#125; if this list is empty. * poll的时候如果没有元素返回null * * @return the first element of this list, or &#123;@code null&#125; if * this list is empty * @since 1.6 */ public E pollFirst() &#123; final Node&lt;E&gt; f = first; return (f == null) ? null : unlinkFirst(f); &#125; /** * Retrieves and removes the last element of this list, * or returns &#123;@code null&#125; if this list is empty. * poll的时候如果没有元素返回null * * @return the last element of this list, or &#123;@code null&#125; if * this list is empty * @since 1.6 */ public E pollLast() &#123; final Node&lt;E&gt; l = last; return (l == null) ? null : unlinkLast(l); &#125; /** * Removes the element at the specified position in this list. Shifts any * subsequent elements to the left (subtracts one from their indices). * Returns the element that was removed from the list. * 删除中间节点 * * @param index the index of the element to be removed * @return the element previously at the specified position * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public E remove(int index) &#123; // 检查是否越界 checkElementIndex(index); // 删除指定index位置的节点 return unlink(node(index)); &#125; 删除元素的三种方法都是典型的双链表删除元素的方法，大致流程如下图所示: 在队列首尾删除元素很高效，时间复杂度为O(1)。 在中间删除元素比较低效，首先要找到删除位置的节点，再修改前后指针，时间复杂度为O(n)。 栈LinkedList是双端队列，双端队列可以作为栈使用： /** * Pushes an element onto the stack represented by this list. In other * words, inserts the element at the front of this list. * * &lt;p&gt;This method is equivalent to &#123;@link #addFirst&#125;. * * @param e the element to push * @since 1.6 */ public void push(E e) &#123; addFirst(e); &#125; /** * Pops an element from the stack represented by this list. In other * words, removes and returns the first element of this list. * * &lt;p&gt;This method is equivalent to &#123;@link #removeFirst()&#125;. * * @return the element at the front of this list (which is the top * of the stack represented by this list) * @throws NoSuchElementException if this list is empty * @since 1.6 */ public E pop() &#123; return removeFirst(); &#125; 栈的特性是LIFO(Last In First Out)，所以作为栈使用也很简单，添加删除元素都只操作队列首节点即可 总结（1）LinkedList是一个以双链表实现的List； （2）LinkedList还是一个双端队列，具有队列、双端队列、栈的特性； （3）LinkedList在队列首尾添加、删除元素非常高效，时间复杂度为O(1)； （4）LinkedList在中间添加、删除元素比较低效，时间复杂度为O(n)； （5）LinkedList不支持随机访问，所以访问非队列首尾的元素比较低效； （6）LinkedList在功能上等于ArrayList + ArrayDeque；]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>List</tag>
        <tag>Collection</tag>
        <tag>源码分析</tag>
        <tag>LinkedList</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3安装opencv爬坑步骤]]></title>
    <url>%2Fposts%2F2018-12-04-python_opencv%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;python3安装opencv，但是导入失败？ &emsp;&emsp;各种尝试安装opencv,但是导入都是失败，这是什么问题呢？ &emsp;&emsp;以前总是这样安装：pip3 install opencv-python，安装是成功了，可是导入的时候总是报错，没找到cv2的包，这里，再安装一个opencv-contrib-python模块。 &emsp;&emsp;试试 pip3 install opencv-contrib-python &emsp;&emsp;这时候，如果导入cv2还报错，请按照如下错误解决问题： &emsp;&emsp;（1）ImportError: libjasper.so.1: cannot open shared object file: No such file or directory &emsp;&emsp;请安装 apt install libjasper-dev &emsp;&emsp;（2）ImportError: libQtGui.so.4: cannot open shared object file: No such file or directory &emsp;&emsp;请安装 apt install libqtgui4 &emsp;&emsp;（3）ImportError: libQtTest.so.4: cannot open shared object file: No such file or directory &emsp;&emsp;请安装 apt install libqt4-test &emsp;&emsp;这些问题，看着不难，但是从遇到到解决，还是花了不少时间。总结下，还是直接一次安装完比较好，这里提供一份完整爬坑指南： &emsp;&emsp;pip3 install opencv-contrib-python &emsp;&emsp;apt install libjasper-dev libqtgui4 libqt4-test libhdf5-dev libatlas-base-dev &emsp;&emsp;apt update &emsp;&emsp;相信到了这里，应该能搞定了！]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ArrayList 源码分析]]></title>
    <url>%2Fposts%2F2019-01-01-ArrayList%2F</url>
    <content type="text"><![CDATA[ArrayList是一种以数组实现的List，与数组相比，它具有动态扩展的能力，因此也可称之为动态数组。 简介ArrayList是一种以数组实现的List，与数组相比，它具有动态扩展的能力，因此也可称之为动态数组。 继承体系 ArrayList实现了List, RandomAccess, Cloneable, java.io.Serializable等接口。 ArrayList实现了List，提供了基础的添加、删除、遍历等操作。 ArrayList实现了RandomAccess，提供了随机访问的能力。 ArrayList实现了Cloneable，可以被克隆。 ArrayList实现了Serializable，可以被序列化。 源码解析属性/** * Default initial capacity. * 默认容量 */ private static final int DEFAULT_CAPACITY = 10; /** * Shared empty array instance used for empty instances. * 空数组，如果传入的容量是0时使用 */ private static final Object[] EMPTY_ELEMENTDATA = &#123;&#125;; /** * Shared empty array instance used for default sized empty instances. We * distinguish this from EMPTY_ELEMENTDATA to know how much to inflate when * first element is added. * 空数组，传入容量时使用，添加第一个元素的时候会重新初始化为默认容量大小 */ private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = &#123;&#125;; /** * The array buffer into which the elements of the ArrayList are stored. * The capacity of the ArrayList is the length of this array buffer. Any * empty ArrayList with elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA * will be expanded to DEFAULT_CAPACITY when the first element is added. * 存储元素的数值 */ transient Object[] elementData; // non-private to simplify nested class access /** * The size of the ArrayList (the number of elements it contains). * 集合中元素的个数 * @serial */ private int size; DEFAULT_CAPACITY 默认容量为10，也就是通过new ArrayList()创建时的默认容量。 EMPTY_ELEMENTDATA 空的数组，这种是通过new ArrayList(0)创建时用的是这个空数组。 DEFAULTCAPACITY_EMPTY_ELEMENTDATA 也是空数组，这种是通过new ArrayList()创建时用的是这个空数组，与EMPTY_ELEMENTDATA的区别是在添加第一个元素时使用这个空数组的会初始化为DEFAULT_CAPACITY（10）个元素。 elementData 真正存放元素的地方，使用transient是为了不序列化这个字段。 至于没有使用private修饰，后面注释是写的“为了简化嵌套类的访问”，但是实测加了private嵌套类一样可以访问（?）。 private表示是类私有的属性，只要是在这个类内部都可以访问，嵌套类或者内部类也是在类的内部，所以也可以访问类的私有成员。 size 真正存储元素的个数，而不是elementData数组的长度。 ArrayList(int initialCapacity)构造方法传入初始容量，如果大于0就初始化elementData为对应大小，如果等于0就使用EMPTY_ELEMENTDATA空数组，如果小于0抛出异常。 /** * Constructs an empty list with the specified initial capacity. * * @param initialCapacity the initial capacity of the list * @throws IllegalArgumentException if the specified initial capacity * is negative */ public ArrayList(int initialCapacity) &#123; if (initialCapacity &gt; 0) &#123; // 如果传入的初始容量大于0，就新建一个数组存储元素 this.elementData = new Object[initialCapacity]; &#125; else if (initialCapacity == 0) &#123; // 如果传入的初始容量等于0，使用空数组EMPTY_ELEMENTDATA this.elementData = EMPTY_ELEMENTDATA; &#125; else &#123; // 如果传入的初始容量小于0，抛出异常 throw new IllegalArgumentException(&quot;Illegal Capacity: &quot;+initialCapacity); &#125; &#125; ArrayList()构造方法不传初始容量，初始化为DEFAULTCAPACITY_EMPTY_ELEMENTDATA空数组，会在添加第一个元素的时候扩容为默认的大小，即10。 /** * Constructs an empty list with an initial capacity of ten. */ public ArrayList() &#123; // 如果没有传入初始容量，则使用空数组DEFAULTCAPACITY_EMPTY_ELEMENTDATA // 使用这个数组是在添加第一个元素的时候会扩容到默认大小10 this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA; &#125; ArrayList 构造方法传入集合并初始化elementData，这里会使用拷贝把传入集合的元素拷贝到elementData数组中，如果元素个数为0，则初始化为EMPTY_ELEMENTDATA空数组。 /** * Constructs a list containing the elements of the specified * collection, in the order they are returned by the collection&#39;s * iterator. * * 把传入集合的元素初始化到ArrayList中 * * @param c the collection whose elements are to be placed into this list * @throws NullPointerException if the specified collection is null */ public ArrayList(Collection&lt;? extends E&gt; c) &#123; // 集合转数组 elementData = c.toArray(); if ((size = elementData.length) != 0) &#123; // c.toArray might (incorrectly) not return Object[] (see 6260652) // 检查c.toArray()返回的是不是Object[]类型，如果不是，重新拷贝成Object[].class类型 if (elementData.getClass() != Object[].class) elementData = Arrays.copyOf(elementData, size, Object[].class); &#125; else &#123; // replace with empty array. // 如果c的空集合，则初始化为空数组EMPTY_ELEMENTDATA this.elementData = EMPTY_ELEMENTDATA; &#125; &#125; 为什么c.toArray();返回的有可能不是Object[]类型呢？ add(E e)方法添加元素到末尾，平均时间复杂度为O(1)。 /** * Appends the specified element to the end of this list. * * @param e element to be appended to this list * @return &lt;tt&gt;true&lt;/tt&gt; (as specified by &#123;@link Collection#add&#125;) */ public boolean add(E e) &#123; // 检查是否需要扩容 ensureCapacityInternal(size + 1); // Increments modCount!! // 把元素插入到最后一位 elementData[size++] = e; return true; &#125; private void ensureCapacityInternal(int minCapacity) &#123; ensureExplicitCapacity(calculateCapacity(elementData, minCapacity)); &#125; private static int calculateCapacity(Object[] elementData, int minCapacity) &#123; // 如果是空数组DEFAULTCAPACITY_EMPTY_ELEMENTDATA，就初始化为默认大小10 if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) &#123; return Math.max(DEFAULT_CAPACITY, minCapacity); &#125; return minCapacity; &#125; private void ensureExplicitCapacity(int minCapacity) &#123; modCount++; // overflow-conscious code // 扩容 if (minCapacity - elementData.length &gt; 0) grow(minCapacity); &#125; /** * Increases the capacity to ensure that it can hold at least the * number of elements specified by the minimum capacity argument. * * @param minCapacity the desired minimum capacity */ private void grow(int minCapacity) &#123; // overflow-conscious code int oldCapacity = elementData.length; // 新容量为旧容量的1.5倍 【右移运算 除以2的n次方】 int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1); // 如果新容量发现比需要的容量还小，则以需要的容量为准 if (newCapacity - minCapacity &lt; 0) newCapacity = minCapacity; // 如果新容量已经超过最大容量了，则使用最大容量 if (newCapacity - MAX_ARRAY_SIZE &gt; 0) newCapacity = hugeCapacity(minCapacity); // minCapacity is usually close to size, so this is a win: // 以新容量拷贝出来一个新数组 elementData = Arrays.copyOf(elementData, newCapacity); &#125; （1）检查是否需要扩容； （2）如果elementData等于DEFAULTCAPACITY_EMPTY_ELEMENTDATA则初始化容量大小为DEFAULT_CAPACITY； （3）新容量是老容量的1.5倍（oldCapacity + (oldCapacity &gt;&gt; 1)），如果加了这么多容量发现比需要的容量还小，则以需要的容量为准； （4）创建新容量的数组并把老数组拷贝到新数组； add(int index, E element)方法添加元素到指定位置，平均时间复杂度为O(n)。 /** * Inserts the specified element at the specified position in this * list. Shifts the element currently at that position (if any) and * any subsequent elements to the right (adds one to their indices). * * @param index index at which the specified element is to be inserted * @param element element to be inserted * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public void add(int index, E element) &#123; // 检查是否越界 rangeCheckForAdd(index); // 检查是否需要扩容 ensureCapacityInternal(size + 1); // Increments modCount!! // 将inex及其之后的元素往后挪一位，则index位置处就空出来了 System.arraycopy(elementData, index, elementData, index + 1, size - index); // 将元素插入到index的位置 elementData[index] = element; // 大小增1 size++; &#125; /** * A version of rangeCheck used by add and addAll. */ private void rangeCheckForAdd(int index) &#123; if (index &gt; size || index &lt; 0) throw new IndexOutOfBoundsException(outOfBoundsMsg(index)); &#125; （1）检查索引是否越界； （2）检查是否需要扩容； （3）把插入索引位置后的元素都往后挪一位； （4）在插入索引位置放置插入的元素； （5）大小加1； addAll 方法求两个集合的并集。 /** * Appends all of the elements in the specified collection to the end of * this list, in the order that they are returned by the * specified collection&#39;s Iterator. The behavior of this operation is * undefined if the specified collection is modified while the operation * is in progress. (This implies that the behavior of this call is * undefined if the specified collection is this list, and this * list is nonempty.) * * 将集合c中所有元素添加到当前ArrayList中 * * @param c collection containing elements to be added to this list * @return &lt;tt&gt;true&lt;/tt&gt; if this list changed as a result of the call * @throws NullPointerException if the specified collection is null */ public boolean addAll(Collection&lt;? extends E&gt; c) &#123; // 将集合c转为数组 Object[] a = c.toArray(); int numNew = a.length; // 检查是否需要扩容 ensureCapacityInternal(size + numNew); // Increments modCount // 将c中元素全部拷贝到数组的最后 System.arraycopy(a, 0, elementData, size, numNew); // 大小增加c的大小 size += numNew; // 如果c不为空就返回true，否则返回false return numNew != 0; &#125; （1）拷贝c中的元素到数组a中； （2）检查是否需要扩容； （3）把数组a中的元素拷贝到elementData的尾部； get(int index)方法获取指定索引位置的元素，时间复杂度为O(1)。 /** * Returns the element at the specified position in this list. * * @param index index of the element to return * @return the element at the specified position in this list * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public E get(int index) &#123; // 检查是否越界 rangeCheck(index); // 返回数组index位置的元素 return elementData(index); &#125; /** * Checks if the given index is in range. If not, throws an appropriate * runtime exception. This method does *not* check if the index is * negative: It is always used immediately prior to an array access, * which throws an ArrayIndexOutOfBoundsException if index is negative. */ private void rangeCheck(int index) &#123; if (index &gt;= size) throw new IndexOutOfBoundsException(outOfBoundsMsg(index)); &#125; @SuppressWarnings(&quot;unchecked&quot;) E elementData(int index) &#123; return (E) elementData[index]; &#125; （1）检查索引是否越界，这里只检查是否越上界，如果越上界抛出IndexOutOfBoundsException异常，如果越下界抛出的是ArrayIndexOutOfBoundsException异常。 （2）返回索引位置处的元素； remove(int index)方法删除指定索引位置的元素，时间复杂度为O(n)。 /** * Removes the element at the specified position in this list. * Shifts any subsequent elements to the left (subtracts one from their * indices). * * @param index the index of the element to be removed * @return the element that was removed from the list * @throws IndexOutOfBoundsException &#123;@inheritDoc&#125; */ public E remove(int index) &#123; // 检查是否越界 rangeCheck(index); modCount++; // 获取index位置的元素 E oldValue = elementData(index); // 如果index不是最后一位，则将index之后的元素往前挪一位 int numMoved = size - index - 1; if (numMoved &gt; 0) System.arraycopy(elementData, index+1, elementData, index, numMoved); // 将最后一个元素删除，帮助GC elementData[--size] = null; // clear to let GC do its work // 返回旧值 return oldValue; &#125; （1）检查索引是否越界； （2）获取指定索引位置的元素； （3）如果删除的不是最后一位，则其它元素往前移一位； （4）将最后一位置为null，方便GC回收； （5）返回删除的元素。 可以看到，ArrayList删除元素的时候并没有缩容。 remove(Object o)方法删除指定元素值的元素，时间复杂度为O(n)。 /** * Removes the first occurrence of the specified element from this list, * if it is present. If the list does not contain the element, it is * unchanged. More formally, removes the element with the lowest index * &lt;tt&gt;i&lt;/tt&gt; such that * &lt;tt&gt;(o==null&amp;nbsp;?&amp;nbsp;get(i)==null&amp;nbsp;:&amp;nbsp;o.equals(get(i)))&lt;/tt&gt; * (if such an element exists). Returns &lt;tt&gt;true&lt;/tt&gt; if this list * contained the specified element (or equivalently, if this list * changed as a result of the call). * * @param o element to be removed from this list, if present * @return &lt;tt&gt;true&lt;/tt&gt; if this list contained the specified element */ public boolean remove(Object o) &#123; if (o == null) &#123; // 遍历整个数组，找到元素第一次出现的位置，并将其快速删除 for (int index = 0; index &lt; size; index++) // 如果要删除的元素为null，则以null进行比较，使用== if (elementData[index] == null) &#123; fastRemove(index); return true; &#125; &#125; else &#123; // 遍历整个数组，找到元素第一次出现的位置，并将其快速删除 for (int index = 0; index &lt; size; index++) // 如果要删除的元素不为null，则进行比较，使用equals()方法 if (o.equals(elementData[index])) &#123; fastRemove(index); return true; &#125; &#125; return false; &#125; /* * Private remove method that skips bounds checking and does not * return the value removed. */ private void fastRemove(int index) &#123; // 这里没有越界的检查，是不是少了？？？ modCount++; // 如果index不是最后一位，则将index之后的元素往前挪一位 int numMoved = size - index - 1; if (numMoved &gt; 0) System.arraycopy(elementData, index+1, elementData, index, numMoved); // 将最后一个元素删除，帮助GC elementData[--size] = null; // clear to let GC do its work &#125; （1）找到第一个等于指定元素值的元素； （2）快速删除； fastRemove(int index)相对于remove(int index)少了检查索引越界的操作，可见jdk将性能优化到极致。 retainAll方法求两个集合的交集。 /** * Retains only the elements in this list that are contained in the * specified collection. In other words, removes from this list all * of its elements that are not contained in the specified collection. * * @param c collection containing elements to be retained in this list * @return &#123;@code true&#125; if this list changed as a result of the call * @throws ClassCastException if the class of an element of this list * is incompatible with the specified collection * (&lt;a href=&quot;Collection.html#optional-restrictions&quot;&gt;optional&lt;/a&gt;) * @throws NullPointerException if this list contains a null element and the * specified collection does not permit null elements * (&lt;a href=&quot;Collection.html#optional-restrictions&quot;&gt;optional&lt;/a&gt;), * or if the specified collection is null * @see Collection#contains(Object) */ public boolean retainAll(Collection&lt;?&gt; c) &#123; // 集合c不能为null Objects.requireNonNull(c); // 调用批量删除方法，这时complement传入true，表示删除不包含在c中的元素 return batchRemove(c, true); &#125; /** * 批量删除元素 * complement为true表示删除c中不包含的元素 * complement为false表示删除c中包含的元素 */ private boolean batchRemove(Collection&lt;?&gt; c, boolean complement) &#123; final Object[] elementData = this.elementData; // 使用读写两个指针同时遍历数组 // 读指针每次自增1，写指针放入元素的时候才加1 // 这样不需要额外的空间，只需要在原有的数组上操作就可以了 int r = 0, w = 0; boolean modified = false; try &#123; // 遍历整个数组，如果c中包含该元素，则把该元素放到写指针的位置（以complement为准） for (; r &lt; size; r++) if (c.contains(elementData[r]) == complement) elementData[w++] = elementData[r]; &#125; finally &#123; // Preserve behavioral compatibility with AbstractCollection, // even if c.contains() throws. // 正常来说r最后是等于size的，除非c.contains()抛出了异常 if (r != size) &#123; // 如果c.contains()抛出了异常，则把未读的元素都拷贝到写指针之后 System.arraycopy(elementData, r, elementData, w, size - r); w += size - r; &#125; if (w != size) &#123; // clear to let GC do its work // 将写指针之后的元素置为空，帮助GC for (int i = w; i &lt; size; i++) elementData[i] = null; modCount += size - w; // 新大小等于写指针的位置（因为每写一次写指针就加1，所以新大小正好等于写指针的位置） size = w; modified = true; &#125; &#125; // 有修改返回true return modified; &#125; （1）遍历elementData数组； （2）如果元素在c中，则把这个元素添加到elementData数组的w位置并将w位置往后移一位； （3）遍历完之后，w之前的元素都是两者共有的，w之后（包含）的元素不是两者共有的； （4）将w之后（包含）的元素置为null，方便GC回收； removeAll求两个集合的单方向差集，只保留当前集合中不在c中的元素，不保留在c中不在当前集体中的元素。 /** * Removes from this list all of its elements that are contained in the * specified collection. * * @param c collection containing elements to be removed from this list * @return &#123;@code true&#125; if this list changed as a result of the call * @throws ClassCastException if the class of an element of this list * is incompatible with the specified collection * (&lt;a href=&quot;Collection.html#optional-restrictions&quot;&gt;optional&lt;/a&gt;) * @throws NullPointerException if this list contains a null element and the * specified collection does not permit null elements * (&lt;a href=&quot;Collection.html#optional-restrictions&quot;&gt;optional&lt;/a&gt;), * or if the specified collection is null * @see Collection#contains(Object) */ public boolean removeAll(Collection&lt;?&gt; c) &#123; // 集合c不能为空 Objects.requireNonNull(c); // 同样调用批量删除方法，这时complement传入false，表示删除包含在c中的元素 return batchRemove(c, false); &#125; 与retainAll(Collection&lt;?&gt; c)方法类似，只是这里保留的是不在c中的元素。 总结（1）ArrayList内部使用数组存储元素，当数组长度不够时进行扩容，每次加一半的空间，ArrayList不会进行缩容； （2）ArrayList支持随机访问，通过索引访问元素极快，时间复杂度为O(1)； （3）ArrayList添加元素到尾部极快，平均时间复杂度为O(1)； （4）ArrayList添加元素到中间比较慢，因为要搬移元素，平均时间复杂度为O(n)； （5）ArrayList从尾部删除元素极快，时间复杂度为O(1)； （6）ArrayList从中间删除元素比较慢，因为要搬移元素，平均时间复杂度为O(n)； （7）ArrayList支持求并集，调用addAll(Collection&lt;? extends E&gt; c)方法即可； （8）ArrayList支持求交集，调用retainAll(Collection&lt;? extends E&gt; c)方法即可； （9）ArrayList支持求单向差集，调用removeAll(Collection&lt;? extends E&gt; c)方法即可； 思考elementData设置成了transient，那ArrayList是怎么把元素序列化的呢？ /** * Save the state of the &lt;tt&gt;ArrayList&lt;/tt&gt; instance to a stream (that * is, serialize it). * * @serialData The length of the array backing the &lt;tt&gt;ArrayList&lt;/tt&gt; * instance is emitted (int), followed by all of its elements * (each an &lt;tt&gt;Object&lt;/tt&gt;) in the proper order. */ private void writeObject(java.io.ObjectOutputStream s) throws java.io.IOException&#123; // Write out element count, and any hidden stuff // 防止序列化期间有修改 int expectedModCount = modCount; // 写出非transient非static属性（会写出size属性） s.defaultWriteObject(); // Write out size as capacity for behavioural compatibility with clone() // 写出元素个数 s.writeInt(size); // Write out all elements in the proper order. // 依次写出元素 for (int i=0; i&lt;size; i++) &#123; s.writeObject(elementData[i]); &#125; // 如果有修改，抛出异常 if (modCount != expectedModCount) &#123; throw new ConcurrentModificationException(); &#125; &#125; /** * Reconstitute the &lt;tt&gt;ArrayList&lt;/tt&gt; instance from a stream (that is, * deserialize it). */ private void readObject(java.io.ObjectInputStream s) throws java.io.IOException, ClassNotFoundException &#123; // 声明为空数组 elementData = EMPTY_ELEMENTDATA; // Read in size, and any hidden stuff // 读入非transient非static属性（会读取size属性） s.defaultReadObject(); // Read in capacity // 读入元素个数，没什么用，只是因为写出的时候写了size属性，读的时候也要按顺序来读 s.readInt(); // ignored if (size &gt; 0) &#123; // be like clone(), allocate array based upon size not capacity // 计算容量 int capacity = calculateCapacity(elementData, size); SharedSecrets.getJavaOISAccess().checkArray(s, Object[].class, capacity); // 检查是否需要扩容 ensureCapacityInternal(size); Object[] a = elementData; // Read in all elements in the proper order. // 依次读取元素到数组中 for (int i=0; i&lt;size; i++) &#123; a[i] = s.readObject(); &#125; &#125; &#125; 查看writeObject()方法可知，先调用s.defaultWriteObject()方法，再把size写入到流中，再把元素一个一个的写入到流中。 一般地，只要实现了Serializable接口即可自动序列化，writeObject()和readObject()是为了自己控制序列化的方式，这两个方法必须声明为private，在java.io.ObjectStreamClass#getPrivateMethod()方法中通过反射获取到writeObject()这个方法。 在ArrayList的writeObject()方法中先调用了s.defaultWriteObject()方法，这个方法是写入非static非transient的属性，在ArrayList中也就是size属性。同样地，在readObject()方法中先调用了s.defaultReadObject()方法解析出了size属性。 elementData定义为transient的优势，自己根据size序列化真实的元素，而不是根据数组的长度序列化元素，减少了空间占用。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>List</tag>
        <tag>ArrayList</tag>
        <tag>Collection</tag>
        <tag>源码分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国内主流视频网站VIP视频解析接口]]></title>
    <url>%2Fposts%2F2018-11-02-vipjiexi%2F</url>
    <content type="text"><![CDATA[为什么使用需要这些视频解析接口？ 首先没有广告，最重要的是支持VIP等需要会员才能观看的视频。 使用方法： 将需要播放VIP视频的网址复制到上述任一接口后面，在浏览器打开即可。 注意：如果接口失效，请联系我或者留言，我会及时更新！ 2019年01月02日更新：http://api.smq1.com/?url= https://api.smq1.com/?url= https://jx.hezeshi.net/ce/jlexi.php?url= http://api.hellosex.cc/jlexi.php?url= https://api.pangujiexi.com/player.php?url= http://at520.cn/jx/?url=http://www.cmys.tv/?url= https://jx.km58.top/jx/?url= http://www.fantee.net/fantee/?url= http://api.51ckm.com/Box.php?url= https://www.3aym.cn/?url= http://beaacc.com/api.php?url= http://api.zuilingxian.com/jiexi.php?url= http://jx.2tv.org/?url= http://api.bbbbbb.me/ipsign/player.php?v= http://17kyun.com/api.php?url= 2018年12月06日更新：https://jx.hezeshi.net/ce/jlexi.php?url= http://api.hellosex.cc/jlexi.php?url= https://api.pangujiexi.com/player.php?url= http://at520.cn/jx/?url= http://player.jidiaose.com/supapi/iframe.php?v= https://jx.okokjx.com/okok/?url= http://api.jykkk.com/?url= https://jx.km58.top/jx/?url= http://jx.fantee.net/fantee/?url= http://api.51ckm.com/Box.php?url= http://www.1717yun.com/jx/ty.php?url= https://www.3aym.cn/?url= http://beaacc.com/api.php?url= http://api.zuilingxian.com/jiexi.php?url= http://jx.2tv.org/?url= http://cdn.yangju.vip/k/?url= http://api.bbbbbb.me/ipsign/player.php?v= http://17kyun.com/api.php?url= 2018年08月10日更新：http://www.iwkan.cn/jx2/?url= http://api.ledboke.com/?url= http://ckparse.kaizhoukm.com/play/vippcq.php?url= http://jqaaa.com/jx.php?url= http://api.47ks.com/webcloud/?v= http://api.xfsub.com/index.php?url= http://jx.du2.cc/jx6.php?url= http://jx.du2.cc/?url= 2018年07月08日更新：http://lykezhan.com/vip/ http://yy.zhiliaotang.com/vip/ http://www.5ifxw.com/vip/ http://www.qmaile.com http://tv.myhack58.com http://www.51onb.com/filmvip/ 2018年06月27日更新：https://api.pangujiexi.com/player.php?url= http://api.ledboke.com/vip/?url= http://vip.qike.ink/?url= http://jx.598110.com/index.php?url= http://player.jidiaose.com/supapi/iframe.php?v= http://api.91exp.com/svip/?url= http://v.72du.com/api/?url= http://api.bbbbbb.me/ipsign/player.php?v= http://17kyun.com/api.php?url= 2018年05月02日更新：http://www.662820.com/xnflv/index.php?url= http://api.lldyy.net/svip/?url= http://www.82190555.com/index/qqvod.php?url= http://jiexi.92fz.cn/player/vip.php?url= http://jiexi.071811.cc/jx2.php?url= http://api.wlzhan.com/sudu/?url= http://beaacc.com/api.php?url= http://qxkkk.bid/jx/jx.php?url= http://www.27v9.cn/index.php?url= http://www.ckplayer.tv/kuku/?url= http://o8ve.cn/1/?url= http://api.xyingyu.com/?url= https://jx.kt111.top/jx/mf/?url= https://api.pangujiexi.com/player.php?url= http://api.lvcha2017.cn/?url= http://kkk.2016ve.cn/kkjx/index.php?url= http://mlxztz.com/vip/?url= http://www.aktv.men/?url= http://jy777.cn/XSD/XSD/?url= http://api.visaok.net/?url= http://api.xyingyu.com/?url= http://api.greatchina56.com/?url= http://jx.618g.com/?url= http://api.baiyug.vip/index.php?url= http://jx.jfysz.cn/jx.php/?url= http://jx.ektao.cn/jx.php/?url= http://jx.reclose.cn/jx.php/?url= http://jx.eayn.org.cn/jx.php/?url= http://api.xyingyu.com/?url= http://jx.iaeec.cn/jx.php/?url= http://jx.83y4n7a.cn/jx.php/?url= http://jx.cmbzzs.cn/jx.php/?url= http://api.greatchina56.com/?url= http://jx.as19811.cn/jx.php/?url= http://jx.sdjnd09.cn/jx.php/?url= http://api.baiyug.vip/index.php?url= http://jx.09876as.cn/jx.php/?url= http://jx.17ktv.com.cn/jx.php/?url= http://jx.ab78a.cn/jx.php/?url= http://jx.09877as.cn/jx.php/?url= http://jx.yipolo111.cn/jx.php/?url= http://jx.908astbb.cn/jx.php/?url= http://jx.dlzyrk001.cn/jx.php/?url= http://jx.dccmy.org.cn/jx.php/?url= http://jx.boctx.cn/jx.php/?url= http://jx.hxbte.cn/jx.php/?url= http://api.visaok.net/?url= http://jx.618g.com/?url= http://yun.baiyug.cn/vip/?url= http://api.baiyug.cn/vip/?url= https://api.flvsp.com/?url= http://api.xfsub.com/index.php?url= http://api.xfsub.com/index.php?url= http://jiexi.071811.cc/jx2.php?url= http://player.jidiaose.com/supapi/iframe.php?v= http://www.82190555.com/index/qqvod.php?url= http://api.pucms.com/?url= http://api.baiyug.cn/vip/index.php?url= https://api.flvsp.com/?url= http://www.82190555.com/index/qqvod.php?url= http://2gty.com/apiurl/yun.php?url= http://v.2gty.com/apiurl/yun.php?url= 2018年04月17日更新：http://api.visaok.net/?url= http://api.xyingyu.com/?url= http://api.greatchina56.com/?url= http://jx.618g.com/?url= http://api.xyingyu.com/?url= http://api.greatchina56.com/?url= http://api.visaok.net/?url= http://jx.618g.com/?url= http://zuiai.ml/dh/jx/ajx.php?url= http://zuiai.ml/dh/jx/jx.php?url= http://zuiai.ml/dh/jx/jiexi.php?url= 2018年03月22日更新：无广告 http://player.jidiaose.com/supapi/iframe.php?v= 爱奇艺推荐(无广告) http://api.xfsub.com/index.php?url= 爱奇艺、优酷推荐 https://jx.okokjx.com/okokjx/?url= 万能接口1 http://api.47ks.com/webcloud/?v= 万能接口2 http://wwwhe1.177kdy.cn/4.php?pass=2&amp;url= 万能接口3 https://api.daidaitv.com/index/?url= 万能接口4 http://jx.aeidu.cn/index.php?url= 爱奇艺接口1 http://api.baiyug.cn/vip/?url= 爱奇艺接口2 http://api.baiyug.cn/vip/index.php?url= 腾讯视频接口1 http://www.82190555.com/index/qqvod.php?url= 2018年01月22日更新：http://17kyun.com/api.php?url= http://jx.biaoge.tv/index.php?url= http://www.85105052.com/admin.php?url= http://api.iy11.cn/apiget.php?url= http://api.baiyug.cn/vip/index.php?url= http://jx.hanximeng.com/m3u8.php?url= http://jx.39book.com/Client/apiget.php?url= http://014670.cn/jx/ty.php?url= http://www.ibb6.com/x1/?url= http://tv.x-99.cn/api/wnapi.php?id= http://www.52rjb.cn/vip1/?url= http://www.52rjb.cn/vip2/?url= http://www.52rjb.cn/vip3/?url= http://49.4.144.33/xfjx/1.php?url= http://7cyd.com/vip/?url= https://47ksvip.duapp.com/vip/2mm/?vid= 2016年12月06日更新：http://www.vipjiexi.com/yun.php?url= http://www.wmxz.wang/video.php?url= http://www.yydy8.com/common/?url= http://www.wmxz.wang/video.php?url= http://5qiyi.sdyhy.cn/5qiyi/5qiyi1.php?url= http://5qiyi.sdyhy.cn/5qiyi/5qiyi2.php?url= http://vip.sdyhy.cn/ckflv/?url= http://player.gakui.top/?url= http://mt2t.com/yun?url= http://qtzr.net/s/?qt= http://www.xiguaso.com/api/index.php?url= http://www.vipjiexi.com/yun.php?url=]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>vip</tag>
        <tag>video</tag>
        <tag>视频解析</tag>
        <tag>接口</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于 Nginx以及uwsgi 的 Django 环境搭建]]></title>
    <url>%2Fposts%2F2018-04-12-django_centos_setup%2F</url>
    <content type="text"><![CDATA[基于Nginx以及uwsgi环境下，Django环境搭建，记录下来 !!! 安装 Django先安装pip,再通过pip安装Django。 1.安装pip cd /data; mkdir tmp; cd tmp; wget https://bootstrap.pypa.io/get-pip.py; python ./get-pip.py; 2.使用 PIP，安装 Django pip install Django==1.11.7 安装 Mysql1.安装并启动 mariadb 因为 CentOS 7 之后的版本都不在提供 Mysql 安装源，这里我们使用 mariadb 代替 mysql，依次执行下列命令 yum install mariadb mariadb-server -y yum install MySQL-python -y systemctl start mariadb 2.对 mariadb 进行初始化设置 执行下面命令，根据提示操作 设置新密码为 test 默认密码为空，直接回车即可 mysql_secure_installation 3.使用设置的密码登陆 mariadb 登陆 db，这里假设密码被设置为 test mysql -uroot -ptest 4.创建一个数据库 create database mysite; 5.成功后，输入 exit 命令退出 db exit 创建 Django 项目1.创建 mysite 项目 在 /data/ 目录下，创建一个名为 mysite 的 Django 项目 cd /data/ django-admin startproject mysite 2.修改配置文件，与 Mysql 数据库相关联 备注：SECRET_KEY 配置项无需修改 编辑 /data/mysite/mysite/settings.py 示例代码：/data/mysite/mysite/settings.py """ Django settings for mysite project. Generated by 'django-admin startproject' using Django 1.11.7. For more information on this file, see https://docs.djangoproject.com/en/1.11/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/1.11/ref/settings/ """ import os # Build paths inside the project like this: os.path.join(BASE_DIR, ...) BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'm4@g1=hz^08y(9d)v5l!8^*0wbla=oe15s@u8@5^pw=llfz48%' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = ["*"] # Application definition INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] ROOT_URLCONF = 'mysite.urls' TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] WSGI_APPLICATION = 'mysite.wsgi.application' # Database # https://docs.djangoproject.com/en/1.11/ref/settings/#databases DATABASES = { 'default': { 'ENGINE': 'django.db.backends.mysql', 'NAME': 'mysite', 'PASSWORD':'test', 'USER': 'root', 'HOST':'127.0.0.1', 'PORT':'3306', } } # Password validation # https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ] # Internationalization # https://docs.djangoproject.com/en/1.11/topics/i18n/ LANGUAGE_CODE = 'en-us' TIME_ZONE = 'UTC' USE_I18N = True USE_L10N = True USE_TZ = True # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/1.11/howto/static-files/ STATIC_URL = '/static/' 3.创建 Django 数据库 cd /data/mysite python manage.py migrate 4.启动 Django python manage.py runserver 如果没有报错，就说明 Django 已经安装成功了，并且跟 Mysql 的连接正常 5.退出 Django 按 ctrl+c 退出 Django 服务 安装 Nginx1.通过 yum 安装 Nginx yum install nginx -y 2.启动 Nginx 服务 systemctl start nginx 访问你的服务器IP，可以看到 nginx 的欢迎界面 http://&lt;您的 server IP 地址&gt;/ 安装 uwsgi使用 yum 命令安装 uwsgi yum install uwsgi uwsgi-plugin-python -y 让 Nginx，uwsgi，Django 协同工作[精华部分]1.修改 Nginx 配置文件 编辑 /etc/nginx/nginx.conf # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules. See /usr/share/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; } http { log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { listen 80 default_server; listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:8000; } error_page 404 /404.html; location = /40x.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } # Settings for a TLS enabled server. # # server { # listen 443 ssl http2 default_server; # listen [::]:443 ssl http2 default_server; # server_name _; # root /usr/share/nginx/html; # # ssl_certificate "/etc/pki/nginx/server.crt"; # ssl_certificate_key "/etc/pki/nginx/private/server.key"; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 10m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # # # Load configuration files for the default server block. # include /etc/nginx/default.d/*.conf; # # location / { # } # # error_page 404 /404.html; # location = /40x.html { # } # # error_page 500 502 503 504 /50x.html; # location = /50x.html { # } # } } 2.重启 Nginx /usr/sbin/nginx -s reload 3.创建 uwsgi 配置文件 在 /data/mysite 目录下创建 uwsgi.ini，参考下面的内容 示例代码：/data/mysite/uwsgi.ini [uwsgi] socket = 127.0.0.1:8000 chdir = /data/mysite wsgi-file = mysite/wsgi.py processes = 4 threads = 2 stats = 127.0.0.1:9191 uid = nobody gid = nobody master = true harakiri = 30 daemonize = /data/mysite/uwsgi.log plugins = python 4.启动 uwsgi uwsgi uwsgi.ini 搭建完成访问链接 http://&lt;您的 server IP 地址&gt;/ 如果可以看到 Django 的界面，恭喜你，环境搭建成功]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[180G喜马拉雅收费音频大合集]]></title>
    <url>%2Fposts%2F2018-04-10-ximalaya%2F</url>
    <content type="text"><![CDATA[所有链接密码都是6666，无任何解压密码，价值不清楚，选你喜欢的来存。 主要网站 No. 网站 链接 1 传统国学(14套) https://pan.baidu.com/s/12O8lYNrV9c2ixraP7_gY6A 2 健康养生 https://pan.baidu.com/s/136CBDpo1cxc4MJzeHyEMCA 3 金融财经 https://pan.baidu.com/s/1w5Mc4EHbP2ZNVsRpdV60uw 4 亲子育儿 https://pan.baidu.com/s/19jTHFqw0tIMO9yzwkLaP6w 5 外语语言 https://pan.baidu.com/s/1bNAxiNgrrXbe-jdZALIUEA 6 职场管理 https://pan.baidu.com/s/10VLPuVf21Y6-HwY0igHKXg 7 情感心理 https://pan.baidu.com/s/1OqFm40915-QV-9SOZSme0A 8 演讲语言 https://pan.baidu.com/s/1-wUFDqetIWWgdK9v_FnnaA 9 诗歌小说 https://pan.baidu.com/s/1ERmupi5LCiZP20eRGeMpDg 10 烧脑记忆 https://pan.baidu.com/s/1QFaQxQGpsQBL2YGy-2VvwA 密码：mkpt 11 文学艺术 https://pan.baidu.com/s/1eDZJDfgeAT4Y-Zjoo3rC_A 12 女神养成 https://pan.baidu.com/s/15X0sCMqMIRY_T9cvl0koBg 13 音乐艺术 https://pan.baidu.com/s/1Z8yugUin03MWH7xD1Is4-g 14 中学课程 https://pan.baidu.com/s/1SGnwi48txASVFht9Enwq5g 15 读书类 https://pan.baidu.com/s/1e1oM7o3Mbd4Oj8jBvU3gdw 16 人文社会 https://pan.baidu.com/s/1heGyEioXxTa6tEGItBC3Eg 17 个人素质 https://pan.baidu.com/s/1-VC0fcZchgq4LR6VtLHBZg 18 其他类 https://pan.baidu.com/s/1C-eNzhCujO0QfT35P4U4yA 19 新增栏目尚未分类 https://pan.baidu.com/s/1-uIgEDUEFt-WKYgacxZBhQ]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>喜马拉雅FM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你敢信?Java10发布了！！！]]></title>
    <url>%2Fposts%2F2018-03-21-java10%2F</url>
    <content type="text"><![CDATA[没有跳票的Java10，正式发布！ 不知是不是OUT了，Java9还没在生产环境中使用过，Java10就发布了。 下载地址：http://www.oracle.com/technetwork/java/javase/downloads/jdk10-downloads-4416644.html 为了更快地迭代更新，以及跟进社区反馈，Java 的版本发布周期变更为每六个月一次，并且承诺不会跳票。 新的发布周期也会严格遵循时间点，将在每年的 3 月份和 9 月份发布，所以 Java 10 的版本号是 18.3。 （貌似有点像Ubuntu的发布周期的模式） Java 10 是采用新发布周期的第一个版本，提供了 109 项新特性。 JDK10 包含 12 个JEP (改善提议）：1.【286】局部变量类型推断：对于开发者来说，这是JDK10唯一的真正特性。 它向Java中引入在其他语言中很常见的 var ，比如JavaScript。只要编译器可以推断此种类型，你不再需要专门声明一个局部变量的类型。 一个简单的例子是： var x = new ArrayList(); 这就消除了之前必须执行的 ArrayList 类型定义的重复。 有趣的是，需要注意 var 不能成为一个关键字，而是一个保留字。这意味着你仍然可以使用 var 作为一个变量，方法或包名，但是现在不能再有一个类被调用。 2.[310]应用类数据共享(CDS) ：CDS 在JDK5时被引进以改善 JVM 启动的表现，同时减少当多个虚拟机在同一个物理或虚拟的机器上运行时的资源占用。 JDK10 将扩展 CDS 到允许内部系统的类加载器、内部平台的类加载器和自定义类加载器来加载获得的类。 之前，CDS 的使用仅仅限制在了 bootstrap 的类加载器。 3.[314]额外的 Unicode 语言标签扩展：这将改善 java.util.Locale 类和相关的 API 以实现额外 BCP 47 语言标签的 Unicode 扩展。 尤其是，货币类型，一周的第一天，区域覆盖和时区等标签现在将被支持。 4.[322]基于时间的版本控制：JDK 版本字符串格式几乎与 JDK 版本一样多。有幸的是，这是最后需要使用到的，可以坚持用它。这种格式使用起来很像 JDK9 中介绍的提供一个更加语义的形式。 有一件困扰我的事是包含了一个 INTERIM 元素，正如 JEP 提议中所说，“永远是0”。好吧，如果永远是0，那它有什么意义呢？他们说这是为未来使用做保留… 这也消除了在 JDK9 中有过的相当奇怪的情形。 第一次更新是 JDK 9.0.1 , 非常符合逻辑。第二次更新是 JDK 9.0.4 ，不合逻辑。原因是，在 JDK9 的版本计数模式下，需要留下空白以便应急或不在预期安排的更新使用。但既然没有更新是必须的，为什么不简单称之为 JDK 9.0.2 呢？ 5.[319]根证书：在 JDK 中将提供一套默认的 CA 根证书。关键的安全部件，如 TLS ，在 OpenJDK 构建中将默认有效。这是 Oracle 正在努力确保 OpenJDK 二进制和 Oracle JDK 二进制功能上一样的工作的一部分，是一项有用的补充内容。 6.[307] 并行全垃圾回收器 G1 :G1 是设计来作为一种低延时的垃圾回收器（但是如果它跟不上旧的堆碎片产生的提升速率的话，将仍然采用完整压缩集合）。 在 JDK9 之前，默认的收集器是并行，吞吐，收集器。为了减少在使用默认的收集器的应用性能配置文件的差异，G1 现在有一个并行完整收集机制。 7.[313]移除 Native-Header 自动生成工具：Java9 开始了一些对 JDK 的家务管理，这项特性是对它的延续。当编译 JNI 代码时，已不再需要单独的工具来生成头文件，因为这可以通过 javac 完成。在未来的某一时刻，JNI 将会被 Panama 项目的结果取代，但是何时发生还不清楚。 8.[304]垃圾回收器接口:这不是让开发者用来控制垃圾回收的接口；而是一个在 JVM 源代码中的允许另外的垃圾回收器快速方便的集成的接口。 9.[312]线程-局部变量管控：这是在 JVM 内部相当低级别的更改，现在将允许在不运行全局虚拟机安全点的情况下实现线程回调。这将使得停止单个线程变得可能和便宜，而不是只能启用或停止所有线程。 10.[316]在备用存储装置上的堆分配：硬件技术在持续进化，现在可以使用与传统 DRAM 具有相同接口和类似性能特点的非易失性 RAM 。这项 JEP 将使得 JVM 能够使用适用于不同类型的存储机制的堆。 11.[317]试验性的基于 Java 的 JIT 编译器：最近宣布的 Metropolis 项目，提议用 Java 重写大部分 JVM 。乍一想，觉得很奇怪。如果 JVM 是用 Java 编写的，那么是否需要一个 JVM 来运行 JVM ？ 相应的，这导致了一个很好的镜像类比。 现实情况是，使用 Java 编写 JVM 并不意味着必须将其编译为字节码，你可以使用 AOT 编译，然后在运行时编译代码以提高性能。 这项 JEP 将 Graal 编译器研究项目引入到 JDK 中,并给将 Metropolis 项目成为现实，使 JVM 性能与当前 C++ 所写版本匹敌（或有幸超越）提供基础。 12.[296]合并 JDK 多个代码仓库到一个单独的储存库中：在 JDK9 中，有 8 个仓库： root、corba、hotspot、jaxp、jaxws、jdk、langtools 和 nashorn 。 在 JDK10 中这些将被合并为一个，使得跨相互依赖的变更集的存储库运行 atomic commit （原子提交）成为可能。 新 API有 73 项新增内容添加到了标准类库中。 1.java.awt.Toolkit int getMenuShortcutKeyMaskEx(): 确定哪个扩展修饰符键是菜单快捷键的适当加速键。 2.java.awt.geom.Path2D: void trimToSize(): 将此 Path2D 实例的容量计算到它当前的大小。应用可使用此操作将路径的存储空间最小化。这个方法也被添加到 Path2D.Double 和 Path2D.Float 类。 3.java.io.ByteArrayOutputStream: String toString(Charset): 重载 toString()，通过使用指定的字符集解码字节，将缓冲区的内容转换为字符串。 4.java.io.PrintStream: &amp;&amp; lang.io.PrintWriter: 这两个类都有三个新的构造函数，它们需要额外的 Charset 参数。 5.java.io.Reader: &amp;&amp; long transferTo(Writer): 从这个 Reader 中读取所有字符，并按照所读的顺序将字符写入给定的 Writer 。 6.java.lang.Runtime.Version: 有四种新方法返回新（JEP 322）版本字符串字段的整数值: feature()、interim()、patch() 和 update() 。 7.java.lang.StackWalker.StackFrame: String getDescriptor(): 按照 JVM 标准返回此堆栈帧所代表的方法的描述符。 String getMethodType():返回此堆栈帧所代表的方法类型，描述参数类型和返回值类型。 8.java.lang.invoke.MethodType: Class&lt;?&gt; lastParameterType():返回这个方法类型的最后一个参数类型。如果这个方法类型没有参数，则返回空类型作为岗哨值（Sentinel Value）。 9.java.lang.management.RuntimeMXBean: long getPid(): R 返回正在运行的 JVM 的进程 ID 。 10.java.lang.management.ThreadMXBean: ThreadInfo[] dumpAllThreads(boolean, boolean, int): 返回所有活动线程的线程信息，其中有指定的最大元素数量和同步信息的堆栈跟踪。 ThreadInfo[] getThreadInfo(long[], boolean, boolean, int): 返回每个线程的线程信息，这些线程的标识位于输入数组中，其中有指定的最大元素数量和同步信息的堆栈跟踪。 11.java.lang.reflect.MalformedParameterizedTypeException: 添加了一个新的构造函数，它以字符串的形式作为参数来获取详细信息。 12.java.net.URLDecoder: java.net.URLEncoder: 这两个类都有新的重载的解码和编码方法，将 charset 作为附加参数。 13.java.nio.channels.Channels: 两个新的静态重载方法，允许使用 Charset 的 newReader（ReadByteChannel，Charset）和newWriter（WriteByteChannel，Charset）。 14.java.nio.file.FileStore: long getBlockSize(): 在这个文件存储中返回每个块的字节数。 15.java.time.chrono: 这个包里有三个类，HijrahEra、MiinguoEra 和 ThaiBuddhistEra ，都有同样的方法。 String getDisplayName(TextStyle, Locale): 这将返回用于识别 era 的文本名称，适合于向用户展示。 16.java.time.format.DateTimeFormatter: localizedBy(Locale): 返回指定格式器的一个副本，其中包含地区、日历、区域、小数和/或时区的本地化值，这将取代该格式器中的值。 17.java.util: DoubleSummaryStatistics、IntSummaryStatistics 和 LongSummaryStatistics 都有一个新的构造函数，它包含 4 个数值。 它使用指定的计数、最小值、最大值和总和构造一个非空实例。 18.java.util.List: &amp;&amp; java.util.Map: &amp;&amp; java.util.Set: 这些接口中的每一个都增加了一个新的静态方法，copyOf(Collection）。这些函数按照其迭代顺序返回一个不可修改的列表、映射或包含给定集合的元素的集合。 19.java.util.Optional: &amp;&amp; java.util.OptionalDouble: &amp;&amp; java.util.OptionalInt: &amp;&amp; java.util.OptionalLong: 每一个类都有一个新的方法，orElseThrow() ，它本质上和 get() 一样，也就是说，如果 Optional 有值则返回。否则，将抛出 NoSuchElementException 。 20.java.util.Formatter: &amp;&amp; java.util.Scanner: 这两个类都有三个新的构造函数，除了其他参数之外，它们都带有一个 charset 参数。 21.java.util.Properties: 这有一个新的构造函数，它接受一个 int 参数。这将创建一个没有默认值的空属性列表，并且指定初始大小以容纳指定的元素数量，而无需动态调整大小。 还有一个新的重载的 replace 方法，接受三个 Object 参数并返回一个布尔值。只有在当前映射到指定值时，才会替换指定键的条目。 22.java.SplittableRandom: void nextBytes(byte[]): 用生成的伪随机字节填充一个用户提供的字节数组。 23.java.util.concurrent.FutureTask: 添加了 toString() 方法，该方法返回一个标识 FutureTask 的字符串，以及它的完成状态。 在括号中，状态包含如下字符串中的一个，“Completed Normally” 、“Completed Exceptionally”、 “Cancelled” 或者 “Not completed”。 24.java.util.concurrent.locks.StampedLock: boolean isLockStamp(long): 返回一个标记戳表示是否持有一个锁。 boolean isOptimisticReadStamp(long): 返回一个标记戳代表是否成功的进行了乐观读（optimistic read）。 boolean isReadLockStamp(long): 返回一个标记戳表示是否持有一个非独占锁（即 read lock ）。 boolean isWriteLockStamp(long): 返回一个标记戳表示是否持有一个独占锁（即 write lock ）。 25.java.jar.JarEntry: String getRealName(): 返回这个 JarEntry 的真实名称。如果这个 JarEntry 是一个多版本 jar 文件的入口，它被配置为这样处理，这个方法返回的名字是 JarEntry 所代表的版本条目的入口，而不是 ZipEntry.getName（） 返回的基本条目的路径名。 如果 JarEntry 不代表一个多版本 jar 文件的版本化条目或者 jar 文件没有被配置为作为一个多版本 jar 文件进行处理，这个方法将返回与 ZipEntry.getName（） 返回的相同名称。 26.java.util.jar.JarFile: Stream versionedStream(): 返回 jar 文件中指定版本的入口对应 Stream 。与 JarEntry 的 getRealName 方法类似，这与多版本 jar 文件有关。 27.java.util.spi.LocaleNameProvider: getDisplayUnicodeExtensionKey(String, Locale): 为给定的 Unicode 扩展键返回一个本地化名称。 getDisplayUnicodeExtensionType(String, String, Locale): 为给定的 Unicode 扩展键返回一个本地化名称。 28.java.util.stream.Collectors: toUnmodifiableList(): toUnmodifiableSet(): toUnmodifiableMap(Function, Function): toUnmodifiableMap(Function, Function, BinaryOperator): 这四个新方法都返回 Collectors ，将输入元素聚集到适当的不可修改的集合中。 29.java.lang.model.SourceVersion: 现在有了一个字段，它代表了 JDK 10 的版本。 30.java.lang.model.util.TypeKindVisitor6: javax.lang.model.util.TypeKindVisitor9: R visitNoTypeAsModule(NoType, P): 访问一个 MODULE 的 pseudo-type 。不确定为什么只有这两个类得到这个方法，因为还有 Visitor7 和 Visitor8 变量。 31.javax.remote.management.rmi.RMIConnectorServer: 这个类已经添加了两个字段： CREDENTIALS_FILTER_PATTERN 和 SERIAL_FILTER_PATTERN 。 32.javax.ButtonModel： Swing 还在更新！ ButtonGroup getGroup(): 返回按钮所属的组。通常用于单选按钮，它们在组中是互斥的。 33.javax.plaf.basic.BasicMenuUI: Dimension getMinimumSize(JComponent): 返回指定组件适合观感的最小大小。 JVM 规范改动这些改动相当小： 4.6节： 类文件格式（第99页）。在方法访问标志方面有小的改动。 4.7节： 模块属性（第169页）。如果模块不是 java.base ，则 JDK 10 不再允许设置 ACC_TRANSITIVE 或 ACC_STATIC_PHASE 。 4.10节： 类文件的校验（第252页）。dup2 指令已改变了 typesafe form 1 的定义，颠倒了 canSafleyPushList 一节中类型的顺序（你需要仔细查看才能发现它）。 5.2节： Java 虚拟机启动（第350页）。该描述添加了在创建初始类或接口时可使用用户定义的类加载器（ bootstrap 类加载器除外）。 对 Java 语言规范的更改这里还有一些更改，但主要是为了支持局部变量类型推断。 第3.8节： 标识符（第23页）。在忽略了可忽略的字符之后，标识符的等价性现在被考虑了。这似乎是合乎逻辑的。 （第24页）一个新的 Token，TypeIdentifier，它支持对局部变量类型推断的新用法，而 var 的使用不是关键字，而是一个具有特殊含义的标识符，作为局部变量声明的类型。 第4.10.5节： 类型预测（第76页）。这是一个相当复杂的部分，它涉及到捕获变量、嵌套类以及如何使用局部变量类型推断。建议阅读规范中的这一部分，而不是试图解释它。 第6.1节： 声明（第134页）。一个反映使用 TypeIdentifier 来支持局部变量类型的推断的小改动。 第6.5节： 确定名字的含义（第153页，第158页和第159页）。根据类型标识符的使用而更改类类型。 第6.5.4.1: 简单的 PackageOrTypeNames（第160页） 第6.5.4.2节： 合规的 PackageOrTypeNames（第160页）。这两种方式都与使用 TypeIdentifier 有细微的变化。 第7.5.3: 单静态导入声明（第191页）。这改变了导入具有相同名称的静态类型的规则。除非类型是相同的，否则这将成为一个错误，在这种情况下，重复被忽略。 第7.7.1: 依赖（第198页）。如果你明确声明一个模块需要 java.base ，那在必要的关键字之后，你就不能再使用修饰符（例如静态）了。 第8部分： 正式参数（第244页）。接收者参数可能只出现在一个实例方法的 formalparameters 列表，或者是一个内部类的构造函数中，其中内部类没有在静态上下文中声明。 第9.7.4节： 注释可能出现的地方（第335页）。有一个与局部变量类型推断相关的变更。 第14.4部分： 局部变量声明语句（第433页）。实现局部变量类型推断所需的大量更改。 第14节： 增强的 for 语句（第455页）。这个结构已经更新，包括对局部变量类型推断的支持。 第14.20.3节: try-with-resources（474页）。这个结构已经更新，包括对局部变量类型推断的支持。 最后，第 19 章有多处语法更新，反映了应更多使用 TypeIdentifier 类型标识符，而不仅仅是 Identifier 标识符，以支持局部变量类型推断。 杂项如果 Kerberos 的配置文件 krb5.conf 包含一个 INCLUDEDIR 选项，那么在 INCLUDEDIR 这个目录下所有以 .conf 结尾的文件都会被默认加载进来。 以前版本中已经过期的 Java 的启动选项 -d32 和 –d64 在当前版本已经被移除。如果在新的版本里仍然使用了这两个选项，JVM 将无法正常启动。 JDK10 支持 JDK9 中的新版本 Doclet，JDK6、JDK7、JDK8 中的 Doclet 版本都不再支持。 JDK10 重新启用了在 JDK9 中被不当过时的 newFactory() 方法。 JDK10 引入了一个新的 Javadoc 标签： {@summary…}，解决了以前版本无法生成 API 摘要的问题。 JDK10 去掉了 BiasedLockingStartupDelay 的 4 秒启动延时。 以下在 com.sun.security.auth 包中的过时的类在新版本中都已经被移除： PolicyFile SolarisNumericGroupPrincipal SolarisNumericUserPrincipal X500Principal SolarisLoginModule SolarisSystem 在 java.lang.SecurityManager 类中的以下属性和方法（从 JDK 1.2 就已经过时）终于被移除了： inCheck (属性) getInCheck classDepth classLoaderDepth currentClassLoader currentLoadedClass inClass inClassLoader 以下 java.lang.Runtime 类中已经被废弃的国际化方法在新版本被移除： getLocalizedInputStream getLocalizedOutputStream 以下废弃的 Hotspot –X 选项在新版本中被移除：-Xoss, -Xsqnopause, -Xoptimize, -Xboundthreads and –Xusealtsigs.policytool 在新版本中被移除。 javadoc 工具在新版本中可以通过 –add-stylesheets 命令选项支持多个 stylesheets 。 新版本的 JVM 能够根据系统分配给当前 Docker 容器的 CPU 数和内存来配置线程池和 GC 机制，而不再是直接使用系统的 CPU 和内存。并且增加了三个更强大的命令选项：-XX:InitialRAMPercentage、-XX:MaxRAMPercentage 和 -XX:MinRAMPercentage 。 新版本增加了一个新的系统属性：jdk.disableLastUsageTracking。 这个新增的属性就像它的名字一样，会禁用 JRE 的上一次使用跟踪。 如上所述，尽管距离 JDK 9 发布仅有六个月的时间，但 JDK 10 实际上有相当多的变化。 当然，它们中的一些是非常小的变更，但这表明目前每 6 个月发布一次的节奏，将在 Java 平台快速迭代改进方面起到作用。 也许以后的以后，每当Java新版本发布： 我们都会感慨一句：我X，JavaX又发布了！！！]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
        <tag>Java10</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手把手教你修改苹果设备定位]]></title>
    <url>%2Fposts%2F2018-03-20-changeAppleLocation%2F</url>
    <content type="text"><![CDATA[安卓修改定位比较简单，工具一大堆，这里提供一种修改苹果设备定位的方法！ 1.下载工具首先下载工具—-&gt;爱思助手 现在爱思助手已经更新到7.x版本了，安装并打开。 打开后，通过数据线连接好手机,连接成功后就会显示这个窗口。 2.修改步骤点击左上方的“设备信息”。打开后可以看到有一个“备份/恢复”，点击全备份设备。 然后选择“立即备份”，就可以把手机上面的数据备份到电脑上了，这里时间可能会有点长。 当显示备份完成后,点击上面的“备份恢复”界面，然后找到刚刚使用的“全备份文件管理”，然后直接打开查看。 打开后，可以看到“AppDomain-com.apple.Maps”的文件夹，点击打开。 然后接着打开Library/Preferences，并往下拉找到com.apple.Maps.plist文件，继续打开。 会看到有两行代码&lt;/dict&gt;和&lt;/plist&gt;，然后把下面的代码写在这两行上面： &lt;key&gt;__internal__PlaceCardLocationSimulation&lt;/key&gt;&lt;true/&gt; 完成后点击保存。 添加完成后，找到刚刚界面的全“全恢复数据”然后点击立即恢复。 重启一下手机。 打开手机地图，会发现下面多了一个选项Simulate Location。 点击这个，所有的软件位置定位都是这个虚拟位置。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>定位</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序猿视角"手撕"微信多开]]></title>
    <url>%2Fposts%2F2018-03-14-multi-wechat%2F</url>
    <content type="text"><![CDATA[白色情人节，快！ 乐！ 微信多开，不想使用其他多开软件，胆小，怕封号！ 从程序猿的视角，实现微信多开，对，徒手撕！ 1.简介软件代码是如何实现同一个软件只能打开一次的？ “死锁”操作系统上有两类锁，一类是进程内可见的，一类是跨进程可见的。 软件程序想要单实例运行，是使用了第二类锁， 声明一个跨进程可见的锁（互斥量Mutex）。 当你第二次打开同一个软件，启动时检测跨进程可见的锁是否存在，如果存在就退出，如果不存在就正常启动。 2.具体实现(1)下载微软的增强版资源管理器 下载地址：https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer (2)下载后用管理员身份运行，找到微信的进程 WeChat (3)按下Ctrl+L,显示详细信息，找到如下的两把锁。 WeChat_GlobalConfig_Multi_Process_Mutex _WeChat_App_Instance_Identity_Mutex_Name 然后右键， Close Handle， 结束掉这两把锁。 (4)OK,可以打开第二个微信了。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>WeChat</tag>
        <tag>微信</tag>
        <tag>微信多开</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有趣的 Docker 镜像]]></title>
    <url>%2Fposts%2F2018-02-08-docker-images%2F</url>
    <content type="text"><![CDATA[收集一些有趣的Docker镜像！！！ Docker 一键安装脚本 wget -qO- get.docker.com | sh 常用基础镜像Centos/Debian/Ubuntu CentOS：kinogmt/centos-ssh （默认用户名root，密码password，CentOS6.7） Debian：itscaro/debian-ssh（默认用户名root，密码root，Debian Jessie） Ubuntu：rastasheep/ubuntu-sshd（默认用户名root，密码root） 镜像1：rastasheep/ubuntu-sshd （带ssh的ubuntu）地址：https://hub.docker.com/r/rastasheep/ubuntu-sshd/ sudo docker run -d -p 22:22 rastasheep/ubuntu-sshd:16.04 用户名、密码为root 镜像2：itscaro/debian-ssh （带ssh的ubuntu）地址：https://hub.docker.com/r/itscaro/debian-ssh/ sudo docker run -d -p 22:22 itscaro/debian-ssh 用户名、密码为root 镜像3：tutum/centos （带ssh的centos）地址：https://hub.docker.com/r/tutum/centos/ sudo docker run -d -p 22:22 tutum/centos（centos7：tutum/centos:centos7 ） 用户名root，密码随机，请执行 docker logs 查看 镜像4：alexwhen/docker-2048（游戏2048）地址：https://hub.docker.com/r/alexwhen/docker-2048/ sudo docker run -d -p 80:80 alexwhen/docker-2048 镜像5：dorowu/ubuntu-desktop-lxde-vnc（noVNC、Firefox51）地址：https://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/ docker run -it -p 80:80 dorowu/ubuntu-desktop-lxde-vnc Browse http://ip/ 镜像6：consol/centos-xfce-vnc （VNC、noVNC、密码、chrome、Firefox45）地址：https://hub.docker.com/r/consol/ubuntu-xfce-vnc/ run -it -p 5901:5901 -p 6901:6901 -e “VNC_PW=my-new-password” -e VNC_RESOLUTION=800x600 consol/centos-xfce-vnc 默认VNC密码：vncpassword VNC-Server (default VNC port 5901) noVNC - HTML5 VNC client (default http port 6901) 其他相关 onsol/centos-xfce-vnc: Centos7 with Xfce4 UI session consol/ubuntu-xfce-vnc: Ubuntu with Xfce4 UI session consol/centos-icewm-vnc: dev Centos7 with IceWM UI session consol/ubuntu-icewm-vnc: dev Ubuntu with IceWM UI session 镜像7：fish/peerflix-server （支持磁力，种子）地址：https://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/ docker run -it -p 9000:9000 fish/peerflix-server Browse http://ip:9000/ 镜像8：jpillora/cloud-torrent（种子下载，搜索）地址：https://hub.docker.com/r/jpillora/cloud-torrent/ docker run -d -p 3000:3000 -v /path/to/my/downloads:/downloads jpillora/cloud-torrent Browse http://ip:3000/ 镜像9：jim3ma/google-mirror（google镜像，如需ssl要手动添加）地址：https://hub.docker.com/r/jim3ma/google-mirror/ docker run -d -p 80:80 jim3ma/google-mirror Browse http://ip/ 镜像10：google-reverse-proxy（google镜像，有ssl）地址：https://hub.docker.com/r/jokester/google-reverse-proxy/ docker run -d –publish 54321:20081 –restart=always jokester/google-reverse-proxy Browse http://ip:54321/ 镜像11：forsaken-mail（临时邮箱）地址：https://hub.docker.com/r/rockmaity/forsaken-mail/ docker run –name forsaken-mail -itd -p 25:25 -p 3000:3000 rockmaity/forsaken-mail Browse http://ip:3000/ 镜像12：imdjh/owncloud-with-ocdownloader支持 owncloud, torrent, aria2, youtube-dl 地址：https://hub.docker.com/r/imdjh/owncloud-with-ocdownloader/ docker run -d -p 80:80 -e OWNCLOUD_VERSION=9.1.4 -v /var/www/html/data:/var/www/html/data imdjh/owncloud-with-ocdownloader Browse http://ip/ 镜像13：v2ray/official（v2ray）地址：https://hub.docker.com/r/v2ray/official/ docker run -d -p 8001:8001 v2ray/official 镜像14：timonier/aria2地址：https://hub.docker.com/r/timonier/aria2/ docker run -i -t -v /data:/data –net host timonier/aria2 –dir=/data –enable-rpc –rpc-listen-all=true 配合使用：timonier/webui-aria2（aria2web管理） 地址：https://hub.docker.com/r/timonier/webui-aria2/ docker run -i -t -p 80:80 timonier/webui-aria2]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>Docker</tag>
        <tag>Docker镜像</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS 搭建 Docker 环境]]></title>
    <url>%2Fposts%2F2018-02-08-centos-docker%2F</url>
    <content type="text"><![CDATA[Docker, Docker, Docker !!! 有人说Docker是未来，也有人说Docker已死，不管怎样，该学还得学，该搬的砖一块都不会少。 2013年Docker刚发布那会，懵懂不甚理解，通过2015年慢慢的接触，才了解了点皮毛，还记得2016年arukas.io提供的Docker服务，玩的不亦乐乎。 关于介绍还是请各位Google去，这里系统地整理下Docker入门，在CentOS下搭建Docker环境。 安装与配置Docker1.安装Docker Docker 软件包已经包括在默认的 CentOS-Extras 软件源里。因此想要安装 docker，只需要运行下面的 yum 命令： yum install docker-io -y 直接yum安装，安装成功后查看版本 docker -v 启动docker service docker start 设置开机启动 chkconfig docker on 2.配置 Docker 因为国内访问 Docker Hub 较慢, 可以使用腾讯云提供的国内镜像源, 加速访问 Docker Hub,依次执行以下命令: echo "OPTIONS='--registry-mirror=https://mirror.ccs.tencentyun.com'" >> /etc/sysconfig/docker systemctl daemon-reload service docker restart Docker的简单操作1.下载镜像 下载一个官方的 CentOS 镜像到本地 docker pull centos 下载好的镜像就会出现在镜像列表里 docker images 2.运行容器 这时我们可以在刚才下载的 CentOS 镜像生成的容器内操作了。生成一个 centos 镜像为模板的容器并使用 bash shell docker run -it centos /bin/bash 这个时候可以看到命令行的前端已经变成了 [root@(一串 hash Id)] 的形式, 这说明我们已经成功进入了 CentOS 容器。 在容器内执行任意命令, 不会影响到宿主机, 如下: mkdir -p /data/simple_docker 可以看到 /data 目录下已经创建成功了 simple_docker 文件夹 ls /data 退出容器 exit 查看宿主机的 /data 目录, 并没有 simple_docker 文件夹, 说明容器内的操作不会影响到宿主机 ls /data 3.保存容器 查看所有的容器信息， 能获取容器的id docker ps -a 然后执行如下命令，保存镜像： docker commit -m=”备注” 你的CONTAINER_ID 你的IMAGE 部署完成大功告成！]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Ubuntu搭建FTP文件服务器]]></title>
    <url>%2Fposts%2F2018-02-07-ubuntu-ftp%2F</url>
    <content type="text"><![CDATA[经常需要搭建FTP，各种配置起来很繁琐，今天整理下，方便以后使用！ 安装并启动FTP服务(1) 安装VSFTPD 使用 apt-get 安装 vsftpd： sudo apt-get install vsftpd -y (2) 启动 VSFTPD 安装完成后 VSFTPD 会自动启动，通过 netstat 命令可以看到系统已经 监听了 21 端口： sudo netstat -nltp | grep 21 如果没有启动，可以手动开启 VSFTPD 服务： sudo systemctl start vsftpd.service 配置用户访问目录(1)新建用户主目录 sudo mkdir /home/uftp 执行完后，在 /home/uftp 就能看到新建的文件夹 uftp 了。 创建登录欢迎文件: sudo touch /home/uftp/welcome.txt (2)新建用户 uftp 并设置密码 创建一个用户 uftp: sudo useradd -d /home/uftp -s /bin/bash uftp 为用户 uftp 设置密码: sudo passwd uftp 删除掉 pam.d 中 vsftpd，因为该配置文件会导致使用用户名登录 ftp 失败： sudo rm /etc/pam.d/vsftpd (3)限制该用户仅能通过 FTP 访问 限制用户 uftp 只能通过 FTP 访问服务器，而不能直接登录服务器： sudo usermod -s /sbin/nologin uftp (4)修改 vsftpd 配置 sudo chmod a+w /etc/vsftpd.conf 修改 /etc/vsftpd.conf 文件中的配置（直接将如下配置添加到配置文件最下方）： # 限制用户对主目录以外目录访问 chroot_local_user=YES # 指定一个 userlist 存放允许访问 ftp 的用户列表 userlist_deny=NO userlist_enable=YES # 记录允许访问 ftp 用户列表 userlist_file=/etc/vsftpd.user_list # 不配置可能导致莫名的530问题 seccomp_sandbox=NO # 允许文件上传 write_enable=YES # 使用utf8编码 utf8_filesystem=YES 新建文件 /etc/vsftpd.user_list，用于存放允许访问 ftp 的用户： sudo touch /etc/vsftpd.user_list sudo chmod a+w /etc/vsftpd.user_list 修改 /etc/vsftpd.user_list ，加入刚刚创建的用户： uftp (5)设置访问权限 设置主目录访问权限（只读）： sudo chmod a-w /home/uftp 新建公共目录，并设置权限（读写）：[可选] sudo mkdir /home/uftp/public &amp;&amp; sudo chmod 777 -R /home/uftp/public 重启vsftpd 服务： sudo systemctl restart vsftpd.service 访问 FTP 服务FTP 服务已安装并配置完成，下面我们来使用该 FTP 服务。根据您个人的工作环境，选择一种方式来访问已经搭建的 FTP 服务。 (1)通过 FTP 客户端工具访问 FTP 客户端工具众多，下面推荐两个常用的： ① FileZilla - 跨平台的 FTP 客户端，支持 Windows 和 Mac ② WinSCP - Windows 下的 FTP 和 SFTP 连接客户端 下载和安装 FTP 客户端后，使用服务器的登录信息(服务器IP和ftp的用户名以及密码)进行连接即可，例如： 主机：100.100.100.100 用户名以及密码： uftp/uftp 输入密码后，如果能够正常连接，那么大功告成，您可以开始使用属于您自己的 FTP 服务器了！ 接下来，请上传任意一张图片到 FTP 服务器上的 uftp 的 public 目录下，然后，就可以在 /home/uftp/public 中看到了。 (2)通过 Windows 资源管理器访问 Windows 用户可以复制下面的链接到资源管理器的地址栏访问： ftp://uftp:uftp@100.100.100.100]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>FTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建 SVN 服务器]]></title>
    <url>%2Fposts%2F2018-02-06-linux-svn%2F</url>
    <content type="text"><![CDATA[虽然当今江湖上Git当道，但是SVN也是需要搭建的，今天整理下，方便以后使用！ 安装SVN服务端Subversion 是一个版本控制系统，相对于的 RCS 、 CVS ，采用了分支管理系统，它的设计目标就是取代 CVS 。 yum install -y subversion 创建SVN版本库创建项目版本库 mkdir -p /data/svn/myproject svnadmin create /data/svn/myproject 配置SVN信息1.配置文件简介 版本库中的配置目录 conf 有三个文件: authz 是权限控制文件 passwd 是帐号密码文件 svnserve.conf 是SVN服务综合配置文件 2.配置权限配置文件 authz 编辑 authz ，内容参考如下： [groups] #用户组 admin = admin,root,test #用户组所对应的用户 [/] #库目录权限 @admin = rw #用户组权限 *=r #非用户组权限 3.配置账号密码文件 passwd 编辑 passwd ，内容参考如下： [users] # harry = harryssecret # sally = sallyssecret admin = 123456 root = 123456 test = 123456 4.配置 SVN 服务综合配置文件 svnserve.conf 编辑 svnserve.conf ，内容参考如下： [general] # force-username-case = none # 匿名访问的权限 可以是read、write，none，默认为read anon-access = none #使授权用户有写权限 auth-access = write #密码数据库的路径 password-db = passwd #访问控制文件 authz-db = authz #认证命名空间，SVN会在认证提示里显示，并且作为凭证缓存的关键字 realm = /data/svn/myproject [sasl] 启动SVN服务1.启动SVN svnserve -d -r /data/svn 2.checkout SVN 项目 mkdir -p /data/workspace/myproject svn co svn://127.0.0.1/myproject /data/workspace/myproject --username root --password 123456 --force --no-auth-cache 3.提交文件到SVN服务器 从本地提交文件到 SVN 服务器，其中 root 密码为 /data/svn/myproject/conf/passwd 文件存储的密码 cd /data/workspace/myproject echo test >> test.txt svn add test.txt svn commit test.txt -m 'test' 提交成功后可以通过如下命令从本地项目删除文件: cd /data/workspace/myproject rm -rf test.txt 删除后可以通过 SVN 服务器恢复: cd /data/workspace/myproject svn update 部署完成大功告成！]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>SVN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS 搭建 Git 服务器]]></title>
    <url>%2Fposts%2F2018-02-05-centos-git%2F</url>
    <content type="text"><![CDATA[当今江湖上Git当道，整理下，方便以后使用！ Git 是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 这里以 CentOS 7.2 x64 的系统为环境，搭建 Git 服务器。 下载安装Git1.安装依赖库和编译工具 为了后续安装能正常进行，我们先来安装一些相关依赖库和编译工具 yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel 安装编译工具: yum install gcc perl-ExtUtils-MakeMaker 2.下载 Git 选一个目录，用来放下载下来的安装包，这里将安装包放在 /usr/local/src 目录里 cd /usr/local/src 到官网找一个新版稳定的源码包下载到 /usr/local/src 文件夹里 wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz 解压和编译: 解压下载的源码包 tar -zvxf git-2.10.0.tar.gz 解压后进入 git-2.10.0 文件夹 cd git-2.10.0 执行编译 make all prefix=/usr/local/git 编译完成后, 安装到 /usr/local/git 目录下 make install prefix=/usr/local/git 配置环境变量将 git 目录加入 PATH 将原来的 PATH 指向目录修改为现在的目录: echo ‘export PATH=$PATH:/usr/local/git/bin’ &gt;&gt; /etc/bashrc 生效环境变量； source /etc/bashrc 此时我们能查看 git 版本号，说明我们已经安装成功了； git –version 创建Git账号密码创建 git 账号 为我们刚刚搭建好的 git 创建一个账号 useradd -m gituser 然后为这个账号设置密码: passwd gituser 初始化Git仓库并配置用户权限1.创建 git 仓库并初始化 我们创建 /data/repositories 目录用于存放 git 仓库 mkdir -p /data/repositories 创建好后，初始化这个仓库 cd /data/repositories/ &amp;&amp; git init –bare test.git 2.配置用户权限 给 git 仓库目录设置用户和用户组并设置权限 chown -R gituser:gituser /data/repositories chmod 755 /data/repositories 查找 git-shell 所在目录, 编辑 /etc/passwd 文件，将最后一行关于 gituser 的登录 shell 配置改为 git-shell 的目录如下: gituser:x:500:500::/home/gituser:/usr/local/git/bin/git-shell 3.使用搭建好的 Git 服务 克隆 test repo 到本地: cd ~ &amp;&amp; git clone &#103;&#x69;&#x74;&#x75;&#x73;&#x65;&#x72;&#x40;&#49;&#50;&#x33;&#x2e;&#50;&#48;&#55;&#x2e;&#52;&#53;&#46;&#x31;&#50;&#x33;:/data/repositories/test.git 部署完成大功告成！]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Linux</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度莱茨狗免费领取]]></title>
    <url>%2Fposts%2F2018-02-03-baidupet%2F</url>
    <content type="text"><![CDATA[区块链今年是异常的火爆~ 百度推出了区块链数字狗，目前可以免费领取！！虽然不知道这个玩意有啥用，也不知道能玩出什么花，先领取了再说。 官网地址https://pet-chain.baidu.com/ 领取地址第一只：https://pet-chain.baidu.com/chain/splash 第二只：https://pet-chain.baidu.com/chain/splash?appId=2&amp;tpl=wallet 第三只：https://pet-chain.baidu.com/chain/splash?appId=3&amp;tpl=wallet 第四只：https://pet-chain.baidu.com/chain/splash?appId=4&amp;tpl=wallet 我是谁?汪汪汪~ 我是区块链赋能的莱茨狗。 我的小伙伴们，每只都有独一无二的基因。 一旦你拥有了我，我们的关系将被永远记录在区块链上，任何人都不能改变。 我有8个外貌特征，每个特征有两种不同的属性：稀有属性和普通属性。这些属性组合起来，将会决定我最终的稀有等级（普通、稀有、卓越、史诗、神话、传说）。 你要怎么玩儿？你可以在市场中，通过数字积分—微积分，购买你心仪的莱茨狗。 你也能在个人中心，查看并出售你所拥有的莱茨狗。 开发团队百度金融区块链实验室，拥有完整的企业级区块链解决方案，以及面向用户的应用级区块链解决方案。该实验室深入底层技术、平台化、区块链应用以及前瞻性领域研究，目前的技术已应用于多条核心业务线，支撑了超500亿元资产的真实性问题。同时，该实验室也是Hyperledger的核心董事会成员，致力于提升区块链行业的技术发展，推动全球区块链技术规范和标准的建立。 特别提示:01.点击免费领取后，系统将通过区块链，把属于你的狗狗和微积分发放到你的账户中。当领取人数较多时，写入区块链时间可能较长，请耐心等待。 02.当你提交购买订单后，由于订单需要写入区块链，将要一段交易确认时间。待交易确认后，才能在“我的狗窝”看到你所购买的莱茨狗。 03.当你在购买莱茨狗时，需扣除5微积分左右的手续费，用于支付写入区块链所需算力资源的消耗。因此，你的微积分余额必须大于【狗狗出售价格与手续费之和】，才能成功发起购买。实际收取的费用将由具体消耗的算力决定，待交易成功后，可在我的订单中查看。]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>区块链初代狗</tag>
        <tag>区块链</tag>
        <tag>初代狗</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JetBrains 系列注册码]]></title>
    <url>%2Fposts%2F2018-01-30-jetbrains-mynum%2F</url>
    <content type="text"><![CDATA[由于经常使用JetBrains系列的软件，总是各种找激活信息，很是麻烦，索性自己剁手上车。 2018年01月30日今天又买了一枚激活码，还是一年的有效期，到2019年01月29日。 关注微信公众号《听风吟且行》，回复“jetbrains”即可。 2017年07月30日最近买了个正版IntelliJ 系列注册码（心好痛），可以激活IntelliJ 系列所有产品。 一年有效期，目前到2018年08月25日。 在此分享给大家，拿好，不谢。 1D42KHYC787-eyJsaWNlbnNlSWQiOiJENDJLSFlDNzg3IiwibGljZW5zZWVOYW1lIjoiaXl1IHB1YiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJGb3IgZWR1Y2F0aW9uYWwgdXNlIG9ubHkiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE4LTA4LTI1In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE4LTA4LTI1In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTgtMDgtMjUifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOC0wOC0yNSJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE4LTA4LTI1In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTgtMDgtMjUifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxOC0wOC0yNSJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE4LTA4LTI1In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTgtMDgtMjUifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOC0wOC0yNSJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOC0wOC0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE4LTA4LTI1In0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMTgtMDgtMjUifSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAxOC0wOC0yNSJ9XSwiaGFzaCI6IjY1NDE0MzEvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-c/SJ1KIswpxXLzreXc8ou/XgLUVy3rvhsu9OqB7491QfoTfF8HeO4fxH4MSsB2MwxNhbgcsfCxDGR23u5Gc+RGuCTPlnsahWCsnVYpcFUxjML8MS0FN/5inrDrZXZLE+nUeW+fwgnwM2Y0ttBy/vDcvJKYasqV8YBFAkPIG+HuegiIFz1gYqF99xIofDzeL4pziUi/K5JyWHP/JCgTqQlzDnpNfqILJDyYJNqGkZwJBAWuytkcbvh85lmRPhePKl9gQr+Rh2k9jF8+bUCZh2OrZVey2KK5Kg2pi52QENhcVqJwWVzF0CTwqzpJStCw3g6OLiXUKDX+CJhH8/TfipPg==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>注册码</tag>
        <tag>IntelliJ</tag>
        <tag>IDEA</tag>
        <tag>PyCharm</tag>
        <tag>WebStorm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VS Code常用技巧]]></title>
    <url>%2Fposts%2F2018-01-22-vscode%2F</url>
    <content type="text"><![CDATA[2018年01月22日更新： 1.去掉vscode右侧的预览窗口 文件&gt;&gt;首选项&gt;&gt;设置 属性editor.minimap.enabled 改为false 2.代码格式化： Shift+Alt+F 或 Ctrl+Shift+P后输入format code]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>VSCode</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[放学别走，等你下课]]></title>
    <url>%2Fposts%2F2018-01-18-dengnixiake%2F</url>
    <content type="text"><![CDATA[欣赏歌曲，全词不押韵！这，其实已经是到了一个新的境界！ 众所周知，无论诗词，韵脚都是极为重要，决定了是否让人朗朗上口！而，周董眼中：押韵是什么？我自己来，随便来！偏偏，效果极好！ 专辑名称随意啦，歌词随意啦，MV随意啦（卡通图，敢不敢再随意一点），内容好，那就够了！ 音乐在线播放： http://music.163.com/song?id=531051217&amp;userid=91899213 下载： 下载地址 MV在线播放：http://music.163.com/mv/?id=5819032&amp;userid=91899213 下载（超清版）：下载地址 歌词作曲 : 周杰伦作词 : 周杰伦 **Jay**： 你住的 巷子里 我租了一间公寓 为了想与你不期而遇 高中三年 我为什么 为什么不好好读书 没考上跟你一样的大学 我找了份工作 离你宿舍很近 当我开始学会做蛋饼 才发现你 不吃早餐 喔 你又擦肩而过 你耳机听什么 能不能告诉我 **合**： 躺在你学校的操场看星空 教室里的灯还亮着你没走 记得 我写给你的情书 都什么年代了 到现在我还在写着 总有一天总有一年会发现 有人默默的陪在你的身边 也许 我不该在你的世界 当你收到情书 也代表我已经走远 **Gary**： 学校旁 的广场 我在这等钟声响 等你下课一起走好吗 **Jay**： 弹着琴 唱你爱的歌 暗恋一点都不痛苦 （Gary：一点都不痛苦） **Jay**： 痛苦的是你 **合**： 根本没看我 **Jay**： 我唱这么走心 却走不进你心里 （Gary：这么走心 进你心里） **Jay**： 在人来人往 **合**： 找寻着你 守护着你 不求结局 **Gary**： 喔 你又擦肩而过 （Jay：喔 而过） **Jay**： 我唱告白气球 终于你回了头 **合**： 躺在你学校的操场看星空 教室里的灯还亮着你没走 记得 我写给你的情书 都什么年代了 到现在我还在写着 总有一天总有一年会发现 有人默默的陪在你的身边 也许 我不该在你的世界 当你收到情书 也代表我已经走远]]></content>
      <categories>
        <category>Music</category>
      </categories>
      <tags>
        <tag>周杰伦</tag>
        <tag>等你下课</tag>
        <tag>单曲</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你一定要安装的反挖矿插件]]></title>
    <url>%2Fposts%2F2018-01-17-nocoin%2F</url>
    <content type="text"><![CDATA[为什么我们需要安装反挖矿扩展程序？ 主要此类扩展程序会自动检测网站是否加载挖矿脚本，如果检测到那么直接封锁脚本并禁止脚本加载。禁止后不会影响访问者继续浏览网页或者是使用其中的功能（少部分网站禁止加载挖矿脚本后会设置访问阻挡）。 另外挖矿脚本可以按照网站所有者的意愿进行自定义配置，如果设置的哈希计算强度比较低的话那么CPU负载并不会很高、风扇转速亦不会迅速提高，所以通常情况下我们亦不会发觉已经被挖矿。 当然如果是笔记本电脑的话拦截挖矿脚本还可以节省我们的电量，同时如果使用按流量计费的网络也可以帮助我们节省流量开支（挖矿消耗的流量实际上比较低）。 最重要的是现在越来越多的网站开始使用挖矿脚本，显然如果我们经常访问网页的话那么对于设备性能和电量来说都是个损失。 目前仅发现360极速浏览器和opera浏览器自带防挖矿功能（傲游很逗比的出了个挖矿版） 其他浏览器可下载对应的防挖矿扩展 另外，IE浏览器不支持挖矿脚本…… 相关浏览器插件下载Chrome插件： https://chrome.google.com/webstore/detail/no-coin/gojamcfopckidlocpkbelmpjcgmbgjcl FireFox插件1： https://addons.mozilla.org/zh-CN/firefox/addon/no-coin/?src=search FireFox插件2： https://addons.mozilla.org/zh-CN/firefox/addon/coinblock/?src=search TingBrowser开发事项： 在下个版本的TingChrome和TingFirefox中会集成反挖矿插件。 最近由于事情有点多，没有时间开发其他的浏览器版本。。。 TingBrowser官网： http://browser.iyu.pub]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>浏览器</tag>
        <tag>IT</tag>
        <tag>反挖矿</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mqtt专题（一）之MQTT协议]]></title>
    <url>%2Fposts%2F2017-12-27-mqtt_subject1%2F</url>
    <content type="text"><![CDATA[MQTT系列专题文章一之MQTT协议 一、基本概念MQTT(Message Queuing Telemetry Transport,消息队列遥测传输)是IBM开发的一个即时通信协议，是物联网的重要组成部分，该协议几乎支持所有的平台。最近工作中正在使用这个，这个博客写的简单是自学的笔记，不喜勿喷啊。。。 二、MQTT的特点MQTT 协议是为大量计算能力有限，且工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性： 使用发布/订阅消息模式，提供一对多的消息发布，解除应用程序耦合。这一点很类似于 XMPP，但是 MQTT 的信息冗余远小于XMPP（因为 XMPP 使用的是 XML 这种格式来传递数据）。 对负载内容屏蔽的消息传输。 使用 TCP/IP 提供网络连接。主流的 MQTT 是基于 TCP 连接进行数据推送的，但是同样有基于 UDP 的版本，叫做 MQTT-SN 。这两种版本由于基于不同的连接方式，优缺点自然也就各有不同了。 有三种消息发布服务质量（Qos）: 最多一次：消息发布完全依赖底层TCP/IP网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。这一种方式主要普通APP的推送，倘若你的智能设备在消息推送时未联网，推送过去没收到，再次联网也就收不到了。 至少一次：确保消息到达，但消息重复可能会发生。这一种方式比较鸡肋，在我的想象中没能想到这种质量的发送在常规的 APP 开发中有什么用处。 只有一次：确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。这种最高质量的消息发布服务还可以用于即时通讯类的APP 的推送，确保用户收到且只会收到一次。 小型传输，数据传输和狭义交换的最小化（协议头部只有2个字节），以降低网络流量。 通知机制，异常中断是通知传输双方。使用 Last Will 和 Testament 特性通知有关各方客户端异常中断的机制。Last Will：即遗言机制，用于通知同一主题下的其他设备发送遗言的设备已经断开了连接。 三、MQTT协议原理 协议实现方式 实现MQTT协议需要:客户端和服务器端 MQTT协议中有三种身份：发布者（Pushlish）、代理（Broker）（服务器）、订阅者（Subscribe）。其中，消息的发布者和订阅者都是客户端，消息代理是服务器，消息发布者可以同时是订阅者。 MQTT的消息分为：主题（Topic）和负载（payload）两部分 Topic,可以理解为消息的类型，订阅者Subscribe之后，就会收到该主题的消息内容（payload）。 payload，可以理解为消息的内容，是指订阅者具体的使用内容 网络传输和应用消息 MQTT会构建底层网络传输：它将建立客户端到服务器的连接，提供两者之间的一个有序的、无损的、基于字节的双向传输。当应用数据通过MQTT网络发送时，MQTT会把与之相关的服务质量（Qos）和主题名（Topic）相关联。 MQTT客户端 一个使用MQTT的应用程序或者设备，它总是建立到服务器的网络连接。客户端可以: 发布其他客户端可能会订阅的消息 订阅其他客户端发布的消息 退订或删除应用程序的消息 断开与服务器的连接 MQTT服务器 MQTT服务器可以称为“消息代理（Broker）”,也可以是一个 应用程序或者设备，它位于消息发布者和订阅者之间，它可以： 接受来自客户的网络连接 接受客户发布的应用信息 处理来自客户端的订阅和退订请求 向订阅的客户转发应用程序信息 MQTT协议中的订阅、主题、会话 订阅（Subscription） 订阅包换主题筛选器（Topic Filter）和最大服务质量（Qos）。订阅与一个会话（Session）关联。一个会话可以包含多个订阅。每一个会话的每个订阅都有一个不同的主题筛选器。 会话（Session）每个客户与服务器建立连接之后就是一个会话，客户端和服务器之间有状态交互。会话存在一个网络之间，也可能在客户端和服务器之间跨越多个连续的网络连接。 主题名（Topic）连接到一个应用程序消息的标签，该标签与服务器的订阅相匹配。服务器会将消息发送给订阅所匹配标签的每个客户端。 主题筛选器（Topic Filter）一个与主题名通配符筛选器，在订阅表达式中使用，表示订阅所匹配到的多个主题。 负载（Payload）消息订阅者所具体接收的内容 MQTT协议中的方法 MQTT 协议中定义了一些方法（也被称为动作）， 来于表示对确定资源所进行操作。 这个资源可以代表预先存在的数据或动态生成数据，这取决于服务器的实现。通常来说，资源指服务器上的文件或输出。 Connect，等待与服务器建立连接 Disconnect，等待MQTT客户端完成所做的工作，并与服务器断开TCP/IP会话 Subscribe，等待完成订阅 UnSubscribe，等待服务器取消客户端的一个或多个topic订阅 Publish， MQTT 客户端发送消息请求，发送完成后返回应用程序线程 未完待续。。。]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>mqtt</tag>
        <tag>协议</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐一部科幻小说《三体》（1-3全本）]]></title>
    <url>%2Fposts%2F2017-12-22-santi%2F</url>
    <content type="text"><![CDATA[三体 文化大革命如火如荼地进行，天文学家叶文洁在期间历经劫难，被带到军方绝秘计划“红岸工程”。叶文洁以太阳为天线，向宇宙发出地球文明的第一声啼鸣，取得了探寻外星文明的突破性进展。三颗无规则运行的太阳主导下，四光年外的“三体文明”百余次毁灭与重生，正被逼迫不得不逃离母星，而恰在此时，他们接收到了地球发来的信息。对人性绝望的叶文洁向三体人暴露了地球的坐标，彻底改变了人类的命运。 地球的基础科学出现了异常的扰动，纳米科学家汪淼进入神秘的网络游戏《三体》，开始逐步逼近这个世界的真相。汪淼参加一次玩家聚会时，接触到了地球上应对三体人到来而形成的一个秘密组织（ETO）。地球防卫组织中国区作战中心通过“古筝计划”，一定程度上挫败了拯救派和降临派扰乱人类科学界和其他领域思想的图谋，获悉处于困境之中的三体人为了得到一个能够稳定生存的世界决定入侵地球。 在运用超技术锁死地球人的基础科学之后，庞大的三体舰队开始向地球进发，人类的末日悄然来临。 三体Ⅱ·黑暗森林 三体人在利用科技锁死了地球人的科学之后，出动庞大的宇宙舰队直扑太阳系，面对地球文明前所未有的危局，人类组建起同样庞大的太空舰队，同时（PDC）利用三体人思维透明的致命缺陷，制订了“面壁计划”。出乎意料地，社会学教授罗辑被选出作为四位“面壁者”之一，展开对三体人的秘密反击。虽然三体人自身无法识破人类的计谋，却依靠由地球人中的背叛者挑选出的“破壁人”与“面壁者”进行智慧博弈。 在这场你死我活的文明生存竞争中，罗辑由一开始的逃避和享乐主义逐渐意识到自己的责任心，想到了一个对抗三体文明入侵的办法。科研军官章北海试图借一场陨石雨干涉飞船推进形式的研究方向。近二百年后，获选增援未来的他在人类舰队被“水滴”清除殆尽前，成功抢夺战舰逃离。此时罗辑证实了宇宙文明间的黑暗森林法则，任何暴露自己位置的文明都将很快被消灭。 借助于这一发现，他以向全宇宙公布三体世界的位置坐标相威胁，暂时制止了三体对太阳系的入侵，使地球与三体建立起脆弱的战略平衡。 三体Ⅲ·死神永生 身患绝症的云天明买下一颗星星送给暗恋着的大学同学程心，而程心因参与（PIA）向三体舰队发射探测器的工作，却想让航天专业背景的他放弃安乐死，作为被执行人将大脑捐献给阶梯计划。与三体文明的战争使人类首次看到了宇宙黑暗的真相，地球文明因为黑暗森林打击的存在如临大敌，不敢在太空中暴露自己。在零道德的宇宙中发起黑暗战役的战舰被诱导返航，却受到有道德的地球文明审判。 不称职的懦弱少女程心被选来充当掌握地球命运的执剑人，她因为罗辑的成功将这看作一项只需花费时间的任务，刚刚任职水滴就向地球发动攻击，程心为了忠于人性做出了错误的决定。在警示下继续逃离的“蓝色空间”号，受到具有发射引力波能力的“万有引力”号与两个同行的“水滴”追击，其上的人员进入四维空间摧毁水滴并占领了“万有引力”号，启动引力波广播向宇宙公布了三体星系的坐标。 云天明与地球取得联系，通过讲述三个自己编创的童话故事，向程心透露大量情报；人类自以为悟出了生存竞争的秘密，开始进行掩体计划，维德领导的空间曲率驱动研究因为程心的错误判断被终止，使得人类最终没有能够逃脱被高级文明毁灭的命运。因为宇宙中还存在更强大的文明，战争的方式和武器已经远超出人类的想象，极高文明发出了一张卡片大小的“二向箔”，使整个太阳系压缩为二维平面而毁灭。 在地球人类接近灭亡之际，只有程心和艾AA两个幸存者乘坐光速飞船离开。罗辑成为设置于冥王星的地球文明博物馆的“守墓人”，她们在冥王星带走人类文明的精华。在云天明送的恒星的一颗行星上，程心遇到关一帆且探讨了宇宙降维的真相，然而超乎一切之上的力量要求宇宙归零重生，在黑域中穿越长达1800万年的时空……程心没有等到云天明到来，和关一帆在小宇宙中短暂居住后重新进入大宇宙生活。 三体全本下载:点我下载]]></content>
      <categories>
        <category>小说</category>
      </categories>
      <tags>
        <tag>三体</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkdownPad2.5 注册码分享]]></title>
    <url>%2Fposts%2F2017-12-20-markdownpad-num%2F</url>
    <content type="text"><![CDATA[最近在使用Markdown书写，找到一款Markdown的编辑工具，分享一枚注册码。 邮箱： Soar360@live.com 授权秘钥： 1GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==]]></content>
      <categories>
        <category>福利</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>注册码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django开发的微信公众号上线]]></title>
    <url>%2Fposts%2F2017-07-05-django-wechat%2F</url>
    <content type="text"><![CDATA[近期在学习Python的Django框架，写了几个小项目之后，就想着用在公众号（听风吟且行）上试试。 经过一周的开发，终于上线了。现在大概支持3个功能： 1.快递查询：输入“快递公司名字+快递单号”，比如输入“圆通11111111111” 2.天气查询：输入“城市名+天气”，比如输入“深圳天气” 3.自动回复：自动语义回复的功能，随时随地陪您聊天。大概实现了如下的一些功能： （1）笑话大全：“讲个笑话” （2）故事大全：“讲个故事” （3）成语接龙：“成语接龙一心一意” （4）新闻资讯：“今日新闻” （5）姓名测试：“林俊杰这个名字好不好” （6）星座运势：“射手座的运势” （7）生活百科：“树莓派的简介” （8）图片搜索：“计算机的图片” （9）天气查询：“深圳天气” （10）菜谱大全：“糖醋排骨怎么做” （11）聊天对话：“你好” （12）列车查询：“今天深圳到合肥的火车” （13）航班查询：“今天深圳到上海的飞机” （14）数字计算：“3的立方是多少” （15）中英互译：“苹果的单词是什么” （16）问答百科：“天为什么是蓝的” （17）绕口令：“说个绕口令” （18）城市邮编：“深圳的邮编” 目前大概实现了这些功能，当然可能有些Bug，只是为了练手的，不喜勿喷。 有兴趣的童鞋可以关注（听风吟且行），体验一下，尽情的撩吧！ 体验之后，如果有什么好的建议，请回复我，我会逐渐完善的，谢谢！ 最后放上微信公众号的二维码：]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>WeChat</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tool工具页面正式上线！！！]]></title>
    <url>%2Fposts%2F2017-06-15-tool-django%2F</url>
    <content type="text"><![CDATA[2017年06月15日Tool后台写了一个星期，框架大概搭建起来。。。 接下来就是码代码。 先放上几个小工具，后面慢慢增加（针对需求的优先级） 界面目前还没怎么优化，先将就着看吧，先把功能完善。。。哈哈^_^ 项目环境： 整套项目使用Django框架，使用Python3开发。 项目还在持续设计中，如有好的建议，留言告诉我，我会加入你所期待的功能。 https://tool.hunit.cn]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单Python抓取网页下载地址]]></title>
    <url>%2Fposts%2F2017-01-19-getlinkbypython%2F</url>
    <content type="text"><![CDATA[下午，一哥们说要下载美剧《福尔摩斯：基本演绎法》，网页上几十个迅雷下载链接，嫌麻烦不愿一个一个点，我就建议了如下方法： 写个程序去抓取网页上有用的迅雷下载链接，再把全部链接复制到迅雷，就OK。 这里我用Python简单写了个。。。不喜勿喷。。。 抓取的网页：http://www.qtfy.cc/mjxz/13553.html # -*- coding: utf8 -*- import urllib.request as request from bs4 import BeautifulSoup def geturl(href): html = request.urlopen(href).read().decode('utf-8') html_Soup = BeautifulSoup(html, 'lxml') a = html_Soup.find_all('a') for link in a: if link.get('href') is not None: if "thunder" in link.get('href') : print(link.get('href')) if "ed2k" in link.get('href') : print(link.get('href')) if __name__ == '__main__': geturl("http://www.qtfy.cc/mjxz/13553.html") 简单易懂，达到想要的效果就行。 针对其他的电影网站下载链接，稍微改下即可。]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BeautifulSoup</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[情怀再起--Opera发布概念网页浏览器Opera Neon]]></title>
    <url>%2Fposts%2F2017-01-13-operaneon%2F</url>
    <content type="text"><![CDATA[Opera 今天展示了首款概念网页浏览器,代号为 Opera Neon。Opera Neon 采用与标准版 Opera 浏览器相同的渲染引擎,但 Neon 的重点是突出显示网页内容。Opera Neon 包含全新用户界面,包括使用用户桌面壁纸的起始页面,包含视频播放器、图库和下载管理器的侧栏,以及视觉标签页条,让用户可以更轻松的在标签页之间切换。 &nbsp; 此外,Opera Neon 还内置了“智能系统”,可以管理标签页,将经常访问的标签页整理至顶部,将不经常访问的页面转移至底部。Opera Neon 还支持弹出式视频播放窗口,方便用户浏览其他网页时继续观看视频。其他功能包括,网页截图功能,分屏模式等。 Opera Neon官网：http://www.opera.com/zh-cn/computer/neon Feast your eyes Engage your senses Free your mind Visual tabs and gravity Snap-to-gallery Split screen mode Video pop-out and player&nbsp; 首个版本的Opera Neon目前已经推出了以下内容： 浏览器的起始页面将会和电脑使用相同的背景，也就是浏览器起始页类似透明； 首个版本已经内置媒体播放器、图片库以及下载管理器，其位于浏览器左侧边栏； 在浏览器右侧的视觉化分页栏可以让用户更方便的辨识相关的标签页内容； 自动化管理标签页的智能系统，会将常用的标签页漂浮到上方、其他则沉到下方； 对于还有视频的网页可以将播放的视频弹出（这个似乎不少浏览器都有了）； 可以直接截取屏幕截图到图片库，用户可以在任何地方截图存储并方便上传； 双屏模式：可以让两个页面同时展示、开启和使用等等；Opera Neon属于概念浏览器且代表了Opera对未来浏览器的愿景，其不会取代现有的Opera浏览器，但其中的某些新功能也会被慢慢增添至Opera浏览器中。 目前该浏览器已支持Windows和Mac平台，有兴趣的用户可以下载测试版： 在线安装包： Opera Neon （国内下载较慢） 离线安装包： Opera Neon]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>浏览器</tag>
        <tag>Opera</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS获取系统信息的Shell脚本]]></title>
    <url>%2Fposts%2F2017-01-11-getsysteminfobyshell%2F</url>
    <content type="text"><![CDATA[由于要监测服务器的运行状态，练手写了个简单的shell脚本。 大概实现了如下两个简单系统信息的展示： 功能一：获取操作系统的基本信息（内核、系统版本、网络地址等） 功能二：获取系统的运行状态（CPU负载、内存以及磁盘的使用率等） &nbsp; ########################################################################## #File Name:systemmonitor.sh #Author:Yuolvv #Blog:http://blog.iyu.pub ########################################################################## #!/bin/bash #把屏幕上的内容清空 clear if [[ $# -eq 0 ]] then echo -e '\E[33m'"#########################系统分析#########################" #定义一个高亮输出的变量 output=$(tput sgr0) #检查系统类型，使用uname -o命令 os=$(uname -o) echo -e '\E[32m'"系统类型:"$output $os #获取操作系统版本类型 #os_name=$(cat /etc/issue | grep -e "Server") #os_name=$(lsb_release -a | grep -e "Description") os_name=$(cat /etc/redhat-release) echo -e '\E[33m'"系统版本:"$output $os_name #获取CPU的指令集 os_bit=$(uname -m) echo -e '\E[34m'"系统位数:"$output $os_bit #获取内核版本 os_kernel=$(uname -r) echo -e '\E[35m'"内核版本:"$output $os_kernel #获取主机名￥hostname或者uname -n hostname=$(hostname) #获取内网IP inner=$(hostname -I) echo -e '\E[36m'"内网IP:"$output $inner #获取外网IP outer=$(curl -s http://ipecho.net/plain) echo -e '\E[29m'"外网IP:"$output $outer #获取DNS，从/etc/resolv.conf文件提取匹配 nameservers=$(cat /etc/resolv.conf | grep -E "\&lt;nameserver[ ]"+|awk '{print $NF}') echo -e '\E[31m'"系统DNS:"$output $nameservers #判断当前网络的连通性，直接使用ping命令测试 ping -c 2 www.ifeng.com &amp;&gt;/dev/null &amp;&amp; echo "网络连通:yes"||echo "网络连通:no" #检查当前登录的用户，使用who命令输出到一个临时文件中 who &gt;/tmp/who echo -e '\E[32m'"当前登录用户:"$output &amp;&amp; cat /tmp/who #命令输出后删除临时文件 rm -rf /tmp/who echo -e '\E[33m'"##########################################################" echo -e '\E[33m'"#########################运行状态#########################" #获取系统已经使用的内存，通过awk命令文本进行提取，然后计算出结果转换成MB system_men=$(awk '/MemTotal/{total=$2}/MemFree/{free=$2}END{print (total-free)/1024}' /proc/meminfo) echo -e '\E[36m'"系统使用内存:"$output $system_men"M" #获取应用使用内存，通过awk命令文本进行提取，然后计算出结果换算成MB app_men=$(awk '/MemTotal/{total=$2}/MemFree/{free=$2}/Cached/{cached=$2}/Buffers/{buffers=$2}END{print (total-free-cached-buffers)/1024}' /proc/meminfo) echo -e '\E[36m'"应用程序使用内存:"$output $app_men"M" #获取系统CPU负载 load_average=$(top -n 1 -b | grep "load average:" | awk '{print $12 $13 $14}') echo -e '\E[33m'"CPU负载:"$output $load_average #获取磁盘状况 disk=$(df -hP | grep -vE 'Filesystem|tmpfs'|awk '{print $1 "总量:"$2 "已使用:"$3 "使用率:"$5}') echo -e '\E[33m'"磁盘状况:"$output $disk echo -e '\E[33m'"##########################################################" else echo "shell脚本不能运行请联系我Email:1@iyu.pub" fi 代码浅显易懂，也加上了注释，这里就不逐行解释了。 代码的运行方法： 1.新建个sh文件systemmonitor.sh,把上面的代码复制进去。 或者使用wget命令： wget http://www.iyu.pub/fun/systemmonitor.sh 2.给文件执行的权限： chmod +x systemmonitor.sh 3.运行脚本： sh systemmonitor.sh 或者 ./systemmonitor.sh &nbsp; 好了，简单的分享就到这了。 &nbsp; &nbsp;]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>脚本</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有道云笔记 去除左下角广告]]></title>
    <url>%2Fposts%2F2017-01-10-delyoudaoad%2F</url>
    <content type="text"><![CDATA[找到有道云笔记的安装路径，xxx\Youdao\YoudaoNote\theme\build.xml 用notepad++打开这个文件，根据type=”adpanel”找到如下代码： PanelAd type=&quot;adpanel&quot; css=&quot;public&quot; ass=&quot;mainform panelclient PanelAd&quot;&gt; &lt;panelTopLine type=&quot;panel&quot; css=&quot;AdPanel&quot; Dockstyle=&quot;top&quot; Bounds=&quot;0,0,0,1&quot;/&gt; &lt;MiddlePhotoPanel type=&quot;panel&quot; css=&quot;public&quot; DockStyle=&quot;top&quot; Bounds=&quot;0,0,250,160&quot; Margin=&quot;0,13,0,13&quot;&gt; &lt;AdPhoto type=&quot;photo&quot; css=&quot;Ad AdPhoto&quot; AnchorStyle=&quot;center&quot; AutoZoom=&quot;ZoomEqual&quot; Bounds=&quot;0,0,200,130&quot;&gt; &lt;AdClose type=&quot;button&quot; css=&quot;adclear&quot; AnchorStyle=&quot;topright&quot; Bounds=&quot;-1,1,24,24&quot; /&gt; &lt;AdText type=&quot;label&quot; css=&quot;AdText&quot; AnchorStyle=&quot;bottomleft&quot; Bounds=&quot;6,-6,25,10&quot;/&gt; &lt;/AdPhoto&gt; &lt;/MiddlePhotoPanel&gt; &lt;/PanelAd&gt; 修改上面的这段代码： （1）修改第2行： &lt;panelTopLine type=&quot;panel&quot; css=&quot;AdPanel&quot; Dockstyle=&quot;top&quot; Bounds=&quot;0,0,0,1&quot;/&gt; 改为： &lt;panelTopLine type=&quot;panel&quot; css=&quot;AdPanel&quot; Dockstyle=&quot;top&quot; Bounds=&quot;0,0,0,0&quot;/&gt; （2）修改第4行： &lt;AdPhoto type=&quot;photo&quot; css=&quot;Ad AdPhoto&quot; AnchorStyle=&quot;center&quot; AutoZoom=&quot;ZoomEqual&quot; Bounds=&quot;0,0,200,130&quot;&gt; 改为： &lt;AdPhoto type=&quot;photo&quot; css=&quot;Ad AdPhoto&quot; AnchorStyle=&quot;center&quot; AutoZoom=&quot;ZoomEqual&quot; Bounds=&quot;0,0,0,0&quot;&gt; 保存之后重启有道云笔记，就可以了。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>去广告</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017元旦香港维多利亚港烟火表演]]></title>
    <url>%2Fposts%2F2017-01-01-newyear%2F</url>
    <content type="text"><![CDATA[2017的元旦，香港跨年！ 香港地标维多利亚港以“烟花音乐汇演”喜迎2017！ 烟花、烟火、灯光以及音乐在著名地标的衬托下，于维多利亚港上空交织绽放，共同迎接2017年的到来。 “六星连环”、“蝴蝶飞舞”、“20响礼炮鸣放” Youtube超清：https://www.youtube.com/embed/2QD9InOhd_Q 优酷超清：http://player.youku.com/embed/XMTg5NTMwNjcyNA==]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>香港</tag>
        <tag>烟火</tag>
        <tag>表演</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【深圳】TOP 链接公益 • 移动技术年度盛典]]></title>
    <url>%2Fposts%2F2016-12-21-socialprogrammer%2F</url>
    <content type="text"><![CDATA[社会程序员技术改变生活，让信息的流通、人和人的连接、协作变得更加有效率；技术无边界，用技术做些公益的事情，能将温暖传递到更多角落。当技术遇上公益会产生怎样的【催化反应】？ 【T.O.P链接公益·移动技术年度盛典】由个推·云之讯·Ping++联合多家合作伙伴共同举办。 术业有专、成事有先—-T.O.P（Tech &amp; Organization &amp; Partner） 活动邀请到那些勇于探索移动新技术，实践新想法的领路者们，分享他们在产品技术实践上的见解与心得。 希望有更多的人加入“社会程序员”的行列，我们携手让技术赋能公益。 这是我上周末参加的一个活动，感触挺深的，在此分享给大家。 今天收到官方发布的录制视频，特此分享！ &nbsp; &nbsp; &nbsp; &nbsp;]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>公益</tag>
        <tag>技术</tag>
        <tag>盛典</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iPhone6/6s变砖怎么办？]]></title>
    <url>%2Fposts%2F2016-12-16-iphone6-6s-wenti%2F</url>
    <content type="text"><![CDATA[今天作死的想更新下手机固件，结果成砖了。 搜索资料，发现如下两种方法： 第一种： 1将你的iPhone关机 2.同时按住开关机键和home键 3.当你看见白色的苹果logo时，请松开开关机键，并继续保持按住home键。 4.开启iTunes，等待其提示你进行恢复模式后，即可按住键盘上的shift键，点击“恢复”，选择相应的固件进行恢复。 第二种： 1.用USB线将iPhone连接上电脑，然后你将会听见电脑已连接成功的提示声音。 2.现在请先将iPhone关机，然后你将会听见电脑未连接成功的提示声音。 3.请同时按住开关机键和home键，持续到第10秒的时候，请立即松开开关键，并继续保持按住home键。 4.这个时候iTunes会自动启动，并提示你进行恢复模式(iPhone会一直保持黑屏状态)。那么你就可以按住键盘上的shift键，点击“恢复”，选择相应的固件进行恢复。 &nbsp; 作死感悟： No zuo no die 没有金刚钻别揽瓷器活，这句话说的真不错。 我是用第二种方法处理的，第一种不成功。 抹掉了所有数据，然而并没有备份。 滴，车翻了。。。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>iPhone6</tag>
        <tag>iPhone6s</tag>
        <tag>刷机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[苹果iOS App从2017年起强制使用HTTPS]]></title>
    <url>%2Fposts%2F2016-12-06-iosnews%2F</url>
    <content type="text"><![CDATA[苹果App于2017年1月1日将启用App Transport Security安全功能，即强制App通过HTTPS连接网络服务。 Apple Store强制使用HTTPS的原因 随着全球互联网安全意识的进一步觉醒，越来越多的公司意识到网络信息安全的重要性，只有绝对的加密才能保证在线交易和商务活动的安全进行。互联网无疑是个人信息和隐私泄露最频繁的场合，各种以窃取信息为方式而展开的网络犯罪是互联网发展所面临的最大挑战。在这样一个大环境下，苹果公司首先做出应对，强制所有App在2017年1月1日前使用HTTPS加密，这就意味着，如果您的APP如果仍采用HTTP传输，那么，在Apple Store中您的APP将不再能被用户下载使用。 App开发商将如何应对这一协议 早在2015年9月的WWDC15上，苹果公司就提出了ATS(App Transport Security)，所谓的ATS是一种新型加密技术-Forward Secrecy，要求应用与后台通讯必须使用最新的TLS1.2版本Https协议，以及所有Apple Store中的App必须使用SHA256算法的SSL/TLS证书。时隔一年多，这一协议还剩不到一个月的时间就要生效，还未安装SSL证书的App开发商们应该如何应对呢？ 以下几点至关重要： （1）必须选择好适用的SSL证书，这是部署HTTPS的第一步 （2）调整后台应用，实现后台应用全站HTTPS （3）选择正规的CA机构申请符合ATS要求的SSL证书]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>新闻</tag>
        <tag>iOS</tag>
        <tag>Https</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[锤子手机发布会 相声]]></title>
    <url>%2Fposts%2F2016-10-19-chuizifabuhui%2F</url>
    <content type="text"><![CDATA[老罗单口相声专场10月18日，锤子科技在上海梅赛德斯-奔驰文化中心举行2016年度新品发布会，正式推出代号为SM901和SM919的两款手机新品。当然，发布会的主持人应该还是老罗本人，鉴于老罗幽默风趣的演讲风格，这是一年一度的罗永浩单口相声大会。 昨晚看到23点，心累。 这里贴上视频： &nbsp; 观后感： 亮点还是有几个的，老罗好像慢慢妥协了，情怀不再？]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>锤子</tag>
        <tag>发布会</tag>
        <tag>相声</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[QQ表情昵称代码]]></title>
    <url>%2Fposts%2F2016-10-05-qqbiaoqingcode%2F</url>
    <content type="text"><![CDATA[仅供娱乐！ &nbsp; /wx /微笑 /pz /撇嘴 /se /色 /fd /发呆 /dy /得意 /ll /流泪 /hx /害羞 /bz /闭嘴 /shui /睡 /dk /大哭 /gg /尴尬 /fn /发怒 /tp /调皮 /cy /呲牙 /jy /惊讶 /ng /难过 /kuk /酷 /lengh /冷汗 /zk /抓狂 /tuu /吐 /tx /偷笑 /ka /可爱 /baiy /白眼 /am /傲慢 /jie /饥饿 /kun /困 /jk /惊恐 /lh /流汗 /hanx /憨笑 /db /大兵 /fendou /奋斗 /zhm /咒骂 /yiw(i) /疑问 /xu /嘘... /yun /晕 /zhem /折磨 /shuai /衰 /kl /骷髅 /qiao /敲打 /zj /再见 /ch /擦汗 /kb /抠鼻 /gz /鼓掌 /qd /糗大了 /huaix /坏笑 /zhh /左哼哼 /yhh /右哼哼 /hq /哈欠 /bs /鄙视 /wq /委屈 /kk /快哭了 /yx /阴险 /qq /亲亲 /xia /吓 /kel /可怜 /cd /菜刀 /xig /西瓜 /pj /啤酒 /lq /篮球 /pp /乒乓 /kf /咖啡 /fan /饭 /zt /猪头 /mg /玫瑰 /dx /凋谢 /sa /示爱 /xin /爱心 /xs /心碎 /dg /蛋糕 /shd /闪电 /zhd /炸弹 /dao /刀 /zq /足球 /pch /瓢虫 /bb /便便 /yl /月亮 /ty /太阳 /lw /礼物 /yb /拥抱 /qiang /强 /ruo /弱 /ws /握手 /shl /胜利 /bq /抱拳 /gy /勾引 /qt /拳头 /cj /差劲 /aini /爱你 /bu /不 /hd /好 /aiq /爱情 /fw /飞吻 /tiao /跳跳 /fad /发抖 /oh /怄火 /zhq /转圈 /kt /磕头 /ht /回头 /tsh /跳绳 /hsh /挥手 /jd /激动 /jw /街舞 /xw /献吻 /zuotj /左太极 /youtj /右太极]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>QQ</tag>
        <tag>表情包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TingFirefox正式发布]]></title>
    <url>%2Fposts%2F2016-09-23-tingfirefox%2F</url>
    <content type="text"><![CDATA[一个月之前，TingChrome发布的时候就计划紧接着发布TingFirefox版本，但是一直拖着拖着，就这样拖了一个月。码农天生对Firefox情有独钟，怎能少得了？ Slogan： 你想要的一切，TingFirefox都会给你！TingFirefox 是基于 Firefox 制作的免费浏览器。 加强Firefox的标签页浏览功能 优化Firefox的启动速度 &nbsp; &nbsp; &nbsp; 责任声明本站仅仅提供一个观摩学习的环境，将不对本站提及的任何资源负法律责任。 如果您下载使用，表示您已经同意自己承担软件使用带来的一切后果！ &nbsp; 下载链接： http://browser.iyu.pub/ &nbsp; &nbsp;]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>浏览器</tag>
        <tag>Browser</tag>
        <tag>自研软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TingChrome 终于正式发布了]]></title>
    <url>%2Fposts%2F2016-08-29-tingchrome%2F</url>
    <content type="text"><![CDATA[千呼万唤，TingChrome终于发布了！！！ &nbsp; Slogan： 你想要的一切，TingChrome都会给你！&nbsp; TingChrome 是基于 Google Chrome 制作的免费浏览器。 集成过滤 视频广告、网页广告 等扩展 采用特殊的缓存技术加速网站的打开 &nbsp; &nbsp; 责任声明本站仅仅提供一个观摩学习的环境，将不对本站提及的任何资源负法律责任。 如果您下载使用，表示您已经同意自己承担软件使用带来的一切后果！ &nbsp; &nbsp; 下载链接： https://browser.iyu.pub/]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>浏览器</tag>
        <tag>Browser</tag>
        <tag>自研软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中国FAST即将睁天眼：世界最大单口径望远镜]]></title>
    <url>%2Fposts%2F2016-07-25-fastelescope%2F</url>
    <content type="text"><![CDATA[&nbsp; 由中国研制和建设的世界最大单口径望远镜――500米口径球面射电望远镜(Five hundred meters Aperture Spherical Telescope，简称FAST)将于今年9月投入使用。该望远镜将被用于探索太空，可追寻地外生命尤其“外星人”(学名“地外智慧生命”)。 &nbsp; 这个被誉为“中国天眼”的FAST与号称“地面最大机器”的德国波恩100米射电望远镜相比，其灵敏度将提高约10倍;与被评为“人类20世纪10大工程”之首的美国阿雷西博305米射电望远镜相比，其综合性能提高约10倍。专家们认为它在今后二三十年时间内仍能保持世界一流地位。FAST可遥望百亿光年星际;这意味着，远在百亿光年外的射电信号，它也有可能“捕捉”到。 基于FAST的强大功能，如果银河系(直径约为15万光年)内存在外星人，他们的信息就很可能被发现。国际科研项目“搜寻外星人计划”(SETI)的首席科学家丹・沃西默最近向中方提出，希望在FAST加装设备，可合作搜索外星人信号。 寻找外星人是否对人类有威胁，对此问题学术界一直都有争论;半个世纪来，“外星人威胁论”比较流行。例如：1974年，阿雷西博射电望远镜向距离地球25000光年的球状星团M13发送无线电信号;诺贝尔物理奖得主、英国天文学家马丁・赖尔得知此事后，就给联合国写信极力反对人类主动与外星人建立联系;在他看来这些信息很可能会暴露地球人的存在，有可能招来杀身之祸。又如：英国进化生物学家西蒙・莫里斯2011年在《皇家学会哲学汇刊(A辑)》撰文指出：外星人的进化过程可能与达尔文理论本质上是一样的，这就意味着外星人可能很像我们人类;毫不掩盖地说，他们甚至可能也拥有暴力倾向。 有“当代宇宙大王”之称的英国物理学家史蒂芬・霍金2012年在接受英国广播公司(BBC)记者采访时更是语出惊人：“宇宙中存在外星人，地球人试图与他们交流是非常危险的;如果外星人决定来拜访我们，那么结果可能和当年欧洲人到达美洲一样，美洲原住民并没有得到什么好处;外星人如果威胁地球人，其主要目的是掠夺地球上的资源。”不知道什么原因，霍金去年却与俄罗斯风险投资家尤里・米尔纳共同领导着一个名为“突破聆听”(The Breakthrough Listen)的寻找外星人项目。有趣的是，最近美国脸书创始人马克・扎克伯格也加入了这项寻找外星人的伟大事业中。 然而，一些科学家并不同意“外星人威胁论”。他们从外星人的智慧与科技，甚至是人类自身对外星人的心理作用来说明外星人对地球人并不构成威胁。中国科学家及未来学家周海中就是这一观点的拥护者。他1999年在《科学美国人(中文版)》撰文指出：担心外星人威胁是完全没有必要的，因为只要是高级智慧生命，他们的理智在决定着他们必须有分寸地对待其他智慧生命体;外星人与地球人将来是能够和平共处、友好合作和共同发展的。 无独有偶，美国天文学家大卫・莫里森2011年在接受英国《新科学家》记者采访时也表示：如果一颗距离地球数百或者数千光年的行星发出的无线电信号被我们接收到，这个文明的先进程度一定超过人类;如果一个文明能够存在数十万年，它一定能解决我们面临的一系列问题，所以没有必要掠夺地球上的资源。他风趣地说：“如果外星人来访，我会好好款待他们。” 毫无疑问，FAST投入使用后，研究人员将得以继续探寻地外生命尤其外星人。如果能找到外星人，那将是人类历史上最伟大的发现;届时，我们可邀请远方的外星人朋友来相会，共商发展大计，共谋合作愿景。 &nbsp; &nbsp;]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Fast</tag>
        <tag>望远镜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黑苹果常见问题]]></title>
    <url>%2Fposts%2F2016-03-22-blackapple-wenti%2F</url>
    <content type="text"><![CDATA[由于经常系统升级，反复出现一些问题，特地整理下并记录下来。 1.修改显存从512MB到1GB的按顺序执行以下4行代码： cd /S*/L*/Ext*/AppleIntelSNBGraphicsFB.kext/C*/M* sudo cp AppleIntelSNBGraphicsFB AppleIntelSNBGraphicsFB.backup sudo perl -pi -e 's|\xC7\x45\xBC\x00\x00\x00\x20|\xc7\x45\xBC\x00\x00\x00\x40|g' AppleIntelSNBGraphicsFB sudo touch /S*/L*/Extensions 2.修复开机正常亮度和VGA HDMI： sudo perl -pi -e 's|\x01\x02\x04\x00\x10\x07\x00\x00\x10\x07\x00\x00\x05\x03\x00\x00\x02\x00\x00\x00\x30\x00\x00\x00\x02\x05\x00\x00\x00\x04\x00\x00\x07\x00\x00\x00\x03\x04\x00\x00\x00\x04\x00\x00\x09\x00\x00\x00\x04\x06\x00\x00\x00\x04\x00\x00\x09\x00\x00\x00|\x01\x02\x03\x00\x12\x13\x00\x00\x12\x13\x00\x00\x05\x03\x00\x00\x02\x00\x00\x00\x30\x00\x00\x00\x02\x05\x00\x00\x00\x08\x00\x00\x06\x00\x00\x00\x06\x02\x00\x00\x01\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|g' /System/Library/Extensions/AppleIntelSNBGraphicsFB.kext/Contents/MacOS/AppleIntelSNBGraphicsFB 修复权限重建缓存（很重要，防止不能进系统了，可以用Kext Utility修复），然后删除系统盘Extra/Extensions中的驱动（一定要删除，防止冲突），再重启（提前重启你就进不去了）]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Apple</tag>
        <tag>黑苹果</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress整站迁移]]></title>
    <url>%2Fposts%2F2015-12-21-wordpressqianyi%2F</url>
    <content type="text"><![CDATA[**wordpress整站迁移步骤：** 1、备份数据库。用数据库备份工具备份老站的mysql数据库(.sql) 2、备份wordpress网站程序。 3、新建mysql数据库，利用数据库备份工具，导入原来网站的.sql的数据库备份文件。 4、将第2步中，原来的网站程序上传到新网站下。 5、删除网站根目录下的wp数据库配置文件wp-config.php，然后在浏览器中输入网站域名访问，安装wordpress。 至此，网站完美迁移成功。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>WordPress</tag>
        <tag>网站搬家</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[获取音乐mp3外链的方法]]></title>
    <url>%2Fposts%2F2015-12-09-getmp3link%2F</url>
    <content type="text"><![CDATA[记得以前经常在鹅厂的空间添加背景音乐，一开始用的是百度音乐外链，后来封了。 今天在写页面的时候，寻找音乐外链。 因为是网易云音乐的脑残粉，就试着抓下网易云音乐的外链。 外链接口： http://music.163.com/api/song/detail/?id=歌曲ID&amp;ids=%5B歌曲ID%5D&amp;csrf_token= （只要把上面链接中的“歌曲ID”换成歌曲的链接中的ID就行） &nbsp; For example： 朴树的“且听风吟”：http://music.163.com/#/song?id=139359 将”id=139359”中的“139359”替换到上面的外链中 即： http://music.163.com/api/song/detail/?id=139359&amp;ids=%5B139359%5D&amp;csrf_token= 在浏览器上打开，可以得到一个json &nbsp; 到这里，你应该会发现 mp3的外链吧。不错，就是”mp3Url“后面的，即： "mp3Url":"http://m2.music.126.net/Z3kPN3AAQFUd3WbiZtQgKQ==/7943971512260105.mp3" &nbsp;]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>mp3</tag>
        <tag>音乐</tag>
        <tag>外链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tomcat配置WebService]]></title>
    <url>%2Fposts%2F2015-12-02-tomcat-webservice%2F</url>
    <content type="text"><![CDATA[1.下载jax-ws依赖包 http://jax-ws.java.net 2.将jaxws-RI\lib下的包复制到tomcat\shared\lib下 3.编辑conf\catalina.properties 找到common.loader配置项，增加${catalina.home}/shared/lib/*.jar,${catalina.home}/shared/lib 路径]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaEE</tag>
        <tag>WebService</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[12306抢票软件大搜罗]]></title>
    <url>%2Fposts%2F2015-12-01-12306soft%2F</url>
    <content type="text"><![CDATA[搜罗了如下的抢票软件： （1）12306.net 软件分享：http://yunpan.cn/c3ScEk7YEw6cG 访问密码 e59b （2）12306Bypass分流抢票软件 软件分享：http://yunpan.cn/c3Sc2btNE4wZz 访问密码 bc76 （3）猎豹抢票大师 软件分享：http://yunpan.cn/c3Vq8prQGZeTj 访问密码 81e0 （4）百度抢票专版 软件分享：http://yunpan.cn/c3VqtqdvR69QU 访问密码 4da7 （5）QQ抢票专版 软件分享：http://yunpan.cn/c3VqXFe5diUsB 访问密码 1081 （6）搜狗抢票专版 软件分享：http://yunpan.cn/c3VPSeJdxRmKx 访问密码 9e3b 若使用搜狗抢票专版，可以使用搜狗预约抢票，挺不错的功能！ 网址：http://mse.sogou.com/yuepiao]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>12306</tag>
        <tag>抢票</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[String和ByteBuffer互转]]></title>
    <url>%2Fposts%2F2015-11-05-string-bytebuffer%2F</url>
    <content type="text"><![CDATA[String 转换 ByteBuffer： //String 转换 ByteBuffer public static ByteBuffer getByteBuffer(String str) { return ByteBuffer.wrap(str.getBytes()); } ByteBuffer 转换 String： //ByteBuffer 转换 String public static String getString(ByteBuffer buffer) { Charset charset = null; CharsetDecoder decoder = null; CharBuffer charBuffer = null; try { charset = Charset.forName("UTF-8"); decoder = charset.newDecoder(); //用这个的话，只能输出来一次结果，第二次显示为空 // charBuffer = decoder.decode(buffer); charBuffer = decoder.decode(buffer.asReadOnlyBuffer()); return charBuffer.toString(); } catch (Exception ex) { ex.printStackTrace(); return "error"; } }]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shell 自动备份mysql并加入定时任务]]></title>
    <url>%2Fposts%2F2015-10-27-shell-mysql-backup%2F</url>
    <content type="text"><![CDATA[1.使用mysqldump备份MySQL数据库 新建一个shell文件 touch backup.sh 编辑shell文件 vi backup.sh 输入下列内容： #!/bin/bash mysqldump --opt -uuser -ppassword | gzip &gt; /mysqlbackup/mysql`date +%Y-%m-%d_%H%M%S`.sql.gz #删除超过7天的备份数据，保留3个月里的 10号 20号 30号的备份数据 find /mysqlbackup/ -name "*[1-9].sql.gz" -type f -mtime +7 -exec rm -rf {} \; &gt; /dev/null 2&gt;&amp;1 #删除超过3个月的所有备份数据 find /mysqlbackup/ -name "*.sql.gz" -type f -mtime +92 -exec rm -rf {} \; &gt; /dev/null 2&gt;&amp;1 2.修改文件属性，使其可执行 chmod +x /mysqlbackup/backup.sh 3.加入定时任务 编辑/etc/crontab vi /etc/crontab 添加如下代码： # m h dom mon dow user command 30 01 * * 0 root /mysqlbackup/backup.sh 这样表示每个周日的上午1点30分执行shell文件 4.重新启动crond使设置生效 service cron stop #停止 service cron start #启动 /etc/init.d/cron restart #重启]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>CentOS</tag>
        <tag>Fedora</tag>
        <tag>shell</tag>
        <tag>脚本</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Inno Setup 5.5版本中文语言包]]></title>
    <url>%2Fposts%2F2015-10-19-inno-setup-zh%2F</url>
    <content type="text"><![CDATA[; *** Inno Setup version 5.5.0+ Chinese messages *** ; ; To download user-contributed translations of this file, go to: ; http://www.jrsoftware.org/is3rdparty.php ; ; Note: When translating this text, do not add periods (.) to the end of ; messages that didn't have them already, because on those messages Inno ; Setup adds the periods automatically (appending a period would result in ; two periods being displayed). [LangOptions] ; The following three entries are very important. Be sure to read and ; understand the '[LangOptions] section' topic in the help file. LanguageName=Chinese LanguageID=$0409 LanguageCodePage=0 ; If the language you are translating to requires special font faces or ; sizes, uncomment any of the following entries and change them accordingly. ;DialogFontName= ;DialogFontSize=8 ;WelcomeFontName=Verdana ;WelcomeFontSize=12 ;TitleFontName=Arial ;TitleFontSize=29 ;CopyrightFontName=Arial ;CopyrightFontSize=8 [Messages] ; *** Application titles SetupAppTitle=安装 SetupWindowTitle=安装 - %1 UninstallAppTitle=反安装 UninstallAppFullTitle=%1 反安装 ; *** Misc. common InformationTitle=安装信息 ConfirmTitle=提示 ErrorTitle=错误 ; *** SetupLdr messages SetupLdrStartupMessage=现在将安装 %1。是否继续? LdrCannotCreateTemp=不能创建临时文件。安装中止！ LdrCannotExecTemp=不能在临时目录中解压文件，安装过程中止！ ; *** Startup error messages LastErrorMessage=%1.%n%n 错误 %2: %3 SetupFileMissing=在安装目录中找不到文件 %1 。请更正该问题或者获得一个新的文件。 SetupFileCorrupt=安装文件被占用。请获得一个新的安装文件。 SetupFileCorruptOrWrongVer=安装文件被占用, 或者安装文件的版本不对。请更正该问题或者获得一个新文件。 NotOnThisPlatform=该程序不能在 %1 下运行。 OnlyOnThisPlatform=该程序必须在 %1 下运行。 OnlyOnTheseArchitectures=该程序只能在以下WINDOWS版本下运行:%n%n%1 MissingWOW64APIs=该版本需要64位的安装程序。要更正该问题，请安装 Service Pack %1。 WinVersionTooLowError=该软件需要 %1 版本号 %2 或者更高。 WinVersionTooHighError=该软件不能在 %1 版本号 %2 或者更高版本中安装。 AdminPrivilegesRequired=您在安装该程序时必须是管理员权限。 PowerUserPrivilegesRequired=您在安装程序是必须是管理员权限或者高权限用户权限。 SetupAppRunningError=安装程序检测到 %1 正在运行。%n%n请关闭它的所有实例。然后单击“确认”继续安装，或者单击“取消”退出。UninstallAppRunningError=反安装程序检测到 %1 正在运行。%n%n请关闭它的所有实例。然后单击“确认”继续安装，或者单击“取消”退出。 UninstallAppRunningError=Uninstall has detected that %1 is currently running.%n%nPlease close all instances of it now, then click OK to continue, or Cancel to exit. InvalidParameter=命令行中包含无效的参数:%n%n%1 SetupAlreadyRunning=安装程序已经运行. WindowsVersionNotSupported=该程序不支持当前的Windows版本. WindowsServicePackRequired=该程序要求 %1 Service Pack %2 或者更高版本. ; *** Misc. errors ErrorCreatingDir=安装程序不能创建目录 "%1" ErrorTooManyFilesInDir=不能在目录"%1" 下创建文件。因为该目录下有太多的文件了。 ; *** Setup common messages ExitSetupTitle=退出安装 ExitSetupMessage=安装还未完成。如果现在退出，程序将结束安装。%n%n您可以在下次继续安装。%n%n退出安装？ AboutSetupMenuItem=关于安装程序[&A]... AboutSetupTitle=关于安装程序 AboutSetupMessage=%1 版本 %2%n%3%n%n%1 主页:%n%4 AboutSetupNote= TranslatorNote= ; *** Buttons ButtonBack=< 上一步[&B] ButtonNext=下一步[&N] > ButtonInstall=安装[&I] ButtonOK=确认 ButtonCancel=取消 ButtonYes=市[&Y] ButtonYesToAll=全部确认[&A] ButtonNo=否[&N] ButtonNoToAll=全部否认[&o] ButtonFinish=完成[&F] ButtonBrowse=浏览[&B]... ButtonWizardBrowse=浏览[&r]... ButtonNewFolder=新建文件夹[&M] ; *** "Select Language" dialog messages SelectLanguageTitle=选择安装语言种类 SelectLanguageLabel=选择该语言作为安装语言: ; *** Common wizard text ClickNext=单击“下一步”继续，或者单击“取消”退出本安装程序。 BeveledLabel= BrowseDialogTitle=浏览文件夹 BrowseDialogLabel=在下面的列表中选择一个目录, 然后单击“确认”继续。 NewFolderName=新文件夹 ; *** "Welcome" wizard page WelcomeLabel1=欢迎进入 [name] 安装向导 WelcomeLabel2=将在您的电脑上安装 [name/ver] 。%n%n建议在继续安装之前先退出其它运行的程序。 ; *** "Password" wizard page WizardPassword=密码 PasswordLabel1=本安装程序受密码保护。 PasswordLabel3=请输入密码，密码区分大小写。然后单击“下一步”继续。 PasswordEditLabel=密码[&P]: IncorrectPassword=输入的密码不正确，请重新输入。 ; *** "License Agreement" wizard page WizardLicense=用户许可协议 LicenseLabel=请在继续之前仔细阅读用户许可协议。 LicenseLabel3=请仔细阅读下面的用户许可协议。在继续安装之前，您必须接受该协议。 LicenseAccepted=我接受协议[&a]。 LicenseNotAccepted=我不接受协议[&d] ; *** "Information" wizard pages WizardInfoBefore=提示 InfoBeforeLabel=在继续安装之前请仔细阅读以下重要的信息。 InfoBeforeClickLabel=当您准备好继续安装时，单击“继续”。 WizardInfoAfter=信息 InfoAfterLabel=在继续安装之前请仔细阅读以下重要的信息。 InfoAfterClickLabel=当您准备好继续安装时，单击“继续”。 ; *** "User Information" wizard page WizardUserInfo=用户信息 UserInfoDesc=请输入您的信息。 UserInfoName=用户名[&U]: UserInfoOrg=组织[&O]: UserInfoSerial=序列号[&S]: UserInfoNameRequired=您必须输入一个名称。 ; *** "Select Destination Location" wizard page WizardSelectDir=选择目标位置 SelectDirDesc=您将把[name]安装在哪里? SelectDirLabel3=安装程序将把[name]安装在下面的文件夹中。 SelectDirBrowseLabel=继续安装, 请单击“下一步”。如果需要选择其它目录，请单击“浏览”。 DiskSpaceMBLabel=为了安装本软件，至少需要 [mb] MB 的空闲磁盘空间。 InvalidPath=您比如输入一个含盘符的路径名称。比如:%n%nC:\APP%n%n 或者一个网络路径，例如:%n%n\\server\share InvalidDrive=您选择的磁盘或者网络路径不存在或者不能访问。请重新选择其它的磁盘或者网络路径。 DiskSpaceWarningTitle=磁盘空间不足。 DiskSpaceWarning=安装程序至少需要 %1 KB 空闲磁盘空间来安装本软件。但是选择的磁盘上只有 %2 KB 空间可用。%n%n 您确认继续？ DirNameTooLong=该文件夹的名称太长。 InvalidDirName=该文件夹的名字太长。 BadDirName32=文件夹名称中不能包括以下的任何字符:%n%n%1 DirExistsTitle=文件夹已经存在 DirExists=文件夹:%n%n%1%n%n已经存在。您想继续安装? DirDoesntExistTitle=文件夹不存在 DirDoesntExist=文件夹:%n%n%1%n%n不存在。您想创建该文件夹? CannotInstallToNetworkDrive=程序不能被安装到网络磁盘上. CannotInstallToUNCPath=程序不能被安装到一个 UNC 路径上. ; *** "Select Components" wizard page WizardSelectComponents=选择组件 SelectComponentsDesc=哪些组件需要安装? SelectComponentsLabel2=选择您想要安装的组件; 去掉您不想安装的组件。当您准备好后，请单击“下一步” 。 FullInstallation=完全安装 ; if possible don't translate 'Compact' as 'Minimal' (I mean 'Minimal' in your language) CompactInstallation=精简安装 CustomInstallation=自定义安装 NoUninstallWarningTitle=组件存在 NoUninstallWarning=安装程序检测到以下组件已经被安装到您的电脑中:%n%n%1%n%n不选择它们将不在您的电脑中安装。%n%n您想这样继续吗? ComponentSize1=%1 KB ComponentSize2=%1 MB ComponentsDiskSpaceMBLabel=当前选择项至少需要 [mb] MB 的空闲磁盘空间才能安装。 ; *** "Select Additional Tasks" wizard page WizardSelectTasks=选择附加任务 SelectTasksDesc=您想选择哪个附加任务? SelectTasksLabel2=选择在安装[name]时执行的附加任务后单击“下一步”。 ; *** "Select Start Menu Folder" wizard page WizardSelectProgramGroup=选择开始菜单文件夹 SelectStartMenuFolderDesc=您想在哪里放置软件的快捷方式? SelectStartMenuFolderLabel3=安装程序将在下面的文件夹中创建软件的快捷方式。 SelectStartMenuFolderBrowseLabel=继续安装，请单击“下一步”。如果您想选择其它文件夹，单击“浏览”。 MustEnterGroupName=您必须输入一个文件夹名称。 GroupNameTooLong=文件夹名称或者路径名称太长。 InvalidGroupName=文件夹名称非法。 BadGroupName=文件夹名字中不能包含下面的字符:%n%n%1 NoProgramGroupCheck2=不创建开始菜单中的文件夹[&D] ; *** "Ready to Install" wizard page WizardReady=准备开始安装 ReadyLabel1=安装程序开始在您的电脑中安装[name]. ReadyLabel2a=单击“安装”开始安装本软件,或者单击“上一步”修改安装设置。 ReadyLabel2b=单击“安装”开始安装本软件。 ReadyMemoUserInfo=用户信息: ReadyMemoDir=安装目标位置: ReadyMemoType=安装种类: ReadyMemoComponents=选中的组件: ReadyMemoGroup=开始菜单文件夹: ReadyMemoTasks=附加任务: ; *** "Preparing to Install" wizard page WizardPreparing=准备安装 PreparingDesc=安装程序准备在您的电脑中安装[name]。 PreviousInstallNotCompleted=安装/反安装一个以前的程序没有完成。您需要重新启动您的电脑来完成安装工作。%n%n当重新启动您的电脑后，请运行安装程序来完成安装[name]。 CannotContinue=安装程序不能继续执行。请单击“取消”退出。 ;ApplicationsFound=The following applications are using files that need to be updated by Setup. It is recommended that you allow Setup to automatically close these applications. ApplicationsFound=需要被安装程序更新的文件正被以下应用程序使用。建议由安装程序自动结束这些应用程序。 ;ApplicationsFound2=The following applications are using files that need to be updated by Setup. It is recommended that you allow Setup to automatically close these applications. After the installation has completed, Setup will attempt to restart the applications. ApplicationsFound2=需要被安装程序安装的文件正在被以下应用程序使用。建议由安装程序自动结束这些应用程序。当安装完成后，将会尝试重启这些应用程序。 CloseApplications=&Automatically close the applications DontCloseApplications=&Do not close the applications ; *** "Installing" wizard page WizardInstalling=安装中 InstallingLabel=安装程序正在安装[name],请等待。 ; *** "Setup Completed" wizard page FinishedHeadingLabel=[name]安装完成 FinishedLabelNoIcons=安装程序已经在您的电脑中安装了[name]。 FinishedLabel=安装程序已经成功在您的电脑上安装了[name]。如果需要执行，请单击本软件图标。 ClickFinish=单击“完成”退出本安装程序. FinishedRestartLabel=为了完成[name]的安装, 安装程序必须重新启动您的电脑。您想现在就重新启动吗? FinishedRestartMessage=为了完成[name]的安装, 安装程序必须重新启动您的电脑。%n%您想现在就重新启动吗? ShowReadmeCheck=是的,我想查看 README 文件 YesRadio=是的，我想重新启动计算机[&Y] NoRadio=不，我将稍后重新启动计算机[&N] ; used for example as 'Run MyProg.exe' RunEntryExec=运行 %1 ; used for example as 'View Readme.txt' RunEntryShellExec=查看 %1 ; *** "Setup Needs the Next Disk" stuff ChangeDiskTitle=安装程序需要下一个安装盘 SelectDiskLabel2=请插入安装盘 %1 并且单击“确认”。%n%n如果该盘不是下面显示的盘，请输入正确的路径或者单击“浏览”。 PathLabel=目录[&P]: FileNotInDir2=在 "%2" 中没有发现文件。请插入正确的磁盘或者选择其它的文件夹。 SelectDirectoryLabel=请输入下一个磁盘中的正确位置。 ; *** Installation phase messages SetupAborted=安装没有完成。%n%n请修复错误并重新安装。 EntryAbortRetryIgnore=单击“重试”重新尝试，单击“忽略”将继续安装，或者单击“取消”退出安装。 ; *** Installation status messages StatusCreateDirs=创建目录中... StatusExtractFiles=解压文件中... StatusCreateIcons=创建快捷方式中... StatusCreateIniEntries=创建INI单元中... StatusCreateRegistryEntries=创建注册表内容中... StatusRegisterFiles=注册文件中... StatusSavingUninstall=保存反安装信息中... StatusRunProgram=正在完成安装... StatusRollback=恢复原来修改的内容中... StatusClosingApplications=正在关闭应用程序... StatusRestartingApplications=正在重启应用程序... ; *** Misc. errors ErrorInternal2=内部错误: %1 ErrorFunctionFailedNoCode=%1 失败 ErrorFunctionFailed=%1 失败; 代码 %2 ErrorFunctionFailedWithMessage=%1 错误; 代码 %2.%n%3 ErrorExecutingProgram=不能执行文件:%n%1 ; *** Registry errors ErrorRegOpenKey=在打开注册表键时发生错误:%n%1\%2 ErrorRegCreateKey=在创建注册表键时发生错误:%n%1\%2 ErrorRegWriteKey=在些注册表键时发生错误:%n%1\%2 ; *** INI errors ErrorIniEntry=在创建INI文件时发生错误 "%1". ; *** File copying errors FileAbortRetryIgnore=单击“重试”再试一次，单击“忽略”忽略该文件，或者单击“取消”退出安装程序。 FileAbortRetryIgnore2=单击“重试”再试一次，单击“忽略”忽略该文件继续安装，或者单击“取消”退出安装程序。 SourceIsCorrupted=源文件被使用 SourceDoesntExist=源文件 "%1" 不存在 ExistingFileReadOnly=该已经存在的文件是只读属性。%n%n单击“重试”删除只读属性并重新尝试，单击“忽略”忽略该文件，或者单击“取消”退出安装程序。 ErrorReadingExistingDest=当试图读取一个已经存在的文件时发生了错误: FileExists=该文件已经存在。%n%n您想覆盖它吗? ExistingFileNewer=已经存在的文件比安装程序试图安装的文件要新。建议您保留该文件。%n%n您想保留已经存在的文件吗? ErrorChangingAttr=当试图改变一个存在的文件的属性时发生了错误: ErrorCreatingTemp=当试图在目标目录中创建一个文件时发生了错误: ErrorReadingSource=当试图读取一个文件时发生了错误: ErrorCopying=当试图复制一个文件时发生了错误: ErrorReplacingExistingFile=当试图覆盖已经存在的文件时发生错误: ErrorRestartReplace=重新启动置换失败: ErrorRenamingTemp=当在目标目录中重命名文件时发生错误: ErrorRegisterServer=不能注册 DLL/OCX: %1 ErrorRegSvr32Failed=RegSvr32 执行失败, 错误码: %1 ErrorRegisterTypeLib=不能注册以下类型库: %1 ; *** Post-installation errors ErrorOpeningReadme=当打开 README 文件时发生错误。 ErrorRestartingComputer=安装程序不能重新启动电脑。请手动启动。 ; *** Uninstaller messages UninstallNotFound=文件 "%1" 不存在。不能反安装。 UninstallOpenError=文件 "%1" 不能打开。不能反安装。 UninstallUnsupportedVer=反安装记录文件 "%1" 不是基于本安装程序的版本。不能完成软件的删除工作。 UninstallUnknownEntry=一个未知的实体 (%1) 存在于反安装记录文件中。 ConfirmUninstall=您确定完全删除 %1 和相关组件吗? UninstallOnlyOnWin64=该安装程序只能在64位的Windows上执行反安装工作。 OnlyAdminCanUninstall=该安装程序只能在您具有管理员权限时才能执行反安装工作。 UninstallStatusLabel= %1 正在被删除，请稍等。 UninstalledAll=%1 被成功地从您的电脑中删除。 UninstalledMost=%1 删除完成。%n%n有某些组件无法被删除。您可能需要手动删除它们。 UninstalledAndNeedsRestart=为了完成 %1 的删除工作, 您必须重新启动电脑。%n%n您想现在就重新启动吗? UninstallDataCorrupted=文件"%1" 被占用。不能完成删除工作。 ; *** Uninstallation phase messages ConfirmDeleteSharedFileTitle=删除共享程序文件? ConfirmDeleteSharedFile2=系统指出以下的共享程序文件将不再被使用。您是否想删除这些共享文件?%n%n如果这些文件删除后，其他程序仍然要使用它，可能其它程序的功能将受影响。如果您不能肯定，请选择“否”。让这些文件保留在系统中不会对系统造成损害。 SharedFileNameLabel=文件名: SharedFileLocationLabel=位置: WizardUninstalling=反安装 StatusUninstalling=反安装 %1 中... ; *** Shutdown block reasons ShutdownBlockReasonInstallingApp=安装 %1. ShutdownBlockReasonUninstallingApp=卸载 %1. ; The custom messages below aren't used by Setup itself, but if you make ; use of them in your scripts, you'll want to translate them. [CustomMessages] NameAndVersion=%1 版本 %2 AdditionalIcons=附加图标: CreateDesktopIcon=创建桌面图标[&d] CreateQuickLaunchIcon=创建快速启动图标[&Q] ProgramOnTheWeb=%1 on the Web UninstallProgram=反安装 %1 LaunchProgram=执行 %1 AssocFileExtension=用文件扩展名 %2 匹配[&A] %1? AssocingFileExtension=正在用文件扩展名 %2 匹配[&A] %1 中...]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
        <tag>InnoSetup</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux使用tomcat做下载服务器]]></title>
    <url>%2Fposts%2F2015-10-15-linux-tomcat-download%2F</url>
    <content type="text"><![CDATA[tomcat的安装就不赘述了。 1.进入tomcat的如下目录： /tomcat7/conf/Catalina/localhost 2.新建一个xml文件 我这里在做APP的自动更新，所以就新建一个app.xml如下： &lt;?xml version=”1.0” encoding=”UTF-8”?&gt; &lt;Context path=”/app” reloadable=”true” docBase=”/appupdate” crossContext=”true”&gt; &lt;/Context&gt; 说明：/app为通过ip地址访问的虚拟目录，它被指向/appupdate 3.编辑tomcat下conf/web.xml 找到如下代码： &nbsp; &lt;init-param&gt; &lt;param-name&gt;listings&lt;/param-name&gt; &lt;param-value&gt;false&lt;/param-value&gt; &lt;/init-param&gt; &nbsp; 将 默认的 &lt;param-value&gt;false&lt;/param-value&gt;改为 &lt;param-value&gt;true&lt;/param-value&gt; 结果如下所示： &lt;init-param&gt; &lt;param-name&gt;listings&lt;/param-name&gt; &lt;param-value&gt;true&lt;/param-value&gt; &lt;/init-param&gt; 4.重启Tomcat service tomcat restart 5.访问文件： 访问：http://域名:8080/app/ 就可以看到目录下的文件了。 &nbsp; &nbsp; &nbsp;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaEE</tag>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>Fedora</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tomcat的catalina.out日志的cronolog分割]]></title>
    <url>%2Fposts%2F2015-09-28-tomcat-catalina-out%2F</url>
    <content type="text"><![CDATA[由于最近的项目使用了tomcat应用服务器，产生的日志文件挺大的，主要是调试中打印的一些信息占空间，比如说System.out和log等等。tomcat 的catalina.out文件的不断扩大，导致系统磁盘空间边变小，所以想到了cronolog工具。 2018.01.19修改： 1.重新上传文件 2.修改图片的显示 安装过程如下： 1、下载 wget https://src.fedoraproject.org/repo/pkgs/cronolog/cronolog-1.6.2.tar.gz/a44564fd5a5b061a5691b9a837d04979/cronolog-1.6.2.tar.gz 本来想直接wget的，但是经过测试好像压缩包有问题，之后只能在本地下载再scp到服务器。 贴上我的分享：点我下载 2、解压缩 # tar zxvf cronolog-1.6.2.tar.gz &nbsp; 3、进入cronolog安装文件所在目录 # cd cronolog-1.6.2 &nbsp; 4、运行安装 # ./configure # make # make install &nbsp; 5、查看cronolog安装后所在目录（验证安装是否成功） # which cronolog 正常情况下显示： /usr/local/sbin/cronolog &nbsp; 要想分割tomcat的catalina.out，需作如下工作： Tomcat7以前的版本： （1）注释掉（#） touch “$CATALINA_BASE”/logs/catalina.out （2）修改tomcat bin目录下的catalina.sh文件中的两处 org.apache.catalina.startup.Bootstrap "$@" start \ >> "$CATALINA_BASE" /logs/catalina.out 2>&1 & 为 org.apache.catalina.startup.Bootstrap "$@" start 2>&1 \ | /usr/local/sbin/cronolog "$CATALINA_BASE" /logs/catalina.%Y-%m-%d.out >> /dev/null & 如下图所示： 完成之后重起Tomcat就可以了。 隔天看logs文件中是否有catalina.2015-09-13.out样式的日志。 &nbsp; Tomcat7以后的版本： 1 第一步 将 if [ -z "$CATALINA_OUT" ] ; then CATALINA_OUT=”$CATALINA_BASE”/logs/catalina.out fi 修改为 if [ -z "$CATALINA_OUT" ] ; then CATALINA_OUT=”$CATALINA_BASE”/logs/catalina.out.%Y-%m-%d fi 2 第二步 将 touch "$CATALINA_OUT" 改为 #touch "$CATALINA_OUT" 3 第三步 将 org.apache.catalina.startup.Bootstrap "$@" start \ >> "$CATALINA_OUT" 2>&1 "&" 修改为 org.apache.catalina.startup.Bootstrap "$@" start 2>&1 \ | /usr/local/sbin/cronolog "$CATALINA_OUT" >> /dev/null & 完成之后重起Tomcat就可以了。 隔天看logs文件中是否有catalina.out.2015-09-13样式的日志。]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaEE</tag>
        <tag>Ubuntu</tag>
        <tag>Tomcat</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu安装Tomcat]]></title>
    <url>%2Fposts%2F2015-09-18-ubuntu-tomcat%2F</url>
    <content type="text"><![CDATA[一、下载tomcat (1)方法一：先下载到本地，然后ftp上传到服务器 官方 Apache Tomcat 的下载页面： http://tomcat.apache.org/download-70.cgi (2)方法二：直接在服务器下载（windows版本的区分32位与64位，ubuntu（linux）版本的不区分） http://mirrors.hust.edu.cn/apache/tomcat/tomcat-7/v7.0.64/bin/apache-tomcat-7.0.64.tar.gz (3)方法三：去我的云盘下载 https://yunpan.cn/c6kfTbwPQxRSb 访问密码 ce9c &nbsp; 二、解压安装 先解压 tar zxvf apache-tomcat-7.0.64.tar.gz -C /java 然后改名为tomcat7 ca /java mv apache-tomcat-7.0.64 tomcat7 更改用户 cd /java/tomcat7 chown -R root . chgrp -R root . **三、配置环境变量** vi /etc/profile 在最后面加上如下两句 CATALINA_HOME=/java/tomcat7 export CATALINA_HOME保存后退出vi 刷新变量使配置立即生效 source /etc/profile 进入tomcat的bin目录 cd $CATALINA_HOME/bin 或者: cd /java/tomcat7/bin 修改catalina.sh vi catalina.sh 找到如下这行 # OS specific support. $var _must_ be set to either true or false. 在这行下面新增如下配置语句 指定tomcat的目录以及jdk的目录 CATALINA_HOME=/java/tomcat7 JAVA_HOME=/java/jdk7 保存后退出vi 尝试下启动tomcat是否成功 在tomcat下的bin目录下直接运行startup.sh sh startup.sh 或者 ./startup.sh 四、安装tomcat服务 当前所在目录是tomcat的bin目录 cp catalina.sh /etc/init.d/tomcat 让tomcat在服务器启动时就启动，配置以下语句 update-rc.d -f tomcat defaults 这样就可以用service启动tomcat了： service tomcat start 关闭tomcat: service tomcat stop 五、查看tomcat日志 cd进入tomcat下的logs目录 即/java/tomcat7/logs 关于日志的切割问题，可以查看我的另外一篇博客：Tomcat的catalina.out日志的cronolog分割 tail -f catalina.out ok，到这里，tomcat就安装完毕了。 &nbsp;]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaEE</tag>
        <tag>Ubuntu</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git配置多个SSH-Key]]></title>
    <url>%2Fposts%2F2015-09-17-git-ssh-key%2F</url>
    <content type="text"><![CDATA[Git 如何配置多个 SSH-Key 背景当有多个git账号时，比如： a. 一个gitlab，用于公司内部的工作开发； b. 一个github，用于自己进行一些开发活动； c. 一个gitee，用于其他的一些开发活动； 解决方法（1）生成一个gitlab用的SSH-Key ssh-keygen -t rsa -C &#39;xxx@iyu.pub&#39; -f ~/.ssh/id_rsa_gitlab （2）生成一个github用的SSH-Key ssh-keygen -t rsa -C &#39;xxx@iyu.pub&#39; -f ~/.ssh/id_rsa_github (3)生成一个gitee用的SSH-Key ssh-keygen -t rsa -C &#39;xxx@iyu.pub&#39; -f ~/.ssh/id_rsa_gitee (4)在 ~/.ssh 目录下新建一个config文件，添加如下内容（其中Host和HostName填写git服务器的域名，IdentityFile指定私钥的路径） # gitee Host gitee.com HostName gitee.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_gitee # github Host github.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_github # github Host gitlab.com HostName gitlab.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_gitlab (5) 用ssh命令分别测试 1.ssh -T git@gitlab.com 成功返回 ==&gt; Welcome to GitLab, @xxx! 2.ssh -T git@github.com 成功返回 ==&gt; Hi xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 3.ssh -T git@gitee.com 成功返回 ==&gt; Hi xxx! You&#39;ve successfully authenticated, but GITEE.COM does not provide shell access.]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>SSH</tag>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>Gitlab</tag>
        <tag>Gitee</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公共 DNS 域名解析服务]]></title>
    <url>%2Fposts%2F2015-09-11-publicdns%2F</url>
    <content type="text"><![CDATA[平时收集的一些DNS： 百度 DNS：180.76.76.76 阿里 DNS ： 223.5.5.5 和 223.6.6.6 腾讯Public DNS+ : 119.29.29.29 Google : 8.8.8.8 和 8.8.4.4 114dns : 114.114.114.114 &nbsp;]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java推送天气API]]></title>
    <url>%2Fposts%2F2015-09-08-java-weather-api%2F</url>
    <content type="text"><![CDATA[因为最近在做一个项目，涉及一个小模块——推送天气。根据城市名去找天气的一些信息，比如说，高低温度，实时温度，天气状况，湿度，空气质量AQI等等。 反复找了好多天气API，最后发现小米的API挺不错的，是json格式的数据，方便读取数据。 http://weatherapi.market.xiaomi.com/wtr-v2/weather?cityId= 比如说：深圳的天气代码为101280601 在浏览器上访问http://weatherapi.market.xiaomi.com/wtr-v2/weather?cityId=101280601 如果出现乱码，相信你应该知道怎么解决！ 访问之后，我们拿到如下所示的数据： 相信聪明的你知道怎么看这些数据，转换成如下： &nbsp; 拿到这样的json格式的数据，那就好处理了。 先写一个方法： public static byte[] readInputStream(InputStream inputStream) throws IOException { byte[] buffer = new byte[1024]; int len = 0; ByteArrayOutputStream bos = new ByteArrayOutputStream(); while ((len = inputStream.read(buffer)) != -1) { bos.write(buffer, 0, len); } bos.close(); return bos.toByteArray(); } 再访问API调取数据，直接读取就行： URL url = new URL(“http://weatherapi.market.xiaomi.com/wtr-v2/weather?cityId=101280601&quot;); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); InputStream inputStream = conn.getInputStream(); // 通过输入流获得网站数据 byte[] getData = readInputStream(inputStream); // 获得网站的二进制数据 String data = new String(getData, “utf-8”); System.out.println(“从网页上获取的json:” + data); JSONObject jsonObject01 = JSONObject.fromObject(data); JSONObject jsonObject02 = JSONObject.fromObject(jsonObject01.getJSONObject(“realtime”)); System.out.println(“湿度：” + jsonObject02.getString(“SD”)); System.out.println(“天气：” + jsonObject02.getString(“weather”)); JSONObject jsonObject03 = JSONObject.fromObject(jsonObject01.getJSONObject(“today”)); System.out.println(“高温：” + jsonObject03.getDouble(“tempMax”)); System.out.println(“低温：” + jsonObject03.getDouble(“tempMin”)); JSONObject jsonObject04 = JSONObject.fromObject(jsonObject01.getJSONObject(“aqi”)); System.out.println(“空气质量：” + jsonObject04.getInt(“aqi”)); &nbsp; 这就可以得到自己想读取的数据了。]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网站时钟]]></title>
    <url>%2Fposts%2F2015-09-07-webclock%2F</url>
    <content type="text"><![CDATA[&lt;div style="width:180px; height:74px; margin:-20px auto 10px auto; overflow:hidden;"&gt; &lt;object width="200" height="88" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"&gt; &lt;param value="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf" name="movie"&gt; &lt;param value="high" name="quality"&gt; &lt;param value="transparent" name="wmode"&gt; &lt;embed width="200" height="88" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" wmode="transparent" quality="high" src="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf"&gt; &lt;/object&gt; &lt;/div&gt;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress添加网站图标icon]]></title>
    <url>%2Fposts%2F2015-08-27-wordpressicon%2F</url>
    <content type="text"><![CDATA[WordPress 如何添加网站图标icon？ 制作网站图标首先去制作icon的网站（我用的是http://www.bitbug.net/）制作图标图片，大小最好是1616，或者3232的，不要过大了，生成之后下载即可，然后把这个ico格式的图片改名为favicon.ico，直接用FTP软件上传到WordPress根目录。 编辑代码进入WordPress后台，找到“外观”模版下的“编辑”功能，并且编辑“顶部”(header.php)代码。在&lt;head&gt;……&lt;/head&gt;中放入以下代码即可。＜link rel=”shortcut icon” href=”http://www.iyu.pub/favicon.ico&quot;＞中间的网址替换成你的网站地址。 制作完成更新代码，然后刷新网站，即可看到网站的图标了。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《错误》- 郑愁予]]></title>
    <url>%2Fposts%2F2015-08-06-poem-mistake%2F</url>
    <content type="text"><![CDATA[郑愁予-错误 我打江南走过 那等在季节里的容颜如莲花的开落 东风不来，三月的柳絮不飞 你的心如小小的寂寞的城 恰若青石的街道向晚 跫音不项，三月的春帷不揭 你底心是小小的窗扉紧掩 我达达的马蹄声是美丽的错误 我不是归人，是个过客...... 英文译文**Mistake** I passed through the South of Yangzi The face waiting at the turn of seasons, like a lotusflower, blooms and wilts Without the east wind, the willow catkins in Marchdo not futter Your heart is like the lonesome little town Like its streets of cobblestones near nightfall When footfalls are silent and the bed curtains ofMarch not unveiled Your heart is a little window tightly shut My clattering hooves are beautiful mistakes I am not a homecoming man but a passing traveler …]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生十大困惑]]></title>
    <url>%2Fposts%2F2015-08-01-renshengshidakunhuo%2F</url>
    <content type="text"><![CDATA[人生十大困惑 有些事，我们总是弄不懂， 有些人，我们总是猜不透， 有些道，我们总是悟不尽， 有些理，我们总是想不通， 有些坎，我们总是跨不过， 有些伤，我们总是治不好， 有些天，我们总是睡不着， 有些地，我们总是去不了， 有些情，我们总是说不出， 有些爱，我们总是得不到。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP实现显示网站运行时间]]></title>
    <url>%2Fposts%2F2015-07-13-php-web-runtime%2F</url>
    <content type="text"><![CDATA[使用PHP实现–显示网站的运行时间 PHP代码：&lt;?php // 设置时区 date_default_timezone_set(&#39;Asia/Shanghai&#39;); /** * 秒转时间，格式 年 月 日 时 分 秒 * @param int $time * @return array|boolean */ function Sec2Time($time)&#123; if(is_numeric($time))&#123; $value = array( &quot;years&quot; =&gt; 0, &quot;days&quot; =&gt; 0, &quot;hours&quot; =&gt; 0, &quot;minutes&quot; =&gt; 0, &quot;seconds&quot; =&gt; 0,); if($time &gt;= 31556926)&#123; $value[&quot;years&quot;] = floor($time/31556926); $time = ($time%31556926); &#125; if($time &gt;= 86400)&#123; $value[&quot;days&quot;] = floor($time/86400); $time = ($time%86400); &#125; if($time &gt;= 3600)&#123; $value[&quot;hours&quot;] = floor($time/3600); $time = ($time%3600); &#125; if($time &gt;= 60)&#123; $value[&quot;minutes&quot;] = floor($time/60); $time = ($time%60); &#125; $value[&quot;seconds&quot;] = floor($time); return (array) $value; &#125;else&#123; return (bool) FALSE; &#125; &#125; // 本站创建的时间 $site_create_time = strtotime(&#39;2015-07-01 00:00:00&#39;); $time = time() - $site_create_time; $uptime = Sec2Time($time); ?&gt; HTML代码：本站已运行： &lt;span style=&quot;color:red;&quot;&gt; &lt;?php echo $uptime[&#39;years&#39;]; ?&gt;年 &lt;?php echo $uptime[&#39;days&#39;]; ?&gt;天 &lt;?php echo $uptime[&#39;hours&#39;]; ?&gt;小时 &lt;?php echo $uptime[&#39;minutes&#39;]; ?&gt;分 &lt;?php echo $uptime[&#39;seconds&#39;]; ?&gt;秒 &lt;/span&gt;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[江南烟雨(转载)]]></title>
    <url>%2Fposts%2F2015-07-10-jiangnanyanyu%2F</url>
    <content type="text"><![CDATA[转自散文吧http://www.sanwen8.cn/subject/1391202/ 一&emsp;&emsp;关于故乡的记忆，总是很遥远，远到只能在梦里，才能梦见故乡那栋老房子，在岁月中渐渐隐褪了曾经的色彩；梦见门前的那棵梧桐树，叶子绿了、黄了，落了、抽芽了，任时光的年轮划上一圈又一圈；梦见村口那眼冬暖夏凉的泉，每天氤氲着一股白色的雾气，在人们来来往往水桶撞击的声音中，吟唱着最古老的歌谣。还有，还有外婆在老屋门前一声声地呼唤，带着质朴的乡音，带着最温馨的回忆，飘荡，从梦境到现实，从现实到梦境。 &emsp;&emsp;关于故乡的记忆，总是很近，很近。近到可以听见细雨敲窗，雨打芭蕉；近到可以轻易激起心头泛起的，关于故乡的点滴回忆。桃红柳绿，东风暗换年华，但故乡是心头永远的朱砂，总能轻易地勾起心中最深的记忆与牵挂。 &emsp;&emsp;故乡，是一条纤细的乡村小路，小路上杂草丛生，漫过了白色的球鞋，打湿了清晨的裤脚，一直通向校园的方向，通向遥远的，未知的地方。 &emsp;&emsp;春天来了，水田里的禾苗仿若一个个娇小的绿色人儿，在微风中轻轻地招手，一眼望去，是那一望无际的绿色海洋，这里，孕育着庄稼人一年的希望。 &emsp;&emsp;花开了，开在屋前后那高高的田坎上，开在春风拂过的山岗上。一直以来，对于桃花就有着一种别样的喜爱。桃红点点，粉红的花瓣，随着微风 ，轻轻飘落，零落了多少女儿娇柔的心事。惜春常恨春归早，那时候的我，怎懂得韶华易逝的道理。看着那漫天飞舞的桃花瓣，只是觉得好美，好美。伸出手，让花瓣一片一片，自指尖飘落，纷飞成一季最美、纯洁的梦。那个桃花树下的小小姑娘，扎着短短的马尾巴，就这样眼巴巴地，看着那一树桃红，仿佛透过那朵朵盛开的粉红的花朵，看见了一树的硕果累累，馋了嘴，馋了梦，馋了那一季的美好的童年。 &emsp;&emsp;夏天来了。河水沸腾了。两岸杨柳依依，临水梳妆，一双美眸，静静凝望着不远处，在小河里嬉戏玩闹的大人、小孩。小河的胸怀是宽广的，她默默地容纳着来自心灵人们从心灵深处迸发的欢愉，成为这个季节，大自然最清凉的馈赠。 &emsp;&emsp;田地间，成片成片的玉米地，绿油油的，仿佛一排排卫士，守候着自己的家园。村落间、山林间，时常听见布谷鸟千年不变的吟唱，吟唱着一曲朴实、勤劳的歌谣。我总觉得布谷鸟是在叫“豌豆、包谷”，似是而是，听来感觉是那么一回事。离开故乡以后，就再也听不见它的吟唱了，自然也不知道它究竟唱得什么，但我知道，那一声声啼叫，早已经烙在了我的灵魂深处，在某一个午夜梦回，将我带进那个小小山村，带进那片田园，听一曲而来自布谷鸟的天籁。 &emsp;&emsp;秋天来了。秋，是喜悦，是收获，是农民洋溢的笑脸，是那一把把挥洒的汗水。 &emsp;&emsp;这个时节的农事多，打谷子、收玉米，挖红薯，接踵而来的农事，压弯了农民的脊梁，喜悦着农民酣睡的梦乡。对于孩子来说，这个季节是山地田野间肆意的玩闹，是枝头的硕果累累。各种水果，都卖弄着最成熟的风姿。一个个柿子，高高地挂在枝头，仿佛一个个灯笼，煞是好看。橘子已经开始黄了，可孩子们就喜欢那酸酸甜甜的味道，这个在树上摘，几个在树下巴巴地望着，等着树上的孩子扔下来，然后争相抢着，闹着。枣树下，孩子们一个个拿着常常的竹杠，伸长了脖子，敲敲这颗，敲敲那颗。叫嚷着，这里、这里，那边、那边还有……童声，交织成一片欢喜，在秋的田野，编织着丰收的歌谣。 &emsp;&emsp;我是喜欢冬天的。记忆里的那银装素裹的世界，多少次浮上心头。故乡的冬，没有毛主席笔下的“千里冰封，万里雪飘。”故乡的雪，是安静的。它轻盈地落在山头，轻盈地漫过小河，无声敲打着农户的窗口，将一片雪白的世界悄悄带来。 &emsp;&emsp;冬，是寂静的，偶尔，村落间会传来狗吠的声音。声音落下，枝头的白雪犹如被惊吓了一般，“扑哧哧”落下，溅起细碎的花朵，开在冬季，开在那些孩子的梦里。 &emsp;&emsp;小河醉了，将一枕清梦深藏，藏进来年的春；山野醉了，银装素裹，分外妖娆；农人醉了，酣睡的梦里，酝酿着这一年的喜悦与短暂的休憩…… &emsp;&emsp;故乡是一个梦的摇篮，盛满在希望的田野间，斑斓在千年耕耘的山山水水间。沟沟壑壑的土地上，挥洒着多少农民的汗水，埋藏着多少年复一年的希望与憧憬。田地就是希望，勤劳便是未来，双手可以撑起一段又一段岁月。 二&emsp;&emsp;故乡有山，有水，山清水秀。 &emsp;&emsp;山，必然有着山的魂魄。山的魂魄名为豪迈，一曲曲山歌，粗狂、豪迈，带着原始最朴质的旋律，带着山里人的那份“野性”，从嗓子里吼出来，从灵魂中迸发而出。 &emsp;&emsp;水，必然有着水的灵性。水的灵性是柔情。那水，静静地依偎着这片土地，宛若一条绿色的丝带，成为这片土地上美丽的风景。她宛若一个温润的邻家姑娘，顾盼间，柔情万千。 &emsp;&emsp;有了山，有了水，故乡就有了活力。故乡的四面都被青山的环抱着。春天来了，小草绿了，河水动了，燕子也开始忙碌地衔着春泥。水田里，青青的禾苗贪婪地吮吸着春水，你若细细聆听，必然可以听见麦苗拔节的声音。 &emsp;&emsp;杨柳依依，桃红柳绿，这个时节，自然少不了烟雨朦胧。 &emsp;&emsp;烟雨，是一副山水画！属于耕者的画面。 &emsp;&emsp;岁月在时光的深处划上了不同的符号，而烟雨必然是属于故乡最独特的符号。我没有去过真正的江南，不懂得江南烟雨的那份空灵与美丽，只是肆意地任凭想象的种子在心头绽放成故乡烟雨的模样。 &emsp;&emsp;故乡，是厚重的，而耕者，则是故乡的标志，是一个年代最独特的印记。岁月将曾经挺直的脊梁，一点一点压弯，弯成了耕者最后的画面，弯成了生活最初的模样。 &emsp;&emsp;斜风细雨，天空中的燕子，低低地飞翔着，时不时地掠过耕者的头顶，似乎在悄悄地打量，又或者在低低地呢喃。 &emsp;&emsp;耕者的吆喝、老牛的呐喊、细雨的呢喃，勾勒出故乡最初的轮廓。这轮廓间，泾渭分明，动静交织，在岁月中若隐若现，清晰着关于一个年代的记忆。 &emsp;&emsp;雨，在屋檐处滴答成一首静谧的曲子，若一位少女，将自己的一腔心事，静静地倾诉着。 &emsp;&emsp;有雨的日子，老人们总是斜依在那已经微微有些破旧的、沾满了油渍的沙发上。听着雨声，慵懒地打发着那些闲碎的光阴。他们微闭着眼睛，似乎在将岁月中那些暖暖的记忆反复回味。他们的笑容，浅浅地，脸上的皱纹如同枯萎的花儿一般，保留着最后的姿态。 &emsp;&emsp;女人们坐在堂屋里，听着滴答的雨声，一边拉着鞋底，一边将村子里那些陈旧的芝麻绿豆的小事，翻转。生活的往事，便在唾沫横飞中落定，犹如那些土屋中旮旯犄角里堆积的层层尘埃，一点一点被时光掩埋。 &emsp;&emsp;里屋，孩子们不能若天晴一般在田地间玩耍，此时的他们，仿佛被束缚的鸟儿一般，眼巴巴地看着那落雨的屋檐，看看细雨蒙蒙的天空，任由心思在雨中奔跑着，或者，干脆在大人的呵斥中在院子里嬉戏，任由细雨轻吻着那些稚嫩天真的笑颜。 &emsp;&emsp;有雨，那些圈养的鸡便无精打采地在屋檐下躲着雨，这里一堆，那里一垛的，时不时地抖落着羽毛上沾染的雨滴，时不时地 用爪子在地上划上几道爪印，又或者“咯咯”“咯咯”叫上几声，仿佛也在嘀咕着，“这雨啥时候可以停啊？” &emsp;&emsp;…… &emsp;&emsp;烟雨的日子，故乡是静谧的。远处的青山，静静地打量着，任凭细雨蒙蒙，将往日的尘埃一点一点洗刷，山更绿了。河边的柳，静静地梳理着垂下的发丝，若一位温婉的姑娘，正含羞与这场烟雨相约。路边的野草，不知名的花儿，也随着微风轻轻地摆动着腰肢，贪婪地吮吸着甘甜的“乳汁”。 &emsp;&emsp;烟雨，是故乡的魂，淅淅沥沥下在游子的心头。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java获取文本区某一行数据]]></title>
    <url>%2Fposts%2F2015-07-09-java-text%2F</url>
    <content type="text"><![CDATA[Java获取文本中某一行数据的方法： 第一种方法String strArray[] = message.split(&quot;\n&quot;); for(int i=0; i&lt;strArray.length;i++)&#123; System.out.println(&quot;第&quot;+ (i+1) +&quot;行数据为：&quot;+strArray[i]); &#125; 第二种方法JTextArea area = new JTextArea(); area.setText(&quot;fasfsadf\nafdasdfsad\nsafasvcxb\n&quot;); System.out.println(area.getText()); StringTokenizer tokenizer = new StringTokenizer(area.getText(),&quot;\n&quot;); while(tokenizer.hasMoreTokens()) &#123; System.out.println(tokenizer.nextToken()); &#125; for(String str:area.getText().split(&quot;\n&quot;))&#123; System.out.println(str); &#125;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[残荷听雨]]></title>
    <url>%2Fposts%2F2015-07-07-canhetingyu%2F</url>
    <content type="text"><![CDATA[有一种高贵，总让我匍匐膜拜；有一种圣洁，总让我敬重仰视。 那就是残荷，挺立于泥淖之中高贵而圣洁的灵魂花朵。 平生是那么地喜欢荷，不仅因为她美丽的外表，更因为她高洁的品格。中通外直、不蔓不枝是荷花的个性；美而不艳、媚而不俗是荷花的风姿；出淤泥而不染、濯清涟而不妖是她的志向；纯洁高雅、可远观而不可亵玩是她的品德。喜欢荷花“花娇映红玉，艳影照清漪”中的那份宁静；喜欢荷花“三秋庭绿尽迎霜，惟有荷花守红死”的忠贞。 初冬时节，飘雨的午后。独自一人，静立在荷塘边，听雨，与残荷。那雨，浸透了思绪，让人忘了时间，忘了自己，宛如一幅孤零零的剪影，倒映在残荷随意泼就而成的水墨画里，与残荷一起溶入静穆的烟雨中。 残荷的美是一种苍凉悲壮的凄美!落叶知寒，栖鸟南迁，满目萧然，荷已成殇。冷雨中的残荷，落尽繁华，枯黄憔悴，历尽风雨沧桑，世俗无暇顾盼。没有了沁人心脾的幽香，没有了文人骚客的礼赞。悲苦的冷雨落在残荷上，孤寂与落寞溢满一塘。雨点淡淡地漾开，好像在微微地叹息着。看那一塘残荷，满目萍碎，在风雨中，有的高擎着黑褐色的叶子，有的被风雨摧残折断倒立在水中；叶子有的残破，有的蜷曲，有的倒伏泥淖之中或昂首向天，或低头沉尽，—或相互依偎，或枝叶相交……尘世的荣衰，世态的炎凉，莲的心事，谁人能懂? “秋阴不散霜飞晚，留得残荷听雨声。”残荷的美是一种历经沧桑之后的心境，苍凉而悠远；那是经过了万千红尘之后的淡定，脆弱而不屈；那是繁华落尽之后，于凄风冷雨中依然坚守的优雅与从容。也许在她的心中藏着一个美丽的梦，待来年的盛夏，满塘的荷花依旧会在荷叶的拥托之中，亭亭玉立，香远益清。含苞的娇羞欲语，怒放的潇洒舒展。粉荷美艳，白荷净洁，演绎万种风情。 聆听荷的心语，领略荷傲人的风姿。残荷听雨，就是让心在最纯净最圣洁的诗句间游走，就是让心灵积淀一份清澈，就是让灵魂多一次净化。感念着四季的轮回，感念着生命的流逝，我唯愿生命如荷：在繁华褪尽的萧索里，保持生命与生俱来的不屈和圣洁；在凄风冷雨的逆境中，保持灵魂的那份纯真与高贵。 残荷，我向你膜拜：为你的不屈，为你枯搞形骸荧茕而立的气度，为你不以物喜不以己悲的坦然，为蕴藏在你生命中那份孤傲与自信! 静心听雨，仿佛是在聆听生命渐行渐远的足音；听残荷承雨，又仿佛在聆听自己寂寞的心语。一种发自生命深处的感念油然而生：生命当以圣洁为本，灵魂当以高贵为伴，香消玉殒风骨犹在，身形憔悴香气长存。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[删除wordpress侧边栏功能的wordpress.org和feed链接]]></title>
    <url>%2Fposts%2F2015-07-06-wordpressuse%2F</url>
    <content type="text"><![CDATA[在wordpress功能版块有登入\登出，管理，Feed以外，还有一个wordpress，如何删除它们呢? 具体做法： 找到网站wordpress安装目录 在wp_includes文件夹下面有一个default-widgets.php的文件 在此文件里搜索查找&lt;li标签里带有rss2_url，comments_rss2_url，wordpress.org的三段代码全部删除掉。]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实现网页跳转后可隐藏跳转后网址的代码]]></title>
    <url>%2Fposts%2F2015-07-03-jsjump%2F</url>
    <content type="text"><![CDATA[网页跳转后，隐藏跳转后网址 方法一&lt;script&gt; window.onload=new function()&#123; window.location=&#39;/home/index.html&#39; &#125;; &lt;/script&gt; 方法二&lt;frameset framespacing=&quot;0&quot; border=&quot;0&quot; rows=&quot;0&quot; frameborder=&quot;0&quot;&gt; &lt;frame name=&quot;main&quot; src=&quot;http://www.iyu.pub/&quot; scrolling=&quot;auto&quot; noresize&gt; &lt;/frameset&gt;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计网站访问量的PHP代码]]></title>
    <url>%2Fposts%2F2015-07-02-clicknumbyphp%2F</url>
    <content type="text"><![CDATA[使用PHP统计网站的访问量 &lt;?php session_start(); if(!isset($_SESSION[‘name’]))&#123; $counterFile = “counter.txt”; $fp = fopen($counterFile,”a+”); $num = fgets($fp,5); $num=$num+1; print “您是第 “.”$num”.” 位访客”; &#125;else&#123; $counterFile = “counter.txt”; $fp = fopen($counterFile,”a+”); $num = fgets($fp,5); $num=$num; print “您是第 “.”$num”.” 位访客”; &#125; fclose($fp); if(!isset($_SESSION[‘name’]))&#123; $fpp=fopen($counterFile,”w”); fwrite($fpp, $num); fclose($fpp);&#125;else&#123;exit(); &#125; $name=”test”; $_SESSION[‘name’]=$name; ?&gt;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计网站运行时间的JavaScript代码]]></title>
    <url>%2Fposts%2F2015-07-02-runtimebyjs%2F</url>
    <content type="text"><![CDATA[有时候需要在静态页上显示网站的运行时间，所以用JavaScript实现。 &lt;span id=”showsectime” style=”color:#FF0000;”&gt;网站已安全运行1天1时1分1秒&lt;/span&gt; &lt;script type=”text/javascript”&gt; function NewDate(str) &#123; str = str.split(‘-‘); var date = new Date(); date.setUTCFullYear(str[0], str[1] – 1, str[2]); date.setUTCHours(0, 0, 0, 0); return date; &#125; function showsectime() &#123; var birthDay =NewDate(“2014-08-14”); var today=new Date(); var timeold=today.getTime()-birthDay.getTime(); var sectimeold=timeold/1000 var secondsold=Math.floor(sectimeold); var msPerDay=246060*1000; var e_daysold=timeold/msPerDay; var daysold=Math.floor(e_daysold); var e_hrsold=(daysold-e_daysold)-24; var hrsold=Math.floor(e_hrsold); var e_minsold=(hrsold-e_hrsold)-60; var minsold=Math.floor((hrsold-e_hrsold)*-60); var seconds=Math.floor((minsold-e_minsold)*-60).toString(); document.getElementById(“showsectime”).innerHTML = “网站已安全运行”+daysold+”天”+hrsold+”时”+minsold+”分”+seconds+”秒”; setTimeout(showsectime, 1000); &#125; showsectime(); &lt;/script&gt;]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[听风行 旗下所有站点大全]]></title>
    <url>%2Fposts%2F2015-07-01-allsite%2F</url>
    <content type="text"><![CDATA[不知不觉，撸了一个又一个网站，好多都在吃灰，今天整理下。 主要网站 No. 网站 链接 1 听风行官网 http://iyu.pubhttp://www.iyu.pub 2 听风行博客 http://blog.iyu.pub 3 TingBrowser浏览器 http://browser.iyu.pub 工具网站 No. 网站 链接 1 抖音视频在线解析下载 http://douyin.iyu.pub 2 Tmusic http://music.iyu.pub 3 听风行影视 http://v.iyu.pub(目前网站的视频采集好像有点问题，有时间捉捉虫) 4 VIP视频解析 http://vip.iyu.pubhttp://vip2.iyu.pubhttp://vip3.iyu.pub 5 图床 http://img.iyu.pub 6 壁纸 http://wall.iyu.pub 7 元素周期表 http://fun.iyu.pub/ 8 装逼神器 http://b.iyu.pub 9 百度云直链解析 http://bd.iyu.pub 10 IPTV高清在线直播 http://tv.iyu.pub 游戏网站 No. 网站 链接 1 五子棋 http://wuziqi.iyu.pub 2 中国象棋 http://chess.iyu.pub/ 3 2048 http://2048.iyu.pub/ 4 奇葩版FlappyBird http://textbird.iyu.pub 5 方块版FlappyBird http://rectbird.iyu.pub/ 6 马里奥 http://mario.iyu.pub 7 水果忍者 http://fruit.iyu.pub/ 8 吃豆人 http://chidouren.iyu.pub/ 9 重力下落积木 http://toy.iyu.pub]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>听风行</tag>
        <tag>站点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[名单]]></title>
    <url>%2F%2Fposts%2F197001011.html</url>
    <content type="text"><![CDATA[电影名单 name name name name 立春 乡村里的中国 背靠背，脸对脸 遥望远方的童年 我们天上见 可可西里 牧马人 hello树先生 本命年 城南旧事 绿皮车 岁月神偷 最爱 网课 class local 设计模式 地址 php-p1 地址 php-p2 地址 php-p3 地址 nginx 地址 数据库上 地址 数据库中 地址 数据库下 地址 java web应用开发 地址 软件工程 地址 安卓开发 地址 java核心技术高阶 地址 Restful接口开发实战 地址 综合 地址 文档 name local 设计模式 地址 PHP 地址 VUE 地址 Android 地址 MVC 地址 GIT 地址]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>名单</tag>
      </tags>
  </entry>
</search>
